CONNECT TO PBANK USER pbank using      

   数据库连接信息

 数据库服务器         = DB2/NT 10.1.2
 SQL 授权标识         = PBANK
 本地数据库别名       = PBANK


CREATE SEQUENCE "PBANK   "."MB_ATM_SEQNO" AS BIGINT MINVALUE 10000000 MAXVALUE 9223372036854775807 START WITH 10000000 INCREMENT BY 1 CACHE 20 NO CYCLE NO ORDER
DB20000I  SQL 命令成功完成。

CREATE SEQUENCE "PBANK   "."PB_BAT_SYSNO" AS BIGINT MINVALUE 100000 MAXVALUE 999999 START WITH 100000 INCREMENT BY 1 CACHE 20 CYCLE NO ORDER
DB20000I  SQL 命令成功完成。

CREATE SEQUENCE "PBANK   "."PB_CUSTNO" AS BIGINT MINVALUE 10000000 MAXVALUE 9223372036854775807 START WITH 10000000 INCREMENT BY 1 CACHE 20 NO CYCLE NO ORDER
DB20000I  SQL 命令成功完成。

CREATE SEQUENCE "PBANK   "."PB_EBANK_FLOWNO" AS BIGINT MINVALUE 100000000000000 MAXVALUE 9223372036854775807 START WITH 100000000000000 INCREMENT BY 1 CACHE 20 NO CYCLE NO ORDER
DB20000I  SQL 命令成功完成。

ALTER SEQUENCE "PBANK   "."PB_EBANK_FLOWNO" RESTART WITH 100000000000059
DB20000I  SQL 命令成功完成。

CREATE SEQUENCE "PBANK   "."PB_ENTRUST_FIN_KEY1" AS BIGINT MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 INCREMENT BY 1 CACHE 20 NO CYCLE NO ORDER
DB20000I  SQL 命令成功完成。

CREATE SEQUENCE "PBANK   "."PB_ENTRUST_FIN_KEY2" AS BIGINT MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 INCREMENT BY 1 CACHE 20 NO CYCLE NO ORDER
DB20000I  SQL 命令成功完成。

CREATE SEQUENCE "PBANK   "."PB_ENTRUST_FIN_KEY3" AS BIGINT MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 INCREMENT BY 1 CACHE 20 NO CYCLE NO ORDER
DB20000I  SQL 命令成功完成。

CREATE SEQUENCE "PBANK   "."PB_FINACING_KEY" AS BIGINT MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 INCREMENT BY 1 CACHE 20 NO CYCLE NO ORDER
DB20000I  SQL 命令成功完成。

CREATE SEQUENCE "PBANK   "."PB_PRIZENO" AS BIGINT MINVALUE 10000000 MAXVALUE 9223372036854775807 START WITH 10000000 INCREMENT BY 1 CACHE 20 NO CYCLE NO ORDER
DB20000I  SQL 命令成功完成。

CREATE SEQUENCE "PBANK   "."PB_PRIZE_FLOWNO" AS BIGINT MINVALUE 100000000000000 MAXVALUE 9223372036854775807 START WITH 100000000000000 INCREMENT BY 1 CACHE 20 NO CYCLE NO ORDER
DB20000I  SQL 命令成功完成。

CREATE SEQUENCE "PBANK   "."PB_STEPS_SYSNO" AS BIGINT MINVALUE 1 MAXVALUE 999999 START WITH 1 INCREMENT BY 1 CACHE 20 CYCLE NO ORDER
DB20000I  SQL 命令成功完成。

CREATE SEQUENCE "PBANK   "."PB_TEMPLATEID" AS BIGINT MINVALUE 10000000 MAXVALUE 9223372036854775807 START WITH 10000000 INCREMENT BY 1 CACHE 20 NO CYCLE NO ORDER
DB20000I  SQL 命令成功完成。

CREATE SEQUENCE "PBANK   "."PB_TRANFLOWNO" AS INTEGER MINVALUE 1 MAXVALUE 99999999 START WITH 1 INCREMENT BY 1 CACHE 50 CYCLE NO ORDER
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CSTINF"  ( "PIF_CSTNO" VARCHAR(10) NOT NULL , "PIF_ACCNO" VARCHAR(30) NOT NULL , "PIF_AREACODE" VARCHAR(6) , "PIF_CSTTYP" CHAR(1) NOT NULL , "PIF_CERTTYP" CHAR(1) , "PIF_NAMECN" VARCHAR(30) , "PIF_NAMEEN" VARCHAR(30) , "PIF_ALIAS" VARCHAR(30) , "PIF_PASSWORD" VARCHAR(60) , "PIF_LOVENAME" VARCHAR(30) , "PIF_SEX" CHAR(1) NOT NULL , "PIF_BIRTHDAY" VARCHAR(10) , "PIF_CTFTYP" CHAR(2) NOT NULL , "PIF_CTFNO" VARCHAR(30) NOT NULL , "PIF_MOBILE" VARCHAR(20) , "PIF_ADDRESS" VARCHAR(60) , "PIF_PHONE" VARCHAR(20) , "PIF_FAX" VARCHAR(20) , "PIF_ZIPCODE" VARCHAR(6) , "PIF_EMAIL" VARCHAR(60) , "PIF_EMPLOYEE" CHAR(1) , "PIF_STT" CHAR(1) NOT NULL , "PIF_LASTLGNTIM" VARCHAR(14) , "PIF_LASTLGNIP" VARCHAR(20) , "PIF_OPENTYP" CHAR(1) , "PIF_OPENTELLER" VARCHAR(10) , "PIF_OPENBRANCHNO" VARCHAR(6) , "PIF_OPENNETNO" VARCHAR(6) , "PIF_OPENDATE" VARCHAR(8) , "PIF_CHGTELLER" VARCHAR(10) , "PIF_CHGBRANCHNO" VARCHAR(6) , "PIF_CHGNETNO" VARCHAR(6) , "PIF_LASTCHGTIM" VARCHAR(14) , "PIF_RESERVE1" VARCHAR(30) , "PIF_RESERVE2" VARCHAR(30) , "PIF_RESERVE3" VARCHAR(30) , "PIF_RESERVE4" VARCHAR(30) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CSTINF" ADD CONSTRAINT "PB_CSTINF_PK01" PRIMARY KEY ("PIF_CSTNO")
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CSTINF" ADD UNIQUE ("PIF_ACCNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CSTINF_IDX2" ON "PBANK   "."PB_CSTINF" ("PIF_ALIAS" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CSTINF_IDX3" ON "PBANK   "."PB_CSTINF" ("PIF_MOBILE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CSTINF_IDX4" ON "PBANK   "."PB_CSTINF" ("PIF_RESERVE3" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CSTINF_IDX5" ON "PBANK   "."PB_CSTINF" ("PIF_CTFNO" ASC, "PIF_CTFTYP" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CSTINF_IDX6" ON "PBANK   "."PB_CSTINF" ("PIF_OPENNETNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_WODEINF"  ( "PWI_CORENO" VARCHAR(13) , "PWI_CUSTLEVEL" VARCHAR(2) , "PWI_CARDNO" VARCHAR(19) NOT NULL , "PWI_ACCNO" VARCHAR(21) , "PWI_SIGNNO" VARCHAR(13) , "PWI_STATE" VARCHAR(1) NOT NULL , "PWI_AUTOFLAG" VARCHAR(1) , "PWI_FAMINO" VARCHAR(13) , "PWI_PMNO" VARCHAR(7) , "PWI_CMNO" VARCHAR(7) , "PWI_ADDFLAG" VARCHAR(2) , "PWI_SENDFLAG" VARCHAR(1) , "PWI_PRTDATE" VARCHAR(1) , "PWI_PRTDAY" VARCHAR(2) , "PWI_PRDNO" VARCHAR(8) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_WODEINF" ADD CONSTRAINT "PB_CSTINF_PK01" PRIMARY KEY ("PWI_CARDNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_WODEINF_IDX1" ON "PBANK   "."PB_WODEINF" ("PWI_CORENO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CSTINF_CLOSE"  ( "PIFC_CSTNO" VARCHAR(10) NOT NULL , "PIFC_ACCNO" VARCHAR(30) NOT NULL , "PIFC_AREACODE" VARCHAR(6) , "PIFC_CSTTYP" CHAR(1) NOT NULL , "PIFC_CERTTYP" CHAR(1) , "PIFC_NAMECN" VARCHAR(30) , "PIFC_NAMEEN" VARCHAR(30) , "PIFC_ALIAS" VARCHAR(30) , "PIFC_PASSWORD" VARCHAR(60) , "PIFC_LOVENAME" VARCHAR(30) , "PIFC_SEX" CHAR(1) NOT NULL , "PIFC_BIRTHDAY" VARCHAR(10) , "PIFC_CTFTYP" CHAR(2) NOT NULL , "PIFC_CTFNO" VARCHAR(30) NOT NULL , "PIFC_MOBILE" VARCHAR(20) , "PIFC_ADDRESS" VARCHAR(60) , "PIFC_PHONE" VARCHAR(20) , "PIFC_FAX" VARCHAR(20) , "PIFC_ZIPCODE" VARCHAR(6) , "PIFC_EMAIL" VARCHAR(60) , "PIFC_EMPLOYEE" CHAR(1) , "PIFC_STT" CHAR(1) NOT NULL , "PIFC_LASTLGNTIM" VARCHAR(14) , "PIFC_LASTLGNIP" VARCHAR(20) , "PIFC_OPENTYP" CHAR(1) , "PIFC_OPENTELLER" VARCHAR(10) , "PIFC_OPENBRANCHNO" VARCHAR(6) , "PIFC_OPENNETNO" VARCHAR(6) , "PIFC_OPENDATE" VARCHAR(8) , "PIFC_OFFTELLER" VARCHAR(10) , "PIFC_OFFBRANCHNO" VARCHAR(6) , "PIFC_OFFNETNO" VARCHAR(6) , "PIFC_OFFCHGTIM" VARCHAR(14) , "PIFC_RESERVE1" VARCHAR(30) , "PIFC_RESERVE2" VARCHAR(30) , "PIFC_RESERVE3" VARCHAR(30) , "PIFC_RESERVE4" VARCHAR(30) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CSTINF_CLOSE" ADD CONSTRAINT "PB_CSTINF_CLS_PK01" PRIMARY KEY ("PIFC_CSTNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CSTINF_CLS_IND1" ON "PBANK   "."PB_CSTINF_CLOSE" ("PIFC_ACCNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_ACCINF"  ( "PAI_CSTNO" VARCHAR(10) NOT NULL , "PAI_CARDNO" VARCHAR(30) NOT NULL , "PAI_ALIAS" VARCHAR(30) , "PAI_CARDTYP" CHAR(1) NOT NULL , "PAI_CARDKIND" CHAR(1) NOT NULL , "PAI_MSTFLAG" CHAR(1) NOT NULL , "PAI_RELATETIM" VARCHAR(14) , "PAI_HLDNAME" VARCHAR(30) , "PAI_HLDSEX" CHAR(1) , "PAI_HLDCTFTYP" CHAR(2) , "PAI_HLDCTFNO" VARCHAR(30) , "PAI_FLAG" CHAR(1) NOT NULL , "PAI_COMMFLAG" CHAR(1) , "PAI_CHGTELLER" VARCHAR(10) , "PAI_CHGBRANCHNO" VARCHAR(6) , "PAI_CHGNETNO" VARCHAR(6) , "PAI_LASTCHGTIM" VARCHAR(14) , "PAI_EACCFLAG" CHAR(1) WITH DEFAULT '0' ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_ACCINF" ADD CONSTRAINT "PB_ACCINF_PK01" PRIMARY KEY ("PAI_CSTNO", "PAI_CARDNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_ACCINF_IDX1" ON "PBANK   "."PB_ACCINF" ("PAI_CARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_ACCINF_IDX2" ON "PBANK   "."PB_ACCINF" ("PAI_CSTNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_ACCINF_IDX3" ON "PBANK   "."PB_ACCINF" ("PAI_CARDKIND" ASC, "PAI_COMMFLAG" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_ACCINF_IDX4" ON "PBANK   "."PB_ACCINF" ("PAI_HLDCTFTYP" ASC, "PAI_HLDCTFNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_COMMACCINF"  ( "PCAI_CSTNO" VARCHAR(10) NOT NULL , "PCAI_CARDNO" VARCHAR(30) NOT NULL , "PCAI_ALIAS" VARCHAR(30) , "PCAI_CARDTYP" CHAR(1) NOT NULL , "PCAI_CARDKIND" CHAR(1) NOT NULL , "PCAI_BANKFLAG" CHAR(1) NOT NULL , "PCAI_RELATETIM" VARCHAR(14) NOT NULL , "PCAI_HLDNAME" VARCHAR(30) NOT NULL , "PCAI_HLDCTFTYP" CHAR(2) NOT NULL , "PCAI_HLDCTFNO" VARCHAR(30) NOT NULL , "PCAI_FLAG" CHAR(1) NOT NULL , "PCAI_BANKNAME" VARCHAR(60) , "PCAI_BANKCODE" VARCHAR(12) , "PCAI_COMMONFLAG" CHAR(1) NOT NULL , "PCAI_ACCTYPE" VARCHAR(2) NOT NULL WITH DEFAULT '00' ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_COMMACCINF" ADD CONSTRAINT "PB_COMMACCINF_PK01" PRIMARY KEY ("PCAI_CSTNO", "PCAI_CARDNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_COMMACCINF_IDX1" ON "PBANK   "."PB_COMMACCINF" ("PCAI_CSTNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_COMMACCINF_IDX2" ON "PBANK   "."PB_COMMACCINF" ("PCAI_CARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_COMMACCINF_IDX3" ON "PBANK   "."PB_COMMACCINF" ("PCAI_COMMONFLAG" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_ACCINF_CLOSE"  ( "PAIC_CSTNO" VARCHAR(10) NOT NULL , "PAIC_CARDNO" VARCHAR(30) NOT NULL , "PAIC_ALIAS" VARCHAR(30) , "PAIC_CARDTYP" CHAR(1) NOT NULL , "PAIC_CARDKIND" CHAR(1) NOT NULL , "PAIC_MSTFLAG" CHAR(1) NOT NULL , "PAIC_RELATETIM" VARCHAR(14) , "PAIC_HLDNAME" VARCHAR(30) , "PAIC_HLDSEX" CHAR(1) , "PAIC_HLDCTFTYP" CHAR(2) , "PAIC_HLDCTFNO" VARCHAR(30) , "PAIC_FLAG" CHAR(1) NOT NULL , "PAIC_COMMFLAG" CHAR(1) , "PAIC_COFFTELLER" VARCHAR(10) , "PAIC_OFFBRANCHNO" VARCHAR(6) , "PAIC_OFFNETNO" VARCHAR(6) , "PAIC_OFFTIM" VARCHAR(14) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_ACCINF_CLOSE" ADD CONSTRAINT "PB_ACCINF_CLS_PK01" PRIMARY KEY ("PAIC_CSTNO", "PAIC_CARDNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CARDLMT"  ( "PCL_CARDNO" VARCHAR(30) NOT NULL , "PCL_BTMAMT" DECIMAL(15,2) , "PCL_TOPAMT" DECIMAL(15,2) , "PCL_LASTCSTNO" VARCHAR(10) , "PCL_LASTTIM" VARCHAR(14) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CARDLMT" ADD CONSTRAINT "PB_CARDLMT_PK01" PRIMARY KEY ("PCL_CARDNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_LOGFAIL"  ( "PLF_CARDNO" VARCHAR(30) NOT NULL , "PLF_TIMES" INTEGER , "PLF_UPDTIM" VARCHAR(14) , "PLF_TYPE" CHAR(1) NOT NULL WITH DEFAULT '0' , "PLF_IPADDR" VARCHAR(20) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_LOGFAIL" ADD CONSTRAINT "PB_LOGFAIL_PK01" PRIMARY KEY ("PLF_CARDNO", "PLF_TYPE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CSTRELACC"  ( "PRA_CSTNO" VARCHAR(10) NOT NULL , "PRA_ACCNO" VARCHAR(30) NOT NULL , "PRA_NAME" VARCHAR(60) , "PRA_ALIAS" VARCHAR(60) , "PRA_FLAG" CHAR(1) , "PRA_CITY" VARCHAR(30) , "PRA_MOBILE" VARCHAR(20) , "PRA_OPENBANK" VARCHAR(60) , "PRA_AREA" VARCHAR(60) , "PRA_NETSPOT" VARCHAR(60) , "PRA_GROUPID" VARCHAR(8) WITH DEFAULT '0' , "PRA_PAYCARDNO" VARCHAR(30) , "PRA_PARTY" VARCHAR(60) , "PRA_PARTYID" CHAR(12) , "PRA_REMARK" VARCHAR(100) , "PRA_KEYTRAN" CHAR(1) WITH DEFAULT '0' , "PRA_MODIFYDATE" CHAR(8) , "PRA_COUNT" INTEGER WITH DEFAULT 0 ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CSTRELACC" ADD CONSTRAINT "PB_CSTRELACC_PK01" PRIMARY KEY ("PRA_CSTNO", "PRA_ACCNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CSTRELACC_IDX1" ON "PBANK   "."PB_CSTRELACC" ("PRA_CSTNO" ASC, "PRA_FLAG" ASC, "PRA_GROUPID" ASC, "PRA_NETSPOT" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CSTRELACC_IDX2" ON "PBANK   "."PB_CSTRELACC" ("PRA_NETSPOT" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CSTRELACC_IDX3" ON "PBANK   "."PB_CSTRELACC" ("PRA_PARTYID" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CRDSCTINF"  ( "PCSI_CARDSECT" VARCHAR(10) NOT NULL , "PCSI_FLAG" VARCHAR(2) NOT NULL , "PCSI_CARDTYPE" VARCHAR(1) NOT NULL , "PCSI_CENTERNOINDEX" VARCHAR(1) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CRDSCTINF" ADD CONSTRAINT "PB_CRDSCTINF_PK01" PRIMARY KEY ("PCSI_CARDSECT")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_EXCRATE"  ( "PER_BRANCHNO" VARCHAR(6) NOT NULL , "PER_EXCCODE" VARCHAR(4) NOT NULL , "PER_CURBUY" DECIMAL(8,4) , "PER_CURSALE" DECIMAL(8,4) , "PER_EXCBUY" DECIMAL(8,4) , "PER_EXCSALE" DECIMAL(8,4) , "PER_DAYTOP" DECIMAL(8,4) , "PER_DAYBTM" DECIMAL(8,4) , "PER_FLAG" CHAR(1) , "PER_UPDTIM" VARCHAR(14) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_EXCRATE" ADD CONSTRAINT "PB_EXCRATE_PK01" PRIMARY KEY ("PER_BRANCHNO", "PER_EXCCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_ORDEXC"  ( "PROE_CARDNO" VARCHAR(30) NOT NULL , "PROE_EXCCODE" VARCHAR(300) NOT NULL , "PROE_SHOWFLAG" CHAR(1) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_ORDEXC_IND1" ON "PBANK   "."PB_ORDEXC" ("PROE_CARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_EXCMAXMIN"  ( "PEM_BRN_CODE" VARCHAR(10) NOT NULL , "PEM_MAX_MIN" VARCHAR(25) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_BRNTRSTYP"  ( "PBTT_CENTERNO" VARCHAR(6) NOT NULL , "PBTT_TYPE" CHAR(1) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_BRNTRSTYP" ADD CONSTRAINT "PB_BRNTRSTYP_PK01" PRIMARY KEY ("PBTT_CENTERNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_ATTFUND"  ( "PAF_ACCNO" VARCHAR(30) NOT NULL , "PAF_FUNDCODE" VARCHAR(6) NOT NULL , "PAF_FUNDNAME" VARCHAR(40) , "PAF_FEETYP" CHAR(1) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_ATTFUND" ADD CONSTRAINT "PB_ATTFUND_PK01" PRIMARY KEY ("PAF_ACCNO", "PAF_FUNDCODE")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_ATTFUND_IDX1" ON "PBANK   "."PB_ATTFUND" ("PAF_ACCNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUNDINFO"  ( "PFI_FUNDCODE" VARCHAR(6) NOT NULL , "PFI_FUNDNAME" VARCHAR(40) NOT NULL , "PFI_STATUS" CHAR(1) NOT NULL , "PFI_NETVAL" DECIMAL(8,4) , "PFI_UPDDATE" VARCHAR(8) , "PFI_MAXRDMVOL" DECIMAL(16,2) , "PFI_MINACCBAL" DECIMAL(16,2) , "PFI_APPSUBVOL" DECIMAL(16,2) , "PFI_APPSUBAMT" DECIMAL(16,2) , "PFI_MINSUBVOL" DECIMAL(16,2) , "PFI_MINSUBAMT" DECIMAL(16,2) , "PFI_REGCODE" VARCHAR(6) , "PFI_FACEVAL" DECIMAL(8,4) , "PFI_FEERATE" DECIMAL(8,4) , "PFI_MAXSUBVOL" DECIMAL(16,2) , "PFI_MAXSUBAMT" DECIMAL(16,2) , "PFI_UNITSUBVOL" DECIMAL(16,2) , "PFI_MINRDMVOL" DECIMAL(16,2) , "PFI_MINCHGVOL" DECIMAL(16,2) , "PFI_SUBTYP" CHAR(1) , "PFI_TRADPRICE" DECIMAL(8,4) , "PFI_NEXTDATE" VARCHAR(8) , "PFI_MINBIDAMT" DECIMAL(16,2) , "PFI_MINAPPBIDAMT" DECIMAL(16,2) , "PFI_UNITBIDAMT" DECIMAL(16,2) , "PFI_MAXBIDAMT" DECIMAL(16,2) , "PFI_DAYINCOME" DECIMAL(10,6) , "PFI_WEEKINCOME" DECIMAL(10,6) , "PFI_FEETYP" CHAR(1) , "PFI_TYPE" CHAR(3) , "PFI_FLAG" CHAR(1) , "PFI_RISKLVL" CHAR(2) , "PFI_RISKLVLCN" VARCHAR(200) , "PFI_RISKLVLEN" VARCHAR(400) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUNDINFO" ADD CONSTRAINT "PB_FUNDINFO_PK01" PRIMARY KEY ("PFI_FUNDCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_TRANFEE"  ( "PTF_REGCODE" VARCHAR(6) NOT NULL , "PTF_BUSCODE" VARCHAR(6) NOT NULL , "PTF_COMAMT" DECIMAL(15,2) , "PTF_DISRATE" DECIMAL(8,4) , "PTF_UPDDATE" VARCHAR(8) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_TRANFEE" ADD CONSTRAINT "PB_TRANFEE_PK01" PRIMARY KEY ("PTF_REGCODE", "PTF_BUSCODE", "PTF_UPDDATE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUNDPAR"  ( "PFP_FUNDCODE" VARCHAR(6) NOT NULL , "PFP_REGCODE" VARCHAR(6) NOT NULL , "PFP_MNGCODE" VARCHAR(6) NOT NULL , "PFP_STARTTIM" VARCHAR(6) , "PFP_ENDTIM" VARCHAR(6) , "PFP_FLAG" CHAR(1) , "PFP_TRANPAR" VARCHAR(20) , "PFP_TRANTYP" CHAR(1) , "PFP_MINSUBAMT" DECIMAL(16,2) , "PFP_FEETYP" CHAR(1) , "PFP_UPDDATE" VARCHAR(8) , "PFP_MAXSUBAMT" DECIMAL(16,2) , "PFP_FUNDMNGCODE" VARCHAR(6) , "PFP_QRFLAG" CHAR(1) , "PFP_AUTOTRADEFLAG" CHAR(1) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUNDPAR" ADD CONSTRAINT "PB_FUNDPAR_PK01" PRIMARY KEY ("PFP_FUNDCODE")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FUNDPAR_IND1" ON "PBANK   "."PB_FUNDPAR" ("PFP_MNGCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUNDCOR"  ( "PFC_CODE" VARCHAR(6) NOT NULL , "PFC_NAME" VARCHAR(60) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUNDCOR" ADD CONSTRAINT "PB_FUNDCOR_PK01" PRIMARY KEY ("PFC_CODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUNDREG"  ( "PFR_REGCODE" VARCHAR(6) NOT NULL , "PFR_REGNAME" VARCHAR(60) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUNDREG" ADD CONSTRAINT "PB_FUNDREG_PK01" PRIMARY KEY ("PFR_REGCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_NETVAL"  ( "PNV_FUNDCODE" VARCHAR(6) NOT NULL , "PNV_FEETYP" CHAR(1) NOT NULL , "PNV_FUNDNAME" VARCHAR(40) , "PNV_NETVAL" DECIMAL(8,4) , "PNV_FLAG" CHAR(1) , "PNV_DAYINCOME" DECIMAL(8,4) , "PNV_WEEKINCOME" DECIMAL(8,4) , "PNV_UPDDATE" VARCHAR(8) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_NETVAL" ADD CONSTRAINT "PB_NETVAL_PK01" PRIMARY KEY ("PNV_FUNDCODE", "PNV_UPDDATE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CHGCOD"  ( "PCC_FUNDCODE" VARCHAR(6) NOT NULL , "PCC_FEETYP" CHAR(1) , "PCC_TARGETCODE" VARCHAR(6) NOT NULL , "PCC_TARGETTYP" CHAR(1) NOT NULL , "PCC_UPDDATE" VARCHAR(8) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CHGCOD" ADD CONSTRAINT "PB_CHGCOD_PK01" PRIMARY KEY ("PCC_FUNDCODE", "PCC_TARGETCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUNDCOM"  ( "PFC_COMCODE" VARCHAR(24) NOT NULL , "PFC_COMNAME" VARCHAR(40) NOT NULL , "PFC_MNGNO" VARCHAR(6) , "PFC_MINAMT" DECIMAL(16,2) , "PFC_MAXAMT" DECIMAL(16,2) , "PFC_COMCHT" VARCHAR(200) , "PFC_FEERATE" DECIMAL(8,4) , "PFC_DISRATE" DECIMAL(8,4) , "PFC_MEMO" VARCHAR(100) , "PFC_RISKLVL" CHAR(2) , "PFC_RISKLVLCN" VARCHAR(200) , "PFC_RISKLVLEN" VARCHAR(400) , "PFC_SCHEMINAMT" DECIMAL(16,2) , "PFC_SCHEMAXAMT" DECIMAL(16,2) , "PFC_ONCEOPENFLAG" CHAR(1) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUNDCOM" ADD CONSTRAINT "PB_FUNDCOM_PK01" PRIMARY KEY ("PFC_COMCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_COMSMP"  ( "PCS_COMCODE" VARCHAR(24) NOT NULL , "PCS_FUNDCODE" VARCHAR(6) NOT NULL , "PCS_AMOUNT" DECIMAL(16,2) , "PCS_FEETYP" CHAR(1) , "PCS_DISRATE" DECIMAL(8,4) , "PCS_TADISRATE" DECIMAL(8,4) , "PCS_COMAMT" DECIMAL(16,2) , "PCS_SCALE" DECIMAL(8,4) , "PCS_STARTDATE" VARCHAR(8) , "PCS_ENDDATE" VARCHAR(8) , "PCS_STATUS" CHAR(1) , "PCS_MEMO" VARCHAR(100) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_COMSMP" ADD CONSTRAINT "PB_COMSMP_PK01" PRIMARY KEY ("PCS_COMCODE", "PCS_FUNDCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUNDCOD"  ( "PFC_TRANCODE" VARCHAR(6) NOT NULL , "PFC_TRANNAME" VARCHAR(40) NOT NULL , "PFC_BUSCODE" VARCHAR(6) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUNDCOD" ADD CONSTRAINT "PB_FUNDCOD_PK01" PRIMARY KEY ("PFC_TRANCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_DFLCRD"  ( "PDC_CSTNO" VARCHAR(10) NOT NULL , "PDC_CARDNO" VARCHAR(30) NOT NULL , "PDC_OPRTYP" CHAR(1) NOT NULL ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_DFLCRD" ADD CONSTRAINT "PB_DFLCRD_PK01" PRIMARY KEY ("PDC_CSTNO", "PDC_OPRTYP")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_DFLCRD_IND1" ON "PBANK   "."PB_DFLCRD" ("PDC_CARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_PERCTM"  ( "PPC_CSTNO" VARCHAR(10) NOT NULL , "PPC_ACCTYP" CHAR(1) NOT NULL , "PPC_CARDNO" VARCHAR(30) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_PERCTM" ADD CONSTRAINT "PB_PERCTM_PK01" PRIMARY KEY ("PPC_CSTNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_TRNFLW"  ( "PTF_TRNFLW" VARCHAR(20) NOT NULL , "PTF_CSTNO" VARCHAR(30) NOT NULL , "PTF_BATNO" VARCHAR(20) NOT NULL , "PTF_CHANNEL" CHAR(1) NOT NULL , "PTF_BATFLAG" CHAR(1) , "PTF_TRANCODE" VARCHAR(6) , "PTF_HOSTCODE" VARCHAR(20) , "PTF_DEALTYP" CHAR(2) , "PTF_TRANTYP" CHAR(1) , "PTF_BKGFLW" VARCHAR(20) , "PTF_ACCDATE" VARCHAR(8) , "PTF_TRANTIM" VARCHAR(14) , "PTF_PAYBRA" VARCHAR(6) , "PTF_PAYCARDNO" VARCHAR(30) , "PTF_PAYCRYTYP" VARCHAR(3) , "PTF_PAYAMT" DECIMAL(15,2) , "PTF_CASHFLAG" CHAR(1) , "PTF_RCVBRA" VARCHAR(6) , "PTF_RCVCARDNO" VARCHAR(30) , "PTF_RCVNAME" VARCHAR(60) , "PTF_RCVCRYTYP" VARCHAR(3) , "PTF_RCVAMT" DECIMAL(15,2) , "PTF_HANGTYP" CHAR(2) , "PTF_LOGTYP" CHAR(1) , "PTF_HSTFLWNO" VARCHAR(20) , "PTF_REMARK" VARCHAR(100) , "PTF_STT" CHAR(2) , "PTF_FUNDCODE" VARCHAR(6) , "PTF_TOFUNDCODE" VARCHAR(6) , "PTF_TRANKIND" VARCHAR(1) , "PTF_RCVOPENBANK" VARCHAR(60) , "PTF_RCVOPENCITY" VARCHAR(60) , "PTF_RCVOPENAREA" VARCHAR(60) , "PTF_RCVOPENBRANCH" VARCHAR(60) , "PTF_TRANFEE" DECIMAL(15,2) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_TRNFLW" ADD CONSTRAINT "PB_TRNFLW_PK01" PRIMARY KEY ("PTF_TRNFLW")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_TRNFLW_IDX1" ON "PBANK   "."PB_TRNFLW" ("PTF_PAYCARDNO" ASC, "PTF_TRANCODE" ASC, "PTF_STT" ASC, "PTF_TRNFLW" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_TRNFLW_IDX2" ON "PBANK   "."PB_TRNFLW" ("PTF_RCVCARDNO" ASC, "PTF_TRANCODE" ASC, "PTF_STT" ASC, "PTF_TRNFLW" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_TRNFLW_IDX3" ON "PBANK   "."PB_TRNFLW" ("PTF_TRANTIM" DESC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_TRNFLW_IDX4" ON "PBANK   "."PB_TRNFLW" ("PTF_HSTFLWNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_TRNFLW_IDX5" ON "PBANK   "."PB_TRNFLW" ("PTF_STT" ASC, "PTF_TRANTIM" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_TRNFLW_HIS"  ( "PTFH_TRNFLW" VARCHAR(20) NOT NULL , "PTFH_CSTNO" VARCHAR(30) NOT NULL , "PTFH_BATNO" VARCHAR(20) NOT NULL , "PTFH_CHANNEL" CHAR(1) NOT NULL , "PTFH_BATFLAG" CHAR(1) , "PTFH_TRANCODE" VARCHAR(6) , "PTFH_HOSTCODE" VARCHAR(20) , "PTFH_DEALTYP" CHAR(2) , "PTFH_TRANTYP" CHAR(1) , "PTFH_BKGFLW" VARCHAR(20) , "PTFH_ACCDATE" VARCHAR(8) , "PTFH_TRANTIM" VARCHAR(14) , "PTFH_PAYBRA" VARCHAR(6) , "PTFH_PAYCARDNO" VARCHAR(30) , "PTFH_PAYCRYTYP" VARCHAR(3) , "PTFH_PAYAMT" DECIMAL(15,2) , "PTFH_CASHFLAG" CHAR(1) , "PTFH_RCVBRA" VARCHAR(6) , "PTFH_RCVCARDNO" VARCHAR(30) , "PTFH_RCVNAME" VARCHAR(60) , "PTFH_RCVCRYTYP" VARCHAR(3) , "PTFH_RCVAMT" DECIMAL(15,2) , "PTFH_HANGTYP" CHAR(2) , "PTFH_LOGTYP" CHAR(1) , "PTFH_HSTFLWNO" VARCHAR(20) , "PTFH_REMARK" VARCHAR(100) , "PTFH_STT" CHAR(2) , "PTFH_FUNDCODE" VARCHAR(6) , "PTFH_TOFUNDCODE" VARCHAR(6) , "PTFH_TRANKIND" VARCHAR(1) , "PTFH_RCVOPENBANK" VARCHAR(60) , "PTFH_RCVOPENCITY" VARCHAR(60) , "PTFH_RCVOPENAREA" VARCHAR(60) , "PTFH_RCVOPENBRANCH" VARCHAR(60) , "PTFH_TRANFEE" DECIMAL(15,2) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_TRNFLW_HIS" ADD CONSTRAINT "PB_TRNFLW_HIS_PK01" PRIMARY KEY ("PTFH_TRNFLW")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_TRNFLW_HIS_IDX1" ON "PBANK   "."PB_TRNFLW_HIS" ("PTFH_PAYCARDNO" ASC, "PTFH_TRANCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_TRNFLW_HIS_IDX2" ON "PBANK   "."PB_TRNFLW_HIS" ("PTFH_TRANTIM" DESC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_NETTRN_HIS"  ( "PNTH_TRNFLW" VARCHAR(20) NOT NULL , "PNTH_CSTNO" VARCHAR(30) NOT NULL , "PNTH_BATNO" VARCHAR(20) NOT NULL , "PNTH_CHANNEL" CHAR(1) NOT NULL , "PNTH_BATFLAG" CHAR(1) , "PNTH_TRANCODE" VARCHAR(6) , "PNTH_HOSTCODE" VARCHAR(20) , "PNTH_DEALTYP" CHAR(2) , "PNTH_TRANTYP" CHAR(1) , "PNTH_BKGFLW" VARCHAR(20) , "PNTH_ACCDATE" VARCHAR(8) , "PNTH_TRANTIM" VARCHAR(14) , "PNTH_PAYBRA" VARCHAR(6) , "PNTH_PAYCARDNO" VARCHAR(30) , "PNTH_PAYCRYTYP" VARCHAR(3) , "PNTH_PAYAMT" DECIMAL(15,2) , "PNTH_CASHFLAG" CHAR(1) , "PNTH_RCVBRA" VARCHAR(6) , "PNTH_RCVCARDNO" VARCHAR(30) , "PNTH_RCVNAME" VARCHAR(60) , "PNTH_RCVCRYTYP" VARCHAR(3) , "PNTH_RCVAMT" DECIMAL(15,2) , "PNTH_HANGTYP" CHAR(2) , "PNTH_LOGTYP" CHAR(1) , "PNTH_HSTFLWNO" VARCHAR(20) , "PNTH_REMARK" VARCHAR(100) , "PNTH_STT" CHAR(2) , "PNTH_FUNDCODE" VARCHAR(6) , "PNTH_TOFUNDCODE" VARCHAR(6) , "PNTH_TRANKIND" VARCHAR(1) , "PNTH_RCVOPENBANK" VARCHAR(60) , "PNTH_RCVOPENCITY" VARCHAR(60) , "PNTH_RCVOPENAREA" VARCHAR(60) , "PNTH_RCVOPENBRANCH" VARCHAR(60) , "PNTH_TRANFEE" DECIMAL(15,2) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_NETTRN_HIS" ADD CONSTRAINT "PB_NETTRN_HIS_PK01" PRIMARY KEY ("PNTH_TRNFLW")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_NETTRN_IDX1" ON "PBANK   "."PB_NETTRN_HIS" ("PNTH_PAYCARDNO" ASC, "PNTH_TRANTIM" DESC, "PNTH_TRANCODE" ASC, "PNTH_STT" ASC, "PNTH_TRNFLW" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_NETTRN_IDX2" ON "PBANK   "."PB_NETTRN_HIS" ("PNTH_RCVCARDNO" ASC, "PNTH_TRANTIM" DESC, "PNTH_TRANCODE" ASC, "PNTH_STT" ASC, "PNTH_TRNFLW" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_NETTRN_IDX3" ON "PBANK   "."PB_NETTRN_HIS" ("PNTH_TRANTIM" DESC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_BKGFLW"  ( "PBF_BKGFLW" VARCHAR(20) NOT NULL , "PBF_BKGCYC" CHAR(1) NOT NULL , "PBF_BKGTIM" VARCHAR(8) , "PBF_STARTDATE" VARCHAR(8) , "PBF_ENDDATE" VARCHAR(8) , "PBF_PAYBRA" VARCHAR(6) , "PBF_PAYCARDNO" VARCHAR(30) NOT NULL , "PBF_PAYCRYTYP" VARCHAR(3) NOT NULL , "PBF_PAYAMT" DECIMAL(15,2) NOT NULL , "PBF_CASHFLAG" CHAR(1) , "PBF_RCVBRA" VARCHAR(6) , "PBF_RCVCARDNO" VARCHAR(30) , "PBF_RCVNAME" VARCHAR(60) , "PBF_SMTTIM" VARCHAR(14) , "PBF_STT" CHAR(2) , "PBF_PRTDSCE" VARCHAR(40) , "PBF_MEMO" VARCHAR(60) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_BKGFLW" ADD CONSTRAINT "PB_BKGFLW_PK01" PRIMARY KEY ("PBF_BKGFLW")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CSTLOG"  ( "PCL_LOGNO" VARCHAR(20) NOT NULL , "PCL_LOGTIM" VARCHAR(14) , "PCL_CSTTYP" CHAR(1) , "PCL_CSTNO" VARCHAR(30) , "PCL_CARDNO" VARCHAR(30) , "PCL_TRANCOD" VARCHAR(6) , "PCL_CHANNEL" CHAR(1) , "PCL_FLAG" VARCHAR(8) , "PCL_OPRRLT" VARCHAR(20) , "PCL_IP" VARCHAR(20) , "PCL_OPRDSCE" VARCHAR(2000) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CSTLOG" ADD CONSTRAINT "PB_CSTLOG_PK01" PRIMARY KEY ("PCL_LOGNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CSTLOG_IDX1" ON "PBANK   "."PB_CSTLOG" ("PCL_LOGTIM" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_LOGSTT"  ( "PLS_CARDNO" VARCHAR(30) NOT NULL , "PLS_SESID" VARCHAR(60) , "PLS_LOGTIM" VARCHAR(14) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_LOGSTT" ADD CONSTRAINT "PB_LOGSTT_PK01" PRIMARY KEY ("PLS_CARDNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PUB_APPPAR"  ( "APR_CODE" VARCHAR(30) NOT NULL , "APR_VALUE" VARCHAR(30) NOT NULL , "APR_LANGUAGE" VARCHAR(10) NOT NULL , "APR_NAME" VARCHAR(60) NOT NULL , "APR_SHOWMSG" VARCHAR(200) NOT NULL , "APR_CLASS" VARCHAR(6) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PUB_APPPAR" ADD CONSTRAINT "PB_APPPAR_PK01" PRIMARY KEY ("APR_CODE", "APR_VALUE", "APR_LANGUAGE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PUB_ERRCODE"  ( "ERC_ERRCODE" VARCHAR(8) NOT NULL , "ERC_LANGUAGE" VARCHAR(10) NOT NULL , "ERC_SHOWMSG" VARCHAR(200) , "ERC_INNERMSG" VARCHAR(200) , "ERC_CLASS" VARCHAR(6) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PUB_ERRCODE" ADD CONSTRAINT "PB_ERRCODE_PK01" PRIMARY KEY ("ERC_ERRCODE", "ERC_LANGUAGE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_BRCHRUT"  ( "PBR_BRANCHNO" VARCHAR(6) NOT NULL , "PBR_CORENO" VARCHAR(6) NOT NULL , "PBR_BRANCHNAME" VARCHAR(40) NOT NULL , "PBR_BRANCHENNAME" VARCHAR(60) NOT NULL , "PBR_PRVCORENO" VARCHAR(6) NOT NULL , "PBR_PRVBRANCHNAME" VARCHAR(40) NOT NULL , "PBR_SPECIALURL" VARCHAR(100) , "PBR_CNLOPENFLG" VARCHAR(10) , "PBR_OPENFLAG" VARCHAR(20) , "PBR_ADVPAGE" VARCHAR(100) , "PBR_SEPPAGE" VARCHAR(100) , "PBR_CONNSIZE" VARCHAR(3) , "PBR_CITYCODE" VARCHAR(4) , "PBR_ASYPWD" CHAR(2) NOT NULL WITH DEFAULT '00' , "PBR_SAFEINPUTVS" CHAR(2) , "PBR_ORGNO" VARCHAR(6) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_BRCHRUT" ADD CONSTRAINT "PB_BRCHRUT_PK01" PRIMARY KEY ("PBR_BRANCHNO", "PBR_CORENO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CRDCNT"  ( "PCC_CENTERNO" VARCHAR(6) NOT NULL , "PCC_BRANCHNO" VARCHAR(6) NOT NULL , "PCC_FLAG" CHAR(1) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CRDCNT" ADD CONSTRAINT "PB_CRDCNT_PK01" PRIMARY KEY ("PCC_CENTERNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_SIGNINF"  ( "PSI_LOGNO" VARCHAR(20) NOT NULL , "PSI_SIGNKEY" VARCHAR(20) NOT NULL , "PSI_CSTNO" VARCHAR(10) NOT NULL , "PSI_BSNCOD" VARCHAR(8) , "PSI_HOSTCOD" VARCHAR(8) , "PSI_CERTDN" VARCHAR(100) , "PSI_DATALEN" VARCHAR(10) , "PSI_SVRDATA" CLOB(51200) LOGGED NOT COMPACT , "PSI_CLIDATA" CLOB(51200) LOGGED NOT COMPACT , "PSI_SUBDATA" CLOB(51200) LOGGED NOT COMPACT ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_SIGNINF" ADD CONSTRAINT "PB_SIGNINF_PK01" PRIMARY KEY ("PSI_LOGNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CRYCMP"  ( "PCP_CRYTYPE" VARCHAR(3) NOT NULL , "PCP_CRYCODE" VARCHAR(3) NOT NULL , "PCP_CRYNAME" VARCHAR(20) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CRYCMP" ADD CONSTRAINT "PB_CRYCMP_PK01" PRIMARY KEY ("PCP_CRYTYPE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_BATFLG"  ( "PBT_BATNO" VARCHAR(4) NOT NULL , "PBT_BATINF" VARCHAR(60) , "PBT_REPFLG" CHAR(1) NOT NULL , "PBT_STT" CHAR(1) NOT NULL , "PBT_TIME" VARCHAR(14) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_BATFLG" ADD CONSTRAINT "PB_BATFLG_PK01" PRIMARY KEY ("PBT_BATNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."IM_EBTELLER"  ( "EBT_BRANCHNO" VARCHAR(6) NOT NULL , "EBT_EBTELLNO" VARCHAR(8) NOT NULL , "EBT_STT" CHAR(1) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."IM_EBTELLER" ADD CONSTRAINT "IM_EBTELLER_PK01" PRIMARY KEY ("EBT_BRANCHNO", "EBT_EBTELLNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CRDSCR"  ( "PCS_CARDNO" VARCHAR(30) NOT NULL , "PCS_CHANNEL" CHAR(1) NOT NULL , "PCS_SCORE" DECIMAL(15,2) , "PCS_UPDDATE" VARCHAR(8) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CRDSCR" ADD CONSTRAINT "PB_CRDSCR_PK01" PRIMARY KEY ("PCS_CARDNO", "PCS_CHANNEL")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CRDSCR_IDX1" ON "PBANK   "."PB_CRDSCR" ("PCS_UPDDATE" DESC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CRDSCR_IDX2" ON "PBANK   "."PB_CRDSCR" ("PCS_CARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_USDRAT"  ( "PUR_CRYTYP" VARCHAR(3) NOT NULL , "PUR_RATE" DECIMAL(8,4) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_USDRAT" ADD CONSTRAINT "PB_USDRAT_PK01" PRIMARY KEY ("PUR_CRYTYP")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CSRRUL"  ( "PCR_TRANCODE" VARCHAR(6) NOT NULL , "PCR_CHANNEL" CHAR(1) NOT NULL , "PCR_HOSTCODE" VARCHAR(8) NOT NULL , "PCR_FIRSTSCORE" DECIMAL(15,2) , "PCR_SCORE" DECIMAL(15,2) , "PCR_USDSCORE" DECIMAL(15,2) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CSRRUL" ADD CONSTRAINT "PB_CSRRUL_PK01" PRIMARY KEY ("PCR_TRANCODE", "PCR_CHANNEL", "PCR_HOSTCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_USEFLG"  ( "PUF_CARDNO" VARCHAR(30) NOT NULL , "PUF_TRANCODE" VARCHAR(8) NOT NULL , "PUF_CHANNEL" CHAR(1) NOT NULL , "PUF_FIRSTFLAG" CHAR(1) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_USEFLG" ADD CONSTRAINT "PB_USEFLG_PK01" PRIMARY KEY ("PUF_CARDNO", "PUF_TRANCODE", "PUF_CHANNEL")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_USEFLG_IDX1" ON "PBANK   "."PB_USEFLG" ("PUF_CARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_SCRTMP"  ( "PST_LOGNO" VARCHAR(20) NOT NULL , "PST_CARDNO" VARCHAR(30) NOT NULL , "PST_TRANCODE" VARCHAR(8) NOT NULL , "PST_CHANNEL" CHAR(1) NOT NULL , "PST_TRANFLAG" CHAR(1) NOT NULL , "PST_SCORE" DECIMAL(15,2) , "PST_LOGDATE" VARCHAR(8) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_SCRTMP" ADD CONSTRAINT "PB_USEFLG_PK01" PRIMARY KEY ("PST_LOGNO", "PST_CARDNO", "PST_TRANCODE", "PST_CHANNEL", "PST_TRANFLAG")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_SCRTMP_IDX1" ON "PBANK   "."PB_SCRTMP" ("PST_CARDNO" ASC, "PST_CHANNEL" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_SCRTMP_HIS"  ( "PSTH_LOGNO" VARCHAR(20) NOT NULL , "PSTH_CARDNO" VARCHAR(30) NOT NULL , "PSTH_TRANCODE" VARCHAR(8) NOT NULL , "PSTH_CHANNEL" CHAR(1) NOT NULL , "PSTH_TRANFLAG" CHAR(1) NOT NULL , "PSTH_SCORE" DECIMAL(15,2) , "PSTH_LOGDATE" VARCHAR(8) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_SCRTMP_HIS" ADD CONSTRAINT "PB_USEFLG_PK01" PRIMARY KEY ("PSTH_LOGNO", "PSTH_CARDNO", "PSTH_TRANCODE", "PSTH_CHANNEL", "PSTH_TRANFLAG")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_SCRTMP_HIS_IDX1" ON "PBANK   "."PB_SCRTMP_HIS" ("PSTH_LOGDATE" DESC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_WAP_EXPWDMAP"  ( "PROE_EXPWD" VARCHAR(6) NOT NULL , "PROE_IMGFILENAME" VARCHAR(6) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_WAPCUSTINF"  ( "MOB_MOBPHONE" VARCHAR(20) NOT NULL , "MOB_CARDNO" VARCHAR(25) NOT NULL , "MOB_CARDALIAS" VARCHAR(30) NOT NULL , "MOB_BUSTYPE" VARCHAR(1) NOT NULL , "MOB_CARDSEQNO" INTEGER NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_WAPCUSTINF_IDX1" ON "PBANK   "."PB_WAPCUSTINF" ("MOB_MOBPHONE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_WAPCUSTINF_IDX2" ON "PBANK   "."PB_WAPCUSTINF" ("MOB_CARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_MENUDEF"  ( "MDF_MENUCODE" CHAR(8) NOT NULL , "MDF_PARENTNO" CHAR(8) , "MDF_LEVEL" CHAR(1) NOT NULL , "MDF_ISLEAF" CHAR(1) NOT NULL , "MDF_SEQNO" INTEGER , "MDF_NAMECN" VARCHAR(40) , "MDF_NAMEEN" VARCHAR(40) , "MDF_TARGET" VARCHAR(30) , "MDF_BSNCODE" CHAR(6) NOT NULL , "MDF_TRANCODE" CHAR(21) , "MDF_URLCN" VARCHAR(100) NOT NULL , "MDF_URLEN" VARCHAR(100) , "MDF_STT" CHAR(1) NOT NULL , "MDF_SHOWSTATUS" CHAR(1) NOT NULL , "MDF_CARDTYPE" VARCHAR(10) NOT NULL , "MDF_MENUDESC" VARCHAR(150) , "MDF_MENUDESCEN" VARCHAR(150) , "MDF_SPECIALSWLTCH" CHAR(1) NOT NULL , "MDF_BRANCHNO" VARCHAR(160) , "MDF_SELFNAMECN" VARCHAR(40) , "MDF_SELFNAMEEN" VARCHAR(40) , "MDF_NETFLAG" CHAR(2) WITH DEFAULT '00' ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_MENUDEF" ADD PRIMARY KEY ("MDF_MENUCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_ROLEBSNDEF"  ( "RBD_ROLENO" CHAR(2) NOT NULL , "RBD_BSNCODE" CHAR(6) NOT NULL ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_ROLEBSNDEF_IND1" ON "PBANK   "."PB_ROLEBSNDEF" ("RBD_ROLENO" ASC, "RBD_BSNCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."IM_PERSONCSTOPRCRT"  ( "POC_CSTNO" VARCHAR(10) NOT NULL , "POC_DISTRICTNO" VARCHAR(3) , "POC_CERST" CHAR(1) , "POC_REFNO" VARCHAR(30) , "POC_AUTHNO" VARCHAR(30) , "POC_VALIDTIME" VARCHAR(14) , "POC_CERTIME" CHAR(2) , "POC_PRINO" CHAR(1) NOT NULL WITH DEFAULT '0' , "POC_RECST" VARCHAR(2) , "POC_PRTIM" SMALLINT WITH DEFAULT 0 , "POC_NPASS" CHAR(50) , "POC_ERRNO" CHAR(6) , "POC_CATYPE" CHAR(1) , "POC_USERTYPE" CHAR(1) , "POC_CONFERNO" VARCHAR(16) , "POC_NOTICE" CHAR(1) WITH DEFAULT '0' , "POC_CONFCOUNT" SMALLINT WITH DEFAULT 0 ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."IM_PERSONCSTOPRCRT" ADD PRIMARY KEY ("POC_CSTNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."IM_PERSONCERTERRMAN"  ( "PEM_CSTNO" VARCHAR(13) NOT NULL , "PEM_ERRTIM" VARCHAR(14) , "PEM_OPTTYP" CHAR(1) , "PEM_ERRMSG" VARCHAR(400) , "PEM_DN" VARCHAR(255) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."IM_PERSONCERTERRMAN" ADD PRIMARY KEY ("PEM_CSTNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_RETPWD"  ( "PRP_CARDNO" VARCHAR(30) NOT NULL , "PRP_USETYPE" CHAR(1) NOT NULL , "PRP_UPTIME" VARCHAR(14) NOT NULL , "PRP_AMOUNT" INTEGER ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_RETPWD_IDX1" ON "PBANK   "."PB_RETPWD" ("PRP_CARDNO" ASC, "PRP_USETYPE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_WODE_ACCINF"  ( "PAW_SUBACC" VARCHAR(21) NOT NULL , "PAW_RELTYPE" VARCHAR(1) , "PAW_STATE" VARCHAR(1) , "PAW_ACCNO" VARCHAR(21) , "PAW_WODECARD" VARCHAR(19) NOT NULL , "PAW_CUSTNO" VARCHAR(13) , "PAW_CLEVEL" VARCHAR(2) , "PAW_SUBCUSTNO" VARCHAR(13) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_WODE_ACCINF" ADD CONSTRAINT "PB_WODE_PK01" PRIMARY KEY ("PAW_SUBACC", "PAW_WODECARD")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_WODEACCINF_INX1" ON "PBANK   "."PB_WODE_ACCINF" ("PAW_WODECARD" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_WODEACCINF_INX2" ON "PBANK   "."PB_WODE_ACCINF" ("PAW_SUBACC" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_TRANCRDINF"  ( "PTCI_BRANCHCRDFLG" VARCHAR(15) NOT NULL , "PTCI_BRANCHNAME" VARCHAR(100) NOT NULL , "PTCI_ORGCODE" VARCHAR(8) NOT NULL , "PTCI_ACCLENGTH" CHAR(2) NOT NULL , "PTCI_CARDNAME" VARCHAR(50) , "PTCI_CARDTYP" CHAR(1) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_TRANCRDINF" ADD CONSTRAINT "PB_TRANCRDINF_PK01" PRIMARY KEY ("PTCI_BRANCHCRDFLG", "PTCI_ACCLENGTH")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_PMSBANKNO"  ( "PBN_BANKNO" CHAR(12) NOT NULL , "PBN_STAT" CHAR(1) NOT NULL , "PBN_CLASS" CHAR(2) NOT NULL , "PBN_BANKTYPE" CHAR(3) NOT NULL , "PBN_HDIRBANK" CHAR(12) NOT NULL , "PBN_NODECODE" CHAR(5) NOT NULL , "PBN_HIGHBANK" CHAR(130) NOT NULL , "PBN_PBCODE" CHAR(12) NOT NULL , "PBN_CITYCODE" CHAR(4) NOT NULL , "PBN_SACSTAT" CHAR(1) NOT NULL , "PBN_SAALTD" CHAR(8) NOT NULL , "PBN_SAALTT" CHAR(14) NOT NULL , "PBN_LONGNAME" CHAR(60) NOT NULL , "PBN_SHTNAME" CHAR(20) NOT NULL , "PBN_ADDRESS" CHAR(60) NOT NULL , "PBN_POSTCODE" CHAR(6) NOT NULL , "PBN_PHONE" CHAR(30) NOT NULL , "PBN_EMAIL" CHAR(30) NOT NULL , "PBN_EFFDATE" CHAR(8) NOT NULL , "PBN_IVDDATE" CHAR(8) NOT NULL , "PBN_ALTDATE" CHAR(20) NOT NULL , "PBN_ALTTYPE" CHAR(1) NOT NULL , "PBN_ALTSTT" CHAR(8) NOT NULL , "PBN_REM" CHAR(60) NOT NULL , "PBN_ALTFLAG" CHAR(1) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_PMSBANKNO" ADD CONSTRAINT "PB_PMSBANKNO_PK01" PRIMARY KEY ("PBN_BANKNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_PMSBANKNO_IDX1" ON "PBANK   "."PB_PMSBANKNO" ("PBN_BANKTYPE" ASC, "PBN_CITYCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_PMSBANKNO_IDX2" ON "PBANK   "."PB_PMSBANKNO" ("PBN_LONGNAME" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_PSDBANKNO"  ( "PSD_BANKNO" VARCHAR(14) NOT NULL , "PSD_BANKCLS" VARCHAR(4) NOT NULL , "PSD_BANKCODE" VARCHAR(3) NOT NULL , "PSD_HDIRBANK" VARCHAR(14) , "PSD_IGLPRSN" VARCHAR(105) , "PBN_HIGHBANK" VARCHAR(70) NOT NULL , "PSD_BRBANK" VARCHAR(14) , "PSD_CHRGBANK" VARCHAR(14) , "PSD_CCPC" VARCHAR(4) NOT NULL , "PSD_CITYCODE" VARCHAR(4) , "PSD_BANKNAME" VARCHAR(60) NOT NULL , "PSD_JOINFLAG" VARCHAR(10) NOT NULL , "PSD_TEL" VARCHAR(32) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_PSDBANKNO" ADD CONSTRAINT "PB_PSDBANKNO_PK01" PRIMARY KEY ("PSD_BANKNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_PSDBANKNO_IDX1" ON "PBANK   "."PB_PSDBANKNO" ("PSD_BANKCODE" ASC, "PSD_CITYCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_PSDBANKNO_IDX2" ON "PBANK   "."PB_PSDBANKNO" ("PSD_BANKNAME" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_EFTBANKNO"  ( "PEFT_BANKNO" CHAR(12) NOT NULL , "PEFT_BANKTYPE" CHAR(3) NOT NULL , "PEFT_LONGNAME" VARCHAR(60) NOT NULL , "PEFT_SHORTNAME" VARCHAR(60) , "PEFT_CITYCODE" CHAR(4) NOT NULL , "PEFT_CITYNAME" VARCHAR(60) NOT NULL , "PEFT_CLSBANKNO" CHAR(12) NOT NULL , "PEFT_SUBBANKNO" CHAR(12) , "PEFT_COREBANK" CHAR(12) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_EFTBANKNO" ADD CONSTRAINT "PB_EFTBANKNO_PK01" PRIMARY KEY ("PEFT_BANKNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_EFTBANKNO_IDX1" ON "PBANK   "."PB_EFTBANKNO" ("PEFT_BANKTYPE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_PROVINCEINFO"  ( "PVI_PVICODE" CHAR(3) NOT NULL , "PVI_PVINAME" CHAR(60) , "PVI_STT" CHAR(1) , "PVI_PVINAMEEN" CHAR(100) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_PROVINCEINFO" ADD CONSTRAINT "PB_PROINFO_PK01" PRIMARY KEY ("PVI_PVICODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CITYINFO"  ( "CIT_CITYCODE" CHAR(4) NOT NULL , "CIT_PVICODE" CHAR(3) NOT NULL , "CIT_CITYNAME" CHAR(60) , "CIT_CITYNAMEEN" CHAR(100) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CITYINFO" ADD CONSTRAINT "PB_CITYINFO_PK01" PRIMARY KEY ("CIT_CITYCODE")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CITYINFO_IDX1" ON "PBANK   "."PB_CITYINFO" ("CIT_PVICODE" ASC, "CIT_CITYCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_BANKINFO"  ( "BNK_BANKTYPE" CHAR(3) NOT NULL , "BNK_AREANAME" CHAR(60) , "BNK_AREANAMEEN" CHAR(200) , "BNK_INDEX" INTEGER ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_BANKINFO" ADD CONSTRAINT "PB_BANKINFO_PK01" PRIMARY KEY ("BNK_BANKTYPE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."IM_PRIZE_ACTIVE"  ( "IPA_ACTIVENO" VARCHAR(10) NOT NULL , "IPA_ACTIVENAME" VARCHAR(60) NOT NULL , "IPA_ROLENO" CHAR(2) , "IPA_BEGINDATE" VARCHAR(8) , "IPA_ENDDATE" VARCHAR(8) , "IPA_ACTIVETYP" CHAR(3) , "IPA_CONTENTURL" VARCHAR(200) , "IPA_REM" VARCHAR(60) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."IM_PRIZE_ACTIVE" ADD CONSTRAINT "IM_ACTPRIZE_PK01" PRIMARY KEY ("IPA_ACTIVENO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."IM_PRIZE_CSTINFO"  ( "IPC_ACTIVENO" VARCHAR(10) NOT NULL , "IPC_CARDNO" VARCHAR(30) NOT NULL , "IPC_NAME" VARCHAR(30) , "IPC_AMT" DECIMAL(15,2) NOT NULL , "IPC_DELESCORE" DECIMAL(15,2) NOT NULL , "IPC_PRIZENO" VARCHAR(20) NOT NULL , "IPC_STT" CHAR(1) NOT NULL , "IPC_REM1" VARCHAR(50) , "IPC_REM2" VARCHAR(100) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."IM_PRIZE_CSTINFO" ADD CONSTRAINT "IM_CSTPRIZE_PK01" PRIMARY KEY ("IPC_ACTIVENO", "IPC_CARDNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."IM_PRIZE_TRNFLW"  ( "IPT_TRNFLW" VARCHAR(20) NOT NULL , "IPT_CARDNO" VARCHAR(30) NOT NULL , "IPT_CSTNO" VARCHAR(20) NOT NULL , "IPT_ACTIVENO" VARCHAR(10) , "IPT_ACTIVENAME" VARCHAR(60) , "IPT_ACCADDRESS" VARCHAR(30) , "IPT_PRIZENO" VARCHAR(20) , "IPT_CHANNEL" CHAR(1) , "IPT_TRANTYPE" CHAR(2) , "IPT_TRANCODE" VARCHAR(6) , "IPT_HOSTCODE" VARCHAR(20) , "IPT_ZFNAME" VARCHAR(30) , "IPT_MERNO" VARCHAR(20) , "IPT_MERNAME" VARCHAR(30) , "IPT_REM" DECIMAL(15,2) , "IPT_DELESCORE" DECIMAL(15,2) , "IPT_ACCDATE" VARCHAR(8) , "IPT_TRANTIM" VARCHAR(14) , "IPT_STT" CHAR(2) , "IPT_REM1" VARCHAR(100) , "IPT_REM2" VARCHAR(50) , "IPT_REMARK" VARCHAR(100) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."IM_PRIZE_TRNFLW" ADD CONSTRAINT "IM_PRI_TRN_PK01" PRIMARY KEY ("IPT_TRNFLW", "IPT_CARDNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."IM_PRIZE_TRNFLWHIS"  ( "IPTH_TRNFLW" VARCHAR(20) NOT NULL , "IPTH_CARDNO" VARCHAR(30) NOT NULL , "IPTH_CSTNO" VARCHAR(20) NOT NULL , "IPTH_ACTIVENO" VARCHAR(10) , "IPTH_ACTIVENAME" VARCHAR(60) , "IPTH_ACCADDRESS" VARCHAR(30) , "IPTH_PRIZENO" VARCHAR(20) , "IPTH_CHANNEL" CHAR(1) , "IPTH_TRANTYPE" CHAR(2) , "IPTH_TRANCODE" VARCHAR(6) , "IPTH_HOSTCODE" VARCHAR(20) , "IPTH_ZFNAME" VARCHAR(30) , "IPTH_MERNO" VARCHAR(20) , "IPTH_MERNAME" VARCHAR(30) , "IPTH_REM" DECIMAL(15,2) , "IPTH_DELESCORE" DECIMAL(15,2) , "IPTH_ACCDATE" VARCHAR(8) , "IPTH_TRANTIM" VARCHAR(14) , "IPTH_STT" CHAR(2) , "IPTH_REM1" VARCHAR(100) , "IPTH_REM2" VARCHAR(50) , "IPTH_REMARK" VARCHAR(100) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."IM_PRIZE_TRNFLWHIS" ADD CONSTRAINT "IM_PRI_TRN_PK01" PRIMARY KEY ("IPTH_TRNFLW", "IPTH_CARDNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_IMAGEINFO"  ( "PII_IMAGENAME" VARCHAR(20) NOT NULL , "PII_LANGUAGE" CHAR(1) NOT NULL WITH DEFAULT '1' , "PII_IMAGEPOS" CHAR(1) , "PII_PRODUCTURL" VARCHAR(300) , "PII_PRODUCTNAME" VARCHAR(40) , "PII_UPLOADTIME" VARCHAR(8) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_IMAGEINFO" ADD CONSTRAINT "PB_IMGBRH_PK01" PRIMARY KEY ("PII_IMAGENAME", "PII_LANGUAGE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CSTRELACCGRP"  ( "PRG_CSTNO" VARCHAR(10) NOT NULL , "PRG_GROUPID" VARCHAR(8) NOT NULL , "PRG_GROUPNAME" VARCHAR(60) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CSTRELACCGRP" ADD PRIMARY KEY ("PRG_CSTNO", "PRG_GROUPID")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUNDMSG"  ( "PFM_FUNDCODE" VARCHAR(6) NOT NULL , "PFM_FUNDNAME" VARCHAR(40) NOT NULL , "PFM_UPDDATE" VARCHAR(8) , "PFM_NETVAL" DECIMAL(9,4) , "PFM_FUNDTYP" CHAR(1) NOT NULL , "PFM_FEETYP" CHAR(1) NOT NULL , "PFM_FUNDLEVEL" CHAR(1) , "PFM_MONTHRATE" DECIMAL(9,2) , "PFM_SEASONRATE" DECIMAL(9,2) , "PFM_YEARRATE" DECIMAL(9,2) , "PFM_NEWVOL" DECIMAL(12,4) , "PFM_VOLUPDATE" VARCHAR(8) , "PFM_VALCHANGE" DECIMAL(9,2) , "PFM_FEERATE" DECIMAL(9,2) , "PFM_BACKFUNDCODE" VARCHAR(6) , "PFM_FLAG" CHAR(1) , "PFM_CURRRATE" DECIMAL(9,5) , "PFM_CURRWEEKRATE" DECIMAL(9,4) , "PFM_STARTDDATE" VARCHAR(8) , "PFM_ENDDDATE" VARCHAR(8) , "PFM_DISCOUNT" CHAR(1) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUNDMSG" ADD CONSTRAINT "PB_FUNDMSG_PK01" PRIMARY KEY ("PFM_FUNDCODE")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FUNDMSG_IDX1" ON "PBANK   "."PB_FUNDMSG" ("PFM_FUNDTYP" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_GOLDPICKADDR"  ( "PGPA_SEQNO" VARCHAR(10) NOT NULL , "PGPA_CITY" VARCHAR(20) NOT NULL , "PGPA_ADDR" VARCHAR(100) NOT NULL , "PGPA_TOUCH" VARCHAR(50) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_GOLDPICKADDR" ADD CONSTRAINT "PB_ACCINF_PK01" PRIMARY KEY ("PGPA_SEQNO", "PGPA_CITY")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_INSURE_PROD"  ( "PIP_INSRNO" CHAR(10) NOT NULL , "PIP_INSRNAME" VARCHAR(30) NOT NULL , "PIP_INSRTYPE" CHAR(3) NOT NULL , "PIP_COMPANYNO" CHAR(10) NOT NULL , "PIP_COMPANYNAME" VARCHAR(60) NOT NULL , "PIP_INTR_URL" VARCHAR(60) , "PIP_ITEM_URL" VARCHAR(60) , "PIP_BUY_URL" VARCHAR(60) , "PIP_SEQNO" SMALLINT NOT NULL , "PIP_BUY_SWITCH" SMALLINT NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_INSURE_PROD" ADD CONSTRAINT "PB_INSP_PK01" PRIMARY KEY ("PIP_INSRNO", "PIP_COMPANYNO")
DB20000I  SQL 命令成功完成。

CREATE UNIQUE INDEX "PBANK   "."PB_INSP_IDX1" ON "PBANK   "."PB_INSURE_PROD" ("PIP_SEQNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_INSURE_NODE"  ( "PIN_SUBCMPNO" VARCHAR(10) NOT NULL , "PIN_COMPANYNO" VARCHAR(7) NOT NULL , "PIN_COMPANYNAME" VARCHAR(40) NOT NULL , "PIN_PRIVNAME" VARCHAR(20) NOT NULL , "PIN_PVICODE" CHAR(3) NOT NULL , "PIN_CITYNAME" VARCHAR(20) NOT NULL , "PIN_SERVICEPHONE" VARCHAR(20) , "PIN_BRANCHNAME" VARCHAR(20) NOT NULL , "PIN_BRANCHNO" CHAR(6) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_INSURE_NODE" ADD CONSTRAINT "PB_INSN_PK01" PRIMARY KEY ("PIN_SUBCMPNO", "PIN_COMPANYNO", "PIN_BRANCHNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_AIRLINECOM"  ( "PALC_SEQNO" VARCHAR(10) NOT NULL , "PALC_NAME" VARCHAR(20) NOT NULL , "PALC_RATE" VARCHAR(10) NOT NULL , "PALC_URL" VARCHAR(80) NOT NULL , "PALC_TELE" VARCHAR(50) NOT NULL ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_AIRLINECOM" ADD CONSTRAINT "PB_ALCOM_PK01" PRIMARY KEY ("PALC_SEQNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_BUYFORDEL"  ( "PYF_TRNFLW" VARCHAR(20) NOT NULL , "PYF_CARDNO" VARCHAR(30) NOT NULL , "PYF_CHHTYP" CHAR(1) , "PYF_BRANCHNO" VARCHAR(6) NOT NULL , "PYF_TRANDAY" VARCHAR(8) NOT NULL , "PYF_TRANTIM" VARCHAR(14) NOT NULL , "PYF_NAME" VARCHAR(30) NOT NULL , "PYF_SEX" CHAR(1) NOT NULL , "PYF_CTFTYP" CHAR(2) NOT NULL , "PYF_CTFNO" VARCHAR(20) NOT NULL , "PYF_BIRTHDAY" VARCHAR(8) NOT NULL , "PYF_CHNTYP" CHAR(2) , "PYF_CHNNO" VARCHAR(30) , "PYF_CHNADDR" VARCHAR(200) , "PYF_BUYCHNTYPE" VARCHAR(60) , "PYF_CHNCODE" VARCHAR(8) , "PYF_CHNCUR" CHAR(3) , "PYF_CHNAMT" DECIMAL(15,2) , "PYF_CACULATENO" VARCHAR(20) , "PYF_CHNEXC" DECIMAL(8,4) , "PYF_NEEDRMB" DECIMAL(15,2) , "PYF_RATFLG" CHAR(1) NOT NULL WITH DEFAULT '0' , "PYF_TRANBODY" CHAR(1) , "PYF_COUNTRYTYP" VARCHAR(30) , "PYF_STATUS" CHAR(2) , "PYF_REFUSERES" VARCHAR(200) , "PYF_TELLERNO" VARCHAR(20) , "PYF_OPENNETNO" VARCHAR(6) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_BUYFORDEL" ADD PRIMARY KEY ("PYF_TRNFLW")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_BUYFORDEL_IDX1" ON "PBANK   "."PB_BUYFORDEL" ("PYF_CARDNO" ASC, "PYF_TRANDAY" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_BUYFORDEL_IDX2" ON "PBANK   "."PB_BUYFORDEL" ("PYF_STATUS" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_BUYFORDEL_IDX3" ON "PBANK   "."PB_BUYFORDEL" ("PYF_BRANCHNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_BUYFORRES"  ( "PYS_TRNFLW" VARCHAR(20) NOT NULL , "PYS_CARDNO" VARCHAR(30) NOT NULL , "PYS_CHHTYP" CHAR(1) , "PYS_BRANCHNO" VARCHAR(6) NOT NULL , "PYS_TRANDAY" VARCHAR(8) NOT NULL , "PYS_TRANTIM" VARCHAR(14) NOT NULL , "PYS_DEALTIM" VARCHAR(14) NOT NULL , "PYS_NAME" VARCHAR(30) NOT NULL , "PYS_SEX" CHAR(1) NOT NULL , "PYS_CTFTYP" CHAR(2) NOT NULL , "PYS_CTFNO" VARCHAR(20) NOT NULL , "PYS_BIRTHDAY" VARCHAR(8) NOT NULL , "PYS_CHNTYP" CHAR(2) , "PYS_CHNNO" VARCHAR(30) , "PYS_CHNADDR" VARCHAR(200) , "PYS_BUYCHNTYPE" VARCHAR(60) , "PYS_CHNCODE" VARCHAR(8) , "PYS_CHNCUR" CHAR(3) , "PYS_CHNAMT" DECIMAL(15,2) , "PYS_CACULATENO" VARCHAR(20) , "PYS_CHNEXC" DECIMAL(8,4) , "PYS_NEEDRMB" DECIMAL(15,2) , "PYS_RATFLG" CHAR(1) NOT NULL WITH DEFAULT '0' , "PYS_TRANBODY" CHAR(1) , "PYS_COUNTRYTYP" VARCHAR(30) , "PYS_STATUS" CHAR(2) , "PYS_REFUSERES" VARCHAR(200) , "PYS_TELLERNO" VARCHAR(20) , "PYS_HSTFLOWNO" VARCHAR(20) , "PYS_FISCALFLOW" VARCHAR(11) , "PYS_OPENNETNO" VARCHAR(6) , "PYS_BUYNO" VARCHAR(30) , "PYS_CHANNEL" CHAR(1) NOT NULL WITH DEFAULT '2' ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_BUYFORRES" ADD PRIMARY KEY ("PYS_TRNFLW")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_BUYFORRES_IDX1" ON "PBANK   "."PB_BUYFORRES" ("PYS_CARDNO" ASC, "PYS_TRANDAY" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_BUYFORRES_IDX2" ON "PBANK   "."PB_BUYFORRES" ("PYS_STATUS" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_BUYFORRES_IDX3" ON "PBANK   "."PB_BUYFORRES" ("PYS_BRANCHNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_COUNTRY_CODE"  ( "PCO_DIGITALNO" CHAR(3) NOT NULL , "PCO_ALPHABETNO" CHAR(3) NOT NULL , "PCO_INITIAL" VARCHAR(10) NOT NULL , "PCO_SHORTNAMECN" VARCHAR(50) NOT NULL , "PCO_SHORTNAMEEN" VARCHAR(50) , "PCO_FULLNAMECN" VARCHAR(80) , "PCO_FULLNAMEEN" VARCHAR(80) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_PROGUIDE"  ( "PPG_PRODUCTNO" VARCHAR(10) NOT NULL , "PPG_FIRSTTIME" VARCHAR(8) , "PPG_LASTTIME" VARCHAR(8) , "PPG_PROGUIDE" VARCHAR(60) NOT NULL , "PPG_MOBILEPROGUIDE" VARCHAR(60) , "PPG_PROINTRO" VARCHAR(60) , "PPG_PROREPORT" VARCHAR(60) , "PPG_TYPE" CHAR(2) , "PPG_PRONOTE" VARCHAR(60) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_PROGUIDE" ADD CONSTRAINT "PB_PROGUIDE_PK01" PRIMARY KEY ("PPG_PRODUCTNO", "PPG_PROGUIDE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_TRADEMENUREF"  ( "PTM_TRANCOD" CHAR(6) NOT NULL , "PTM_BSNCODE" CHAR(6) NOT NULL , "PTM_NAMECN" VARCHAR(40) , "PTM_NAMEEN" VARCHAR(40) , "PTM_URLCN" VARCHAR(100) , "PTM_URLEN" VARCHAR(100) , "PTM_PREBSNCODE" VARCHAR(6) , "PTM_ISCHANNELTRADE" CHAR(1) NOT NULL , "PTM_STT" CHAR(1) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FINANCECOMPOSITE"  ( "PFR_CSTNO" VARCHAR(10) NOT NULL , "PFR_LARGEID" VARCHAR(40) NOT NULL , "PFR_SMALLID" VARCHAR(40) NOT NULL , "PFR_ACCTYPE" CHAR(2) NOT NULL , "PFR_CURRTYPE" CHAR(3) NOT NULL , "PFR_BALANCE" DECIMAL(15,2) NOT NULL , "PFR_CAPITALORDEBT" CHAR(1) NOT NULL , "PFR_OPENBANK" VARCHAR(40) , "PFR_REMARK" VARCHAR(50) , "PFR_ISLOAD" CHAR(1) WITH DEFAULT '0' , "PFR_LASTMODIFY" VARCHAR(20) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FINANCECOMPOSITE" ADD CONSTRAINT "PB_FIRST_PK01" PRIMARY KEY ("PFR_CSTNO", "PFR_LARGEID", "PFR_SMALLID")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FINANCE_IDX1" ON "PBANK   "."PB_FINANCECOMPOSITE" ("PFR_CSTNO" ASC, "PFR_CURRTYPE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FINANCE_IDX2" ON "PBANK   "."PB_FINANCECOMPOSITE" ("PFR_CSTNO" ASC, "PFR_LARGEID" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FINANCE_IDX3" ON "PBANK   "."PB_FINANCECOMPOSITE" ("PFR_CSTNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FINANCE_IDX4" ON "PBANK   "."PB_FINANCECOMPOSITE" ("PFR_SMALLID" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_USERDEFINED"  ( "PUD_CSTNO" VARCHAR(10) NOT NULL , "PUD_USUALMENU" VARCHAR(300) , "PUD_STYLE" VARCHAR(20) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_USERDEFINED" ADD CONSTRAINT "PB_DEFINED_PK01" PRIMARY KEY ("PUD_CSTNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FDCD"  ( "PFC_FUNDCODE" VARCHAR(6) NOT NULL , "PFC_FUNDNAME" VARCHAR(40) NOT NULL , "PFC_SHARECLASS" VARCHAR(6) NOT NULL , "PFC_SUBTYP" VARCHAR(6) NOT NULL , "PFC_PRDTYP" VARCHAR(6) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FDCD" ADD PRIMARY KEY ("PFC_FUNDCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FDZH"  ( "PFZ_FUNDCODE" CHAR(6) NOT NULL , "PFZ_FUNDNAME" VARCHAR(40) NOT NULL , "PFZ_COMPANY" VARCHAR(60) , "PFZ_DSE" VARCHAR(40) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FDZH" ADD PRIMARY KEY ("PFZ_FUNDCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."MP_ATMBOOKING"  ( "MAB_SEQNO" VARCHAR(10) NOT NULL , "MAB_CARDNO" VARCHAR(30) NOT NULL , "MAB_MOBILENO" VARCHAR(20) NOT NULL , "MAB_VERIFYCODE" VARCHAR(30) , "MAB_BOUND" DECIMAL(15,2) NOT NULL , "MAB_ABLEBOUND" DECIMAL(15,2) NOT NULL , "MAB_CHANNELFLAG" CHAR(1) NOT NULL , "MAB_TRANDATE" VARCHAR(8) NOT NULL , "MAB_TRANTIME" VARCHAR(6) NOT NULL , "MAB_REQTIME" VARCHAR(14) NOT NULL , "MAB_STT" CHAR(1) NOT NULL , "MAB_FAILTIMES" INTEGER NOT NULL , "MAB_CASHTIMES" INTEGER NOT NULL , "MAB_BANKNO" CHAR(6) , "MAB_TELLERNO" VARCHAR(10) , "MAB_TRANNO" VARCHAR(2) NOT NULL , "MAB_INCARDNO" VARCHAR(30) , "MAB_CURTYPE" VARCHAR(3) , "MAB_ACCOUNTNO" VARCHAR(19) , "MAB_CUSTOMERID" VARCHAR(15) , "MAB_INVALREASON" VARCHAR(2) , "MAB_INVALTIME" VARCHAR(14) , "MAB_PROOFCARDNO" VARCHAR(20) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."MP_ATMBOOKING" ADD CONSTRAINT "MP_ATMBOOKING_PK01" PRIMARY KEY ("MAB_SEQNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."MP_ATMBOOKING_IDX1" ON "PBANK   "."MP_ATMBOOKING" ("MAB_TRANDATE" ASC, "MAB_CARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."MP_ATMBOOKING_IDX2" ON "PBANK   "."MP_ATMBOOKING" ("MAB_TRANDATE" ASC, "MAB_MOBILENO" ASC, "MAB_CUSTOMERID" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."MP_ATMBOOKING_IDX3" ON "PBANK   "."MP_ATMBOOKING" ("MAB_TRANDATE" ASC, "MAB_INCARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."MP_ATMBOOKING_IDX4" ON "PBANK   "."MP_ATMBOOKING" ("MAB_CHANNELFLAG" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."MP_ATMBOOKING_IDX5" ON "PBANK   "."MP_ATMBOOKING" ("MAB_TRANDATE" DESC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."MP_ATMTRNFLW"  ( "MAT_FLWNO" VARCHAR(20) NOT NULL , "MAT_CARDNO" VARCHAR(30) NOT NULL , "MAT_MOBILENO" VARCHAR(20) NOT NULL , "MAT_SEQNO" VARCHAR(10) NOT NULL , "MAT_TRANTIME" VARCHAR(14) NOT NULL , "MAT_REQTIME" VARCHAR(14) NOT NULL , "MAT_TRANSUM" DECIMAL(15,2) NOT NULL , "MAT_TRANTYP" CHAR(2) NOT NULL , "MAT_CHANNEL" CHAR(1) NOT NULL , "MAT_BANKNO" CHAR(6) , "MAT_TELLERNO" VARCHAR(10) , "MAT_TRANNO" VARCHAR(2) , "MAT_INCARDNO" VARCHAR(30) , "MAT_CURTYPE" VARCHAR(3) , "MAT_ACCOUNTNO" VARCHAR(19) , "MAT_CUSTOMERID" VARCHAR(15) , "MAT_PROOFCARDNO" VARCHAR(20) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."MP_ATMTRNFLW" ADD CONSTRAINT "MP_ATMTRNFLW_PK01" PRIMARY KEY ("MAT_FLWNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."MP_ATMTRNFLW_IDX1" ON "PBANK   "."MP_ATMTRNFLW" ("MAT_TRANTIME" ASC, "MAT_CARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."MP_ATMTRNFLW_IDX2" ON "PBANK   "."MP_ATMTRNFLW" ("MAT_TRANTIME" ASC, "MAT_MOBILENO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."MP_ATMTRNFLW_IDX3" ON "PBANK   "."MP_ATMTRNFLW" ("MAT_TRANTIME" DESC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_COMMCSTINF"  ( "PCIF_ACCNO" VARCHAR(30) NOT NULL , "PCIF_COREID" VARCHAR(13) , "PCIF_NAME" VARCHAR(30) NOT NULL , "PCIF_PASSWORD" VARCHAR(60) NOT NULL , "PCIF_CTFTYP" VARCHAR(4) NOT NULL , "PCIF_CTFNO" VARCHAR(30) NOT NULL , "PCIF_STT" CHAR(1) NOT NULL , "PCIF_LASTLGNTIM" VARCHAR(14) , "PCIF_LASTLGNIP" VARCHAR(20) , "PCIF_OPENDATE" VARCHAR(8) NOT NULL , "PCIF_ACCTYPE" VARCHAR(2) NOT NULL WITH DEFAULT '00' ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_COMMCSTINF" ADD CONSTRAINT "PB_COMMCSTINF_PK01" PRIMARY KEY ("PCIF_ACCNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_COMMCSTINF_IDX2" ON "PBANK   "."PB_COMMCSTINF" ("PCIF_COREID" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_COMMCSTINF_IDX3" ON "PBANK   "."PB_COMMCSTINF" ("PCIF_CTFTYP" ASC, "PCIF_CTFNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_MONITOR_ALLOW"  ( "PMA_CARDNO" VARCHAR(30) NOT NULL , "PMA_IPADDR" VARCHAR(20) NOT NULL ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FORSUBBRANCH"  ( "PFS_ACCSITE" VARCHAR(6) NOT NULL , "PFS_ACCNAME" VARCHAR(60) , "PFS_CITYCODE" VARCHAR(4) NOT NULL , "PFS_CITYNAME" VARCHAR(60) , "PFS_REM" VARCHAR(60) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FORSUBBRANCH" ADD PRIMARY KEY ("PFS_ACCSITE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_COCSTINF"  ( "PCCI_CSTNO" VARCHAR(10) NOT NULL , "PCCI_ACCNO" VARCHAR(30) NOT NULL , "PCCI_CARDNO" VARCHAR(30) NOT NULL , "PCCI_CORPID" VARCHAR(5) NOT NULL , "PCCI_COREID" VARCHAR(13) NOT NULL , "PCCI_NAMECN" VARCHAR(30) NOT NULL , "PCCI_NAMEEN" VARCHAR(30) , "PCCI_PASSWORD" VARCHAR(60) , "PCCI_LOVENAME" VARCHAR(30) , "PCCI_SEX" CHAR(1) NOT NULL , "PCCI_BIRTHDAY" VARCHAR(10) , "PCCI_CTFTYP" VARCHAR(4) NOT NULL , "PCCI_CTFNO" VARCHAR(30) NOT NULL , "PCCI_MOBILE" VARCHAR(20) NOT NULL , "PCCI_ADDRESS" VARCHAR(60) , "PCCI_PHONE" VARCHAR(20) , "PCCI_FAX" VARCHAR(20) , "PCCI_ZIPCODE" VARCHAR(6) , "PCCI_EMAIL" VARCHAR(60) , "PCCI_STT" CHAR(1) NOT NULL , "PCCI_LASTLGNTIM" VARCHAR(14) , "PCCI_LASTLGNIP" VARCHAR(20) , "PCCI_OPENDATE" VARCHAR(8) NOT NULL ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_COCSTINF" ADD CONSTRAINT "PB_COCSTINF_PK01" PRIMARY KEY ("PCCI_CSTNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_COCSTINF_IDX2" ON "PBANK   "."PB_COCSTINF" ("PCCI_ACCNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_COCSTINF_IDX3" ON "PBANK   "."PB_COCSTINF" ("PCCI_CARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_COCSTINF_CLOSE"  ( "PCCI_CSTNO" VARCHAR(10) NOT NULL , "PCCI_ACCNO" VARCHAR(30) NOT NULL , "PCCI_CARDNO" VARCHAR(30) NOT NULL , "PCCI_CORPID" VARCHAR(5) NOT NULL , "PCCI_COREID" VARCHAR(13) NOT NULL , "PCCI_NAMECN" VARCHAR(30) NOT NULL , "PCCI_NAMEEN" VARCHAR(30) , "PCCI_PASSWORD" VARCHAR(60) , "PCCI_LOVENAME" VARCHAR(30) , "PCCI_SEX" CHAR(1) NOT NULL , "PCCI_BIRTHDAY" VARCHAR(10) , "PCCI_CTFTYP" VARCHAR(4) NOT NULL , "PCCI_CTFNO" VARCHAR(30) NOT NULL , "PCCI_MOBILE" VARCHAR(20) NOT NULL , "PCCI_ADDRESS" VARCHAR(60) , "PCCI_PHONE" VARCHAR(20) , "PCCI_FAX" VARCHAR(20) , "PCCI_ZIPCODE" VARCHAR(6) , "PCCI_EMAIL" VARCHAR(60) , "PCCI_STT" CHAR(1) NOT NULL , "PCCI_LASTLGNTIM" VARCHAR(14) , "PCCI_LASTLGNIP" VARCHAR(20) , "PCCI_OPENDATE" VARCHAR(8) NOT NULL , "PCCI_CLOSEDATE" VARCHAR(8) NOT NULL ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_COCSTINF_CLOSE" ADD CONSTRAINT "PB_COCSTCLOSE_PK01" PRIMARY KEY ("PCCI_CSTNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_COCS_CLOSE_IDX2" ON "PBANK   "."PB_COCSTINF_CLOSE" ("PCCI_ACCNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_COCS_CLOSE_IDX3" ON "PBANK   "."PB_COCSTINF_CLOSE" ("PCCI_CARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_PARTYINF"  ( "PTI_PARTYID" CHAR(12) NOT NULL , "PTI_EFFECTIVEDATE" CHAR(8) NOT NULL , "PTI_PARTYNAME" VARCHAR(60) NOT NULL , "PTI_PARTYALIAS" VARCHAR(60) , "PTI_BANKCODE" CHAR(3) NOT NULL , "PTI_PARTYTYPE" CHAR(4) NOT NULL , "PTI_SETTAGENTID" CHAR(12) NOT NULL , "PTI_CCPC" CHAR(4) , "PTI_JOINDATE" CHAR(8) , "PTI_QUITDATE" CHAR(8) , "PTI_STATE" CHAR(2) NOT NULL , "PTI_REMARK" VARCHAR(256) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_PARTYINF" ADD CONSTRAINT "PB_PARTYINF_PK01" PRIMARY KEY ("PTI_PARTYID", "PTI_EFFECTIVEDATE")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_PARTYINF_IDX1" ON "PBANK   "."PB_PARTYINF" ("PTI_BANKCODE" ASC, "PTI_STATE" ASC, "PTI_EFFECTIVEDATE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_PARTYINF_IDX2" ON "PBANK   "."PB_PARTYINF" ("PTI_PARTYID" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_MERINF"  ( "PMI_MERCHNO" CHAR(15) NOT NULL , "PMI_MERCHSTATUS" CHAR(1) NOT NULL , "PMI_NAMECN" VARCHAR(60) NOT NULL , "PMI_NAMEEN" VARCHAR(100) , "PMI_WEBSITENAME" VARCHAR(50) , "PMI_WEBSITECODE" VARCHAR(200) , "PMI_ACCNO" CHAR(21) NOT NULL , "PMI_ACCNAME" VARCHAR(60) NOT NULL , "PMI_ACCBRANCHID" CHAR(6) NOT NULL , "PMI_MERLEVEL" CHAR(1) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_MERINF" ADD CONSTRAINT "PB_MERINF_PK01" PRIMARY KEY ("PMI_MERCHNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_BANKACC"  ( "PBA_SIGNNO" CHAR(60) NOT NULL , "PBA_CSTNO" CHAR(10) NOT NULL , "PBA_PARTYID" CHAR(12) NOT NULL , "PBA_MAINCARDNO" VARCHAR(32) NOT NULL , "PBA_MAINNAME" VARCHAR(60) NOT NULL , "PBA_BSNPARTYID" CHAR(12) , "PBA_CARDNO" VARCHAR(32) NOT NULL , "PBA_HDNAME" VARCHAR(60) NOT NULL , "PBA_CARDTYPE" CHAR(1) NOT NULL , "PBA_ALIAS" VARCHAR(30) , "PBA_BANKNAME" VARCHAR(60) NOT NULL , "PBA_BANKCODE" CHAR(12) NOT NULL ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_BANKACC" ADD CONSTRAINT "PB_PBANKACC_PK01" PRIMARY KEY ("PBA_SIGNNO", "PBA_CSTNO", "PBA_PARTYID")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_BANKACC_IDX1" ON "PBANK   "."PB_BANKACC" ("PBA_CSTNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_PROTOCOL"  ( "PPL_BSNTYPE" CHAR(6) NOT NULL , "PPL_STT" CHAR(1) NOT NULL , "PPL_EFFECTIVEDATE" CHAR(8) NOT NULL , "PPL_DISABLEDATE" CHAR(8) , "PPL_UPDATETIME" CHAR(14) NOT NULL , "PPL_TELLERID" CHAR(10) NOT NULL , "PPL_TELLERNAME" VARCHAR(30) NOT NULL , "PPL_CHANNEL" CHAR(1) NOT NULL , "PPL_PROTOCOLNM" VARCHAR(60) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_PROTOCOL" ADD CONSTRAINT "PB_PROTOCOL_PK01" PRIMARY KEY ("PPL_PROTOCOLNM")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_PROTOCOL_IDX1" ON "PBANK   "."PB_PROTOCOL" ("PPL_BSNTYPE" ASC, "PPL_STT" ASC, "PPL_EFFECTIVEDATE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUNDQS"  ( "PQS_FUNDCODE" VARCHAR(6) NOT NULL , "PQS_FUNDNAME" VARCHAR(40) NOT NULL , "PQS_FEETYP" CHAR(1) , "PQS_PROTYPE" CHAR(2) , "PQS_COMPANY" VARCHAR(60) , "PQS_CONTROL" CHAR(1) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUNDQS" ADD CONSTRAINT "PB_FUNDINFO_PK01" PRIMARY KEY ("PQS_FUNDCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_BATLIST"  ( "PBL_TRNFLW" VARCHAR(20) NOT NULL , "PBL_BATNO" VARCHAR(20) NOT NULL , "PBL_TRANTYP" CHAR(2) NOT NULL , "PBL_CSTNO" VARCHAR(30) , "PBL_TRANCODE" VARCHAR(6) , "PBL_CHANNEL" CHAR(1) NOT NULL , "PBL_TRANTIM" VARCHAR(14) , "PBL_TRADETIM" VARCHAR(14) , "PBL_ACCTIM" VARCHAR(8) , "PBL_PAYBRA" VARCHAR(6) , "PBL_PAYCARDNO" VARCHAR(30) , "PBL_PAYNAME" VARCHAR(60) , "PBL_PAYCRYTYP" VARCHAR(3) , "PBL_PAYAMT" DECIMAL(15,2) , "PBL_CASHFLAG" CHAR(1) , "PBL_RCVBRA" VARCHAR(6) , "PBL_RCVCARDNO" VARCHAR(30) , "PBL_RCVNAME" VARCHAR(60) , "PBL_RCVCRYTYP" VARCHAR(3) , "PBL_RCVAMT" DECIMAL(15,2) , "PBL_RCVOPENBANK" VARCHAR(60) , "PBL_RCVOPENCITY" VARCHAR(60) , "PBL_RCVOPENAREA" VARCHAR(60) , "PBL_RCVOPENBRANCH" VARCHAR(60) , "PBL_TRANFEE" DECIMAL(15,2) , "PBL_LOGTYP" CHAR(1) , "PBL_PAYSUM" DECIMAL(15,2) , "PBL_PAYNUM" INTEGER , "PBL_REMARK" VARCHAR(100) , "PBL_STT" CHAR(2) , "PBL_REASONCODE" VARCHAR(30) , "PBL_REASON" VARCHAR(200) , "PBL_REM" VARCHAR(100) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_BATLIST" ADD CONSTRAINT "PB_BATLIST_PK01" PRIMARY KEY ("PBL_TRNFLW", "PBL_BATNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_BATLIST_IDX1" ON "PBANK   "."PB_BATLIST" ("PBL_BATNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_BATLIST_IDX2" ON "PBANK   "."PB_BATLIST" ("PBL_TRANTIM" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_BATLIST_IDX3" ON "PBANK   "."PB_BATLIST" ("PBL_BATNO" DESC, "PBL_TRANTIM" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_BATLIST_HIS"  ( "PBLH_TRNFLW" VARCHAR(20) NOT NULL , "PBLH_BATNO" VARCHAR(20) NOT NULL , "PBLH_TRANTYP" CHAR(2) NOT NULL , "PBLH_CSTNO" VARCHAR(30) , "PBLH_TRANCODE" VARCHAR(6) , "PBLH_CHANNEL" CHAR(1) NOT NULL , "PBLH_TRANTIM" VARCHAR(14) , "PBLH_TRADETIM" VARCHAR(14) , "PBLH_ACCTIM" VARCHAR(8) , "PBLH_PAYBRA" VARCHAR(6) , "PBLH_PAYCARDNO" VARCHAR(30) , "PBLH_PAYNAME" VARCHAR(60) , "PBLH_PAYCRYTYP" VARCHAR(3) , "PBLH_PAYAMT" DECIMAL(15,2) , "PBLH_CASHFLAG" CHAR(1) , "PBLH_RCVBRA" VARCHAR(6) , "PBLH_RCVCARDNO" VARCHAR(30) , "PBLH_RCVNAME" VARCHAR(60) , "PBLH_RCVCRYTYP" VARCHAR(3) , "PBLH_RCVAMT" DECIMAL(15,2) , "PBLH_RCVOPENBANK" VARCHAR(60) , "PBLH_RCVOPENCITY" VARCHAR(60) , "PBLH_RCVOPENAREA" VARCHAR(60) , "PBLH_RCVOPENBRANCH" VARCHAR(60) , "PBLH_TRANFEE" DECIMAL(15,2) , "PBLH_LOGTYP" CHAR(1) , "PBLH_PAYSUM" DECIMAL(15,2) , "PBLH_PAYNUM" INTEGER , "PBLH_REMARK" VARCHAR(100) , "PBLH_STT" CHAR(2) , "PBLH_REASONCODE" VARCHAR(30) , "PBLH_REASON" VARCHAR(200) , "PBLH_REM" VARCHAR(100) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_BATLIST_HIS" ADD CONSTRAINT "PB_BATHIS_PK01" PRIMARY KEY ("PBLH_TRNFLW", "PBLH_BATNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_BATTRAN"  ( "PBH_BATNO" VARCHAR(20) NOT NULL , "PBH_CARDNO" VARCHAR(30) NOT NULL , "PBH_TRANTYP" CHAR(2) NOT NULL , "PBH_CHANNEL" CHAR(1) NOT NULL , "PBH_RECVTRANTIM" VARCHAR(14) , "PBH_SENDTRANTIM" VARCHAR(14) , "PBH_TOTALNUM" INTEGER , "PBH_SUCCNUM" INTEGER , "PBH_FAILNUM" INTEGER , "PBH_TOTALSUM" DECIMAL(15,2) , "PBH_STT" CHAR(2) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_BATTRAN" ADD CONSTRAINT "PB_BATTRAN_PK01" PRIMARY KEY ("PBH_BATNO", "PBH_CARDNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_BATTRAN_IDX1" ON "PBANK   "."PB_BATTRAN" ("PBH_RECVTRANTIM" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_BATTRAN_IDX2" ON "PBANK   "."PB_BATTRAN" ("PBH_CARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_BATTRAN_HIS"  ( "PBHH_BATNO" VARCHAR(20) NOT NULL , "PBHH_CARDNO" VARCHAR(30) NOT NULL , "PBHH_TRANTYP" CHAR(2) NOT NULL , "PBHH_CHANNEL" CHAR(1) NOT NULL , "PBHH_RECVTRANTIM" VARCHAR(14) , "PBHH_SENDTRANTIM" VARCHAR(14) , "PBHH_TOTALNUM" INTEGER , "PBHH_SUCCNUM" INTEGER , "PBHH_FAILNUM" INTEGER , "PBHH_TOTALSUM" DECIMAL(15,2) , "PBHH_STT" CHAR(2) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_BATTRAN_HIS" ADD CONSTRAINT "PB_BATTRANHIS_PK01" PRIMARY KEY ("PBHH_BATNO", "PBHH_CARDNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUND_FEE"  ( "PFF_FUNDCODE" CHAR(6) NOT NULL , "PFF_BUSINESSCODE" CHAR(3) NOT NULL , "PFF_FEETYP" CHAR(1) NOT NULL , "PFF_AMTVOL" DECIMAL(16,2) NOT NULL , "PFF_CHANNELTYPE" CHAR(1) NOT NULL , "PFF_RATE" DECIMAL(5,4) NOT NULL , "PFF_MINDISCOUNT" DECIMAL(5,4) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FUND_FEE_IDX1" ON "PBANK   "."PB_FUND_FEE" ("PFF_FUNDCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FUND_FEE_IDX2" ON "PBANK   "."PB_FUND_FEE" ("PFF_FUNDCODE" ASC, "PFF_BUSINESSCODE" ASC, "PFF_FEETYP" ASC, "PFF_AMTVOL" ASC, "PFF_CHANNELTYPE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUND_YSK"  ( "PFY_FUNDCODE" CHAR(6) NOT NULL , "PFY_FEETYP" CHAR(1) NOT NULL , "PFY_BUSINESSCODE" CHAR(3) NOT NULL , "PFY_OFFDAYS" CHAR(2) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FUND_YSK_IDX1" ON "PBANK   "."PB_FUND_YSK" ("PFY_FUNDCODE" ASC, "PFY_BUSINESSCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FUND_YSK_IDX2" ON "PBANK   "."PB_FUND_YSK" ("PFY_FUNDCODE" ASC, "PFY_FEETYP" ASC, "PFY_BUSINESSCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_ERROR_MSG"  ( "PEM_CUSTOMERNO" VARCHAR(10) NOT NULL , "PEM_FLOWNO" VARCHAR(20) NOT NULL , "PEM_ERRORCODE" VARCHAR(8) NOT NULL , "PEM_REPORTDATE" VARCHAR(14) NOT NULL , "PEM_TRANCODE" VARCHAR(6) , "PEM_TRANNAME" VARCHAR(60) , "PEM_ERRORSHOW" VARCHAR(200) , "PEM_FREQUENCY" INTEGER , "PEM_DETAILS" VARCHAR(200) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_ERROR_MSG_IDX1" ON "PBANK   "."PB_ERROR_MSG" ("PEM_FLOWNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_ERROR_MSG_IDX2" ON "PBANK   "."PB_ERROR_MSG" ("PEM_REPORTDATE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_ERROR_MSG_IDX3" ON "PBANK   "."PB_ERROR_MSG" ("PEM_ERRORCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_IMAGE"  ( "IMG_CSTNO" VARCHAR(21) NOT NULL , "IMG_TYPE" CHAR(1) NOT NULL , "IMG_BANNARY" BLOB(10240) LOGGED NOT COMPACT ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_IMAGE" ADD CONSTRAINT "PB_IMAGE_PK01" PRIMARY KEY ("IMG_CSTNO", "IMG_TYPE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_SELLINFO"  ( "PSI_SELLNAME" VARCHAR(20) NOT NULL , "PSI_SELLPOS" CHAR(2) , "PSI_CONTENT" CHAR(200) , "PSI_CLIENTVS" CHAR(2) , "PSI_PRODUCTTYPE" CHAR(2) , "PSI_URLOUT" CHAR(1) , "PSI_PRODUCTURL" VARCHAR(800) , "PSI_PRODUCTNAME" VARCHAR(40) , "PSI_UPLOADTIME" VARCHAR(8) , "PSI_VALIDDATE" VARCHAR(8) , "PSI_ENDDATE" VARCHAR(8) , "PSI_OPERATENO" VARCHAR(10) , "PSI_CHECKNO" VARCHAR(10) , "PSI_STATUS" CHAR(2) , "PSI_LANGUAGE" CHAR(1) NOT NULL WITH DEFAULT '1' ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_SELLINFO" ADD CONSTRAINT "PB_IMGBRH_PK01" PRIMARY KEY ("PSI_SELLNAME", "PSI_LANGUAGE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_INSURE_CHJ"  ( "ICJ_ID" CHAR(3) NOT NULL , "ICJ_BEGINTIME" VARCHAR(8) , "ICJ_ENDTIME" VARCHAR(8) , "ICJ_PROBABILITY" INTEGER , "ICJ_COUNTS" INTEGER ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_INSURE_CHJ" ADD CONSTRAINT "PB_INSURE_CHJ_PK01" PRIMARY KEY ("ICJ_ID")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_INSURE_CHJSAVEINFO"  ( "ICJS_INSURENO" VARCHAR(30) NOT NULL , "ICJS_CARDNO" VARCHAR(30) , "ICJS_OPERATIONTIME" VARCHAR(8) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_INSURE_CHJSAVEINFO" ADD CONSTRAINT "PB_INSURE_CJS_PK01" PRIMARY KEY ("ICJS_INSURENO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FDTPARC"  ( "PFD_BK" CHAR(6) NOT NULL , "PFD_DEP_TYP" DECIMAL(2,0) NOT NULL , "PFD_CCY" CHAR(3) NOT NULL , "PFD_PERD" CHAR(4) NOT NULL , "PFD_MIN_AMT" DECIMAL(15,2) , "PFD_MAX_AMT" DECIMAL(15,2) , "PFD_DRW_LMT" DECIMAL(15,2) , "PFD_MIN_PERD" SMALLINT , "PFD_PART_ALLOW" SMALLINT , "PFD_RAT_CODE" CHAR(4) , "PFD_LIBOR_CODE" CHAR(4) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FDTPARC" ADD CONSTRAINT "PB_FDTPARC_PK01" PRIMARY KEY ("PFD_BK", "PFD_DEP_TYP", "PFD_CCY", "PFD_PERD")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CMTINT"  ( "PBC_BK" CHAR(6) NOT NULL , "PBC_CD" CHAR(4) NOT NULL , "PBC_CCY" CHAR(3) NOT NULL , "PBC_SDT" DECIMAL(8,0) NOT NULL , "PBC_EDT" DECIMAL(8,0) , "PBC_RATE" DECIMAL(8,6) , "PBC_CNF_NO" CHAR(12) , "PBC_STS" CHAR(1) , "PBC_UPD_DT" DECIMAL(8,0) , "PBC_UPD_TLR" CHAR(7) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CMTINT" ADD CONSTRAINT "PB_CMTINT_PK01" PRIMARY KEY ("PBC_BK", "PBC_CD", "PBC_CCY", "PBC_SDT")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FAMLIY_ACC"  ( "PFA_CSTNO" CHAR(10) NOT NULL , "PFA_ACCNO" VARCHAR(32) NOT NULL , "PFA_HLDNAME" VARCHAR(60) , "PFA_MOBILE" CHAR(11) , "PFA_BANKTYPE" CHAR(3) , "PFA_BANKNAME" VARCHAR(60) , "PFA_SELF" CHAR(1) , "PFA_CARDTYP" CHAR(1) , "PFA_QRYSTT" CHAR(1) , "PFA_STT" CHAR(1) , "PFA_ALIAS" VARCHAR(60) , "PFA_MAINCARD" CHAR(1) WITH DEFAULT '0' ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FAMLIY_ACC" ADD CONSTRAINT "PB_FAMLIY_ACC_PK01" PRIMARY KEY ("PFA_CSTNO", "PFA_ACCNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FAMLIY_ACC_IDX1" ON "PBANK   "."PB_FAMLIY_ACC" ("PFA_CSTNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FAMLIY_ACC_IDX2" ON "PBANK   "."PB_FAMLIY_ACC" ("PFA_ACCNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FINACING_INF"  ( "PFI_SEQ" VARCHAR(20) NOT NULL , "PFI_CSTNO" CHAR(10) NOT NULL , "PFI_DATE" CHAR(8) , "PFI_AMT" DECIMAL(16,2) , "PFI_FLAG" CHAR(1) , "PFI_CLASS" CHAR(4) , "PFI_TYPE" CHAR(5) , "PFI_BOOKDATE" CHAR(8) , "PFI_REMARK" VARCHAR(80) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FINACING_INF" ADD CONSTRAINT "PB_FINACING_PK01" PRIMARY KEY ("PFI_SEQ")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FINACING_IDX1" ON "PBANK   "."PB_FINACING_INF" ("PFI_CSTNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FINACING_IDX2" ON "PBANK   "."PB_FINACING_INF" ("PFI_DATE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_PRODPAR"  ( "PDP_PRODUCTNO" VARCHAR(10) NOT NULL , "PDP_PRODUCTNAME" VARCHAR(80) NOT NULL , "PDP_TRADETYPE" CHAR(1) , "PDP_PRODUCTTYPE" VARCHAR(3) , "PDP_CURRTYPE" CHAR(3) , "PDP_CASHFLAG" CHAR(1) , "PDP_INVESTTERM" VARCHAR(4) , "PDP_INVESTSTARTSUM" DECIMAL(16,2) , "PDP_FIRSTINVESTSTARTSUM" DECIMAL(16,2) , "PDP_SELLSTATUS" CHAR(1) , "PDP_FUNDSTARTDATE" VARCHAR(8) , "PDP_FUNDENDDATE" VARCHAR(8) , "PDP_INVESTSTARTDATE" VARCHAR(8) , "PDP_INVESTENDDATE" VARCHAR(8) , "PDP_STARTDAY" VARCHAR(8) , "PDP_WORKDATE" VARCHAR(8) , "PDP_INCREASEAMT" DECIMAL(16,2) , "PDP_PRODUCTRISKLEVEL" CHAR(2) , "PDP_SELLSTARTDATE" VARCHAR(8) , "PDP_SELLENDDATE" VARCHAR(8) , "PDP_MAXRATIO" DECIMAL(9,4) , "PDP_MINRATIO" DECIMAL(9,4) , "PDP_INCOME" VARCHAR(50) , "PDP_NETFLAG" CHAR(1) , "PDP_DELFLAG" CHAR(1) , "PDP_AIMCUST" VARCHAR(10) , "PDP_TARGETOBJECT" VARCHAR(200) , "PDP_NOCUSTSUM" DECIMAL(16,2) , "PDP_LIMFLAG" CHAR(1) , "PDP_SUBSFLAG" CHAR(1) , "PDP_PURCHASEFLAG" CHAR(1) , "PDP_FEEFLAG" CHAR(1) , "PDP_NEWFLAG" CHAR(1) , "PDP_RECOMMENDFLAG" CHAR(1) , "PDP_HOTFLAG" CHAR(1) , "PDP_MANAGESHOWFLAG" CHAR(1) , "PDP_INVESTEXPERIENCE" CHAR(1) , "PDP_CHANNELSELLFLAG" CHAR(1) , "PDP_MBANKSELLFLAG" CHAR(1) , "PDP_BANKSHOWFLAG" CHAR(1) WITH DEFAULT '0' , "PDP_INCOMETYPE" CHAR(1) , "PDP_SHAREDETAIL" CHAR(1) , "PDP_CUSTGROUPSIGNFLAG" CHAR(1) WITH DEFAULT '0' , "PDP_CUSTOMGROUP" VARCHAR(10) , "PDP_TAFLAG" VARCHAR(20) , "PDP_SIGNFLAG" CHAR(1) , "PDP_COFLAG" CHAR(1) WITH DEFAULT '1' , "PDP_COSELLSUM" DECIMAL(16,2) , "PDP_ZHTLFLAG" CHAR(1) , "PDP_CYCLEDAY" VARCHAR(3) , "PDP_IMPAWN" CHAR(1) , "PDP_FRIFLAG" CHAR(1) WITH DEFAULT '1' ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_PRODPAR" ADD CONSTRAINT "PB_PRODPAR_PK01" PRIMARY KEY ("PDP_PRODUCTNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_PRODPAR_IDX1" ON "PBANK   "."PB_PRODPAR" ("PDP_SELLENDDATE" ASC, "PDP_BANKSHOWFLAG" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_PRODPAR_IDX2" ON "PBANK   "."PB_PRODPAR" ("PDP_CHANNELSELLFLAG" ASC, "PDP_NETFLAG" ASC, "PDP_PRODUCTTYPE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_PRODPAR_IDX3" ON "PBANK   "."PB_PRODPAR" ("PDP_MBANKSELLFLAG" ASC, "PDP_CURRTYPE" ASC, "PDP_TRADETYPE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_PRO_BANKINFO"  ( "PPB_PRODUCTNO" VARCHAR(10) NOT NULL , "PPB_BKNO" VARCHAR(6) NOT NULL , "PPB_SELLSTATUS" CHAR(1) , "PPB_SELLAMT" DECIMAL(16,2) WITH DEFAULT 9999999999999.99 , "PPB_UPDATETIME" VARCHAR(14) , "PPB_KEEPAMT" DECIMAL(16,2) WITH DEFAULT 9999999999999.99 ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_PRO_BANKINFO" ADD CONSTRAINT "PB_PRODPAR_PK01" PRIMARY KEY ("PPB_PRODUCTNO", "PPB_BKNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_PRO_BKINF_IDX1" ON "PBANK   "."PB_PRO_BANKINFO" ("PPB_SELLAMT" ASC, "PPB_KEEPAMT" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_PRO_BKINF_IDX2" ON "PBANK   "."PB_PRO_BANKINFO" ("PPB_BKNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_METAL_IMAGE"  ( "PMI_PRODID" VARCHAR(40) NOT NULL , "PMI_PRODNAME" VARCHAR(40) NOT NULL , "PMI_IMAGENAME" VARCHAR(300) NOT NULL , "PMI_IMAGEPATH" VARCHAR(1500) , "PMI_STARTDATE" VARCHAR(8) , "PMI_ENDDATE" VARCHAR(8) , "PMI_LASTMODDT" VARCHAR(14) , "PMI_FLASHNAME" VARCHAR(60) , "PMI_FLASHPATH" VARCHAR(300) ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_METAL_IMAGE" ADD PRIMARY KEY ("PMI_PRODID")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUNDORDER"  ( "PFDR_FUNDCODE" VARCHAR(24) NOT NULL , "PFDR_SEQNO" VARCHAR(3) , "PFDR_FUNDTYPE" CHAR(1) NOT NULL , "PFDR_FUNDNAME" VARCHAR(40) , "PFDR_SETDATE" VARCHAR(14) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUNDORDER" ADD CONSTRAINT "PB_FUNDORDER_PK01" PRIMARY KEY ("PFDR_FUNDCODE", "PFDR_FUNDTYPE")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FUNDORDER_IDX1" ON "PBANK   "."PB_FUNDORDER" ("PFDR_FUNDTYPE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_WODEZTC_LOG"  ( "PWL_LOGNO" VARCHAR(20) NOT NULL , "PWL_LOGTIM" VARCHAR(14) , "PWL_LOGTYPE" CHAR(1) , "PWL_CORECSTNO" VARCHAR(30) , "PWL_CARDNO" VARCHAR(30) , "PWL_WDCARDNO" VARCHAR(30) , "PWL_CSTNAME" VARCHAR(30) , "PWL_TRANCOD" VARCHAR(6) , "PWL_PRODCOD" VARCHAR(6) , "PWL_CHANNEL" CHAR(1) , "PWL_STATE" CHAR(1) , "PWL_FLAG" CHAR(1) , "PWL_EACCFLAG" CHAR(1) ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_WODEZTC_LOG" ADD CONSTRAINT "PB_WDZTC_LOG_PK01" PRIMARY KEY ("PWL_LOGNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_ORG_BANKINFO"  ( "POB_DEPTNO" CHAR(6) NOT NULL , "POB_ACT_DATE" CHAR(8) , "POB_INACT_DATE" CHAR(8) , "POB_ORG_NAME" CHAR(36) NOT NULL , "POB_ORG_NAME_ADDR" CHAR(50) , "POB_ORG_ABBR_NAME" CHAR(2) , "POB_ORG_LEVEL" CHAR(1) , "POB_ORG_CLS" CHAR(1) , "POB_ORG_TYPE" CHAR(1) , "POB_ORG_BK" CHAR(6) NOT NULL , "POB_ORG_SUB_BK" CHAR(6) , "POB_ORG_ADM_MODE" CHAR(1) , "POB_ORG_SUPER_BR" CHAR(6) , "POB_DIFF_REG" CHAR(1) , "POB_MAX_LVL" CHAR(1) , "POB_OPEN_ACID" CHAR(6) , "POB_FX_BUSI" CHAR(2) , "POB_FX_CORP" CHAR(1) , "POB_PAYMENT_ID" CHAR(12) , "POB_TAX_BR" CHAR(6) , "POB_PL_BR" CHAR(6) , "POB_SVR_ID" CHAR(5) , "POB_SWITCH_IND1" CHAR(1) , "POB_SWITCH_IND2" CHAR(1) , "POB_AUTH_LVL" CHAR(1) , "POB_LINK_MAN" CHAR(18) , "POB_TELEPHONE" CHAR(18) , "POB_UPDATE_DATE" CHAR(8) , "POB_PRE_BR_CCY" CHAR(6) , "POB_CONT_FLAG" CHAR(14) ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_ORG_BANKINFO" ADD CONSTRAINT "PB_ORG_PK01" PRIMARY KEY ("POB_DEPTNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CRPCUSAGR_AREA"  ( "PCAR_PVICODE" VARCHAR(6) NOT NULL , "PCAR_CITYCODE" VARCHAR(6) NOT NULL , "PCAR_PVINAME" VARCHAR(60) NOT NULL , "PCAR_CITYNAME" VARCHAR(60) NOT NULL , "PCAR_CONTYP" CHAR(1) NOT NULL WITH DEFAULT '0' ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CRPCUSAGR_AREA" ADD PRIMARY KEY ("PCAR_PVICODE", "PCAR_CITYCODE", "PCAR_CONTYP")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUND_DERNAV"  ( "PFD_FUNDCODE" VARCHAR(8) NOT NULL , "PFD_W1NAVG" DECIMAL(9,2) , "PFD_W1NAVGR" INTEGER , "PFD_W1NAVGRC" INTEGER , "PFD_W4NAVG" DECIMAL(9,2) , "PFD_W4NAVGR" INTEGER , "PFD_W4NAVGRC" INTEGER , "PFD_W13NAVG" DECIMAL(9,2) , "PFD_W13NAVGR" INTEGER , "PFD_W13NAVGRC" INTEGER , "PFD_W26NAVG" DECIMAL(9,2) , "PFD_W26NAVGR" INTEGER , "PFD_W26NAVGRC" INTEGER , "PFD_W52NAVG" DECIMAL(9,2) , "PFD_W52NAVGR" INTEGER , "PFD_W52NAVGRC" INTEGER , "PFD_YTDAVG" DECIMAL(9,2) , "PFD_YTDAVGR" INTEGER , "PFD_YTDAVGRC" INTEGER , "PFD_TMSTAMP" CHAR(8) ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUND_DERNAV" ADD CONSTRAINT "PFD_DERNAV_PK01" PRIMARY KEY ("PFD_FUNDCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUND_PROFILE"  ( "PFP_FUNDCODE" VARCHAR(8) NOT NULL , "PFP_FUNDNAME" VARCHAR(50) , "PFP_FUNDTYPE" VARCHAR(8) , "PFP_COMPANYCODE" VARCHAR(8) , "PFP_COMPANYNAME" VARCHAR(200) , "PFP_STYPE" CHAR(3) NOT NULL ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUND_PROFILE" ADD CONSTRAINT "PFD_PROFILE_PK01" PRIMARY KEY ("PFP_FUNDCODE", "PFP_STYPE")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."FUND_PROFILE_IDX1" ON "PBANK   "."PB_FUND_PROFILE" ("PFP_FUNDTYPE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."FUND_PROFILE_IDX2" ON "PBANK   "."PB_FUND_PROFILE" ("PFP_COMPANYCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."FUND_PROFILE_IDX3" ON "PBANK   "."PB_FUND_PROFILE" ("PFP_FUNDCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUND_SYMBOL"  ( "PFS_FUNDCODE" VARCHAR(8) NOT NULL , "PFS_SYMBOL_TYPE" CHAR(2) NOT NULL , "PFS_SYMBOL" VARCHAR(20) NOT NULL ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUND_SYMBOL" ADD CONSTRAINT "PB_FDSYMBOL_PK01" PRIMARY KEY ("PFS_FUNDCODE", "PFS_SYMBOL_TYPE")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."FUND_SYMBOL_IDX1" ON "PBANK   "."PB_FUND_SYMBOL" ("PFS_SYMBOL" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUND_NAVCUR"  ( "PFN_FLOWNO" INTEGER NOT NULL , "PFN_PUBDATE" CHAR(8) , "PFN_FUNDCODE" VARCHAR(8) , "PFN_BEGINDATE" CHAR(8) , "PFN_ENDDATE" CHAR(8) , "PFN_FLAG" INTEGER , "PFN_NETVAL" DECIMAL(18,4) , "PFN_UPRATE" DECIMAL(9,4) , "PFN_RATE" DECIMAL(9,4) , "PFN_WEEKRATE" DECIMAL(9,4) , "PFN_REMARK" VARCHAR(200) ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUND_NAVCUR" ADD CONSTRAINT "PFN_NAVCUR_PK01" PRIMARY KEY ("PFN_FLOWNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."FUND_NAVCUR_IDX1" ON "PBANK   "."PB_FUND_NAVCUR" ("PFN_PUBDATE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUND_AVG"  ( "PFA_TYPE" CHAR(1) NOT NULL , "PFA_CODE" VARCHAR(8) NOT NULL , "PFA_W1NAVG" DECIMAL(9,2) , "PFA_W4NAVG" DECIMAL(9,2) , "PFA_W13NAVG" DECIMAL(9,2) , "PFA_W26NAVG" DECIMAL(9,2) , "PFA_W52NAVG" DECIMAL(9,2) , "PFA_YTDAVG" DECIMAL(9,2) ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUND_AVG" ADD CONSTRAINT "PFA_PROFILE_PK01" PRIMARY KEY ("PFA_TYPE", "PFA_CODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_TRNFLW_CHECK"  ( "PTC_TRNFLW" VARCHAR(20) NOT NULL , "PTC_CSTNO" VARCHAR(30) NOT NULL , "PTC_DEALDATE" CHAR(14) , "PTC_PAYCARDNO" VARCHAR(30) , "PTC_RCVCARDNO" VARCHAR(30) , "PTC_RCVNAME" VARCHAR(60) , "PTC_TRANKIND" CHAR(1) , "PTC_TRANAMT" DECIMAL(15,2) , "PTC_TRANFEE" DECIMAL(15,2) , "PTC_STT" CHAR(2) NOT NULL , "PTC_ACCDATE" CHAR(8) , "PTC_CHKDATE" CHAR(8) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_TRNFLW_CHECK" ADD CONSTRAINT "PTF_CHECK_PK01" PRIMARY KEY ("PTC_TRNFLW")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_TRNFLW_CHK_IDX1" ON "PBANK   "."PB_TRNFLW_CHECK" ("PTC_CHKDATE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_GOLD_TIMINV_PRICE"  ( "PGTP_DATE" VARCHAR(8) NOT NULL , "PGTP_VARIETY" VARCHAR(2) NOT NULL , "PGTP_PRICE" VARCHAR(20) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_GOLD_TIMINV_PRICE" ADD CONSTRAINT "PGTP_PROFILE_PK01" PRIMARY KEY ("PGTP_DATE", "PGTP_VARIETY")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_QUEUE_NOTES_INFO"  ( "PQNI_BRNO" VARCHAR(6) , "PQNI_NODNO" VARCHAR(6) , "PQNI_OPENFLG" CHAR(1) , "PQNI_DATETYP" CHAR(1) , "PQNI_SPDATE" VARCHAR(8) , "PQNI_BUSNO" CHAR(1) , "PQNI_AMBEGIN" VARCHAR(4) , "PQNI_AMEND" VARCHAR(4) , "PQNI_PMBEGIN" VARCHAR(4) , "PQNI_PMEND" VARCHAR(4) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_QUE_NOTES_IDX1" ON "PBANK   "."PB_QUEUE_NOTES_INFO" ("PQNI_OPENFLG" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_QUE_NOTES_IDX2" ON "PBANK   "."PB_QUEUE_NOTES_INFO" ("PQNI_NODNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CORE_HOLIDAY_INFO"  ( "PCHI_YEARS" VARCHAR(4) NOT NULL , "PCHI_NODNO" VARCHAR(3) NOT NULL , "PCHI_MONTH1" VARCHAR(31) , "PCHI_MONTH2" VARCHAR(31) , "PCHI_MONTH3" VARCHAR(31) , "PCHI_MONTH4" VARCHAR(31) , "PCHI_MONTH5" VARCHAR(31) , "PCHI_MONTH6" VARCHAR(31) , "PCHI_MONTH7" VARCHAR(31) , "PCHI_MONTH8" VARCHAR(31) , "PCHI_MONTH9" VARCHAR(31) , "PCHI_MONTH10" VARCHAR(31) , "PCHI_MONTH11" VARCHAR(31) , "PCHI_MONTH12" VARCHAR(31) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CORE_HOLIDAY_INFO" ADD CONSTRAINT "PB_CORE_HOL_PK01" PRIMARY KEY ("PCHI_YEARS", "PCHI_NODNO")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CORE_HOL_IDX1" ON "PBANK   "."PB_CORE_HOLIDAY_INFO" ("PCHI_YEARS" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_WELCOME_PAGE"  ( "PWP_PATH" VARCHAR(200) NOT NULL , "PWP_TYPE" CHAR(1) NOT NULL , "PWP_ACTIVE" CHAR(1) , "PWP_ENDDATE" CHAR(8) , "PWP_ROLELIST" VARCHAR(100) , "PWP_REMARK" VARCHAR(100) , "PWP_UPLOADDATE" CHAR(8) , "PWP_BAK1" VARCHAR(50) , "PWP_BAK2" VARCHAR(50) , "PWP_BAK3" VARCHAR(50) , "PWP_BAK4" VARCHAR(50) , "PWP_BAK5" VARCHAR(50) ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_WELCOME_PAGE" ADD CONSTRAINT "PWP_PATH_PK01" PRIMARY KEY ("PWP_PATH")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_REPORT_MAINTAIN"  ( "PRM_PRODUCTNO" VARCHAR(10) NOT NULL , "PRM_MAINTAINTIME" VARCHAR(8) NOT NULL , "PRM_PROREPORT" VARCHAR(60) , "PRM_STATUS" VARCHAR(2) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_REPORT_MAINTAIN" ADD CONSTRAINT "PB_REPORT_PK01" PRIMARY KEY ("PRM_PRODUCTNO", "PRM_MAINTAINTIME")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_QRYREMIT_TEMPLATE"  ( "KJHK_TEMPLATEID" VARCHAR(50) NOT NULL , "KJHK_TEMPLATENAME" VARCHAR(50) NOT NULL , "KJHK_CTFNO" VARCHAR(50) NOT NULL , "KJHK_REMITTYPE" VARCHAR(1) , "KJHK_CRYTYPE" VARCHAR(3) , "KJHK_TRANAMT" VARCHAR(15) , "KJHK_PAYACC" VARCHAR(50) , "KJHK_PAYADDRESS" VARCHAR(146) , "KJHK_PHONE" VARCHAR(15) , "KJHK_RCVNAME" VARCHAR(10) , "KJHK_RCVADDRESS" VARCHAR(146) , "KJHK_RCVTYPE" VARCHAR(20) , "KJHK_RCVACC" VARCHAR(34) , "KJHK_RCVAGENT" VARCHAR(146) , "KJHK_RCVOPENACNO" VARCHAR(34) , "KJHK_RCVSWIFT1" VARCHAR(11) , "KJHK_RCVBRANCH" VARCHAR(146) , "KJHK_COUNTRYNAMECODE" VARCHAR(3) , "KJHK_REM" VARCHAR(220) , "KJHK_FEETYPE" VARCHAR(1) , "KJHK_ISALLSUM" VARCHAR(2) , "KJHK_PAYACCCRY" VARCHAR(3) , "KJHK_SUBACC" VARCHAR(50) , "KJHK_TRADECODE" VARCHAR(6) , "KJHK_BUZREM" VARCHAR(50) ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_QRYREMIT_TEMPLATE" ADD PRIMARY KEY ("KJHK_TEMPLATEID")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."KJHK_CTFNO_IDX" ON "PBANK   "."PB_QRYREMIT_TEMPLATE" ("KJHK_CTFNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_TIPORGINF"  ( "PT_ORGCOD" VARCHAR(12) NOT NULL , "PT_ORGNAM" VARCHAR(60) NOT NULL , "PT_ORGTYP" CHAR(1) NOT NULL , "PT_UTRECD" CHAR(10) WITH DEFAULT ' ' , "PT_NODCOD" CHAR(12) NOT NULL , "PT_PROORG" CHAR(12) WITH DEFAULT ' ' , "PT_CITYORG" CHAR(12) WITH DEFAULT ' ' , "PT_CNTYORG" CHAR(12) WITH DEFAULT ' ' , "PT_ADDRESS" VARCHAR(80) WITH DEFAULT ' ' , "PT_PSTCOD" CHAR(6) WITH DEFAULT ' ' , "PT_PERNAM" CHAR(10) WITH DEFAULT ' ' , "PT_PERPHN" CHAR(15) WITH DEFAULT ' ' , "PT_PERMBL" CHAR(11) WITH DEFAULT ' ' , "PT_EMAIL" VARCHAR(60) WITH DEFAULT ' ' , "PT_EFFDAT" CHAR(8) NOT NULL , "PT_UPAREA" CHAR(10) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_TIPORGINF" ADD PRIMARY KEY ("PT_ORGCOD")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_COCRDSCTINF"  ( "PCCS_CARDSECT" VARCHAR(10) NOT NULL , "PCCS_CORPID" VARCHAR(5) NOT NULL , "PCCS_CPKEYINDEX" VARCHAR(7) NOT NULL , "PCCS_ROLE" VARCHAR(2) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_COCRDSCTINF" ADD CONSTRAINT "PB_COCRDSCT_PK01" PRIMARY KEY ("PCCS_CARDSECT")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CARDSEQ"  ( "PCO_CARDNO" VARCHAR(50) NOT NULL , "PCO_CSTNO" VARCHAR(20) NOT NULL , "PCO_CARDTYPE" CHAR(2) , "PCO_BANKTYPE" CHAR(1) , "PCO_SEQ" INTEGER WITH DEFAULT 0 ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CARDSEQ_IDX1" ON "PBANK   "."PB_CARDSEQ" ("PCO_CSTNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_CARDSEQ_IDX2" ON "PBANK   "."PB_CARDSEQ" ("PCO_CARDNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUNDCLASS"  ( "PFC_FUNDCODE" VARCHAR(6) NOT NULL , "PFC_SHARECLASS" CHAR(1) NOT NULL , "PFC_CURRENCYTYPE" CHAR(3) NOT NULL , "PFC_CURRFLAG" CHAR(1) NOT NULL , "PFC_FUNDCLASS" CHAR(2) NOT NULL , "PFC_RESV1" VARCHAR(10) , "PFC_GETCIF" CHAR(1) WITH DEFAULT '0' ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_FUNDCLASS" ADD PRIMARY KEY ("PFC_FUNDCODE")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FUNDCLASS_IDX2" ON "PBANK   "."PB_FUNDCLASS" ("PFC_SHARECLASS" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_FUND_PROMPT"  ( "PFP_REGCODE" CHAR(2) NOT NULL , "PFP_FUNDCODE" CHAR(6) NOT NULL , "PFP_SHARECLASS" CHAR(1) NOT NULL , "PFP_AMNTVOL" DECIMAL(16,2) NOT NULL , "PFP_CHANNELTYPE" CHAR(1) NOT NULL , "PFP_BNSCODE" CHAR(3) NOT NULL , "PFP_CUSTGRADE" CHAR(1) NOT NULL , "PFP_CHARGEFLAG" CHAR(1) NOT NULL , "PFP_PERFEE" DECIMAL(10,2) NOT NULL , "PFP_RATE" DECIMAL(9,8) NOT NULL , "PFP_DISRATE" DECIMAL(9,8) NOT NULL ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FUNDPROMPT_IDX1" ON "PBANK   "."PB_FUND_PROMPT" ("PFP_REGCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FUNDPROMPT_IDX2" ON "PBANK   "."PB_FUND_PROMPT" ("PFP_FUNDCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FUNDPROMPT_IDX3" ON "PBANK   "."PB_FUND_PROMPT" ("PFP_BNSCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FUNDPROMPT_IDX4" ON "PBANK   "."PB_FUND_PROMPT" ("PFP_CHANNELTYPE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_FUNDPROMPT_IDX5" ON "PBANK   "."PB_FUND_PROMPT" ("PFP_AMNTVOL" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_RCVADDR"  ( "PSR_CSTNO" VARCHAR(10) NOT NULL , "PSR_PRVNO" CHAR(3) NOT NULL , "PSR_CITYNO" CHAR(4) NOT NULL , "PSR_DISTRICTNO" CHAR(6) NOT NULL , "PSR_ADDRESS" VARCHAR(60) NOT NULL , "PSR_ZIPCODE" VARCHAR(6) NOT NULL , "PSR_PHONE" VARCHAR(20) , "PSR_MOBILE" VARCHAR(20) , "PSR_NAME" VARCHAR(60) NOT NULL , "PSR_DEFAULT" CHAR(1) , "PSR_UPDTIME" VARCHAR(14) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_RCVADDR" ADD CONSTRAINT "PB_RCVADDR_PK01" PRIMARY KEY ("PSR_CSTNO", "PSR_PRVNO", "PSR_CITYNO", "PSR_DISTRICTNO", "PSR_ADDRESS")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_RCVADDR_IDX1" ON "PBANK   "."PB_RCVADDR" ("PSR_CSTNO" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_CUSTINFMODIFY"  ( "PCM_CSTNO" VARCHAR(10) NOT NULL , "PCM_DELNODE" VARCHAR(300) , "PCM_DAYMOOD" VARCHAR(100) , "PCM_LASTTIME" VARCHAR(14) ) IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_CUSTINFMODIFY" ADD PRIMARY KEY ("PCM_CSTNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_MARKETINGNEWS"  ( "PMN_UPLOADTIME" VARCHAR(14) NOT NULL , "PMN_TITLE" VARCHAR(100) NOT NULL , "PMN_VALIDDATE" VARCHAR(8) , "PMN_ENDDATE" VARCHAR(8) , "PMN_SCOPE" VARCHAR(3) , "PMN_SCOPENAME" VARCHAR(40) , "PMN_URLOUT" CHAR(1) , "PMN_PRODUCTURL" VARCHAR(800) , "PMN_CONTENT" VARCHAR(800) , "PMN_ISTOP" CHAR(1) , "PMN_OPERATENO" VARCHAR(10) , "PMN_LANGUAGE" CHAR(1) NOT NULL WITH DEFAULT '1' ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_MARKETINGNEWS" ADD CONSTRAINT "PB_MARKETING_PK01" PRIMARY KEY ("PMN_UPLOADTIME")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_MARKETNEWS_IDX" ON "PBANK   "."PB_MARKETINGNEWS" ("PMN_ENDDATE" ASC, "PMN_SCOPE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_ROSTER"  ( "PRST_ID" VARCHAR(50) FOR BIT DATA NOT NULL , "PRST_ROSTER_TYPE" VARCHAR(10) NOT NULL , "PRST_ROSTER_VALSTR" VARCHAR(50) NOT NULL , "PRST_ROSTER_VALEND" VARCHAR(50) NOT NULL , "PRST_NOTBEFORE" VARCHAR(30) NOT NULL , "PRST_NOTAFTER" VARCHAR(30) NOT NULL , "PRST_PRESERVE1" VARCHAR(60) , "PRST_PRESERVE2" VARCHAR(100) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_ROSTER" ADD CONSTRAINT "PRST_PROFILE_PK01" PRIMARY KEY ("PRST_ID")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_ROSTER_IDX1" ON "PBANK   "."PB_ROSTER" ("PRST_ROSTER_TYPE" ASC, "PRST_ROSTER_VALSTR" ASC, "PRST_ROSTER_VALEND" ASC, "PRST_NOTBEFORE" ASC, "PRST_NOTAFTER" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_BRANCH_INFO"  ( "PBI_SERIAL_ID" INTEGER NOT NULL , "PBI_MARKING_TYPE" VARCHAR(20) , "PBI_BRANCH_NO" VARCHAR(20) , "PBI_EXCHANGE_NO" VARCHAR(20) , "PBI_BRANCH_NAME" VARCHAR(100) , "PBI_BRANCH_PRE_NAME" VARCHAR(100) , "PBI_BRANCH_ADDR" VARCHAR(100) , "PBI_BRANCH_PRE_ADDR" VARCHAR(100) , "PBI_ZIP_CODE" VARCHAR(10) , "PBI_BUS_INFO" VARCHAR(100) , "PBI_SYMBOL_BUILDING" VARCHAR(100) , "PBI_OPENING_HOURS" VARCHAR(100) , "PBI_PUBLIC_PHONE" VARCHAR(50) , "PBI_PRIVATE_PHONE" VARCHAR(50) , "PBI_UPPER_ORG" VARCHAR(20) , "PBI_PROVINCE_BRANCH" VARCHAR(20) , "PBI_BELONG_BRANCH" VARCHAR(20) , "PBI_CITY_BRANCH" VARCHAR(30) , "PBI_ORG_TYPE" VARCHAR(20) , "PBI_BRANCH_ATTR" VARCHAR(2) , "PBI_WTO" VARCHAR(2) , "PBI_PBANK" VARCHAR(2) , "PBI_BRANCH_PRINCIPAL" VARCHAR(20) , "PBI_LONGITUDE" VARCHAR(20) , "PBI_LATITUDE" VARCHAR(20) , "PBI_PHOTO_URL" VARCHAR(100) , "PBI_BUSINESS_STATE" VARCHAR(10) , "PBI_RENEW_DATE" VARCHAR(8) , "PBI_RENEW_TIME" VARCHAR(6) , "PBI_CLOSEING_DATE" VARCHAR(8) , "PBI_BRANCH_STATE" VARCHAR(10) , "PBI_DISPLAY_CLIENT" VARCHAR(2) , "PBI_AREA_CODE" VARCHAR(20) , "PBI_AREA_NAME" VARCHAR(20) , "PBI_REMARK" VARCHAR(100) , "PBI_BUSINESS_INFO" VARCHAR(100) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_BRANCH_INFO" ADD CONSTRAINT "PB_BINFO_PK01" PRIMARY KEY ("PBI_SERIAL_ID")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_GOLD_PRODUCT_INFO"  ( "PGPI_PRDCOD" VARCHAR(8) NOT NULL , "PGPI_PRDNAM" VARCHAR(60) NOT NULL , "PGPI_ENTNO" VARCHAR(2) NOT NULL , "PGPI_ENTNAM" VARCHAR(60) NOT NULL , "PGPI_SHOUR" VARCHAR(6) , "PGPI_EHOUR" VARCHAR(6) , "PGPI_YDGOLD" VARCHAR(2) , "PGPI_PRDTYP" VARCHAR(20) , "PGPI_PRDTYPNAME" VARCHAR(60) , "PGPI_MER" VARCHAR(20) , "PGPI_WEIGHT" DECIMAL(13,2) , "PGPI_SPEC" VARCHAR(10) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_GOLD_PRODUCT_INFO" ADD CONSTRAINT "PGPI_PROFILE_PK01" PRIMARY KEY ("PGPI_PRDCOD")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."PB_GOLD_PRODUCT_PRICE"  ( "PGPP_PRDCOD" VARCHAR(8) NOT NULL , "PGPP_AREANO" VARCHAR(10) NOT NULL , "PGPP_EXCPRC" DECIMAL(13,2) , "PGPP_DISFLAG" VARCHAR(1) NOT NULL WITH DEFAULT '0' ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."PB_GOLD_PRODUCT_PRICE" ADD CONSTRAINT "PGPP_PROFILE_PK01" PRIMARY KEY ("PGPP_PRDCOD", "PGPP_AREANO")
DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE TABLE PB_MQT_GOLD_PRODUCT (PMGP_PRDCOD, PMGP_PRDNAM, PMGP_ENTNO, PMGP_ENTNAM, PMGP_SHOUR, PMGP_EHOUR, PMGP_YDGOLD, PMGP_PRDTYP, PMGP_PRDTYPNAME, PMGP_MER, PMGP_WEIGHT, PMGP_SPEC, PGPP_PRDCOD, PGPP_AREANO, PGPP_EXCPRC, PGPP_DISFLAG, PMI_PRODID, PMI_IMAGENAME, PMI_FLASHNAME) AS ( SELECT PB_GOLD_PRODUCT_INFO.*, PGPP_PRDCOD, PGPP_AREANO, PGPP_EXCPRC, PGPP_DISFLAG, PMI_PRODID, PMI_IMAGENAME, PMI_FLASHNAME FROM PB_GOLD_PRODUCT_INFO, PB_GOLD_PRODUCT_PRICE, PB_METAL_IMAGE WHERE PGPI_PRDCOD = PGPP_PRDCOD AND PGPI_PRDCOD = PMI_PRODID ) DATA INITIALLY DEFERRED REFRESH IMMEDIATE ENABLE QUERY OPTIMIZATION MAINTAINED BY SYSTEM IN "PBANKUSR1" 
DB20000I  SQL 命令成功完成。

REFRESH TABLE "PBANK   "."PB_MQT_GOLD_PRODUCT"
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."PB_GOLD_PROD_IDX1" ON "PBANK   "."PB_MQT_GOLD_PRODUCT" ("PGPP_AREANO" ASC, "PMGP_SHOUR" ASC, "PMGP_EHOUR" ASC, "PMGP_YDGOLD" ASC, "PMGP_PRDCOD" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."MB_CSTINF"  ( "MIF_USERCODE" CHAR(16) NOT NULL , "MIF_CSTLEVEL" CHAR(2) NOT NULL , "MIF_MOBILENO" CHAR(11) NOT NULL , "MIF_USERNAME" VARCHAR(20) , "MIF_PASSWORD" VARCHAR(60) NOT NULL , "MIF_CSTNO" VARCHAR(10) NOT NULL , "MIF_CHARGEMODE" CHAR(2) NOT NULL , "MIF_AGREEMENTVER" VARCHAR(6) NOT NULL , "MIF_LGNTIMES" INTEGER NOT NULL , "MIF_LASTLGNTIM" CHAR(14) , "MIF_STT" CHAR(1) NOT NULL , "MIF_OPENTYP" CHAR(1) NOT NULL , "MIF_OPENTELLER" VARCHAR(10) NOT NULL , "MIF_OPENBRANCHNO" VARCHAR(6) , "MIF_OPENNETNO" VARCHAR(6) , "MIF_OPENDATE" VARCHAR(8) , "MIF_CHGTELLER" VARCHAR(10) , "MIF_CHGBRANCHNO" VARCHAR(6) , "MIF_CHGNETNO" VARCHAR(6) , "MIF_LASTCHGTIM" VARCHAR(14) ) IN "PBANKUSR2" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."MB_CSTINF" ADD PRIMARY KEY ("MIF_USERCODE")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."MB_CSTINF_IDX1" ON "PBANK   "."MB_CSTINF" ("MIF_MOBILENO" ASC, "MIF_STT" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."MB_CSTINF_IDX2" ON "PBANK   "."MB_CSTINF" ("MIF_CSTNO" ASC, "MIF_STT" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."MB_LOGFAIL"  ( "MLF_CARDNO" VARCHAR(30) NOT NULL , "MLF_USERCODE" CHAR(16) NOT NULL , "MLF_TIMES" INTEGER , "MLF_UPDTIM" VARCHAR(14) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."MB_LOGFAIL" ADD PRIMARY KEY ("MLF_CARDNO", "MLF_USERCODE")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."MB_SOFTDOWNCODE"  ( "MDC_DOWNCODE" VARCHAR(16) NOT NULL , "MDC_USERCODE" CHAR(16) NOT NULL , "MDC_VALIDDATETIMES" CHAR(14) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."MB_SOFTDOWNCODE" ADD PRIMARY KEY ("MDC_DOWNCODE")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."MB_SOFTDOWN_IDX1" ON "PBANK   "."MB_SOFTDOWNCODE" ("MDC_USERCODE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."MB_PHONEACCT"  ( "MPA_CSTNO" VARCHAR(10) NOT NULL , "MPA_CARDNO" VARCHAR(30) NOT NULL ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."MB_PHONEACCT" ADD PRIMARY KEY ("MPA_CSTNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."MB_EBTELLER"  ( "EBT_BRANCHNO" VARCHAR(6) NOT NULL , "EBT_EBTELLNO" VARCHAR(8) NOT NULL , "EBT_STT" CHAR(1) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."MB_EBTELLER" ADD PRIMARY KEY ("EBT_BRANCHNO", "EBT_EBTELLNO")
DB20000I  SQL 命令成功完成。

CREATE TABLE "PBANK   "."MB_NOTICE"  ( "MN_ID" INTEGER NOT NULL , "MN_TYPE" CHAR(1) NOT NULL , "MN_TARGET" CHAR(1) NOT NULL , "MN_STARTDATE" CHAR(8) NOT NULL , "MN_ENDDATE" CHAR(8) NOT NULL , "MN_TITLE" VARCHAR(60) NOT NULL , "MN_CONTENT" VARCHAR(600) ) IN "PBANKUSR1" INDEX IN "PBANKIND1" 
DB20000I  SQL 命令成功完成。

COMMENT ON TABLE "PBANK   "."MB_NOTICE" IS '鎵嬫満閾惰閫氱煡琛?
DB20000I  SQL 命令成功完成。

COMMENT ON COLUMN "PBANK   "."MB_NOTICE"."MN_CONTENT" IS '閫氱煡鍐呭'
DB20000I  SQL 命令成功完成。

COMMENT ON COLUMN "PBANK   "."MB_NOTICE"."MN_ENDDATE" IS '閫氱煡鎴嚦鏃ユ湡'
DB20000I  SQL 命令成功完成。

COMMENT ON COLUMN "PBANK   "."MB_NOTICE"."MN_ID" IS '閫氱煡搴忓彿'
DB20000I  SQL 命令成功完成。

COMMENT ON COLUMN "PBANK   "."MB_NOTICE"."MN_STARTDATE" IS '閫氱煡鐢熸晥鏃ユ湡'
DB20000I  SQL 命令成功完成。

COMMENT ON COLUMN "PBANK   "."MB_NOTICE"."MN_TARGET" IS '鐩爣瀹㈡埛'
DB20000I  SQL 命令成功完成。

COMMENT ON COLUMN "PBANK   "."MB_NOTICE"."MN_TITLE" IS '閫氱煡鏍囬'
DB20000I  SQL 命令成功完成。

COMMENT ON COLUMN "PBANK   "."MB_NOTICE"."MN_TYPE" IS '閫氱煡绫诲瀷'
DB20000I  SQL 命令成功完成。

ALTER TABLE "PBANK   "."MB_NOTICE" ADD PRIMARY KEY ("MN_ID")
DB20000I  SQL 命令成功完成。

CREATE INDEX "PBANK   "."MB_NOTICE_IDX1" ON "PBANK   "."MB_NOTICE" ("MN_STARTDATE" ASC, "MN_ENDDATE" ASC) COMPRESS NO ALLOW REVERSE SCANS
DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

create function FUNC_DATETIME_FMT(TS timestamp, fmt varchar(20))
returns varchar(50)
return
with tmp (dd,mm,yyyy,hh,mi,ss,nnnnnn) as
(
select
substr( digits (day(TS)),9),
substr( digits (month(TS)),9) ,
rtrim(char(year(TS))) ,
substr( digits (hour(TS)),9),
substr( digits (minute(TS)),9),
substr( digits (second(TS)),9),
rtrim(char(microsecond(TS)))
from sysibm.sysdummy1
)
select
case fmt
when 'yyyymmdd'
then yyyy || mm || dd
when 'yyyymmddhhmiss'
then yyyy || mm || dd || hh ||  mi || ss
when 'mm/dd/yyyy'
then mm || '/' || dd || '/' || yyyy
when 'yyyy/dd/mm hh:mi:ss'
then yyyy || '/' || mm || '/' || dd || ' ' || 
hh || ':' || mi || ':' || ss
when 'nnnnnn'
then nnnnnn
else
'date format ' || coalesce(fmt,' ') || 
' not recognized.'
end
from tmp
DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

create function FUNC_DATE_CHNFMT(TS timestamp, fmt varchar(20))
returns varchar(50)
return
with tmp (dd,mm,yyyy,hh,mi,ss,nnnnnn) as
(
select
substr( digits (day(TS)),9),
substr( digits (month(TS)),9) ,
rtrim(char(year(TS))) ,
substr( digits (hour(TS)),9),
substr( digits (minute(TS)),9),
substr( digits (second(TS)),9),
rtrim(char(microsecond(TS)))
from sysibm.sysdummy1
)
select
case fmt
when 'yyyy銆€銆€mm銆€銆€dd銆€銆€'
then yyyy || '銆€銆€' || mm || '銆€銆€' || dd || '銆€銆€'
when 'nnnnnn'
then nnnnnn
else
'date format ' || coalesce(fmt,' ') || 
' not recognized.'
end
from tmp
DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CLEAR_MAX_MIN_QUOTE ( 
	OUT PROC_RET_CODE VARCHAR(5)
)
LANGUAGE SQL   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 澶栨眹瀹?澶栨眹琛屾儏鏈€楂樻渶浣庝环鍒犻櫎
-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欱OCOM.chenp
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.16
------------------------------------------------------------------------
BEGIN
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

-- 澶勭悊瀹氬埗姹囩巼淇℃伅
	DELETE FROM PB_EXCMAXMIN;
	COMMIT;
	SET PROC_RET_CODE = '00000';	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FX_INIT_BRANCH_TRANTYPE
(
  OUT PROC_RET_CODE VARCHAR(5)
)
READS SQL DATA 
DYNAMIC RESULT SETS 1

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱澶栨眹瀹濆垵濮嬪寲鍒嗚鍙峰搴斿畾鏈熸椿鏈熷弬鏁板瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛氭棤

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- BRN_TRANTYPE锛氬垎琛屽彿瀵瑰簲浜ゆ槗绫诲瀷缁撴灉闆?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.Dragon
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.09.17
------------------------------------------------------------------------
BEGIN

  -- 鍙栧緱鍒嗚鍙峰搴斾氦鏄撶被鍨嬬粨鏋滈泦
DECLARE BRN_TRANTYPE CURSOR WITH RETURN TO CALLER FOR
	SELECT PBTT_CENTERNO, PBTT_TYPE
	FROM PB_BRNTRSTYP;
  
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
	SET PROC_RET_CODE = '95000';
	ROLLBACK ;
  END;
  
  --鎵撳紑娓告爣
  OPEN BRN_TRANTYPE;

  SET PROC_RET_CODE = '00000';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FXRATE_CUSTM_QRY ( 
	IN IN_CARDNO   		VARCHAR(30),	
	OUT PROC_RET_CODE 	VARCHAR(5),
	OUT O_CUSTM_DATA 	VARCHAR(300),
    OUT O_SHOW_FLAG     VARCHAR(1)
)
READS SQL DATA 
LANGUAGE SQL   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 澶栨眹瀹?姹囩巼瀹氬埗
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO 锛氬崱鍙?
-- 杈撳嚭鍙傛暟锛?-- O_CUSTM_DATA锛氭煡璇㈠嚭鍗″彿瀵瑰簲瀹氬埗鏁版嵁
-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欱OCOM.chenp
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.09
------------------------------------------------------------------------
BEGIN
-- 鏌ヨ澶ч泦涓眹鐜囧畾鍒朵俊鎭?  	DECLARE EXIT HANDLER FOR SQLEXCEPTION
 	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	SELECT PROE_EXCCODE,PROE_SHOWFLAG INTO O_CUSTM_DATA,O_SHOW_FLAG FROM PB_ORDEXC WHERE PROE_CARDNO = IN_CARDNO;
	SET PROC_RET_CODE = '00000';	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FXRATE_CUSTM ( 
	IN IN_CARDNO   		VARCHAR(30),
	IN IN_CUSTM_DATA	VARCHAR(300),
	IN IN_SHOWFLAG		VARCHAR(1),
	OUT PROC_RET_CODE VARCHAR(5)
)
LANGUAGE SQL   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 澶栨眹瀹?姹囩巼瀹氬埗
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO 锛氬崱鍙?-- IN_CUSTM_DATA锛氭眹鐜囨暟鎹?-- IN_SHOWFLAG锛氭樉绀烘柟寮?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欱OCOM.chenp
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.09
------------------------------------------------------------------------
BEGIN
	
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
-- 澶勭悊瀹氬埗姹囩巼淇℃伅
	DELETE FROM PB_ORDEXC WHERE PROE_CARDNO = IN_CARDNO;
	INSERT INTO PB_ORDEXC VALUES(IN_CARDNO,IN_CUSTM_DATA,IN_SHOWFLAG);
	COMMIT;
	SET PROC_RET_CODE = '00000';	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GET_RETAIL_FXRATE ( 	
	OUT PROC_RET_CODE VARCHAR(5)
)
READS SQL DATA 
RESULT SETS	1
LANGUAGE SQL   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 澶栨眹瀹?澶栨眹琛屾儏淇℃伅鑾峰彇

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欱OCOM.chenp
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.10
------------------------------------------------------------------------
BEGIN
	DECLARE CUR_RESULT CURSOR WITH RETURN TO CALLER FOR 
        SELECT PER_BRANCHNO,
                PER_EXCCODE,
                PER_CURBUY,
                PER_CURSALE,
                PER_DAYTOP,
                PER_DAYBTM,
                PER_FLAG,
                PER_UPDTIM 
        FROM PB_EXCRATE ORDER BY PER_BRANCHNO;

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
--鎵撳紑娓告爣
	OPEN CUR_RESULT;
	SET PROC_RET_CODE = '00000';	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_INIT_WAP_IMG ( 	
	OUT PROC_RET_CODE VARCHAR(5)
)
READS SQL DATA 
RESULT SETS	1
LANGUAGE SQL   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- WAP IMG 

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欱OCOM.chenp
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.10
------------------------------------------------------------------------
BEGIN
	DECLARE CUR_RESULT CURSOR WITH RETURN TO CALLER FOR 
        SELECT PROE_EXPWD,
               PROE_IMGFILENAME
         FROM  PB_WAP_EXPWDMAP;
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
       
--鎵撳紑娓告爣
	OPEN CUR_RESULT;
	SET PROC_RET_CODE = '00000';	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_RELOAD_MAX_MIN_QUOTE ( 	
	OUT PROC_RET_CODE VARCHAR(5)
)
READS SQL DATA 
RESULT SETS	1
LANGUAGE SQL   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 澶栨眹瀹?澶栨眹琛屾儏鏈€楂樸€佹渶浣庝环RELOAD

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欱OCOM.chenp
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.10
------------------------------------------------------------------------
BEGIN
	DECLARE CUR_RESULT CURSOR WITH RETURN TO CALLER FOR 
        SELECT PEM_BRN_CODE,
                PEM_MAX_MIN
        FROM PB_EXCMAXMIN;
    
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;        
--鎵撳紑娓告爣
	OPEN CUR_RESULT;
	SET PROC_RET_CODE = '00000';	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPD_MAX_MIN_QUOTE ( 
	IN IN_BRN_CODE   		VARCHAR(10),
	IN IN_MAX_MIN   		VARCHAR(25),
	OUT PROC_RET_CODE VARCHAR(5)
)
LANGUAGE SQL   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 澶栨眹瀹?澶栨眹琛屾儏鏈€楂樻渶浣庝环鎻掑叆
-- 杈撳叆鍙傛暟锛?-- IN_BRN_CODE锛氬垎琛屽彿+ 甯佺瀵?-- IN_MAX_MIN锛氭渶楂樹环+|+鏈€搴曚环

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欱OCOM.chenp
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.16
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;        

-- 澶勭悊瀹氬埗姹囩巼淇℃伅
	INSERT INTO PB_EXCMAXMIN VALUES(IN_BRN_CODE,IN_MAX_MIN);
	COMMIT;
	SET PROC_RET_CODE = '00000';	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_WAP_GET_CUST_INF ( 
	IN IN_MOB_MOBPHONE  VARCHAR(20),	
	OUT PROC_RET_CODE 	VARCHAR(5)
)
READS SQL DATA 
RESULT SETS	1
LANGUAGE SQL   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- WAP鐧婚檰鎺у埗
-- 杈撳叆鍙傛暟锛?-- IN_MOB_MOBPHONE锛氭墜鏈哄彿

-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欱OCOM.chenp
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.09
------------------------------------------------------------------------
BEGIN
	DECLARE CUR_RESULT CURSOR WITH RETURN TO CALLER FOR 
        SELECT MOB_MOBPHONE,
                MOB_CARDNO,
                MOB_CARDALIAS,
                MOB_BUSTYPE,
                MOB_CARDSEQNO
        FROM PB_WAPCUSTINF WHERE MOB_MOBPHONE=IN_MOB_MOBPHONE ORDER BY MOB_CARDSEQNO;
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
--鎵撳紑娓告爣
	OPEN CUR_RESULT;
	SET PROC_RET_CODE = '00000';	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_WAP_SET_CUST_INF ( 
	
	IN IN_MOBPHONE			VARCHAR(20),
	IN IN_CARDNO   			VARCHAR(25),
	IN IN_CARDALIAS			VARCHAR(30),
	IN IN_BUSITYPE			VARCHAR(20),
	IN IN_DELETE_BAND_FLAG 	VARCHAR(1),
	
	OUT PROC_RET_CODE 	VARCHAR(5)
)
LANGUAGE SQL   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- WAP璁剧疆瀹㈡埛淇℃伅
-- 杈撳叆鍙傛暟
--IN_MOBPHONE	    鐢ㄦ埛鎵嬫満鍙?--IN_CARDNO   		鐢ㄦ埛鍗″彿
--IN_CARDALIAS		鍗″埆鍚?--IN_BUSITYPE		涓氬姟绫诲瀷
-- IN_DELETE_BAND_FLAG:鍒犻櫎缁戝畾鏍囧織  1锛氬垹闄ょ粦瀹?0锛氫笉鍒犻櫎 
-- IN_BUSITYPE 0锛氫笉缁戝畾鍗″彿 1锛氱粦瀹氬崱鍌ㄨ搫 2锛氱粦瀹氬姹囧疂 3锛氱粦瀹氬熀閲?4:鍒犻櫎璁板綍 5:淇敼鍒悕
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.SUNZHEN
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.01.11
------------------------------------------------------------------------
BEGIN
	DECLARE MAXSEQ INTEGER;         --鐢ㄦ埛鐨勬渶澶у崱椤哄簭鍙?	DECLARE VCOUNT INTEGER;         --鐢ㄦ埛鎵嬫満涓嬫寕鐨勫崱鍙锋暟閲?	DECLARE VCARDNO VARCHAR(25);    --璁板綍鐢ㄦ埛鐨勬墜鏈轰笟鍔″搴旂殑鍗″彿
	DECLARE VCARDALIAS VARCHAR(30);	--瀵瑰簲鐢ㄦ埛涓氬姟鍗″彿瀵瑰簲鐨勫埆鍚?    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	--鍒犻櫎鍗¤褰?	IF(IN_BUSITYPE = '4') THEN
		DELETE FROM PB_WAPCUSTINF WHERE MOB_MOBPHONE = IN_MOBPHONE AND MOB_CARDNO = IN_CARDNO;
	ELSE 
		--淇敼鍒悕
		IF(IN_BUSITYPE = '5') THEN
			UPDATE PB_WAPCUSTINF SET MOB_CARDALIAS = IN_CARDALIAS WHERE MOB_MOBPHONE = IN_MOBPHONE AND MOB_CARDNO = IN_CARDNO;
		ELSE  --缁戝畾鎴栬€呭垹闄や笟鍔?			--鍒犻櫎缁戝畾 褰撳瓨鍦ㄤ竴涓墜鏈哄鏌愪竴涓崱鏈夊璁板綍鏃剁洿鎺ュ垹闄ゅ搴斾笟鍔＄殑璁板綍锛屽彧鏈変竴鏉＄殑鏃跺€欐洿鏂颁笟鍔＄被鍨嬩负涓嶇粦瀹氬崱鍙?			IF(IN_DELETE_BAND_FLAG = '1') THEN
				SELECT MAX(MOB_CARDNO) INTO VCARDNO FROM PB_WAPCUSTINF WHERE MOB_MOBPHONE = IN_MOBPHONE AND MOB_BUSTYPE = IN_BUSITYPE;
				SELECT COUNT(MOB_MOBPHONE) INTO VCOUNT FROM PB_WAPCUSTINF WHERE MOB_MOBPHONE = IN_MOBPHONE AND MOB_CARDNO = VCARDNO;	
				IF (VCOUNT=1) THEN
					UPDATE PB_WAPCUSTINF SET MOB_BUSTYPE = '0' WHERE MOB_MOBPHONE = IN_MOBPHONE AND MOB_CARDNO = VCARDNO;
				ELSE
					IF (VCOUNT>1) THEN
						DELETE FROM PB_WAPCUSTINF WHERE  MOB_MOBPHONE = IN_MOBPHONE  AND MOB_BUSTYPE = IN_BUSITYPE;
					END IF;
				END IF;
			ELSE
				--璁剧疆缁戝畾锛屽綋鎵嬫満鐨勫崱宸茬粡缁戝畾瀵瑰簲鐨勪笟鍔℃椂涓嶅鐞嗭紝
				IF NOT EXISTS(SELECT 1 FROM PB_WAPCUSTINF WHERE MOB_MOBPHONE = IN_MOBPHONE AND MOB_CARDNO = IN_CARDNO AND MOB_BUSTYPE = IN_BUSITYPE) THEN
					--褰撴病鏈夊搴斾笟鍔＄殑鏃跺€欙紝浣嗗綋鍓嶇敤鎴风殑鍗″彿鏈変釜鏈粦瀹氱殑鏍囩ず鏃舵洿鏂颁负褰撳墠涓氬姟琛ㄧず
					IF EXISTS(SELECT 1 FROM PB_WAPCUSTINF WHERE MOB_MOBPHONE = IN_MOBPHONE AND MOB_CARDNO = IN_CARDNO AND MOB_BUSTYPE = '0')THEN 
						UPDATE PB_WAPCUSTINF SET MOB_BUSTYPE = IN_BUSITYPE WHERE MOB_MOBPHONE = IN_MOBPHONE AND MOB_CARDNO = IN_CARDNO;
					ELSE 
						--褰撳墠鐢ㄦ埛鐨勬墜鏈轰笉瀛樺湪瀵瑰簲鐨勫崱鍙锋椂 锛屽氨鐩戞祴褰撳墠鐢ㄦ埛鐨勫崱鏈€澶ч『搴忥紝璁剧疆鏈崱鍙蜂负鏈€澶ч『搴忓姞1锛?						IF NOT EXISTS(SELECT 1 FROM PB_WAPCUSTINF WHERE MOB_MOBPHONE = IN_MOBPHONE AND MOB_CARDNO = IN_CARDNO ) THEN
							--褰撳墠鐢ㄦ埛鎵嬫満娌℃湁涓嬫寕鍗″彿鐨勬椂鍊欙紝璁剧疆鏈€澶ч『搴忎负0锛屽惁鍒欎负褰撳墠鐨勬渶澶ч『搴忓€?							IF NOT EXISTS(SELECT 1 FROM PB_WAPCUSTINF WHERE MOB_MOBPHONE = IN_MOBPHONE ) THEN
								SET MAXSEQ = 0;
								SET VCARDALIAS = IN_CARDNO;
							ELSE
								SELECT MAX(MOB_CARDSEQNO) INTO MAXSEQ FROM PB_WAPCUSTINF WHERE MOB_MOBPHONE = IN_MOBPHONE;
								SET VCARDALIAS = IN_CARDNO;	
							END IF;
							--鐢ㄦ埛涓嶅瓨鍦ㄥ搴斿崱鍙锋椂鍗″彿鐨勬椂鍊?
							INSERT INTO PB_WAPCUSTINF VALUES(IN_MOBPHONE,IN_CARDNO,VCARDALIAS,'0',MAXSEQ+1);
						ELSE 
							--褰撶敤鎴峰瓨鍦ㄥ搴斿崱鏃讹紝鍙栧緱鍗＄殑鏈€澶ч『搴忓拰鍒悕锛?							SELECT MAX(MOB_CARDSEQNO),MAX(MOB_CARDALIAS) INTO MAXSEQ,VCARDALIAS FROM PB_WAPCUSTINF WHERE MOB_MOBPHONE = IN_MOBPHONE AND MOB_CARDNO = IN_CARDNO ;	
							IF(IN_BUSITYPE != '6')THEN
								INSERT INTO PB_WAPCUSTINF VALUES(IN_MOBPHONE,IN_CARDNO,VCARDALIAS,IN_BUSITYPE,MAXSEQ);
							END IF;
						END IF;
					END IF;
				END IF;	
			END IF;    
		END IF;
	END IF;
	COMMIT;
	SET PROC_RET_CODE = '00000';	
END

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_REG_CHKCUSTSZ
(
	IN IN_ALIAS VARCHAR(30),
	IN IN_OLDPWD VARCHAR(50),
	IN IN_NEWPWD VARCHAR(50),
	OUT PROC_RET_CODE CHAR(5)
)
------------------------------------------------------------------------

-- 杈撳叆鍙傛暟锛?-- IN_ALIAS锛氱敤鎴风櫥褰曞悕
-- IN_OLDPWD锛氬姞瀵嗗悗鐨勭櫥褰曞瘑鐮?--	IN_NEWPWD :鍔犲瘑鍚庣殑鏂板瘑鐮?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 
-- 鏈€鍚庝慨鏀逛汉锛欵CC.Sunzhen
-- 鏈€鍚庝慨鏀规棩鏈燂細2006.02.06
------------------------------------------------------------------------
BEGIN

	-- 瀹氫箟鍙橀噺
	DECLARE V_PASSWORD			VARCHAR(50);		--鐢ㄦ埛瀵嗙爜
	DECLARE V_STT				CHAR(1);			--鐢ㄦ埛鐘舵€?	DECLARE V_DATE				CHAR(14);			--褰撳墠鏃堕棿
	DECLARE V_FAILNUM			INT;				--澶辫触娆℃暟
	DECLARE V_CUSTTYPE			CHAR(1);			-- 鐢ㄦ埛绫诲瀷
	DECLARE V_CSTNO				VARCHAR(10);		-- 瀹㈡埛鍙?    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SELECT
		PIF_CSTNO,
		PIF_CSTTYP,
		PIF_PASSWORD, 
		PIF_STT
	INTO
		V_CSTNO,
		V_CUSTTYPE,
		V_PASSWORD,
		V_STT
	FROM PB_CSTINF
	WHERE 
		PIF_ALIAS = IN_ALIAS;
	
	
	-- 鑾峰彇瀹㈡埛淇℃伅
	IF V_CSTNO IS NULL OR V_CSTNO=''
	THEN
		SET PROC_RET_CODE = '30003';
		RETURN;
	END IF;
	
	
	IF V_CUSTTYPE = '1' THEN
	    -- 璇ョ敤鎴蜂负璇佷功鐢ㄦ埛
		SET PROC_RET_CODE = '30018';
		RETURN;
	END IF;
	
	IF V_STT = '1' THEN
		-- 鐢ㄦ埛宸插喕缁?		SET PROC_RET_CODE = '30001';
		RETURN;
	END IF;
	
	SELECT PLF_TIMES INTO V_FAILNUM
		FROM PB_LOGFAIL	WHERE PLF_CARDNO = V_CSTNO AND PLF_TYPE='0';	
	
	IF IN_OLDPWD <> V_PASSWORD THEN
		-- 鑾峰彇褰撳墠鏃ユ湡
		SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
		
		-- 妫€鏌ョ敤鎴风櫥闄嗘帶鍒惰〃
		IF V_FAILNUM IS NULL 
		THEN
			-- 姝ょ敤鎴风涓€娆＄櫥闄嗗け璐?			INSERT INTO PB_LOGFAIL
			(
				PLF_CARDNO,
				PLF_TIMES,
				PLF_UPDTIM,
				PLF_TYPE
			)
			VALUES
			(
				V_CSTNO,
				1,
				V_DATE,
				'0'
			);
			
			COMMIT;
			
			SET PROC_RET_CODE = '30012';
		    RETURN;
		ELSE
			-- 闈炵涓€娆＄櫥闄嗗け璐?	
            IF V_FAILNUM = 5 THEN
				-- 鐧婚檰瀵嗙爜澶辫触6娆″悗鍐荤粨姝ょ敤鎴?				UPDATE PB_CSTINF
				SET
					PIF_STT = '1'
				WHERE 
					PIF_CSTNO = V_CSTNO;
				
				-- 鍒犻櫎瀹㈡埛瀵嗙爜澶辫触鐧诲綍琛ㄨ褰?				DELETE
				FROM PB_LOGFAIL
				WHERE 
				PLF_CARDNO = V_CSTNO AND PLF_TYPE='0';
				
				COMMIT;
				
				SET PROC_RET_CODE = '30004';
		        RETURN;
				
			ELSE
				-- 闈炵涓€娆＄櫥闄嗗け璐ワ紝澶辫触娆℃暟鍔?
				UPDATE PB_LOGFAIL
				SET
					PLF_TIMES = V_FAILNUM + 1
				WHERE 
					PLF_CARDNO = V_CSTNO AND PLF_TYPE='0';
			END IF;
	
		END IF;
		
	    COMMIT;
	    
	    CASE V_FAILNUM
	    WHEN 1
	    THEN 
	        SET PROC_RET_CODE = '30013';
	        RETURN;
	    WHEN 2
	    THEN 
	        SET PROC_RET_CODE = '30014';
	        RETURN;
	    WHEN 3
	    THEN 
	        SET PROC_RET_CODE = '30015';
	        RETURN;
	    WHEN 4
	    THEN 
	        SET PROC_RET_CODE = '30016';
	        RETURN;
	    END CASE;    
	   
	ELSE
		UPDATE PB_CSTINF  
		SET
		      PIF_PASSWORD=IN_NEWPWD,
		      PIF_RESERVE1='0',
		      PIF_STT='0'
		WHERE 
			PIF_ALIAS=IN_ALIAS;
		
		
	    -- 鎴愬姛妫€娴嬩竴娆″悗鍒犻櫎涔嬪墠鐧诲綍閿欒璁板綍
	    IF V_FAILNUM IS NOT NULL  
		THEN
			DELETE
			FROM PB_LOGFAIL
			WHERE 
			PLF_CARDNO = V_CSTNO AND PLF_TYPE='0';
        END IF;
        
        COMMIT;
        
	END IF;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_RETPWD_CHECK
(
    IN IN_CARDNO VARCHAR(30),
	OUT PROC_RET_CODE VARCHAR(5)
)
READS SQL DATA 
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍗￠噸缃煡璇㈠瘑鐮佹娴嬪瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬崱鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝30025璇ュ崱宸茬粡閲嶇疆杩囨煡璇㈠瘑鐮侊紝涓嶈兘閲嶅鎿嶄綔

-- 鏈€鍚庝慨鏀逛汉锛氬瓩闇?-- 鏈€鍚庝慨鏀规棩鏈燂細2006.02.16
------------------------------------------------------------------------

BEGIN
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF EXISTS 
		(
			SELECT 1 
			FROM PB_RETPWD
			WHERE PRP_CARDNO = IN_CARDNO
			AND   PRP_USETYPE = '0'
		) 
	THEN
		SET PROC_RET_CODE = '30025';
		RETURN;
	END IF;
   
	SET PROC_RET_CODE = '00000';   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_RETPWD_RECORD
(
    IN IN_CARDNO VARCHAR(30),
	OUT PROC_RET_CODE VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍗￠噸缃煡璇㈠瘑鐮佽褰曞瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬崱鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛氬瓩闇?-- 鏈€鍚庝慨鏀规棩鏈燂細2006.02.16
------------------------------------------------------------------------

BEGIN
	-- 鍙橀噺澹版槑
    DECLARE V_DATETIME VARCHAR(14);
    
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	INSERT INTO PB_RETPWD(PRP_CARDNO,PRP_USETYPE,PRP_UPTIME) VALUES (IN_CARDNO,'0',V_DATETIME);
	DELETE FROM PB_LOGFAIL WHERE PLF_CARDNO=IN_CARDNO AND PLF_TYPE='0';
    COMMIT;
	SET PROC_RET_CODE = '00000';   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QUERY_PRODUCT_INFO
(
    IN PREVALUE VARCHAR(60), 
    IN LANGUAGEVERSION CHAR(1), 
    OUT PROC_RET_CODE VARCHAR(5)
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱瀛樺偍杩囩▼
-- 杈撳叆鍙傛暟锛?-- PREVALUE 鍥剧墖鍚嶇О
-- LANGUAGEVERSION 鐗堟湰鏍囪瘑
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_XPRODUCT锛氬浘鐗囦俊鎭粨鏋滈泦 
-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?009.04.27
------------------------------------------------------------------------
BEGIN
	DECLARE V_IMAGENAME VARCHAR(60);
	DECLARE SPLITCHAR CHAR(1);
	DECLARE V_CSQL VARCHAR(600);
	DECLARE V_TMP VARCHAR(70); 
  DECLARE	CUR_XPRODUCT	CURSOR WITH	RETURN FOR SQLSTATMENT;
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SET V_TMP = UPPER(PREVALUE) || '|' || UPPER(LANGUAGEVERSION);

	IF POSSTR(V_TMP,'OR') > 0 OR POSSTR(V_TMP,'--') > 0 OR POSSTR(V_TMP,'AND') > 0 THEN
		SET PROC_RET_CODE = '96000';
		RETURN;
	END IF;
	
		IF PREVALUE IS NULL OR PREVALUE='' THEN
			SET V_CSQL='SELECT PII_IMAGENAME ,PII_IMAGEPOS,PII_PRODUCTURL,PII_PRODUCTNAME FROM PB_IMAGEINFO  WHERE (PII_IMAGEPOS <>'''' AND PII_IMAGEPOS IS NOT NULL AND  PII_LANGUAGE =''' || LANGUAGEVERSION || ''')';
		ELSE
			SET V_IMAGENAME = REPLACE(PREVALUE,'|','.jpg'||''',''');
			SET SPLITCHAR=RIGHT(PREVALUE,1) ; 
			IF SPLITCHAR<>'|' THEN
			SET	V_IMAGENAME=V_IMAGENAME||'.jpg';
			END IF;
			SET V_CSQL='SELECT PII_IMAGENAME ,PII_IMAGEPOS,PII_PRODUCTURL,PII_PRODUCTNAME FROM PB_IMAGEINFO  WHERE  PII_LANGUAGE =''' || LANGUAGEVERSION || ''' AND ((PII_IMAGEPOS <>'''' AND PII_IMAGEPOS IS NOT NULL) OR PII_IMAGENAME IN ( ''' ||V_IMAGENAME||''''||'))';
	  END IF;
	  PREPARE SQLSTATMENT FROM V_CSQL;
		--杩斿洖缁撴灉闆?		OPEN CUR_XPRODUCT;
    SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_UPDATE_COREID_TO_NETBANK
 (IN IN_CSTNO VARCHAR(10),
  IN IN_COREID VARCHAR(13),
  OUT PROC_RET_CODE VARCHAR(5),
  OUT OUT_COREID VARCHAR(13)
 )
  MODIFIES SQL DATA
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱瀛樺偍杩囩▼
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 缃戦摱瀹㈡埛鍙?-- IN_COREID 鏍稿績瀹㈡埛鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_COREID锛氳緭鍑烘牳蹇冨鎴峰彿 
-- @author锛歸anglm
-- 鍒涘缓鏃ユ湡锛?009.08.20
---------------------------------------------------------------
  BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF (IN_COREID IS NULL OR IN_COREID='') THEN
		SET PROC_RET_CODE = '30030';
		RETURN;
	ELSE
		UPDATE PB_CSTINF SET PIF_RESERVE3 = IN_COREID WHERE PIF_CSTNO = IN_CSTNO;
		COMMIT;
	END IF;
	
	SELECT PIF_RESERVE3 INTO OUT_COREID  FROM PB_CSTINF WHERE PIF_CSTNO = IN_CSTNO;
	
	SET PROC_RET_CODE ='00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_COMMONREG_CHECK(
	   IN IN_ACCNO VARCHAR(30),
	   OUT PROC_RET_CODE CHAR(5)
)
READS SQL DATA
------------------------------------------------------------------------
-- 鏅€氱増鐢ㄦ埛鏄惁宸茶缃櫥褰曞瘑鐮佹鏌?
-- 杈撳叆鍙傛暟锛?-- IN_ACCNO锛氱绾︿富鍗″彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?--                00000 姝ｅ父
--                30030 鐢ㄦ埛宸插畬鎴愯缃櫥褰曞瘑鐮?               
--
--
-- 鏈€鍚庝慨鏀逛汉锛欵CC.lan_xb
-- 鏈€鍚庝慨鏀规棩鏈燂細2009.12.17
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	IF EXISTS (SELECT 1 FROM PB_COMMCSTINF WHERE PCIF_ACCNO=IN_ACCNO) 
	THEN
	    SET PROC_RET_CODE = '30030';
	ELSE
		SET PROC_RET_CODE = '00000';
	END IF;

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_COMMONREG_SAVE(
	   IN IN_ACCNO     VARCHAR(30),
	   IN IN_COREID    VARCHAR(13),
	   IN IN_NAME      VARCHAR(30),
	   IN IN_PASSWORD  VARCHAR(60),
	   IN IN_CTFTYP    VARCHAR(4),
	   IN IN_CTFNO     VARCHAR(30),
	   IN IN_TRAN_TYPE    CHAR(1),
	   IN IN_ACC_TYPE  VARCHAR(2),
	   OUT PROC_RET_CODE CHAR(5)
)
------------------------------------------------------------------------
-- 鏅€氱増鐢ㄦ埛淇濆瓨鐧诲綍瀵嗙爜绛変俊鎭?
-- 杈撳叆鍙傛暟锛?--  IN_ACCNO     鍗″彿
--  IN_COREID    鏍稿績瀹㈡埛鍙?--  IN_NAME      鐢ㄦ埛濮撳悕
--  IN_PASSWORD  缃戦摱鐧诲綍瀵嗙爜
--  IN_CTFTYP    璇佷欢绫诲瀷
--  IN_CTFNO     璇佷欢鍙风爜

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?--                00000 姝ｅ父             
--
--
-- 鏈€鍚庝慨鏀逛汉锛欵CC.lan_xb
-- 鏈€鍚庝慨鏀规棩鏈燂細2009.12.17
------------------------------------------------------------------------
BEGIN
    -- 鍙橀噺澹版槑
    DECLARE V_DATETIME VARCHAR(8);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	
	IF IN_TRAN_TYPE = '0' THEN
		INSERT INTO PB_COMMCSTINF
		(
		 	   PCIF_ACCNO,
			   PCIF_COREID,
			   PCIF_NAME,
			   PCIF_PASSWORD,
			   PCIF_CTFTYP,
			   PCIF_CTFNO,
			   PCIF_STT,
			   PCIF_OPENDATE,
			   PCIF_ACCTYPE
		)VALUES(
			   IN_ACCNO,
			   IN_COREID,
			   IN_NAME,
			   IN_PASSWORD,
			   IN_CTFTYP,
			   IN_CTFNO,
			   '0',
			   V_DATETIME,
			   IN_ACC_TYPE
		);
	ELSE
		UPDATE PB_COMMCSTINF SET
		   PCIF_PASSWORD = IN_PASSWORD,
		   PCIF_STT      = '0'
		WHERE
		   PCIF_ACCNO = IN_ACCNO;
		DELETE FROM PB_LOGFAIL WHERE PLF_CARDNO=IN_ACCNO AND PLF_TYPE='1';
	END IF;
	SET PROC_RET_CODE = '00000';
	COMMIT;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_COMMONLOG_CHKCRDSTT
(
    IN IN_CARDNO      VARCHAR(30),
	IN IN_PASSWORD    VARCHAR(60),
	IN IN_LOGINIP     VARCHAR(20),
	OUT PROC_RET_CODE VARCHAR(5),
	OUT OUT_COREID    VARCHAR(13),
	OUT OUT_NAME      VARCHAR(30),
	OUT OUT_CTFTYP    VARCHAR(4),
	OUT OUT_CTFNO     VARCHAR(30) 
)
MODIFIES SQL DATA
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏅€氱敤鎴风姸鎬佹娴?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬崱鍙?-- IN_PASSWORD : 鐢ㄦ埛褰曞叆瀵嗙爜
-- IN_LOGINIP  : 鐢ㄦ埛鐧诲綍IP


-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--                00000 : 姝ｅ父
--                30032 : 鐢ㄦ埛鏈缃櫥褰曞瘑鐮?--                30033 : 鐢ㄦ埛宸查攣瀹氾紝璇烽€氳繃閲嶇疆瀵嗙爜瑙ｉ攣
--                30012 锛氬瘑鐮侀敊璇紝鍓╀綑5娆?--                30014 锛氬瘑鐮侀敊璇紝鍓╀綑4娆?--                30014 : 瀵嗙爜閿欒锛屽墿浣?娆?--                30015 : 瀵嗙爜閿欒锛屽墿浣?娆?--                30016 : 瀵嗙爜閿欒锛屽墿浣?娆?-- OUT_COREID    :  鏍稿績瀹㈡埛鍙?-- OUT_NAME      :  瀹㈡埛濮撳悕
-- OUT_CTFTYP    :  璇佷欢绫诲瀷
-- OUT_CTFNO     :  璇佷欢鍙风爜

-- 鏈€鍚庝慨鏀逛汉锛欵CC.lan_xb
-- 鏈€鍚庝慨鏀规棩鏈燂細2009.12.18
------------------------------------------------------------------------

BEGIN
    -- 鍙橀噺澹版槑
    DECLARE V_STT      CHAR(1);     -- 鐢ㄦ埛鐘舵€?	DECLARE V_PASSWORD VARCHAR(60); -- 瀵嗙爜
	DECLARE V_TIMES    INT;			-- 澶辫触娆℃暟
	DECLARE V_TIME     VARCHAR(14); --瀹㈡埛鏈€鍚庣櫥褰曟椂闂?
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	-- 鑾峰彇褰撳墠鏃堕棿
	SET V_TIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	-- 鏌ヨ鐢ㄦ埛淇℃伅
	SELECT PCIF_STT,PCIF_PASSWORD,PCIF_COREID,PCIF_NAME,PCIF_CTFTYP,PCIF_CTFNO
	INTO   V_STT,V_PASSWORD,OUT_COREID,OUT_NAME,OUT_CTFTYP,OUT_CTFNO
	FROM PB_COMMCSTINF WHERE 
	PCIF_ACCNO=IN_CARDNO;
	
	-- 妫€鏌ョ敤鎴锋槸鍚﹀畬鎴愮櫥褰曞瘑鐮佽缃?	IF V_STT IS NULL THEN
	   SET PROC_RET_CODE = '30032';
	   RETURN;
	-- 妫€鏌ョ敤鎴风姸鎬?0 姝ｅ父 1 鍐荤粨 2 瀵嗙爜瓒呰繃鏈€澶ч敊璇暟閿佸畾
	ELSEIF V_STT <> '0' THEN
	   SET PROC_RET_CODE = '30033';
	   RETURN;
	END IF;
	
	
	
	
	
	-- 鍒ゆ柇瀵嗙爜鏄惁姝ｇ‘
	IF IN_PASSWORD <> V_PASSWORD THEN
	   -- 鑾峰彇鐧诲綍瀵嗙爜閿欒娆℃暟 TYPE='1' 涓虹櫥褰曞瘑鐮?	   SELECT PLF_TIMES INTO V_TIMES FROM PB_LOGFAIL 
	   		  WHERE PLF_CARDNO=IN_CARDNO AND PLF_TYPE='1';
	   -- 鍒ゆ柇鏄惁鏄涓€娆″瘑鐮佽緭鍏ラ敊璇?	   IF V_TIMES IS NULL THEN
	   	    -- 绗竴娆″瘑鐮佽緭鍏ラ敊璇?    	    INSERT INTO PB_LOGFAIL
			(
				PLF_CARDNO,
				PLF_TIMES,
				PLF_UPDTIM,
				PLF_TYPE
			)
			VALUES
			(
				IN_CARDNO,
				1,
				V_TIME,
				'1'
			);
			SET PROC_RET_CODE = '30012';
			COMMIT;
			RETURN;
		ELSE
			-- 闈炵涓€娆″瘑鐮佽緭鍏ラ敊璇?				
			UPDATE PB_LOGFAIL
			SET
				PLF_TIMES = V_TIMES + 1,
				PLF_UPDTIM= V_TIME,
				PLF_IPADDR= IN_LOGINIP
			WHERE 
				PLF_CARDNO = IN_CARDNO AND PLF_TYPE='1';
			CASE V_TIMES
		    WHEN 1
		    THEN 
		        SET PROC_RET_CODE = '30013';
		    WHEN 2
		    THEN 
		        SET PROC_RET_CODE = '30014';
		    WHEN 3
		    THEN 
		        SET PROC_RET_CODE = '30015';
		    WHEN 4
		    THEN 
		        SET PROC_RET_CODE = '30016';
		   	ELSE
				-- 瓒呰繃鏈€澶ч敊璇鏁帮紝璁剧疆鐢ㄦ埛鐘舵€?				UPDATE PB_COMMCSTINF
				SET
				  PCIF_STT = '2'
				WHERE
				  PCIF_ACCNO = IN_CARDNO;
		   		SET PROC_RET_CODE = '30033';
		    END CASE;
			COMMIT;
			RETURN;
		END IF;
	END IF;
	
	
	-- 瀵嗙爜杈撳叆姝ｇ‘鍒犻櫎閿欒璁板綍
	DELETE FROM PB_LOGFAIL
	WHERE PLF_CARDNO = IN_CARDNO AND PLF_TYPE ='1';
	
	UPDATE PB_COMMCSTINF
	SET
		PCIF_LASTLGNTIM = V_TIME,
		PCIF_LASTLGNIP  = IN_LOGINIP
	WHERE
	    PCIF_ACCNO = IN_CARDNO;   
		 
	SET PROC_RET_CODE = '00000';
	COMMIT;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_COMMONCERT_VALIDATA(
	   IN IN_ACCNO         VARCHAR(30),
	   IN IN_CTFTYP        VARCHAR(4),
	   IN IN_CTFNO         VARCHAR(30),
	   OUT PROC_RET_CODE   CHAR(5),
	   OUT OUT_CTFTYP      CHAR(2),
	   OUT OUT_CTFNO       VARCHAR(30)
)
------------------------------------------------------------------------
-- 鏅€氱増鐢ㄦ埛閲嶇疆鐧诲綍瀵嗙爜鏃堕獙璇佽瘉浠?
-- 杈撳叆鍙傛暟锛?--  IN_ACCNO     鍗″彿
--  IN_CTFTYP    璇佷欢绫诲瀷
--  IN_CTFNO     璇佷欢鍙风爜

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?--                00000 姝ｅ父             
--
--
-- 鏈€鍚庝慨鏀逛汉锛欵CC.lan_xb
-- 鏈€鍚庝慨鏀规棩鏈燂細2009.12.17
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	SELECT 
		   PCIF_CTFTYP,
		   PCIF_CTFNO
	INTO
	       OUT_CTFTYP,
		   OUT_CTFNO 
	FROM PB_COMMCSTINF WHERE
	PCIF_ACCNO = IN_ACCNO;
	
	IF OUT_CTFTYP IS NULL THEN
	   SET PROC_RET_CODE = '30032';
	   RETURN;
	END IF;
	
	IF OUT_CTFTYP <> IN_CTFTYP OR OUT_CTFNO <> IN_CTFNO THEN
	   SET PROC_RET_CODE = '30047';
	   RETURN;
	END IF;
	
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_MONITOR_CHECK(
	   OUT PROC_RET_CODE    CHAR(5)
)
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- 鏅€氱増鐢ㄦ埛閲嶇疆鐧诲綍瀵嗙爜鏃堕獙璇佽瘉浠?
-- 杈撳叆鍙傛暟锛?--  IN_ACCNO     鍗″彿(鍒悕)
--  IN_IPADDR    鐢ㄦ埛鍦板潃

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?--                00000 姝ｅ父             
--
--
-- 鏈€鍚庝慨鏀逛汉锛欵CC.lan_xb
-- 鏈€鍚庝慨鏀规棩鏈燂細2010.04.01
------------------------------------------------------------------------
BEGIN

	
	DECLARE CUR_ALLOW CURSOR  WITH RETURN TO CALLER FOR
	        SELECT PMA_CARDNO,PMA_IPADDR 
			   FROM PB_MONITOR_ALLOW;
	-- 寮傚父澶勭悊	   
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	-- 杩斿洖缁撴灉闆?	OPEN CUR_ALLOW;
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_COMMPWD_RESET
(
    IN IN_CARDNO      VARCHAR(30),
	IN IN_OLDPWD      VARCHAR(60),
	IN IN_NEWPWD      VARCHAR(60),
	IN IN_LOGINIP     VARCHAR(20),  
	OUT PROC_RET_CODE VARCHAR(5)
)
MODIFIES SQL DATA
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏅€氱敤鎴风姸鎬佹娴?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO 锛氬崱鍙?-- IN_OLDPWD : 鍘熷瘑鐮?-- IN_NEWPWD : 鏂板瘑鐮?-- IN_LOGINIP: 瀹㈡埛IP鍦板潃

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--                00000 : 姝ｅ父
--                30032 : 鐢ㄦ埛鏈缃櫥褰曞瘑鐮?--                30033 : 鐢ㄦ埛宸查攣瀹氾紝璇烽€氳繃閲嶇疆瀵嗙爜瑙ｉ攣
--                30012 锛氬瘑鐮侀敊璇紝鍓╀綑5娆?--                30014 锛氬瘑鐮侀敊璇紝鍓╀綑4娆?--                30014 : 瀵嗙爜閿欒锛屽墿浣?娆?--                30015 : 瀵嗙爜閿欒锛屽墿浣?娆?--                30016 : 瀵嗙爜閿欒锛屽墿浣?娆?

-- 鏈€鍚庝慨鏀逛汉锛欵CC.lan_xb
-- 鏈€鍚庝慨鏀规棩鏈燂細2009.12.18
------------------------------------------------------------------------

BEGIN
    -- 鍙橀噺澹版槑
    DECLARE V_STT      CHAR(1);     -- 鐢ㄦ埛鐘舵€?	DECLARE V_PASSWORD VARCHAR(60); -- 瀵嗙爜
	DECLARE V_TIMES    INT;			-- 澶辫触娆℃暟
	DECLARE V_TIME     VARCHAR(14); --瀹㈡埛鏈€鍚庣櫥褰曟椂闂?
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	
	-- 鏌ヨ鐢ㄦ埛淇℃伅
	SELECT PCIF_STT,PCIF_PASSWORD
	INTO   V_STT,V_PASSWORD
	FROM PB_COMMCSTINF WHERE 
	PCIF_ACCNO=IN_CARDNO;
	
	-- 妫€鏌ョ敤鎴锋槸鍚﹀畬鎴愮櫥褰曞瘑鐮佽缃?	IF V_STT IS NULL THEN
	   SET PROC_RET_CODE = '30032';
	   RETURN;
	-- 妫€鏌ョ敤鎴风姸鎬?0 姝ｅ父 1 鍐荤粨 2 瀵嗙爜瓒呰繃鏈€澶ч敊璇暟閿佸畾
	ELSEIF V_STT <> '0' THEN
	   SET PROC_RET_CODE = '30033';
	   RETURN;
	END IF;
	
	
	
	
	
	-- 鍒ゆ柇瀵嗙爜鏄惁姝ｇ‘
	IF IN_OLDPWD <> V_PASSWORD THEN
	   -- 鑾峰彇褰撳墠鏃堕棿
	   SET V_TIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	   -- 鑾峰彇鐧诲綍瀵嗙爜閿欒娆℃暟 TYPE='1' 涓虹櫥褰曞瘑鐮?	   SELECT PLF_TIMES INTO V_TIMES FROM PB_LOGFAIL 
	   		  WHERE PLF_CARDNO=IN_CARDNO AND PLF_TYPE='1';
	   -- 鍒ゆ柇鏄惁鏄涓€娆″瘑鐮佽緭鍏ラ敊璇?	   IF V_TIMES IS NULL THEN
	   	    -- 绗竴娆″瘑鐮佽緭鍏ラ敊璇?    	    INSERT INTO PB_LOGFAIL
			(
				PLF_CARDNO,
				PLF_TIMES,
				PLF_UPDTIM,
				PLF_TYPE
			)
			VALUES
			(
				IN_CARDNO,
				1,
				V_TIME,
				'1'
			);
			SET PROC_RET_CODE = '30012';
			COMMIT;
			RETURN;
		ELSE
			-- 闈炵涓€娆″瘑鐮佽緭鍏ラ敊璇?				
			UPDATE PB_LOGFAIL
			SET
				PLF_TIMES = V_TIMES + 1,
				PLF_UPDTIM= V_TIME,
				PLF_IPADDR= IN_LOGINIP
			WHERE 
				PLF_CARDNO = IN_CARDNO AND PLF_TYPE='1';
			CASE V_TIMES
		    WHEN 1
		    THEN 
		        SET PROC_RET_CODE = '30013';
		    WHEN 2
		    THEN 
		        SET PROC_RET_CODE = '30014';
		    WHEN 3
		    THEN 
		        SET PROC_RET_CODE = '30015';
		    WHEN 4
		    THEN 
		        SET PROC_RET_CODE = '30016';
		   	ELSE
				-- 瓒呰繃鏈€澶ч敊璇鏁帮紝璁剧疆鐢ㄦ埛鐘舵€?				UPDATE PB_COMMCSTINF
				SET
				  PCIF_STT = '2'
				WHERE
				  PCIF_ACCNO = IN_CARDNO;
		   		SET PROC_RET_CODE = '30033';
		    END CASE;
			COMMIT;
			RETURN;
		END IF;
	END IF;
	
	
	-- 瀵嗙爜杈撳叆姝ｇ‘鍒犻櫎閿欒璁板綍
	DELETE FROM PB_LOGFAIL
	WHERE PLF_CARDNO = IN_CARDNO AND PLF_TYPE ='1';
	
	UPDATE PB_COMMCSTINF
	SET
		PCIF_PASSWORD = IN_NEWPWD
	WHERE
	    PCIF_ACCNO = IN_CARDNO;   
		 
	SET PROC_RET_CODE = '00000';
	COMMIT;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CP_REG_CHKCUST (
	IN IN_CARDNO             VARCHAR(30),
	IN IN_PASSWORD					VARCHAR(50),
	OUT PROC_RET_CODE 			CHAR(5),
	OUT OUT_CSTNO           VARCHAR(10)
)
------------------------------------------------------------------------
-- 浜ら摱骞冲彴瀹㈡埛淇℃伅鍚堟硶鎬ф牎楠屽瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氱敤鎴风櫥褰曞悕(鍚堜綔琛屽崱鍙?
-- IN_PASSWORD锛氱櫥褰曞瘑鐮?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CSTNO锛氱敤鎴峰彿
-- 
-- 鏈€鍚庝慨鏀逛汉锛欵CC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈燂細2010.04.13
------------------------------------------------------------------------
BEGIN

	-- 瀹氫箟鍙橀噺
	DECLARE V_PASSWORD			VARCHAR(50);		--鐢ㄦ埛瀵嗙爜
	DECLARE V_STT				CHAR(1);			--鐢ㄦ埛鐘舵€?	DECLARE V_DATE				CHAR(14);			--褰撳墠鏃堕棿
	DECLARE V_FAILNUM			INT;				--澶辫触娆℃暟

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	SET IN_CARDNO = LTRIM(RTRIM(IN_CARDNO));
	
	-- 鑾峰彇瀹㈡埛淇℃伅
	SELECT
		PCCI_CSTNO,
		PCCI_PASSWORD, 
		PCCI_STT
	INTO
		OUT_CSTNO,
		V_PASSWORD,
		V_STT
	FROM PB_COCSTINF
	WHERE 
		PCCI_ACCNO = IN_CARDNO;
	
	IF OUT_CSTNO IS NULL OR OUT_CSTNO = ''
	THEN
		SET PROC_RET_CODE = '30042';
		RETURN;
	END IF;
	
	IF V_STT = '1' THEN
		-- 鐢ㄦ埛宸插喕缁?		SET PROC_RET_CODE = '30033';
		RETURN;
	END IF;
	
	IF V_STT = '2' THEN
		-- 鐢ㄦ埛浠庢湭鐧诲綍
		SET PROC_RET_CODE = '30032';
		RETURN;
	END IF;
	
	SELECT PLF_TIMES INTO V_FAILNUM
		FROM PB_LOGFAIL	WHERE PLF_CARDNO = OUT_CSTNO AND PLF_TYPE='2';
	
	IF IN_PASSWORD <> V_PASSWORD THEN
		-- 鑾峰彇褰撳墠鏃ユ湡
		SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
		
		-- 妫€鏌ョ敤鎴风櫥闄嗘帶鍒惰〃
		IF V_FAILNUM IS NULL  
		THEN
			-- 姝ょ敤鎴风涓€娆＄櫥闄嗗け璐?			INSERT INTO PB_LOGFAIL
			(
				PLF_CARDNO,
				PLF_TIMES,
				PLF_UPDTIM,
				PLF_TYPE
			)
			VALUES
			(
				OUT_CSTNO,
				1,
				V_DATE,
				'2'
			);
			
			COMMIT;
			
			SET PROC_RET_CODE = '30012';
		    RETURN;
		ELSE
			-- 闈炵涓€娆＄櫥闄嗗け璐?	
            IF V_FAILNUM = 5 THEN
				-- 鐧婚檰瀵嗙爜澶辫触6娆″悗鍐荤粨姝ょ敤鎴?				UPDATE PB_COCSTINF
				SET
					PCCI_STT = '1'
				WHERE 
					PCCI_CSTNO = OUT_CSTNO;
				
				-- 鍒犻櫎瀹㈡埛瀵嗙爜澶辫触鐧诲綍琛ㄨ褰?				DELETE
				FROM PB_LOGFAIL
				WHERE 
				PLF_CARDNO = OUT_CSTNO AND PLF_TYPE='2';
				
				COMMIT;
				
				SET PROC_RET_CODE = '30033';
		        RETURN;
				
			ELSE
				-- 闈炵涓€娆＄櫥闄嗗け璐ワ紝澶辫触娆℃暟鍔?
				UPDATE PB_LOGFAIL
				SET
					PLF_TIMES = V_FAILNUM + 1
				WHERE 
					PLF_CARDNO = OUT_CSTNO AND PLF_TYPE='2';
			END IF;
	
		END IF;
		
	    COMMIT;
	    
	    CASE V_FAILNUM
	    WHEN 1
	    THEN 
	        SET PROC_RET_CODE = '30013';
	        RETURN;
	    WHEN 2
	    THEN 
	        SET PROC_RET_CODE = '30014';
	        RETURN;
	    WHEN 3
	    THEN 
	        SET PROC_RET_CODE = '30015';
	        RETURN;
	    WHEN 4
	    THEN 
	        SET PROC_RET_CODE = '30016';
	        RETURN;
	    END CASE;    
	   
	ELSE
	    -- 鎴愬姛妫€娴嬩竴娆″悗鍒犻櫎涔嬪墠鐧诲綍閿欒璁板綍
	    IF V_FAILNUM IS NOT NULL 
		THEN
			DELETE
			FROM PB_LOGFAIL
			WHERE 
			PLF_CARDNO = OUT_CSTNO AND PLF_TYPE='2';
        END IF;
        
        COMMIT;
        
	END IF;
	
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CPREG_CHECK(
	   IN IN_ACCNO VARCHAR(30),
	   OUT PROC_RET_CODE CHAR(5),
	   OUT OUT_CSTNO VARCHAR(10),
	   OUT OUT_IDTYPE VARCHAR(2),
	   OUT OUT_IDNUM VARCHAR(30),
	   OUT OUT_CARDNO VARCHAR(30),
	   OUT OUT_MOBILE VARCHAR(20)
)
READS SQL DATA
------------------------------------------------------------------------
-- 浜ら摱鍚堜綔骞冲彴妫€鏌ユ槸鍚﹀瓨鍦ㄦ瀹㈡埛

-- 杈撳叆鍙傛暟锛?-- IN_ACCNO锛氬悎浣滆鍗″彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?             
-- OUT_CSTNO:瀹㈡埛鍙?-- OUT_IDTYPE锛氳瘉浠剁被鍨?-- OUT_IDNUM锛氳瘉浠跺彿鐮?-- OUT_CARDNO:浜ら€氶摱琛岀數瀛愯处鎴?-- OUT_MOBILE: 鎵嬫満鍙风爜
-- 鏈€鍚庝慨鏀逛汉锛欵CC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈燂細2010.04.14
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	IF NOT EXISTS (SELECT 1 FROM PB_COCSTINF WHERE PCCI_ACCNO=IN_ACCNO) 
	THEN
	    SET PROC_RET_CODE = '30034';
	    RETURN;
	ELSE
		SELECT PCCI_CSTNO,PCCI_CTFTYP,PCCI_CTFNO,PCCI_CARDNO,PCCI_MOBILE INTO OUT_CSTNO,OUT_IDTYPE,OUT_IDNUM,OUT_CARDNO,OUT_MOBILE FROM PB_COCSTINF WHERE PCCI_ACCNO=IN_ACCNO;
	END IF;
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CPREG_SAVE(
	   IN IN_CSTNO     VARCHAR(10),
	   IN IN_CARDNO		 VARCHAR(30),
	   IN IN_PASSWORD  VARCHAR(60),
	   OUT PROC_RET_CODE CHAR(5)
)
------------------------------------------------------------------------
-- 浜ら摱鍚堜綔淇濆瓨鐧诲綍瀵嗙爜绛変俊鎭?
-- 杈撳叆鍙傛暟锛?--  IN_CSTNO     瀹㈡埛鍙?--  IN_PASSWORD  缃戦摱鐧诲綍瀵嗙爜

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?--                00000 姝ｅ父             
--
--
-- 鏈€鍚庝慨鏀逛汉锛欵CC.PENGXB
-- 鏈€鍚庝慨鏀规棩鏈燂細2010.04.20
------------------------------------------------------------------------
BEGIN
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	UPDATE PB_COCSTINF SET PCCI_STT = '0',PCCI_PASSWORD = IN_PASSWORD WHERE PCCI_CSTNO = IN_CSTNO AND PCCI_ACCNO = IN_CARDNO;
	DELETE FROM PB_LOGFAIL WHERE PLF_CARDNO=IN_CSTNO AND PLF_TYPE='0';
	SET PROC_RET_CODE = '00000';
	COMMIT;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_LOGONTIME
(
    IN IN_CSTNO VARCHAR(10),
    IN IN_IPADDR VARCHAR(20),
	OUT PROC_RET_CODE VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏇存柊鐢ㄦ埛鐧诲綍鏃堕棿

-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN
    
    -- 鍙橀噺澹版槑
    DECLARE V_DATE				CHAR(14);			-- 褰撳墠鏃堕棿
    
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	-- 鑾峰彇褰撳墠鏃ユ湡
	SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
	
  UPDATE PB_COCSTINF
  SET PCCI_LASTLGNTIM = V_DATE,
      PCCI_LASTLGNIP = IN_IPADDR
  WHERE PCCI_CSTNO = IN_CSTNO;

	COMMIT;
    
	SET PROC_RET_CODE = '00000';   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_REGUSERCERT_VALIDATA(
	   IN IN_ACCNO         VARCHAR(30),
	   IN IN_CTFTYP        VARCHAR(4),
	   IN IN_CTFNO         VARCHAR(30),
	   OUT PROC_RET_CODE   CHAR(5),
	   OUT OUT_CTFTYP      CHAR(2),
	   OUT OUT_CTFNO       VARCHAR(30),
	   OUT OUT_CSTNO       VARCHAR(20),
	   OUT OUT_MOBILENO     VARCHAR(20)
)
------------------------------------------------------------------------
-- 鐭俊瀵嗙爜鐗堢敤鎴烽噸缃櫥褰曞瘑鐮佹椂楠岃瘉璇佷欢

-- 杈撳叆鍙傛暟锛?--  IN_ACCNO     鍗″彿
--  IN_CTFTYP    璇佷欢绫诲瀷
--  IN_CTFNO     璇佷欢鍙风爜

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?--                00000 姝ｅ父             
--
--
-- 鏈€鍚庝慨鏀逛汉锛欵CC.wanglm
-- 鏈€鍚庝慨鏀规棩鏈燂細2010.09.21
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	SELECT 
		   PIF_CTFTYP,
		   PIF_CTFNO,
		   PIF_CSTNO,
		   PIF_MOBILE
		   
	INTO
	       OUT_CTFTYP,
		   OUT_CTFNO,
		   OUT_CSTNO,
		   OUT_MOBILENO
		   
	FROM PB_CSTINF WHERE
	PIF_ACCNO = IN_ACCNO;
	
	IF OUT_CTFTYP IS NULL THEN
	   SET PROC_RET_CODE = '30032';
	   RETURN;
	END IF;
	
	IF OUT_CTFTYP <> IN_CTFTYP OR OUT_CTFNO <> IN_CTFNO THEN
	   SET PROC_RET_CODE = '30047';
	   RETURN;
	END IF;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_REGUSER_SAVE_PWD(
		IN IN_CSTNO    VARCHAR(20),
		IN IN_PASSWORD    VARCHAR(60),
		OUT PROC_RET_CODE CHAR(5)
)
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	UPDATE PB_CSTINF SET PIF_PASSWORD = IN_PASSWORD , PIF_STT='0' WHERE PIF_CSTNO = IN_CSTNO;
	
	DELETE FROM PB_LOGFAIL WHERE PLF_CARDNO = IN_CSTNO AND PLF_TYPE='0';
	
	COMMIT;
 
  SET PROC_RET_CODE = '00000';
  

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_IMAGE(
	   IN IN_CUSTID        VARCHAR(21),
	   IN IN_TYPE          CHAR(1),
	   IN IN_BINNARY       BLOB,
	   OUT PROC_RET_CODE   CHAR(5)
)
------------------------------------------------------------------------
-- 淇濆瓨浜岃繘鍒舵暟鎹埌鏁版嵁搴?
-- 杈撳叆鍙傛暟锛?--  IN_CUSTID    缃戦摱瀹㈡埛鍙锋垨鍗″彿
--  IN_TYPE      鏁版嵁绫诲瀷 0 娉ㄥ唽鐢ㄦ埛澶村儚
--  IN_BINNARY   浜岃繘鍒舵暟鎹?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?--                00000 姝ｅ父             
--
--
-- 鏈€鍚庝慨鏀逛汉锛欵CC.lan_xb
-- 鏈€鍚庝慨鏀规棩鏈燂細2010.11.22
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	IF (EXISTS(SELECT 1 FROM PB_IMAGE WHERE IMG_CSTNO = IN_CUSTID AND IMG_TYPE = IN_TYPE)) THEN
		UPDATE PB_IMAGE SET IMG_BANNARY = IN_BINNARY WHERE IMG_CSTNO = IN_CUSTID AND IMG_TYPE = IN_TYPE;
	ELSE
		INSERT INTO PB_IMAGE (IMG_CSTNO,IMG_TYPE,IMG_BANNARY) VALUES (IN_CUSTID,IN_TYPE,IN_BINNARY);
	END IF;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_INIT_SYS_SELLINFO
(
    OUT PROC_RET_CODE VARCHAR(5)
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱瀛樺偍杩囩▼

-- 杈撳叆鍙傛暟锛氭棤

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_SELLINFO锛氳惀閿€淇℃伅缁撴灉闆?


-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?010.11.24
------------------------------------------------------------------------
BEGIN
	-- 鍙橀噺澹版槑
  DECLARE V_DATETIME VARCHAR(8);
  -- 鍙栧緱钀ラ攢淇℃伅
	DECLARE CUR_SELLINFO CURSOR WITH RETURN TO CALLER FOR
		SELECT
			PSI_SELLNAME,
			PSI_SELLPOS,
			PSI_CONTENT,
			PSI_CLIENTVS,
			PSI_PRODUCTTYPE,
			PSI_URLOUT,
			PSI_PRODUCTURL,
			PSI_PRODUCTNAME,
			PSI_LANGUAGE,
			PSI_UPLOADTIME ,
			PSI_VALIDDATE,
			PSI_ENDDATE
		FROM PB_SELLINFO WHERE 	(PSI_ENDDATE>= V_DATETIME AND PSI_VALIDDATE <=V_DATETIME) OR PSI_PRODUCTTYPE='03'
		ORDER BY PSI_PRODUCTTYPE asc , PSI_SELLPOS asc;      
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
  --鎵撳紑娓告爣
  OPEN CUR_SELLINFO;
  SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_REGUSER_USERTYPE_DISPATH(
		IN IN_ACCNO    VARCHAR(30),
		OUT PROC_RET_CODE CHAR(5),
		OUT OUT_TYPE CHAR(2)
)
BEGIN
	-- 澹版槑鍙橀噺
	DECLARE V_ISREGUSER VARCHAR(4);		--鏄惁瀹屾垚棣栨鐧婚檰
	DECLARE V_USERTYPE CHAR(1);		--鐢ㄦ埛绫诲瀷
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '30009';
		SET OUT_TYPE = '-1';
		ROLLBACK ;
	END;
	
	SELECT PIF_CSTTYP, PIF_STT 
	INTO V_USERTYPE, V_ISREGUSER 
	FROM PB_CSTINF 
	WHERE PIF_ACCNO = IN_ACCNO 
	FETCH FIRST 1 ROWS ONLY;
	IF V_USERTYPE IS NOT NULL AND V_USERTYPE <> '' THEN
		SET OUT_TYPE = V_USERTYPE;
		IF V_ISREGUSER <> '2' THEN
			SET PROC_RET_CODE = '30009';		--鐢ㄦ埛宸茬粡瀹屾垚杩囬娆＄櫥闄?			IF EXISTS(SELECT 1 FROM PB_COMMCSTINF WHERE PCIF_ACCNO = IN_ACCNO) THEN
				SET PROC_RET_CODE = '30099';		--鐢ㄦ埛宸茬粡瀹屾垚杩囬娆＄櫥闄?鏅€氱増/娉ㄥ唽鐗?
				RETURN;
			END IF;
			RETURN;
		ELSE
			SET PROC_RET_CODE = '00000';
			RETURN;
		END IF;
	ELSE
		SET OUT_TYPE = '2';
		IF EXISTS(SELECT 1 FROM PB_COMMCSTINF WHERE PCIF_ACCNO = IN_ACCNO) THEN
			SET PROC_RET_CODE = '30099';		--鐢ㄦ埛宸茬粡瀹屾垚杩囬娆＄櫥闄?			RETURN;
		ELSE
			SET PROC_RET_CODE = '00000';
			RETURN;
		END IF;
	END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GET_CERT_FIRSTLOGONMSG (
	IN IN_CARDNO                VARCHAR(30),
	OUT PROC_RET_CODE 			CHAR(5),
	OUT OUT_CSTNO				VARCHAR(10),
	OUT OUT_AREANO               VARCHAR(6)
)
READS SQL DATA 
------------------------------------------------------------------------
-- 璇佷功鐢ㄦ埛涓嬭浇璇佷功鑾峰彇缃戦摱瀹㈡埛鍙峰強鍦板尯鍙?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氱绾︿富鍗″彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CSTNO : 缃戦摱瀹㈡埛鍙?-- OUT_AREANO 锛氬湴鍖哄彿
-- 
-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈燂細2007.3.27
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;

	
	-- 鑾峰彇瀹㈡埛淇℃伅

	SELECT
		PIF_AREACODE,
		PIF_CSTNO
	INTO
		OUT_AREANO,
		OUT_CSTNO
	FROM PB_CSTINF
	WHERE 
		PIF_ACCNO = IN_CARDNO;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_REGUSER_GETINFO(
	IN IN_CARDNO VARCHAR(30),
	OUT PROC_RET_CODE 			CHAR(5),
	OUT OUT_CSTNO               VARCHAR(10),
	OUT OUT_CARDNO              VARCHAR(30),
	OUT OUT_MOBILE              VARCHAR(20),
	OUT OUT_CSTTYP              CHAR(1)
)
BEGIN
	SELECT
		PIF_CSTNO,
		PIF_ACCNO,
		PIF_CSTTYP,
		PIF_MOBILE
	INTO
		OUT_CSTNO,
		OUT_CARDNO,
		OUT_CSTTYP,
		OUT_MOBILE
	FROM PB_CSTINF
	WHERE 
		PIF_ACCNO = IN_CARDNO;
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_RESETPWD_CHECKSTT
(
	IN IN_CARDNO VARCHAR(30),	
	OUT PROC_RET_CODE VARCHAR(5),
	OUT OUT_CSTNO VARCHAR(10)
)

--------------------------------------------------------------------------
--SQL 瀛樺偍杩囩▼
--妫€鏌ュ笎鎴风姸鎬?
--杈撳叆鍙傛暟锛?--IN_CARDNO锛氱绾︿富鍗″彿
-- 杈撳嚭鍙傛暟锛?-- OUT_CSTNO锛氱綉閾跺鎴峰彿
-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--------------------------------------------------------------------------
BEGIN 

  -- 澹版槑鍙橀噺
	DECLARE V_CSTNO				VARCHAR(10);	-- 瀹㈡埛鍙?	DECLARE V_STT               CHAR(1);      -- 鐢ㄦ埛鐘舵€?	DECLARE V_CSTTYP			CHAR(1);		-- 鐢ㄦ埛绫诲瀷

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
    -- 鏌ヨ鐢ㄦ埛淇℃伅
    SELECT PIF_CSTNO,PIF_CSTTYP,PIF_STT INTO V_CSTNO,V_CSTTYP,V_STT FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO;
  
    	IF V_CSTNO IS NULL OR V_CSTNO = '' THEN
    	-- 涓嶅瓨鐢ㄦ埛璇ュ崱浣滀负涓荤绾﹀崱鐨勫鎴?    	SET PROC_RET_CODE = '30007';
        RETURN;
    END IF;  
	
	IF V_STT = '2' THEN
		-- 鐢ㄦ埛浠庢湭鐧诲綍
		SET PROC_RET_CODE = '30002';
		RETURN;
	END IF;
	
	IF V_CSTTYP = '1' THEN
		-- 璇佷功鐢ㄦ埛
		SET PROC_RET_CODE = '30008';
		RETURN;
	END IF;
	SET OUT_CSTNO = V_CSTNO; 
	SET PROC_RET_CODE = '00000';   
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GETCREDITCARD_MOBILENO(
	   IN IN_ACCNO         VARCHAR(30),
	   OUT PROC_RET_CODE   CHAR(5),
	   OUT OUT_MOBILENO     VARCHAR(20)
)
------------------------------------------------------------------------
-- 鐭俊瀵嗙爜鐗堢敤鎴烽噸缃櫥褰曞瘑鐮佹椂濡傛灉涓轰俊鐢ㄥ崱鐢ㄦ埛锛岃幏鍙栨墜鏈哄彿鐮?
-- 杈撳叆鍙傛暟锛?--  IN_ACCNO     鍗″彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?--                00000 姝ｅ父             
--
--
-- 鏈€鍚庝慨鏀逛汉锛欵CC.gongjx
-- 鏈€鍚庝慨鏀规棩鏈燂細2010.12.30
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	SELECT 
		   PIF_MOBILE
		   
	INTO
		   OUT_MOBILENO
		   
	FROM PB_CSTINF WHERE
	PIF_ACCNO = IN_ACCNO;
	
	IF OUT_MOBILENO IS NULL THEN
	   SET PROC_RET_CODE = '30032';
	   RETURN;
	END IF;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_QRY_CUSTREG_INFO
(
	IN IN_CARDNO VARCHAR(30),
	OUT PROC_RET_CODE VARCHAR(5),
	OUT OUT_COMMREGSTT CHAR(1),
	OUT OUT_REGSTT CHAR(1),
	OUT OUT_REGVERSION CHAR(1)
)
---------------------------------------------
--IN_CARDNO  杈撳叆鍙傛暟锛氬崱鍙?--PROC_RET_CODE 杈撳嚭鍙傛暟锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--OUT_COMMREGSTT   0:鏈敞鍐? 1锛氬凡娉ㄥ唽
--OUT_REGSTT       0锛氭湭娉ㄥ唽   1锛氬凡娉ㄥ唽鏈縺娲? 2锛氬凡娉ㄥ唽涓旂姸鎬佹甯?3:宸叉敞鍐屼笖鐘舵€佷负閿佸畾
--OUT_REGVERSION   0锛氱煭淇″瘑鐮佺増 1锛氳瘉涔︾増  2:鏃犳敞鍐岀増
---------------------------------------------
BEGIN
	DECLARE V_CSTTYP		  CHAR(1);		-- 鐢ㄦ埛绫诲瀷
	DECLARE V_CSTNO         VARCHAR(20);
	DECLARE V_STT             CHAR(1);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SELECT PIF_CSTNO,PIF_STT,PIF_CSTTYP INTO V_CSTNO,V_STT,V_CSTTYP FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO;
	IF V_CSTNO IS NULL OR V_CSTNO ='' THEN
		SET OUT_REGSTT = '0';
		SET OUT_REGVERSION ='2';
	ELSE
		IF V_CSTTYP = '0' THEN
			SET OUT_REGVERSION = '0';
		ELSE
			SET OUT_REGVERSION = '1';
		END IF;
		
		IF V_STT ='0' THEN 
			SET OUT_REGSTT = '2';
		ELSEIF V_STT ='1' THEN
			SET OUT_REGSTT = '3';
		ELSE
			SET OUT_REGSTT = '1';
		END IF;
	END IF;
	IF EXISTS(SELECT 1 FROM PB_COMMCSTINF WHERE PCIF_ACCNO = IN_CARDNO) THEN
		SET OUT_COMMREGSTT = '1';
	ELSE
		SET OUT_COMMREGSTT = '0';
	END IF;	

	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECK_CREDITCARD_REG(
	IN   IN_CARDNO  VARCHAR(30),
	OUT  PROC_RET_CODE VARCHAR(5)
)
--------------------------------------------
--鐢ㄤ簬妫€鏌ヤ俊鐢ㄥ崱鏄惁娉ㄥ唽浜嗘櫘閫氱増鐢ㄦ埛锛屽鏋滃凡娉ㄥ唽鍒欒繑鍥?00000锛屽彲浠ョ户缁繘琛岀綉閾剁櫥褰曞瘑鐮侀噸缃搷浣溿€?--濡傛灉鏈敞鍐屽垯鎶ラ敊30032锛屽垯涓嶈兘杩涜缃戦摱鐧诲綍瀵嗙爜閲嶇疆銆傚彂鐢熷紓甯告姤閿?5000銆?--杈撳叆鍙傛暟 IN_CARDNO 涓轰俊鐢ㄥ崱鍗″彿
--20110321
--------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	IF EXISTS(SELECT 1 FROM PB_COMMCSTINF WHERE	PCIF_ACCNO = IN_CARDNO) THEN
		SET PROC_RET_CODE = '00000';
		RETURN;
	ELSE
		SET PROC_RET_CODE = '30032';
	    RETURN;
	END IF;
		
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_EACCOUNT_CSTTYPE (
	IN IN_CARDNO        VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_CSTNO  		VARCHAR(10),
	OUT OUT_CSTTYPE     CHAR(1),
	OUT OUT_MOBILE		VARCHAR(20)
)                
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- e璐︽埛寮€鎴烽獙璇佸崱瀵瑰簲鐨勫鎴风被鍨?-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO   楠岃瘉鍗″彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CSTTYPE	  瀹㈡埛绫诲瀷 0锛氱煭淇℃敞鍐岀増  1锛氳瘉涔︽敞鍐岀増  2锛氭櫘閫氬ぇ浼楃増
------------------------------------------------------------------------
BEGIN
	DECLARE V_CUSTNO VARCHAR(10);
	DECLARE V_CSTTYP CHAR(1);
	DECLARE V_MOBILE VARCHAR(20);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	SELECT PIF_CSTNO,PIF_CSTTYP,PIF_MOBILE INTO V_CUSTNO,V_CSTTYP,V_MOBILE FROM PB_CSTINF WHERE PIF_ACCNO=IN_CARDNO;	
	
	IF V_CUSTNO IS NULL OR V_CUSTNO='' THEN
		SET OUT_CSTTYPE='2';
		SET OUT_CSTNO='EMPTY';
		SET OUT_MOBILE='';
	ELSE
		IF V_CSTTYP='0' THEN
			SET OUT_CSTTYPE='0';			
		ELSE
			SET OUT_CSTTYPE='1';
		END IF;		
		SET OUT_CSTNO=V_CUSTNO;
		SET OUT_MOBILE=V_MOBILE;
	END IF;	
	
	SET PROC_RET_CODE='00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_EACCOUNT_ADD_CUST ( 
	IN IN_CUSTNAME		VARCHAR(30),
	IN IN_CUSTNAMEEN	VARCHAR(30),
	IN IN_CUSTSEX		VARCHAR(1),
	IN IN_CTFTYPE		VARCHAR(2),
	IN IN_CTFNO			VARCHAR(30),
	IN IN_ADDRESS		VARCHAR(60),
	IN IN_ZIPCODE		VARCHAR(6),
	IN IN_EMAIL			VARCHAR(60),
	IN IN_CARDNO		VARCHAR(30),
	IN IN_MOBILE		VARCHAR(20),
	IN IN_AREANO		VARCHAR(6),
	IN IN_TELLERNO		VARCHAR(10),
	IN IN_BANKNO		VARCHAR(6),
	IN IN_NODENO		VARCHAR(6),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_CUSTID		VARCHAR(10)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛寮€鎴?-- 杈撳叆鍙傛暟锛?-- IN IN_CUSTNAME	 瀹㈡埛濮撳悕锛?-- IN IN_CUSTNAMEEN	 濮撳悕鎷奸煶/鑻辨枃鍚嶏細
-- IN IN_CUSTSEX	 瀹㈡埛鎬у埆锛?-- IN IN_CTFTYPE	 璇佷欢绫诲瀷锛?-- IN IN_CTFNO		 璇佷欢鍙风爜锛?-- IN IN_ADDRESS	 鑱旂郴鍦板潃锛?-- IN IN_ZIPCODE	 閭斂缂栫爜锛?-- IN IN_EMAIL		 E-mail 锛?-- IN IN_CARDNO	   涓诲崱鍗″彿锛氾細
-- IN IN_MOBILE	   鎵嬫満鍙风爜锛?-- IN IN_AREANO		 鍦板尯鍙?-- IN IN_TELLERNO	 寮€鎴锋煖鍛樺彿       
-- IN IN_BANKNO		 鍒嗚鍙?-- IN IN_NODENO		 缃戠偣鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME VARCHAR(14);
	DECLARE V_CUSTNO VARCHAR(10);
	DECLARE V_CUSTNO_SEQ BIGINT;
	DECLARE V_AREANO VARCHAR(6);
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF EXISTS (
		SELECT 1
		FROM PB_CSTINF 
		WHERE PIF_ACCNO = IN_CARDNO
	) THEN
		SET PROC_RET_CODE = '30181';
		RETURN;		
	END IF;
		
	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	SET V_AREANO = SUBSTR(IN_AREANO,1,3);
	--鐢熸垚缃戦摱瀹㈡埛鍙?	SELECT NEXTVAL FOR PB_CUSTNO
	INTO V_CUSTNO_SEQ
	FROM SYSIBM.SYSDUMMY1;
	SET V_CUSTNO = LEFT(CHAR(DECIMAL(V_CUSTNO_SEQ,10)),10);	
	
	--灏嗙敤鎴蜂俊鎭彃鍏ヤ釜浜哄鎴峰熀鏈俊鎭〃
	INSERT INTO PB_CSTINF
	(
		PIF_CSTNO,
		PIF_ACCNO,
		PIF_AREACODE,
		PIF_CSTTYP,
		PIF_CERTTYP,
		PIF_NAMECN,
		PIF_NAMEEN,
		PIF_SEX,
		PIF_CTFTYP,
		PIF_CTFNO,
		PIF_MOBILE,
		PIF_ADDRESS,
		PIF_ZIPCODE,
		PIF_EMAIL,
		PIF_STT,
		PIF_OPENTYP,
		PIF_OPENTELLER,
		PIF_OPENBRANCHNO,
		PIF_OPENNETNO,
		PIF_OPENDATE,
		PIF_CHGTELLER,
		PIF_CHGBRANCHNO,
		PIF_CHGNETNO,
		PIF_LASTCHGTIM
	)
	VALUES
	(
		V_CUSTNO,
		IN_CARDNO,
		V_AREANO,
		'0',
		'0',
		IN_CUSTNAME,
		IN_CUSTNAMEEN,
		IN_CUSTSEX,
		IN_CTFTYPE,
		IN_CTFNO,
		IN_MOBILE,
		IN_ADDRESS,
		IN_ZIPCODE,
		IN_EMAIL,
		'2',
		'a',
		IN_TELLERNO,
		IN_BANKNO,
		IN_NODENO,
		SUBSTR(V_DATETIME,1,8),
		IN_TELLERNO,
		IN_BANKNO,
		IN_NODENO,
		V_DATETIME
	);
	
	--灏嗕俊鎭彃鍏ヤ釜浜哄鎴锋敞鍐屽崱鍒楄〃
	INSERT INTO PB_ACCINF
	(
		PAI_CSTNO,
		PAI_CARDNO,
		PAI_ALIAS,
		PAI_CARDTYP,
		PAI_CARDKIND,
		PAI_MSTFLAG,
		PAI_HLDNAME,
		PAI_HLDSEX,
		PAI_HLDCTFTYP,
		PAI_HLDCTFNO,
		PAI_FLAG,
		PAI_COMMFLAG,
		PAI_CHGTELLER,
		PAI_CHGBRANCHNO,
		PAI_CHGNETNO,
		PAI_LASTCHGTIM,
		PAI_EACCFLAG
	)
	VALUES
	(
		V_CUSTNO,
		IN_CARDNO,
		'鐢靛瓙璐︽埛',
		'0',
		'0',
		'1',
		IN_CUSTNAME,
		IN_CUSTSEX,
		IN_CTFTYPE,
		IN_CTFNO,
		'0',
		'1',
		IN_TELLERNO,
		IN_BANKNO,
		IN_NODENO,
		V_DATETIME,
		'1'
	);
	IF NOT EXISTS (SELECT 1 FROM PB_CARDLMT WHERE PCL_CARDNO = IN_CARDNO) THEN
		INSERT INTO PB_CARDLMT
			(
				PCL_CARDNO,
				PCL_BTMAMT,
				PCL_TOPAMT,
				PCL_LASTCSTNO,
				PCL_LASTTIM
				)
		VALUES
			(
				IN_CARDNO,
				DECIMAL('0.00',15,2),
				DECIMAL('50000.00',15,2),
				V_CUSTNO,
				V_DATETIME
			);
	ELSE
		UPDATE PB_CARDLMT
			SET PCL_BTMAMT = DECIMAL('0',15,2),
					PCL_TOPAMT = DECIMAL('50000.00',15,2),
					PCL_LASTCSTNO = V_CUSTNO,
					PCL_LASTTIM = V_DATETIME
			WHERE PCL_CARDNO = IN_CARDNO;
	END IF;
	COMMIT;	
	SET OUT_CUSTID=V_CUSTNO;
	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_ADD_EACC_TO_MAINCARD (
	IN IN_CARDNO        VARCHAR(30),
	IN IN_CUSTNO		VARCHAR(10),
	IN IN_CUSTNAME		VARCHAR(30),
	IN IN_CUSTSEX		CHAR(1),
	IN IN_CTFTYPE		VARCHAR(2),
	IN IN_CTFNO			VARCHAR(30),
	IN IN_ALIAS			VARCHAR(30),
	IN IN_TELLERNO		VARCHAR(10),
	IN IN_BANKNO		VARCHAR(6),	
	IN IN_NODENO		VARCHAR(6),
	OUT PROC_RET_CODE	VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 灏唀璐︽埛涓嬫寕鍒扮綉閾朵富鍗′笅
-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO   e璐︽埛鍗″彿
-- IN IN_CUSTNO   涓诲崱缃戦摱瀹㈡埛鍙?-- IN IN_CUSTNAME	 瀹㈡埛濮撳悕锛?-- IN IN_CTFTYPE	 璇佷欢绫诲瀷锛?-- IN IN_CTFNO		 璇佷欢鍙风爜锛?-- IN IN_TELLERNO	 寮€鎴锋煖鍛樺彿       
-- IN IN_BANKNO		 鍒嗚鍙?-- IN IN_NODENO		 缃戠偣鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN
	DECLARE V_DATETIME VARCHAR(14);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	IF EXISTS (
		SELECT 1
		FROM PB_ACCINF 
		WHERE PAI_CSTNO = IN_CUSTNO AND PAI_CARDNO=IN_CARDNO
	) THEN
		SET PROC_RET_CODE = '30181';
		RETURN;		
	END IF;
	
	INSERT INTO PB_ACCINF
	(
		PAI_CSTNO,
		PAI_CARDNO,
		PAI_ALIAS,
		PAI_CARDTYP,
		PAI_CARDKIND,
		PAI_MSTFLAG,
		PAI_RELATETIM,
		PAI_HLDNAME,
		PAI_HLDSEX,
		PAI_HLDCTFTYP,
		PAI_HLDCTFNO,
		PAI_FLAG,
		PAI_COMMFLAG,
		PAI_CHGTELLER,
		PAI_CHGBRANCHNO,
		PAI_CHGNETNO,
		PAI_LASTCHGTIM,
		PAI_EACCFLAG
	)
	VALUES
	(
		IN_CUSTNO,
		IN_CARDNO,
		IN_ALIAS,
		'0',
		'0',
		'0',
		V_DATETIME,
		IN_CUSTNAME,
		IN_CUSTSEX,
		IN_CTFTYPE,
		IN_CTFNO,
		'0',
		'0',
		IN_TELLERNO,
		IN_BANKNO,
		IN_NODENO,
		V_DATETIME,
		'1'
	);
	
	IF NOT EXISTS (SELECT 1 FROM PB_CARDLMT WHERE PCL_CARDNO = IN_CARDNO)THEN
		INSERT INTO PB_CARDLMT
			(
				PCL_CARDNO,
				PCL_BTMAMT,
				PCL_TOPAMT,
				PCL_LASTCSTNO,
				PCL_LASTTIM
				)
		VALUES
			(
				IN_CARDNO,
				DECIMAL('0.00',15,2),
				DECIMAL('50000.00',15,2),
				IN_CUSTNO,
				V_DATETIME
			);
	ELSE
		UPDATE PB_CARDLMT
			SET PCL_BTMAMT = DECIMAL('0',15,2),
					PCL_TOPAMT = DECIMAL('50000.00',15,2),
					PCL_LASTCSTNO = IN_CUSTNO,
					PCL_LASTTIM = V_DATETIME
			WHERE PCL_CARDNO = IN_CARDNO;
	END IF;
	
	COMMIT;	
	
	SET PROC_RET_CODE='00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_GET_3DCUSTINFO (
	IN IN_ACCNO			VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_CSTTYP		CHAR(1),
	OUT OUT_SEX			CHAR(1)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鑾峰彇3d瀹㈡埛淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN IN_ACCNO	璐﹀彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CSTTYP锛氬鎴风被鍨?-- OUT_SEX锛氬鎴锋€у埆
------------------------------------------------------------------------
BEGIN
	SELECT
		PIF_CSTTYP,
		PIF_SEX
	INTO
		OUT_CSTTYP,
		OUT_SEX
	FROM PB_CSTINF
	WHERE 
		PIF_ACCNO = IN_ACCNO;
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_COMM_EACC_CHECK (
	IN IN_ACCNO			VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_ACCTYP		VARCHAR(2)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒ゆ柇甯愭埛绫诲瀷锛?0-鏅€氬笎鎴凤紝01-鐢靛瓙甯愭埛锛?-- 杈撳叆鍙傛暟锛?-- IN IN_ACCNO	璐﹀彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ACCTYP 锛氬笎鎴风被鍨?------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	SELECT
		PCIF_ACCTYPE
	INTO
		OUT_ACCTYP
	FROM PB_COMMCSTINF
	WHERE 
		PCIF_ACCNO = IN_ACCNO;
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECK_EACC_APPEND(
	IN IN_CARDNO	 	 VARCHAR(30), 
	IN IN_CUSTNO	 	 VARCHAR(10), 
	OUT PROC_RET_CODE	 VARCHAR(5)
 ) 
  BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;

	IF EXISTS (
		SELECT 1
		FROM PB_ACCINF 
		WHERE PAI_CSTNO = IN_CUSTNO AND PAI_CARDNO=IN_CARDNO
	) THEN
		SET PROC_RET_CODE = '30181';
		RETURN;		
	END IF;
	
	
	SET PROC_RET_CODE='00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_EACC_CHECK_LOGONTYPE(
	IN IN_CTFTYPE       VARCHAR(2),
	IN IN_CTFNO  		VARCHAR(30),   
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_LOGONTYPE     CHAR(1)
)
BEGIN
	DECLARE V_LOGONTYPE CHAR(1);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;

	SET V_LOGONTYPE='2';
	
	IF EXISTS (
		SELECT 1
		FROM PB_CSTINF 
		WHERE PIF_CSTTYP='1' AND PIF_CTFTYP=IN_CTFTYPE AND PIF_CTFNO=IN_CTFNO
	) THEN
		SET V_LOGONTYPE = '1';
			
	END IF;
	
	IF EXISTS (
		SELECT 1
		FROM PB_CSTINF 
		WHERE PIF_CSTTYP='0' AND PIF_CTFTYP=IN_CTFTYPE AND PIF_CTFNO=IN_CTFNO AND PIF_OPENTYP='0'
	) THEN
		SET V_LOGONTYPE = '0';
			
	END IF;
	
	SET OUT_LOGONTYPE=V_LOGONTYPE;
	SET PROC_RET_CODE='00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GET_ALIAS (
	IN IN_CSTNO			VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_ALIAS		VARCHAR(20)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鐢ㄦ埛鍚?-- 杈撳叆鍙傛暟锛?-- IN IN_CSTNO	瀹㈡埛鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ALIAS锛氱敤鎴峰悕
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	SELECT
		PIF_ALIAS
	INTO
		OUT_ALIAS
	FROM PB_CSTINF
	WHERE 
		PIF_CSTNO = IN_CSTNO;
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_WODEZTC_JOURNAL
(
    IN IN_LOGTYP CHAR(1),
    IN IN_CORECSTNO VARCHAR(30),
    IN IN_CARDNO VARCHAR(30),
    IN IN_WDCARDNO VARCHAR(30),
    IN IN_CSTNAME VARCHAR(30),
    IN IN_TRANCOD VARCHAR(6),
    IN IN_PRODCOD VARCHAR(6),
    IN IN_CHANNEL CHAR(1),
    IN IN_STATE CHAR(1),
    IN IN_FLAG CHAR(1),
    IN IN_EACCFLAG CHAR(1),
	OUT PROC_RET_CODE VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娌冨痉鐩撮€氳溅鏃ュ織瀛樺偍杩囩▼

-- 杈撳叆鍙傛暟锛?-- IN_LOGTYP锛氭棩蹇楃被鍨?1锛氫氦鏄撴垚鍔熸垨澶辫触鏃惰鏃ュ織 2锛氱偣鍑绘矁寰峰浘鐗囨椂璁版棩蹇?-- IN_CORECSTNO锛氭牳蹇冨鎴峰彿
-- IN_CARDNO锛氫富鍗″彿
-- IN_WDCARDNO锛氭矁寰峰崱鍙?-- IN_CSTNAME锛氬鎴峰鍚?-- IN_TRANCOD锛氫笟鍔′唬鐮?-- IN_PRODCOD锛氫骇鍝佷唬鐮?-- IN_CHANNEL锛氭笭閬撴爣蹇?-- IN_STATE锛氱姸鎬佹爣蹇楋紝浜ゆ槗鎴愬姛鏃惰 0:寰呮縺娲?1:宸叉縺娲?2:宸茬淮鎶?3:宸叉矁寰積璐风敵璇?-- IN_FLAG锛氭垚鍔熷け璐ユ爣蹇楋紝浜ゆ槗鎴愬姛鎴栧け璐ユ椂璁?0:鎴愬姛 1锛氬け璐?-- IN_EACCFLAG锛氱壒娈婂崱鏍囧織锛?锛氶潪鐗规畩鍗?5锛氭矁寰峰崱

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛氬攼瑾屾
-- 鏈€鍚庝慨鏀规棩鏈燂細2011.07.08
------------------------------------------------------------------------

BEGIN
    -- 鍙橀噺澹版槑
	DECLARE V_LOGON	VARCHAR(20);
    DECLARE V_DATETIME VARCHAR(14);
    DECLARE V_RANDOM INTEGER;
    DECLARE V_LENGTH INTEGER;

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SET V_RANDOM = INTEGER(RAND()*1000000);
    SET V_LOGON = RTRIM(CHAR(V_RANDOM));
    SET V_LENGTH = 6 - LENGTH(V_LOGON);
    WHILE V_LENGTH > 0 DO
      SET V_LOGON = CONCAT('0',V_LOGON);--鍓嶈ˉ闆?      SET V_LENGTH = V_LENGTH - 1;
    END WHILE;
	
	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	SET V_LOGON = CONCAT(V_DATETIME,V_LOGON);

    -- 鏇存柊鏃ュ織淇℃伅
    INSERT INTO PB_WODEZTC_LOG
        (PWL_LOGNO, PWL_LOGTIM, PWL_LOGTYPE, PWL_CORECSTNO, PWL_CARDNO, PWL_WDCARDNO, PWL_CSTNAME, PWL_TRANCOD, PWL_PRODCOD, PWL_CHANNEL, PWL_STATE, PWL_FLAG, PWL_EACCFLAG) 
    VALUES
        (V_LOGON, V_DATETIME, IN_LOGTYP, IN_CORECSTNO, IN_CARDNO, IN_WDCARDNO, IN_CSTNAME, IN_TRANCOD, IN_PRODCOD, IN_CHANNEL, IN_STATE, IN_FLAG, IN_EACCFLAG);
        
    COMMIT;
    
	SET PROC_RET_CODE = '00000';   
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECK_EACCOUNT_APPEND(
	IN IN_CUSTID	 	 VARCHAR(10), 
	IN IN_CARDNO	 	 VARCHAR(30), 
	OUT PROC_RET_CODE	 VARCHAR(5)
 ) 
  BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;

	IF NOT EXISTS (
		SELECT 1
		FROM PB_ACCINF 
		WHERE PAI_CSTNO = IN_CUSTID AND PAI_CARDNO=IN_CARDNO
	) THEN
		SET PROC_RET_CODE = '30183';
		RETURN;		
	END IF;
	
	
	SET PROC_RET_CODE='00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CP_LOGON
(
    IN IN_CSTNO VARCHAR(30), 
    IN IN_CARDSECT VARCHAR(10), 
    OUT PROC_RET_CODE VARCHAR(5), 
    OUT OUT_CSTNO VARCHAR(10), 
    OUT OUT_COREID VARCHAR(13),
    OUT OUT_CORPID VARCHAR(5),
    OUT OUT_ACCOUNT VARCHAR(30),
    OUT OUT_HOST_ACCOUNT VARCHAR(30),
    OUT OUT_CST_NAME VARCHAR(30), 
    OUT OUT_CST_NAMEEN VARCHAR(30), 
    OUT OUT_LOVENAME VARCHAR(30),
    OUT OUT_SEX CHAR(1),
    OUT OUT_BIRTHDAY VARCHAR(8),
    OUT OUT_CTF_TYPE VARCHAR(2), 
    OUT OUT_CTF_NO VARCHAR(30), 
    OUT OUT_MOBIL VARCHAR(20),
    OUT OUT_FIRST_FLAG VARCHAR(1), 
    OUT OUT_ADDRESS VARCHAR(60),
    OUT OUT_PHONE VARCHAR(20),
    OUT OUT_ZIPCODE VARCHAR(6),
    OUT OUT_EMAIL  VARCHAR(60), 
    OUT OUT_LAST_TIME VARCHAR(14),
    OUT OUT_LASTLOGON_IPADD VARCHAR(20),
    OUT OUT_CPKEYINDEX VARCHAR(7),
    OUT OUT_ROLE VARCHAR(2)
 ) 
    READS SQL DATA 
 
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱瀹㈡埛鍒濆鍖栬幏鍙栧鎴蜂俊鎭?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿
-- IN_CARDSECT: 鍗℃

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CSTNO锛氬鎴峰彿
-- OUT_COREID :鏍稿績瀹㈡埛鍙?-- OUT_CORPID:鍚堜綔琛岀被鍒?-- OUT_ACCOUNT锛氬悎浣滆鍗″彿
-- OUT_HOST_ACCOUNT锛氫氦琛岀數瀛愯处鎴?-- OUT_CST_NAME锛氬鎴蜂腑鏂囧悕
-- OUT_CST_NAMEEN锛氬鎴疯嫳鏂囧悕
-- OUT_LOVENAME锛氭杩庤
-- OUT_SEX锛氭€у埆
-- OUT_BIRTHDAY锛氬嚭鐢熸棩鏈?-- OUT_CTF_TYPE锛氳瘉浠剁被鍨?-- OUT_CTF_NO锛氳瘉浠跺彿鐮?-- OUT_MOBIL锛氭墜鏈哄彿鐮?-- OUT_FIRST_FLAG锛氭槸鍚﹂娆＄櫥褰?0锛嶅惁 1锛嶆槸
-- OUT_ADDRESS锛氳仈绯诲湴鍧€
-- OUT_PHONE锛氳仈绯荤數璇?-- OUT_ZIPCODE锛氶偖缂?-- OUT_EMAIL锛歟mail鍦板潃
-- OUT_LAST_TIME锛氭渶杩戠櫥褰曟椂闂?-- OUT_LASTLOGON_IPADD锛氭渶杩戠櫥褰昳p鍦板潃
-- OUT_CPKEYINDEX锛氱洰鐨勭储寮?-- OUT_ROLE锛氬鎴疯鑹?
-- 鏈€鍚庝慨鏀逛汉锛歅ENGXB
-- 鏈€鍚庝慨鏀规棩鏈燂細2012.07.09
------------------------------------------------------------------------
BEGIN
    
    -- 澹版槑鍙橀噺
	DECLARE V_FIRSTFLAG VARCHAR(1);
    
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
    -- 鑾峰彇瀹㈡埛鍩烘湰淇℃伅
    SELECT PCCI_CSTNO,PCCI_COREID,PCCI_CORPID,PCCI_ACCNO,PCCI_CARDNO,PCCI_NAMECN,PCCI_NAMEEN,PCCI_LOVENAME,PCCI_SEX,PCCI_BIRTHDAY,PCCI_CTFTYP,PCCI_CTFNO,PCCI_MOBILE,PCCI_STT,PCCI_ADDRESS,PCCI_PHONE,PCCI_ZIPCODE,PCCI_EMAIL,PCCI_LASTLGNTIM,PCCI_LASTLGNIP
    INTO OUT_CSTNO,OUT_COREID,OUT_CORPID,OUT_ACCOUNT,OUT_HOST_ACCOUNT,OUT_CST_NAME,OUT_CST_NAMEEN,OUT_LOVENAME,OUT_SEX,OUT_BIRTHDAY,OUT_CTF_TYPE,OUT_CTF_NO,OUT_MOBIL,V_FIRSTFLAG,OUT_ADDRESS,OUT_PHONE,OUT_ZIPCODE,OUT_EMAIL,OUT_LAST_TIME,OUT_LASTLOGON_IPADD
    FROM PB_COCSTINF
    WHERE PCCI_CSTNO = IN_CSTNO;
	
	IF OUT_CSTNO IS NULL OR OUT_CSTNO='' THEN
		SET PROC_RET_CODE = '30019';
		RETURN;
	END IF;
	
    -- 鑾峰彇鍚堜綔琛屼俊鎭?    SELECT PCCS_CPKEYINDEX,PCCS_ROLE
    INTO OUT_CPKEYINDEX,OUT_ROLE
    FROM PB_COCRDSCTINF
    WHERE PCCS_CARDSECT = IN_CARDSECT;
    
    IF OUT_ROLE IS NULL OR OUT_ROLE='' THEN
		SET PROC_RET_CODE = '30035';
		RETURN;
	END IF;

  IF V_FIRSTFLAG='2' THEN
        SET OUT_FIRST_FLAG = '1';
    ELSE
        SET OUT_FIRST_FLAG = '0';
    END IF;

    SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECK_ROSTER(
	IN IN_ROSTER_TYPE		VARCHAR(6),
	IN IN_ROSTER_VALUE		VARCHAR(50),
	OUT PROC_RET_CODE		VARCHAR(5),
	OUT OUT_INROSTER		VARCHAR(1)
 ) 
  BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	IF NOT EXISTS (
		SELECT 1 
		FROM PB_ROSTER 
		WHERE PRST_ROSTER_TYPE = IN_ROSTER_TYPE 
			AND PRST_ROSTER_VALSTR <= IN_ROSTER_VALUE AND PRST_ROSTER_VALEND >= IN_ROSTER_VALUE 
			AND PRST_NOTBEFORE <= CHAR(CURRENT TIMESTAMP) AND PRST_NOTNOTAFTER >= CHAR(CURRENT TIMESTAMP)
	) THEN
		SET OUT_INROSTER = '0';
	ELSE
		SET OUT_INROSTER = '1';
	END IF;
	
	SET PROC_RET_CODE='00000';
END
DB21034E  该命令被当作 SQL 语句来处理，因为它是无效的“命令行处理器”命令。在
SQL 处理期间，它返回：
SQL0206N  "PRST_NOTNOTAFTER" 在使用它的上下文中无效。  LINE NUMBER=15. 
SQLSTATE=42703

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_LOGON
(
    IN IN_CSTNO VARCHAR(30), 
    OUT PROC_RET_CODE VARCHAR(5), 
    OUT OUT_CSTNO VARCHAR(10), 
    OUT OUT_COREID VARCHAR(13),
    OUT OUT_HOST_ACCOUNT VARCHAR(30),
    OUT OUT_CSTTYP CHAR(1),
    OUT OUT_CST_NAME VARCHAR(30), 
    OUT OUT_CST_NAMEEN VARCHAR(30), 
    OUT OUT_LOVENAME VARCHAR(30),
    OUT OUT_SEX CHAR(1),
    OUT OUT_CTF_TYPE VARCHAR(2), 
    OUT OUT_CTF_NO VARCHAR(30), 
    OUT OUT_MOBIL VARCHAR(20), 
    OUT OUT_FIRST_FLAG VARCHAR(1), 
    OUT OUT_LAST_TIME VARCHAR(14),
    OUT OUT_USERLOGO VARCHAR(30),
    OUT OUT_CUSTOMIZE_FLAG CHAR(1),
    OUT OUT_CUSTOMIZE_TYPE CHAR(1),
    OUT OUT_CUSTOMIZE_ACC VARCHAR(30),
    OUT OUT_OPENBRANCHNO VARCHAR(6),
    OUT OUT_CUSTOMIZE_NETNO VARCHAR(6),
    OUT OUT_LASTLOGON_IPADD VARCHAR(20),
    OUT OUT_USUALMENU VARCHAR(300),
    OUT OUT_STYLE VARCHAR(20),
    OUT OUT_BIRTHDAY VARCHAR(8),
    OUT OUT_OPENTYP CHAR(1)
 ) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 3 
 
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱瀹㈡埛鍒濆鍖栬幏鍙栧鎴蜂俊鎭?
-- 杈撳叆鍙傛暟锛?-- IN_USERID锛氬鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CSTNO锛氬鎴峰彿
-- OUT_COREID :鏍稿績瀹㈡埛鍙?-- OUT_HOST_ACCOUNT锛氫富璐﹀彿
-- OUT_CSTTYP锛氬鎴风被鍨?-- OUT_CST_NAME锛氬鎴蜂腑鏂囧悕
-- OUT_CST_NAMEEN锛氬鎴疯嫳鏂囧悕
-- OUT_LOVENAME锛氬憿绉?-- OUT_SEX锛氭€у埆
-- OUT_CTF_TYPE锛氳瘉浠剁被鍨?-- OUT_CTF_NO锛氳瘉浠跺彿鐮?-- OUT_MOBIL锛氭墜鏈哄彿鐮?-- OUT_FIRST_FLAG锛氭槸鍚﹂娆＄櫥褰?0锛嶅惁 1锛嶆槸
-- OUT_LAST_TIME锛氭渶杩戠櫥褰曟椂闂?-- OUT_USERLOGO:瀹㈡埛涓€у浘鏍?-- OUT_CUSTOMIZE_FLAG锛氫釜浜洪椤靛畾鍒舵爣蹇?-- OUT_CUSTOMIZE_TYPE锛氬畾鍒剁被鍨?-- OUT_CUSTOMIZE_ACC锛氬畾鍒跺崱鍙?

-- CUR_CARD_INFO锛氫笅鎸傚崱缁撴灉闆?-- CUR_CHANNEL_CARD锛氶閬撻粯璁ょ櫥褰曞崱

-- 鏈€鍚庝慨鏀逛汉锛氶緳鏄庤秴
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.11.30
-- modify: wanglm
-- date: 20070815
-- content: add userLogo
-- modify: wujianc
-- date: 20080513
-- content: 娣诲姞鏈汉鏍囪瘑
-- modify;xuwei 
-- date:20081121
-- content: 娣诲姞鍙栨墜鏈洪摱琛屾敞鍐岀姸鎬佹爣蹇?-- modify:pengxb 
-- date:20100414
-- content: 淇敼鍒ゆ柇鏄惁鏈汉鐨勫鐞嗛€昏緫
------------------------------------------------------------------------
BEGIN
    
    -- 澹版槑鍙橀噺
	DECLARE V_FIRSTFLAG VARCHAR(1);
	DECLARE V_CSTNO VARCHAR(10);
	
	DECLARE CUR_CARD_INFO CURSOR  WITH RETURN TO CALLER FOR
		SELECT PAI_CARDNO,PAI_ALIAS,PAI_CARDTYP,PAI_CARDKIND,PAI_MSTFLAG,PAI_COMMFLAG,PAI_HLDNAME,
			PAI_EACCFLAG,PAI_HLDCTFTYP,PAI_HLDCTFNO
     	FROM PB_ACCINF WHERE PAI_CSTNO = IN_CSTNO ORDER BY PAI_MSTFLAG DESC;

    DECLARE CUR_CHANNEL_CARD CURSOR WITH RETURN TO CALLER FOR
        SELECT PDC_CARDNO, PDC_OPRTYP
        FROM PB_DFLCRD
        WHERE PDC_CSTNO = IN_CSTNO;
    
    DECLARE CUR_COMM_CARD CURSOR WITH RETURN TO CALLER FOR
        SELECT PCAI_CARDNO,PCAI_ALIAS,PCAI_CARDTYP,PCAI_HLDNAME,PCAI_HLDCTFTYP,PCAI_HLDCTFNO,PCAI_FLAG,PCAI_COMMONFLAG,PCAI_ACCTYPE
        FROM PB_COMMACCINF
        WHERE PCAI_CSTNO = IN_CSTNO;
            
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
    -- 鑾峰彇瀹㈡埛鍩烘湰淇℃伅
    SELECT PIF_CSTNO,PIF_RESERVE3,PIF_ACCNO,PIF_CSTTYP,PIF_NAMECN,PIF_NAMEEN,PIF_LOVENAME,PIF_SEX,PIF_CTFTYP,PIF_CTFNO,PIF_MOBILE,PIF_STT,PIF_LASTLGNTIM,PIF_RESERVE1,PIF_OPENBRANCHNO,PIF_OPENNETNO,PIF_LASTLGNIP,PIF_BIRTHDAY,PIF_OPENTYP
    INTO OUT_CSTNO,OUT_COREID,OUT_HOST_ACCOUNT,OUT_CSTTYP,OUT_CST_NAME,OUT_CST_NAMEEN,OUT_LOVENAME,OUT_SEX,OUT_CTF_TYPE,OUT_CTF_NO,OUT_MOBIL,
        V_FIRSTFLAG,OUT_LAST_TIME,OUT_USERLOGO,OUT_OPENBRANCHNO,OUT_CUSTOMIZE_NETNO,OUT_LASTLOGON_IPADD,OUT_BIRTHDAY,OUT_OPENTYP
    FROM PB_CSTINF
    WHERE PIF_CSTNO = IN_CSTNO;
	
	IF OUT_CSTNO IS NULL OR OUT_CSTNO='' THEN
		SET PROC_RET_CODE = '30019';
		RETURN;
	END IF;

  IF V_FIRSTFLAG='2' THEN
        SET OUT_FIRST_FLAG = '1';
    ELSE
        SET OUT_FIRST_FLAG = '0';
    END IF;

	 --鑾峰彇鐢ㄦ埛瀹氬埗淇℃伅
	 SELECT PUD_USUALMENU,PUD_STYLE
	    INTO OUT_USUALMENU,OUT_STYLE
		FROM PB_USERDEFINED
		WHERE PUD_CSTNO = IN_CSTNO;
    
	SET OUT_CUSTOMIZE_FLAG = '0';
               
    -- 鎵撳紑娓告爣
    OPEN CUR_CARD_INFO;
    OPEN CUR_CHANNEL_CARD;
    OPEN CUR_COMM_CARD;

    SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_JOURNAL
(
    IN IN_LOGON VARCHAR(20),
    IN IN_CSTTYP VARCHAR(1),
    IN IN_CSTNO VARCHAR(30),
    IN IN_CARDNO VARCHAR(30),
    IN IN_TRANCOD VARCHAR(6),
    IN IN_CHANNEL CHAR(1),
    IN IN_FLAG CHAR(1),
    IN IN_OPRRLT VARCHAR(20),
    IN IN_IP VARCHAR(20),
    IN IN_OPRDSCE VARCHAR(2000),
	OUT PROC_RET_CODE VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉瀹㈡埛鏃ュ織瀛樺偍杩囩▼

-- 杈撳叆鍙傛暟锛?-- IN_LOGON锛氭棩蹇楀彿
-- IN_CSTTYP锛氬鎴风被鍨?-- IN_CSTNO锛氬鎴峰彿
-- IN_CARDNO锛氬崱鍙?-- IN_TRANCOD锛氫氦鏄撲唬鐮?-- IN_CHANNEL锛氭笭閬撴爣蹇?-- IN_FLAG锛氭垚鍔熸爣蹇?-- IN_OPRRLT锛氳繑鍥炵爜
-- IN_IP锛氱櫥褰旾P
-- IN_OPRDSCE锛氭棩蹇楁弿杩?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛氶緳鏄庤秴
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.09.05
------------------------------------------------------------------------

BEGIN
    -- 鍙橀噺澹版槑
    DECLARE V_DATETIME VARCHAR(14);

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');

    -- 鏇存柊鏃ュ織淇℃伅
    INSERT INTO PB_CSTLOG
        (PCL_LOGNO, PCL_LOGTIM, PCL_CSTTYP, PCL_CSTNO, PCL_CARDNO, PCL_TRANCOD, PCL_CHANNEL, 
        PCL_FLAG, PCL_OPRRLT, PCL_IP, PCL_OPRDSCE) 
    VALUES
        (IN_LOGON, V_DATETIME, IN_CSTTYP, IN_CSTNO, IN_CARDNO, IN_TRANCOD, IN_CHANNEL, 
        IN_FLAG, IN_OPRRLT, IN_IP, IN_OPRDSCE);
        
    COMMIT;
    
	SET PROC_RET_CODE = '00000';   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_LOGON_CHKCRDSTT
(
    IN IN_CARDNO VARCHAR(30),
	OUT PROC_RET_CODE VARCHAR(5)
)
READS SQL DATA 
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 澶т紬鐢ㄦ埛鍗＄姸鎬佹娴嬪瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬崱鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈燂細2007.03.27
------------------------------------------------------------------------

BEGIN
    -- 鍙橀噺澹版槑
    DECLARE V_TIMES INT;        -- 澶辫触娆℃暟

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	
	SELECT PLF_TIMES
	INTO V_TIMES
	FROM PB_LOGFAIL
    WHERE PLF_CARDNO = IN_CARDNO AND PLF_TYPE='0';
	
	IF V_TIMES IS NULL 
	THEN
		SET PROC_RET_CODE = '00000';
		RETURN;
	END IF;
	
    
    IF V_TIMES > 5 THEN
        SET PROC_RET_CODE = '30006';
		RETURN;
	END IF;
    
	SET PROC_RET_CODE = '00000';   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_LOGON_UPDFAILTIMES
(
    IN IN_CARDNO VARCHAR(30),
    IN IN_SUCCESSFLAG CHAR(1),
	OUT PROC_RET_CODE VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐧昏澶т紬鐢ㄦ埛鍗＄櫥褰曞瘑鐮佽緭鍏ラ敊璇?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬崱鍙?-- IN_SUCCESSFLAG 鍗″瘑鐮佹纭笌鍚︽爣蹇?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛氶緳鏄庤秴
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.09.19
------------------------------------------------------------------------

BEGIN
    -- 鍙橀噺澹版槑
    DECLARE V_DATE				CHAR(14);			-- 褰撳墠鏃堕棿

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF IN_SUCCESSFLAG = '0' THEN
	    -- 鐧诲綍鎴愬姛鍒犻櫎涔嬪墠鐨勫け璐ヨ褰?	    DELETE
	    FROM PB_LOGFAIL
	    WHERE PLF_CARDNO = IN_CARDNO AND PLF_TYPE='0';
    ELSE
        -- 鐧诲綍澶辫触澶勭悊澶辫触璁板綍
        -- 鑾峰彇褰撳墠鏃ユ湡
		SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
	    IF NOT EXISTS 
    		(
    			SELECT 1
    			FROM PB_LOGFAIL
    			WHERE PLF_CARDNO = IN_CARDNO AND PLF_TYPE='0'
    		) 
    	THEN
    	    -- 绗竴娆″瘑鐮佽緭鍏ラ敊璇?    	    INSERT INTO PB_LOGFAIL
			(
				PLF_CARDNO,
				PLF_TIMES,
				PLF_UPDTIM,
				PLF_TYPE
			)
			VALUES
			(
				IN_CARDNO,
				1,
				V_DATE,
				'0'
			);
        ELSE
            -- 闈炵涓€娆″瘑鐮佽緭鍏ラ敊璇?			UPDATE PB_LOGFAIL
			SET
				PLF_TIMES = PLF_TIMES + 1
			WHERE 
				PLF_CARDNO = IN_CARDNO AND PLF_TYPE='0';
		END IF;
	END IF;
	
	COMMIT;
    
	SET PROC_RET_CODE = '00000';   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_LOGON_UPDCHANNELCARD
(
    IN IN_CSTNO VARCHAR(10),
    IN IN_CARDNO VARCHAR(30),
    IN IN_OPRTYPE CHAR(1),
	OUT PROC_RET_CODE VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏇存柊棰戦亾鍒囨崲榛樿鍗?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿
-- IN_CARDNO锛氬崱鍙?-- IN_OPRTYPE锛氱櫥褰曚笟鍔＄被鍨?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛氶緳鏄庤秴
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.09.20
------------------------------------------------------------------------
BEGIN
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
    IF NOT EXISTS 
		(
			SELECT 1 
			FROM PB_DFLCRD
			WHERE PDC_CSTNO = IN_CSTNO
			AND PDC_OPRTYP = IN_OPRTYPE
		) 
	THEN
	    -- 瀹㈡埛涓嶅瓨鍦ㄨ棰戦亾鐨勯粯璁ゅ崱鍙?	    INSERT INTO PB_DFLCRD
		(
			PDC_CSTNO,
			PDC_CARDNO,
			PDC_OPRTYP
		)
		VALUES
		(
			IN_CSTNO,
			IN_CARDNO,
			IN_OPRTYPE
		);
    ELSE
        -- 鏇存柊宸插瓨鍦ㄧ殑榛樿鍗″彿
		UPDATE PB_DFLCRD
		SET
			PDC_CARDNO = IN_CARDNO
		WHERE 
			PDC_CSTNO = IN_CSTNO
		AND PDC_OPRTYP = IN_OPRTYPE;
		
	END IF;
	
	COMMIT;
    
	SET PROC_RET_CODE = '00000';   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_UPDATE_TRNFLW
(
    IN IN_CSTNO VARCHAR(30),
    IN IN_CHANNEL CHAR(1),
    IN IN_HOSTCODE VARCHAR(20),
    IN IN_ACCDATE VARCHAR(8),
    IN IN_LOGTYP CHAR(1),
    IN IN_HSTFLWNO VARCHAR(20),
    IN IN_STT VARCHAR(3),
    IN IN_TRANCODE VARCHAR(6),
    IN IN_DEALTYP CHAR(2),
    IN IN_TRANTYP CHAR(1),
    IN IN_BKGFLW VARCHAR(20),
    IN IN_PAYBRA  VARCHAR(6),
    IN IN_PAYCARDNO VARCHAR(30),
    IN IN_PAYCRYTYP VARCHAR(3),
    IN IN_PAYAMT VARCHAR(20),
    IN IN_CASHFLAG CHAR(1),
    IN IN_RCVBRA VARCHAR(6),
    IN IN_RCVCARDNO VARCHAR(30),
    IN IN_RCVNAME VARCHAR(60),
    IN IN_RCVCRYTYP VARCHAR(3),
    IN IN_RCVAMT VARCHAR(30),
    IN IN_HANGTYP CHAR(2),
    IN IN_REMARK CHAR(100),
    IN IN_FLOWNO CHAR(20),
    IN IN_FUNDCODE VARCHAR(6),
    IN IN_TOFUNDCODE VARCHAR(6),    
    IN IN_TRANKIND VARCHAR(1), 
    IN IN_RCVOPENBANK VARCHAR(60),
    IN IN_RCVOPENCITY VARCHAR(60),
    IN IN_RCVOPENAREA VARCHAR(60),
    IN IN_RCVOPENBRANCH VARCHAR(60),
    IN IN_TRANFEE VARCHAR(20),
    OUT PROC_RET_CODE VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏇存柊浜ゆ槗娴佹按琛?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿
-- IN_CHANNEL锛氭笭閬撴爣蹇?-- IN_HOSTCODE锛氫富鏈轰氦鏄撲唬鐮?-- IN_ACCDATE锛氫細璁℃棩鏈?-- IN_LOGTYP锛氱櫥褰曠被鍨?-- IN_HSTFLWNO锛氫富鏈烘祦姘村彿
-- IN_STT锛氱姸鎬?-- IN_TRANCODE锛氱綉閾朵氦鏄撲唬鐮?-- IN_DEALTYP锛氫氦鏄撳垎绫?-- IN_TRANTYP锛氫氦鏄撶被鍨?-- IN_BKGFLW锛氶绾︽祦姘村彿
-- IN_PAYBRA锛氫粯娆炬柟鍒嗚鍙?-- IN_PAYCARDNO锛氫粯娆炬柟鍗″彿
-- IN_PAYCRYTYP锛氫粯娆炬柟甯佺
-- IN_PAYAMT锛氫粯娆炬柟閲戦
-- IN_CASHFLAG锛氶挒姹囨爣蹇?-- IN_RCVBRA锛氭敹娆炬柟鍒嗚鍙?-- IN_RCVCARDNO锛氭敹娆炬柟鍗″彿
-- IN_RCVNAME锛氭敹娆炬柟鎴峰悕
-- IN_RCVCRYTYP锛氭敹娆炬柟甯佺
-- IN_RCVAMT锛氭敹娆炬柟閲戦
-- IN_HANGTYP锛氫氦鏄撴柟寮?-- IN_REMARK: 杞笎闄勮█
-- IN_FLOWNO锛氫氦鏄撴祦姘村彿
-- IN_FUNDCODE:鍩洪噾浠ｇ爜
-- IN_TOFUNDCODE:杞叆鍩洪噾浠ｇ爜
-- IN_TRANKIND : 杞处绉嶇被
-- IN_RCVOPENBANK :鏀舵浜哄紑鎴烽摱琛?-- IN_RCVOPENCITY :鏀舵浜哄紑鎴峰煄甯?-- IN_RCVOPENAREA :鏀舵浜哄紑鎴峰湴鍖?-- IN_RCVOPENBRANCH :鏀舵浜哄紑鎴风綉鐐?-- IN_TRANFEE: 杞处鎵嬬画璐?

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 淇敼浜猴細wujianc
-- 淇敼鏃ユ湡锛?006.12.30
-- MODIFY: michael
-- DATE: 2007.07.17
-- MODIFY: pengxb
-- DATE: 2009.01.21
-- 淇敼鍘熷洜锛氭壒閲忚浆璐?鎵规鍙烽棶棰?
------------------------------------------------------------------------
BEGIN
    -- 鍙橀噺澹版槑
    DECLARE V_DATE				VARCHAR(14);			-- 褰撳墠鏃堕棿

   	DECLARE V_BATFLAG CHAR(1);
	DECLARE V_STT CHAR(2);
	
	SET V_BATFLAG='0';
	SET V_STT=SUBSTR(IN_STT,1,2);
	IF LENGTH(IN_STT)=3 THEN
		SET V_BATFLAG='1';
	END IF;
	
	
	
	-- 鑾峰彇褰撳墠鏃ユ湡
	SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
    
    INSERT INTO PB_TRNFLW
        (PTF_TRNFLW, PTF_CSTNO, PTF_BATNO, PTF_CHANNEL, PTF_BATFLAG, 
        PTF_TRANCODE, PTF_HOSTCODE, PTF_DEALTYP, PTF_TRANTYP, PTF_BKGFLW, 
        PTF_ACCDATE, PTF_TRANTIM, PTF_PAYBRA, PTF_PAYCARDNO, PTF_PAYCRYTYP, 
        PTF_PAYAMT, PTF_CASHFLAG, PTF_RCVBRA, PTF_RCVCARDNO, PTF_RCVNAME, 
        PTF_RCVCRYTYP, PTF_RCVAMT, PTF_HANGTYP, PTF_LOGTYP, PTF_HSTFLWNO, 
        PTF_STT, PTF_REMARK, PTF_FUNDCODE, PTF_TOFUNDCODE, PTF_TRANKIND,PTF_RCVOPENBANK,
        PTF_RCVOPENCITY,PTF_RCVOPENAREA,PTF_RCVOPENBRANCH,PTF_TRANFEE)
    VALUES
        (IN_FLOWNO, IN_CSTNO, 
        CASE
        WHEN V_BATFLAG='1' THEN IN_BKGFLW
        ELSE IN_FLOWNO 
        END, 
        IN_CHANNEL, V_BATFLAG, 
        IN_TRANCODE, IN_HOSTCODE, IN_DEALTYP, IN_TRANTYP, 
        CASE
        WHEN V_BATFLAG='1' THEN ''
        ELSE IN_BKGFLW 
        END, 
        IN_ACCDATE, V_DATE, IN_PAYBRA, IN_PAYCARDNO, IN_PAYCRYTYP, 
        CASE
			WHEN IN_PAYAMT='' THEN 0
		ELSE DECIMAL(IN_PAYAMT,15,2)
		END,
		IN_CASHFLAG, IN_RCVBRA, IN_RCVCARDNO, IN_RCVNAME, 
        IN_RCVCRYTYP, 
        CASE
			WHEN IN_RCVAMT='' THEN 0
		ELSE DECIMAL(IN_RCVAMT,15,2)
		END,
        IN_HANGTYP, IN_LOGTYP, IN_HSTFLWNO, V_STT, IN_REMARK, IN_FUNDCODE, IN_TOFUNDCODE,IN_TRANKIND,IN_RCVOPENBANK,
        IN_RCVOPENCITY,IN_RCVOPENAREA,IN_RCVOPENBRANCH,
        CASE
		  WHEN IN_TRANFEE='' THEN 0
		ELSE DECIMAL(IN_TRANFEE,15,2)
		END);
        
	COMMIT;
    
	SET PROC_RET_CODE = '00000';   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_LOGON_FINDUSERID
(
    IN IN_CARDNO VARCHAR(30),
    IN IN_PASSWORD VARCHAR(50),
	OUT PROC_RET_CODE VARCHAR(5),
	OUT OUT_ALIAS VARCHAR(20),
	OUT OUT_MOBILE VARCHAR(20),
	OUT OUT_CSTTYPE CHAR(1)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏇存柊棰戦亾鍒囨崲榛樿鍗?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氱绾︿富鍗″彿
-- IN_PASSWORD锛氱綉閾跺瘑鐮?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ALIAS锛氱敤鎴风櫥褰曞悕
-- OUT_MOBILE锛氭敞鍐屾墜鏈哄彿鐮?-- OUT_CSTTYP锛氬鎴风被鍨?
-- 鏈€鍚庝慨鏀逛汉锛氶緳鏄庤秴
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.09.24
------------------------------------------------------------------------
BEGIN
    
    -- 澹版槑鍙橀噺
	DECLARE V_PASSWORD          VARCHAR(50);    -- 瀵嗙爜
	DECLARE V_STT               CHAR(1);        -- 鐢ㄦ埛鐘舵€?	DECLARE V_DATE				VARCHAR(14);	-- 褰撳墠鏃堕棿
	DECLARE V_CSTNO				VARCHAR(10);	-- 瀹㈡埛鍙?	DECLARE V_FAILNUM			INT;			-- 澶辫触娆℃暟
	DECLARE V_CSTTYP			CHAR(1);		-- 鐢ㄦ埛绫诲瀷
	DECLARE V_MOBILE			VARCHAR(20);	-- 鎵嬫満鍙风爜
    
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	-- 璧嬪€煎鎴风被鍨?	SET  OUT_CSTTYPE = '0';
	
	
    -- 鏌ヨ鐢ㄦ埛淇℃伅
    SELECT PIF_CSTNO, PIF_CSTTYP, PIF_ALIAS, PIF_PASSWORD, PIF_MOBILE, PIF_STT
    INTO V_CSTNO, V_CSTTYP, OUT_ALIAS, V_PASSWORD, V_MOBILE, V_STT
	FROM PB_CSTINF
	WHERE PIF_ACCNO = IN_CARDNO;
	
	
    IF V_CSTNO IS NULL OR V_CSTNO = '' THEN
	    -- 涓嶅瓨鐢ㄦ埛璇ュ崱浣滀负涓荤绾﹀崱鐨勫鎴?	    SET PROC_RET_CODE = '30007';
	    RETURN;
    END IF;
    
	
	SET OUT_MOBILE = V_MOBILE;
	
	IF V_MOBILE = '00000000000' THEN
	    SET OUT_CSTTYPE = '1';
    END IF;
	
	IF V_STT = '1' THEN
		-- 鐢ㄦ埛宸插喕缁?		SET PROC_RET_CODE = '30001';
		RETURN;
	END IF;
	
	IF V_STT = '2' THEN
		-- 鐢ㄦ埛浠庢湭鐧诲綍
		SET PROC_RET_CODE = '30002';
		RETURN;
	END IF;
	
	IF V_CSTTYP = '1' THEN
		-- 璇佷功鐢ㄦ埛
		SET PROC_RET_CODE = '30008';
		RETURN;
	END IF;
	
	SELECT
		PLF_TIMES
	INTO
		V_FAILNUM
	FROM PB_LOGFAIL
	WHERE 
		PLF_CARDNO = V_CSTNO AND PLF_TYPE='0';
	
	
	IF IN_PASSWORD <> V_PASSWORD THEN
		-- 鑾峰彇褰撳墠鏃ユ湡
		SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
		
		-- 妫€鏌ョ敤鎴风櫥闄嗘帶鍒惰〃
		IF V_FAILNUM IS NULL THEN
			-- 姝ょ敤鎴风涓€娆＄櫥闄嗗け璐?			INSERT INTO PB_LOGFAIL
			(
				PLF_CARDNO,
				PLF_TIMES,
				PLF_UPDTIM,
				PLF_TYPE
			)
			VALUES
			(
				V_CSTNO,
				1,
				V_DATE,
				'0'
			);
			
			COMMIT;
			
			SET PROC_RET_CODE = '30012';
		    RETURN;
		ELSE
			-- 闈炵涓€娆＄櫥闄嗗け璐?	
            IF V_FAILNUM = 5 THEN
				-- 鐧婚檰瀵嗙爜澶辫触6娆″悗鍐荤粨姝ょ敤鎴?				UPDATE PB_CSTINF
				SET
					PIF_STT = '1'
				WHERE 
					PIF_CSTNO = V_CSTNO;
				
				-- 鍒犻櫎瀹㈡埛瀵嗙爜澶辫触鐧诲綍琛ㄨ褰?				DELETE
				FROM PB_LOGFAIL
				WHERE 
				PLF_CARDNO = V_CSTNO AND PLF_TYPE='0';
				
				COMMIT;
				
				SET PROC_RET_CODE = '30004';
		        RETURN;
				
			ELSE
				-- 闈炵涓€娆＄櫥闄嗗け璐ワ紝澶辫触娆℃暟鍔?
				UPDATE PB_LOGFAIL
				SET
					PLF_TIMES = V_FAILNUM + 1
				WHERE 
					PLF_CARDNO = V_CSTNO AND PLF_TYPE='0';
					
			END IF;
	
		END IF;
		
		COMMIT;
		
		-- 鐢ㄦ埛瀵嗙爜涓嶆纭?		CASE V_FAILNUM
	    WHEN 1
	    THEN 
	        SET PROC_RET_CODE = '30013';
	        RETURN;
	    WHEN 2
	    THEN 
	        SET PROC_RET_CODE = '30014';
	        RETURN;
	    WHEN 3
	    THEN 
	        SET PROC_RET_CODE = '30015';
	        RETURN;
	    WHEN 4
	    THEN 
	        SET PROC_RET_CODE = '30016';
	        RETURN;
	    END CASE; 
    
    ELSE
	    -- 鎴愬姛妫€娴嬩竴娆″悗鍒犻櫎涔嬪墠鐧诲綍閿欒璁板綍
	    IF V_FAILNUM IS NOT NULL THEN 
			DELETE
			FROM PB_LOGFAIL
			WHERE 
			PLF_CARDNO = V_CSTNO AND PLF_TYPE='0';
        END IF;
        
        COMMIT;
        
	END IF;
    
	SET PROC_RET_CODE = '00000';   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_LOGON_FIRSTLOGONCHECK (
	IN IN_CARDNO                VARCHAR(30),
	OUT PROC_RET_CODE 			CHAR(5),
	OUT OUT_CSTNO               VARCHAR(10),
	OUT OUT_CARDNO              VARCHAR(30),
	OUT OUT_MOBILE              VARCHAR(20),
	OUT OUT_CSTTYP              CHAR(1)
)
READS SQL DATA 
------------------------------------------------------------------------
-- 娉ㄥ唽鐢ㄦ埛棣栨鐧诲綍瀹㈡埛淇℃伅鍚堟硶鎬ф牎楠屽瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氱绾︿富鍗″彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CSTNO锛氱敤鎴峰彿
-- OUT_CARDNO锛氬崱鍙?-- OUT_MOBILE锛氭墜鏈哄彿鐮?-- OUT_CSTTYP锛氬鎴风被鍨?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.Longmc
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.05.26
------------------------------------------------------------------------
BEGIN

	-- 瀹氫箟鍙橀噺
	DECLARE V_STT				CHAR(1);			-- 鐢ㄦ埛鐘舵€?	DECLARE V_MOBILE			VARCHAR(20);	    -- 鎵嬫満鍙风爜
	DECLARE V_CUSTTYPE			CHAR(1);			-- 鐢ㄦ埛绫诲瀷
	
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	-- 璧嬪€煎鎴风被鍨?	SET  OUT_CSTTYP = '0';
	
	SELECT
		PIF_CSTNO,
		PIF_ACCNO,
		PIF_CSTTYP,
		PIF_MOBILE,
		PIF_STT
	INTO
		OUT_CSTNO,
		OUT_CARDNO,
		V_CUSTTYPE,
		V_MOBILE,
		V_STT
	FROM PB_CSTINF
	WHERE 
		PIF_ACCNO = IN_CARDNO;
	
	
	
	-- 鑾峰彇瀹㈡埛淇℃伅
	IF OUT_CSTNO IS NULL OR OUT_CSTNO='' THEN
		SET PROC_RET_CODE = '30011';
		RETURN;
	END IF;
	
	
	SET OUT_MOBILE = V_MOBILE;
	
	IF V_CUSTTYPE = '1' THEN
	    -- 璇ョ敤鎴蜂负璇佷功鐢ㄦ埛
		SET PROC_RET_CODE = '30017';
		RETURN;
	END IF;
	
	IF V_STT = '0' THEN
		-- 鐢ㄦ埛宸茬粡瀹屾垚棣栨鐧诲綍
		SET PROC_RET_CODE = '30009';
		RETURN;
	END IF;
	
	IF V_STT = '1' THEN
		-- 鐢ㄦ埛宸插喕缁?		SET PROC_RET_CODE = '30001';
		RETURN;
	END IF;
	
	IF V_MOBILE = '00000000000' THEN
	    SET OUT_CSTTYP = '1';
    END IF;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_LOGON_FIRSTLOGONUPDFAILTIMES
(
    IN IN_CARDNO VARCHAR(30),
    IN IN_SUCCESSFLAG CHAR(1),
	OUT PROC_RET_CODE VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐧昏娉ㄥ唽鐢ㄦ埛棣栨鐧诲綍瀵嗙爜杈撳叆閿欒

-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿
-- IN_SUCCESSFLAG 鍗″瘑鐮佹纭笌鍚︽爣蹇?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛氶緳鏄庤秴
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.09.19
------------------------------------------------------------------------

BEGIN
    -- 鍙橀噺澹版槑
    DECLARE V_DATE				CHAR(14);			-- 褰撳墠鏃堕棿
    DECLARE V_FAILNUM           INT;                -- 澶辫触娆℃暟

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF IN_SUCCESSFLAG = '0' THEN
	    -- 鐧诲綍鎴愬姛鍒犻櫎涔嬪墠鐨勫け璐ヨ褰?	    DELETE
	    FROM PB_LOGFAIL
	    WHERE PLF_CARDNO = IN_CARDNO AND PLF_TYPE='0';
    ELSE
        -- 鐧诲綍澶辫触澶勭悊澶辫触璁板綍
        -- 鑾峰彇褰撳墠鏃ユ湡
		SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
		
		SELECT
			PLF_TIMES
		INTO
			V_FAILNUM
		FROM PB_LOGFAIL
		WHERE 
			PLF_CARDNO = IN_CARDNO AND PLF_TYPE='0';
		-- 妫€鏌ョ敤鎴风櫥闄嗘帶鍒惰〃
		IF V_FAILNUM IS NULL   
		THEN
			-- 姝ょ敤鎴风涓€娆＄櫥闄嗗け璐?			INSERT INTO PB_LOGFAIL
			(
				PLF_CARDNO,
				PLF_TIMES,
				PLF_UPDTIM,
				PLF_TYPE
			)
			VALUES
			(
				IN_CARDNO,
				1,
				V_DATE,
				'0'
			);
		ELSE
			-- 闈炵涓€娆＄櫥闄嗗け璐ワ紝澶辫触娆℃暟鍔?
			UPDATE PB_LOGFAIL
			SET
				PLF_TIMES = V_FAILNUM + 1
			WHERE 
				PLF_CARDNO = IN_CARDNO AND PLF_TYPE='0';
			
	
            IF V_FAILNUM >= 5 THEN
				-- 鐧婚檰瀵嗙爜澶辫触6娆″悗鍐荤粨姝ょ敤鎴?				SET PROC_RET_CODE = '30006';
				COMMIT;
		        RETURN;
			END IF;
	
		END IF;
	
	END IF;
	
	COMMIT;
    
	SET PROC_RET_CODE = '00000';   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_LOGON_FIRSTLOGONUPDATE
(
    IN IN_CSTNO VARCHAR(10),
    IN IN_ALIAS VARCHAR(20),
    IN IN_PASSWORD VARCHAR(50),
    IN IN_LOVENAME VARCHAR(30),
	OUT PROC_RET_CODE VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏇存柊棰戦亾鍒囨崲榛樿鍗?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿
-- IN_ALIAS锛氱綉閾剁櫥褰曞悕
-- IN_PASSWORD锛氬瘑鐮?-- IN_LOVENAME锛氬憿绉?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛氶緳鏄庤秴
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.09.26
------------------------------------------------------------------------
BEGIN
    
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
        
    IF EXISTS(SELECT 1 FROM PB_CSTINF WHERE PIF_CSTNO != IN_CSTNO AND PIF_ALIAS = IN_ALIAS) THEN
        -- 璇ョ櫥褰曞悕宸茶鍗犵敤
        SET PROC_RET_CODE = '30010';
		RETURN;
    END IF;    
	
	UPDATE PB_CSTINF
	SET PIF_ALIAS = IN_ALIAS,
	    PIF_PASSWORD = IN_PASSWORD,
	    PIF_LOVENAME = IN_LOVENAME,
	    PIF_STT = '0'
    WHERE PIF_CSTNO = IN_CSTNO;
    
	COMMIT;
    
	SET PROC_RET_CODE = '00000';   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_INITROUNTEANDCARDSECT
(
    OUT PROC_RET_CODE VARCHAR(5)
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 2
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱鍒濆鍖栧瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛氭棤

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_ROUTE锛氬垎琛岃矾鐢变俊鎭粨鏋滈泦
-- CUR_SECT锛氫氦琛屽崱娈典俊鎭粨鏋滈泦

-- 淇敼浜猴細ECC.Longmc
-- 淇敼鏃ユ湡锛?005.10.10
-- 淇敼鍘熷洜锛氱粺涓€璁捐锛屽鍔犲崱娈典腑鍗＄被鍨嬪睘鎬у拰鍙栧崱涓績鍙风殑寮€濮嬩綅銆?-- 鏈€鍚庝慨鏀逛汉锛欵CC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈燂細2007.12.25
-- 淇敼鍘熷洜锛氬垎琛岃嫳鏂囧悕绉?-- 鏈€鍚庝慨鏀逛汉锛欵CC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈燂細2009.02.03
------------------------------------------------------------------------
BEGIN

    -- 鍙栧緱鍒嗚璺敱淇℃伅
	DECLARE CUR_ROUTE CURSOR WITH RETURN TO CALLER FOR
		SELECT PBR_BRANCHNO, PBR_CORENO, PBR_BRANCHNAME, PBR_BRANCHENNAME, PBR_CNLOPENFLG, PBR_SPECIALURL, PBR_SEPPAGE,PBR_CITYCODE,PBR_ASYPWD,PBR_PRVCORENO,PBR_PRVBRANCHNAME,PBR_SAFEINPUTVS,PBR_ORGNO
		FROM PB_BRCHRUT;
	
	-- 鍙栧緱浜よ鍗℃淇℃伅
	DECLARE CUR_SECT CURSOR WITH RETURN TO CALLER FOR
		SELECT  PCSI_CARDSECT, PCSI_FLAG, PCSI_CARDTYPE, PCSI_CENTERNOINDEX
		FROM PB_CRDSCTINF;
        
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

    --鎵撳紑娓告爣
    OPEN CUR_ROUTE;
	OPEN CUR_SECT;
    
    SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_REG_CHKCUST (
	IN IN_ALIAS                 VARCHAR(30),
	IN IN_PASSWORD				VARCHAR(50),
	OUT PROC_RET_CODE 			CHAR(5),
	OUT OUT_CSTNO               VARCHAR(10),
	OUT OUT_RESET_PASSWORD      VARCHAR(1)
)
------------------------------------------------------------------------
-- 闈炶瘉涔︾櫥褰曞鎴蜂俊鎭悎娉曟€ф牎楠屽瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_ALIAS锛氱敤鎴风櫥褰曞悕
-- IN_PASSWORD锛氱櫥褰曞瘑鐮?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CSTNO锛氱敤鎴峰彿
-- OUT_RESET_PASSWORD锛氬瘑鐮佹槸鍚﹀凡閲嶇疆
-- 
-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈燂細2007.03.26
------------------------------------------------------------------------
BEGIN

	-- 瀹氫箟鍙橀噺
	DECLARE V_PASSWORD			VARCHAR(50);		--鐢ㄦ埛瀵嗙爜
	DECLARE V_STT				CHAR(1);			--鐢ㄦ埛鐘舵€?	DECLARE V_DATE				CHAR(14);			--褰撳墠鏃堕棿
	DECLARE V_FAILNUM			INT;				--澶辫触娆℃暟
	DECLARE V_CUSTTYPE			CHAR(1);			-- 鐢ㄦ埛绫诲瀷

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
		
	SET OUT_RESET_PASSWORD = '0';
	SET IN_ALIAS = LTRIM(RTRIM(IN_ALIAS));
	
	-- 鑾峰彇瀹㈡埛淇℃伅
	SELECT
		PIF_CSTNO,
		PIF_CSTTYP,
		PIF_PASSWORD, 
		PIF_STT
	INTO
		OUT_CSTNO,
		V_CUSTTYPE,
		V_PASSWORD,
		V_STT
	FROM PB_CSTINF
	WHERE 
		PIF_ALIAS = IN_ALIAS;
	
	IF OUT_CSTNO IS NULL OR OUT_CSTNO = ''
	THEN
		SET PROC_RET_CODE = '30003';
		RETURN;
	END IF;
	
	IF V_CUSTTYPE = '1' THEN
	    -- 璇ョ敤鎴蜂负璇佷功鐢ㄦ埛
		SET PROC_RET_CODE = '30018';
		RETURN;
	END IF;
	
	IF V_STT = '1' THEN
		-- 鐢ㄦ埛宸插喕缁?		SET PROC_RET_CODE = '30001';
		RETURN;
	END IF;
	
	IF V_STT = '2' THEN
		-- 鐢ㄦ埛浠庢湭鐧诲綍
		SET PROC_RET_CODE = '30002';
		RETURN;
	END IF;
	
	IF V_STT = '3' THEN
		-- 鏌滃彴閲嶇疆瀵嗙爜
		SET OUT_RESET_PASSWORD = '1';
	END IF;
	
	SELECT PLF_TIMES INTO V_FAILNUM
		FROM PB_LOGFAIL	WHERE PLF_CARDNO = OUT_CSTNO AND PLF_TYPE='0';
	
	IF IN_PASSWORD <> V_PASSWORD THEN
		-- 鑾峰彇褰撳墠鏃ユ湡
		SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
		
		-- 妫€鏌ョ敤鎴风櫥闄嗘帶鍒惰〃
		IF V_FAILNUM IS NULL  
		THEN
			-- 姝ょ敤鎴风涓€娆＄櫥闄嗗け璐?			INSERT INTO PB_LOGFAIL
			(
				PLF_CARDNO,
				PLF_TIMES,
				PLF_UPDTIM,
				PLF_TYPE
			)
			VALUES
			(
				OUT_CSTNO,
				1,
				V_DATE,
				'0'
			);
			
			COMMIT;
			
			SET PROC_RET_CODE = '30012';
		    RETURN;
		ELSE
			-- 闈炵涓€娆＄櫥闄嗗け璐?	
            IF V_FAILNUM = 5 THEN
				-- 鐧婚檰瀵嗙爜澶辫触6娆″悗鍐荤粨姝ょ敤鎴?				UPDATE PB_CSTINF
				SET
					PIF_STT = '1'
				WHERE 
					PIF_CSTNO = OUT_CSTNO;
				
				-- 鍒犻櫎瀹㈡埛瀵嗙爜澶辫触鐧诲綍琛ㄨ褰?				DELETE
				FROM PB_LOGFAIL
				WHERE 
				PLF_CARDNO = OUT_CSTNO AND PLF_TYPE='0';
				
				COMMIT;
				
				SET PROC_RET_CODE = '30004';
		        RETURN;
				
			ELSE
				-- 闈炵涓€娆＄櫥闄嗗け璐ワ紝澶辫触娆℃暟鍔?
				UPDATE PB_LOGFAIL
				SET
					PLF_TIMES = V_FAILNUM + 1
				WHERE 
					PLF_CARDNO = OUT_CSTNO AND PLF_TYPE='0';
			END IF;
	
		END IF;
		
	    COMMIT;
	    
	    CASE V_FAILNUM
	    WHEN 1
	    THEN 
	        SET PROC_RET_CODE = '30013';
	        RETURN;
	    WHEN 2
	    THEN 
	        SET PROC_RET_CODE = '30014';
	        RETURN;
	    WHEN 3
	    THEN 
	        SET PROC_RET_CODE = '30015';
	        RETURN;
	    WHEN 4
	    THEN 
	        SET PROC_RET_CODE = '30016';
	        RETURN;
	    END CASE;    
	   
	ELSE
	    -- 鎴愬姛妫€娴嬩竴娆″悗鍒犻櫎涔嬪墠鐧诲綍閿欒璁板綍
	    IF V_FAILNUM IS NOT NULL 
		THEN
			DELETE
			FROM PB_LOGFAIL
			WHERE 
			PLF_CARDNO = OUT_CSTNO AND PLF_TYPE='0';
        END IF;
        
        COMMIT;
        
	END IF;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_LOGON_UPDLOGONTIMES
(
    IN IN_CSTNO VARCHAR(10),
    IN IN_IPADDR VARCHAR(20),
	OUT PROC_RET_CODE VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏇存柊鐢ㄦ埛鐧诲綍鏃堕棿

-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛氶緳鏄庤秴
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.10.17
------------------------------------------------------------------------
BEGIN
    
    -- 鍙橀噺澹版槑
    DECLARE V_DATE				CHAR(14);			-- 褰撳墠鏃堕棿
    DECLARE V_CSTTYPE			CHAR(1);			-- 瀹㈡埛绫诲瀷
    DECLARE V_STT			    CHAR(1);			-- 瀹㈡埛鐘舵€?    
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	-- 鑾峰彇褰撳墠鏃ユ湡
	SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
	
	-- 鑾峰彇瀹㈡埛淇℃伅
	SELECT PIF_CSTTYP, PIF_STT
	INTO V_CSTTYPE, V_STT
	FROM PB_CSTINF
	WHERE PIF_CSTNO = IN_CSTNO;
	
    -- 鏇存柊娉ㄥ唽鐢ㄦ埛淇℃伅
    IF V_CSTTYPE = '1' AND V_STT = '2' THEN
        -- 璇佷功鐢ㄦ埛
        UPDATE PB_CSTINF
        SET PIF_LASTLGNTIM = V_DATE,
            PIF_STT = '0',
            PIF_LASTLGNIP = IN_IPADDR
        WHERE PIF_CSTNO = IN_CSTNO;
    ELSE
        -- 鎵嬫満鐢ㄦ埛
        UPDATE PB_CSTINF
        SET PIF_LASTLGNTIM = V_DATE,
            PIF_LASTLGNIP = IN_IPADDR
        WHERE PIF_CSTNO = IN_CSTNO;
    END IF;
    
	COMMIT;
    
	SET PROC_RET_CODE = '00000';   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_INITCRYCMP
(
    OUT PROC_RET_CODE VARCHAR(5)
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缃戦摱鍒濆鍖栧竵绉嶅鐓ц〃

-- 杈撳叆鍙傛暟锛氭棤

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_CURRENCY锛氬垎琛岃矾鐢变俊鎭粨鏋滈泦

-- 鏈€鍚庝慨鏀逛汉锛欵CC.Longmc
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.11.07
------------------------------------------------------------------------
BEGIN

    -- 鍙栧緱鍒嗚璺敱淇℃伅
	DECLARE CUR_CURRENCY CURSOR WITH RETURN TO CALLER FOR
		SELECT PCP_CRYTYPE, PCP_CRYCODE, PCP_CRYNAME
		FROM PB_CRYCMP;
	
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

    --鎵撳紑娓告爣
    OPEN CUR_CURRENCY;
    
    SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_GETSYSNO
 (OUT PROC_RET_CODE VARCHAR(5), 
  OUT OUT_SYSNO VARCHAR(6)
 ) 
 READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鑾峰彇steps绯荤粺璺熻釜鍙?-- 杈撳叆鍙傛暟锛?    
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_SYSNO锛氱郴缁熻窡韪彿

-- 鏈€鍚庝慨鏀逛汉锛欵CC.Longmc
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.11.07
------------------------------------------------------------------------
BEGIN

    --澹版槑鍙橀噺
	DECLARE V_STEPS_SYSNO INTEGER;

  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
    
	--鐢熸垚缃戦摱娴佹按鍙?	SELECT NEXTVAL FOR PB_STEPS_SYSNO
	INTO V_STEPS_SYSNO
	FROM SYSIBM.SYSDUMMY1;
    
	SET OUT_SYSNO = LEFT(CHAR(DECIMAL(V_STEPS_SYSNO,6)),6);
    SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_GENMENU (
	IN IN_OPERATOR_ROLE VARCHAR(2),
	OUT PROC_RET_CODE VARCHAR(5),
	OUT OUT_LEVEL_NUM VARCHAR(1)
)
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鑾峰彇鑿滃崟

-- 杈撳叆鍙傛暟锛?-- IN_OPERATOR_ROLE 锛?鐢ㄦ埛瑙掕壊

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_LEVEL_NUM 锛?鑿滃崟绾ф暟
-- CUR_MENU 锛?鑿滃崟浠ｇ爜缁撴灉闆?-- 
-- 鏈€鍚庝慨鏀逛汉锛欵CC.wanglm
-- 鏈€鍚庝慨鏀规棩鏈燂細2009.06.27
------------------------------------------------------------------------
BEGIN
	-- 鍙栧緱鑿滃崟浠ｇ爜缁撴灉闆?	DECLARE CUR_MENU CURSOR  WITH RETURN TO CALLER FOR
		SELECT 
			MDF_MENUCODE,
			MDF_BSNCODE
		FROM PB_MENUDEF
		WHERE MDF_STT ='0' AND			
			MDF_BSNCODE IN
			(
				SELECT
					RBD_BSNCODE
				FROM PB_ROLEBSNDEF
				WHERE
					RBD_ROLENO = IN_OPERATOR_ROLE AND
					MDF_BSNCODE = RBD_BSNCODE			
			)
		ORDER BY MDF_SEQNO, MDF_MENUCODE, MDF_BSNCODE;
  	
  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	-- 鑾峰彇鑿滃崟绾ф暟
	SELECT VALUE(MAX(MDF_LEVEL), '0')
	INTO OUT_LEVEL_NUM 
	FROM PB_MENUDEF;

	--鎵撳紑娓告爣
	OPEN CUR_MENU;

	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_UPDATE_LOGSTATE(
	IN IN_CARDNO VARCHAR(30),
	IN IN_SESID  VARCHAR(60),
	OUT PROC_RET_CODE CHAR(5)
)
MODIFIES SQL DATA
NOT DETERMINISTIC
LANGUAGE SQL
------------------------------------------------------------------------
-- 瀹㈡埛鐧诲綍璁板綍SESSION_ID

-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬鎴风櫥褰曠殑鍒悕鎴栬€呭崱鍙?-- IN_SESID锛氬鎴风殑SESSION_ID

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--
-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈燂細2007.03.26
------------------------------------------------------------------------
BEGIN
	DECLARE V_DATETIME VARCHAR(14);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SET V_DATETIME=FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	IF EXISTS (
		SELECT 1 
		FROM PB_LOGSTT
		WHERE PLS_CARDNO=IN_CARDNO
	)
	THEN
		DELETE FROM PB_LOGSTT
		WHERE PLS_CARDNO=IN_CARDNO;
	END IF;

	INSERT INTO PB_LOGSTT (PLS_CARDNO,PLS_SESID,PLS_LOGTIM)
	VALUES (IN_CARDNO,IN_SESID,V_DATETIME);

	COMMIT;

	SET PROC_RET_CODE='00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_CHECK_LOGSTATE(
    IN IN_CARDNO VARCHAR(30),
    IN IN_SESID  VARCHAR(60),
    OUT PROC_RET_CODE CHAR(5)
)
READS SQL DATA
LANGUAGE SQL
------------------------------------------------------------------------
-- 妫€鏌ュ鎴稴ESSION鏄惁鏈夋晥

-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬鎴风櫥褰曠殑鍒悕鎴栬€呭崱鍙?-- IN_SESID锛氬鎴风殑SESSION_ID

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-1瓒呮椂
--
-- 鏈€鍚庝慨鏀逛汉锛欵CC.Dragon
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.09.19
------------------------------------------------------------------------
BEGIN
    DECLARE V_SESID VARCHAR(60);
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
    
    
    SET V_SESID='';

    SELECT PLS_SESID INTO V_SESID
    FROM PB_LOGSTT
    WHERE PLS_CARDNO=IN_CARDNO;

    IF(IN_SESID = V_SESID)
    THEN
        SET PROC_RET_CODE='00000';
    ELSE
        SET PROC_RET_CODE='-1';
    END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_INIT
(
	OUT PROC_RET_CODE VARCHAR(5)
) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 6
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱鍒濆鍖栧瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛氭棤

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_APP锛氬簲鐢ㄥ弬鏁颁俊鎭粨鏋滈泦
-- CUR_ERR锛氶敊璇唬鐮佷俊鎭粨鏋滈泦
-- CUR_BSN锛氫笟鍔′俊鎭粨鏋滈泦
-- CUR_COMP锛氬崱涓績瀵瑰簲鍒嗚鍙蜂俊鎭粨鏋滈泦
-- CUR_TELLER锛氱數瀛愭煖鍛樹俊鎭粨鏋滈泦
-- CUR_MENU:鑿滃崟缁撴灉闆?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.wanglm
-- 鏈€鍚庝慨鏀规棩鏈?锛?2009.06.23
------------------------------------------------------------------------
BEGIN

	-- 鍙栧緱搴旂敤鍙傛暟淇℃伅
	DECLARE CUR_APP CURSOR WITH RETURN TO CALLER FOR
		SELECT APR_CODE, APR_VALUE, APR_LANGUAGE, APR_NAME, APR_SHOWMSG
		FROM PUB_APPPAR
		ORDER BY APR_CODE, APR_VALUE;
	
	-- 鍙栧緱閿欒浠ｇ爜淇℃伅
	DECLARE CUR_ERR CURSOR WITH RETURN TO CALLER FOR
		SELECT ERC_ERRCODE, ERC_LANGUAGE, ERC_SHOWMSG, ERC_INNERMSG
		FROM PUB_ERRCODE
		ORDER BY ERC_ERRCODE;	
        
	-- 鍙栧緱鍗′腑蹇冨彿瀵圭収鍒嗚鍙蜂俊鎭?	DECLARE CUR_COMP CURSOR WITH RETURN TO CALLER FOR
		SELECT PCC_CENTERNO, PCC_BRANCHNO, PCC_FLAG
		FROM PB_CRDCNT
		ORDER BY PCC_CENTERNO;
	
	-- 鍙栧緱鐢靛瓙鏌滃憳淇℃伅
	DECLARE CUR_TELLER CURSOR WITH RETURN TO CALLER FOR
		SELECT EBT_BRANCHNO, EBT_EBTELLNO
		FROM IM_EBTELLER
		WHERE EBT_STT = '0'
		ORDER BY EBT_BRANCHNO;
		
	-- 鍙栧緱鑿滃崟淇℃伅
	DECLARE CUR_MENU CURSOR WITH RETURN TO CALLER FOR
		SELECT
			MDF_MENUCODE,
			MDF_NAMECN,
			MDF_NAMEEN,
			MDF_PARENTNO,
			MDF_LEVEL,
			MDF_SEQNO,
			MDF_ISLEAF,
			MDF_TARGET,
			MDF_BSNCODE,
			MDF_TRANCODE,
			MDF_URLCN,
			MDF_URLEN,
			MDF_STT,
			MDF_SHOWSTATUS,
			MDF_CARDTYPE,
			MDF_MENUDESC,
			MDF_MENUDESCEN,
			MDF_SPECIALSWlTCH,
			MDF_BRANCHNO,
			MDF_SELFNAMECN,
			MDF_SELFNAMEEN,
			MDF_NETFLAG
		FROM PB_MENUDEF WHERE MDF_STT='0'
		ORDER BY MDF_MENUCODE, MDF_SEQNO;

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	--鎵撳紑娓告爣
	OPEN CUR_APP;
	OPEN CUR_ERR;	
	OPEN CUR_COMP;
	OPEN CUR_TELLER;
	OPEN CUR_MENU;
    
	SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_GETLOGONCHANNELS
(
    IN IN_CSTNO VARCHAR(10), 
    OUT PROC_RET_CODE VARCHAR(5)
 ) 
 	READS SQL DATA 
    DYNAMIC RESULT SETS 1 
 
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鑾峰彇瀹㈡埛棰戦亾榛樿鍗?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- CUR_CHANNEL_CARD锛氶閬撻粯璁ょ櫥褰曞崱

-- 鏈€鍚庝慨鏀逛汉锛氶緳鏄庤秴
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.11.09
------------------------------------------------------------------------
BEGIN

    DECLARE CUR_CHANNEL_CARD CURSOR WITH RETURN TO CALLER FOR
        SELECT PDC_CARDNO, PDC_OPRTYP
        FROM PB_DFLCRD
        WHERE PDC_CSTNO = IN_CSTNO;
            
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	        
    -- 鎵撳紑娓告爣
    OPEN CUR_CHANNEL_CARD;

    SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_QUERY_TRAN_FLOWNO
 (OUT PROC_RET_CODE VARCHAR(5), 
  OUT OUT_FLOWNO VARCHAR(20)
 ) 
 
 READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓绘満浜ゆ槗-鐢熸垚缃戦摱浜ゆ槗娴佹按鍙?-- 杈撳叆鍙傛暟锛?    
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_FLOWNO锛氱綉閾朵氦鏄撴祦姘村彿

-- 鏈€鍚庝慨鏀逛汉锛欵CC.Dragon
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.10
-- modify :wanglm
-- date : 2007.06.18
-- 淇敼鏃ユ湡锛?0091229
-- 淇敼鍐呭锛氭牴鎹甀BM宸ョ▼甯堝缓璁紝鏇存崲鑾峰彇娴佹按鍙风殑鏂瑰紡
------------------------------------------------------------------------
BEGIN

    --澹版槑鍙橀噺
	DECLARE V_TRAN_FLOWNO BIGINT;

  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
    
	--鐢熸垚缃戦摱娴佹按鍙?
	SET V_TRAN_FLOWNO = NEXTVAL FOR PB_EBANK_FLOWNO;
    
	SET OUT_FLOWNO = CHAR(V_TRAN_FLOWNO);
    SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_CHECKUSERDOUBLELOGON
(
    IN IN_LOGONID VARCHAR(30),
    OUT PROC_RET_CODE VARCHAR(5),
    OUT OUT_SESSIONID VARCHAR(60)
 ) 
 READS SQL DATA 
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐢ㄦ埛閲嶅鐧诲綍妫€娴?
-- 杈撳叆鍙傛暟锛?-- IN_LOGONID锛氬鎴风櫥褰旾D

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_SESSIONID锛氱櫥褰晄ession ID


-- 鏈€鍚庝慨鏀逛汉锛氶緳鏄庤秴
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.11.11
------------------------------------------------------------------------
BEGIN
    
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
    SELECT PLS_SESID
	INTO OUT_SESSIONID
	FROM PB_LOGSTT
	WHERE PLS_CARDNO = IN_LOGONID;
	
	-- 妫€鏌ョ敤鎴风櫥闄嗙姸鎬佽〃
	IF OUT_SESSIONID IS NULL OR OUT_SESSIONID='' THEN
	    SET PROC_RET_CODE = '33010';
	    RETURN;
    END IF;
   
    SET PROC_RET_CODE = '00000';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_LOGON_CHECKCERTUSERSTT (
	IN IN_CSTNO                 VARCHAR(10),
	OUT PROC_RET_CODE 			CHAR(5),
	OUT OUT_VALIDTIME           VARCHAR(14),
	OUT OUT_CERTIME             CHAR(2)
)
READS SQL DATA 
------------------------------------------------------------------------
-- 璇佷功鐧诲綍瀹㈡埛淇℃伅鍚堟硶鎬ф牎楠屽瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_VALIDTIME锛氭湁鏁堟椂闂?-- OUT_CERTIME锛氭湁鏁堟湡

-- 鏈€鍚庝慨鏀逛汉锛欵CC.Longmc
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.11.14
------------------------------------------------------------------------
BEGIN

	-- 瀹氫箟鍙橀噺
	DECLARE V_STT				CHAR(1);			-- 鐢ㄦ埛鐘舵€?	DECLARE V_CUSTTYPE			CHAR(1);			-- 鐢ㄦ埛绫诲瀷

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	
	-- 鑾峰彇瀹㈡埛淇℃伅
	SELECT
		PIF_CSTTYP,
		PIF_STT
	INTO
		V_CUSTTYPE,
		V_STT
	FROM PB_CSTINF
	WHERE 
		PIF_CSTNO = IN_CSTNO;	

	IF V_CUSTTYPE IS NULL OR V_CUSTTYPE='' THEN
		SET PROC_RET_CODE = '30019';
		RETURN;
	END IF;
	
	
	
	IF V_CUSTTYPE = '0' THEN
	    -- 璇ョ敤鎴蜂负娉ㄥ唽鐢ㄦ埛
		SET PROC_RET_CODE = '30020';
		RETURN;
	END IF;
	
	IF V_STT = '1' THEN
		-- 鐢ㄦ埛宸插喕缁?		SET PROC_RET_CODE = '30021';
		RETURN;
	END IF;
	
	SELECT 
	    POC_VALIDTIME, POC_CERTIME
	INTO 
	    OUT_VALIDTIME,
	    OUT_CERTIME
    FROM IM_PERSONCSTOPRCRT
    WHERE POC_CSTNO = IN_CSTNO;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_LOGON_CHECKALIAS (
	IN IN_ALIAS                 VARCHAR(30),
	IN IN_CARDNO                VARCHAR(30),
	OUT PROC_RET_CODE 			CHAR(5)
)
READS SQL DATA 
------------------------------------------------------------------------
-- 瀹㈡埛閫夌敤鐧诲綍鍚嶆娴?
-- 杈撳叆鍙傛暟锛?-- IN_ALIAS锛氱綉閾剁櫥褰曞悕
-- IN_CARDNO锛氱绾︿富鍗?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.Longmc
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.11.29
------------------------------------------------------------------------
BEGIN

    
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
       
    IF EXISTS(SELECT 1 FROM PB_CSTINF 
    	WHERE PIF_ALIAS = IN_ALIAS AND PIF_ACCNO != IN_CARDNO) THEN
        -- 璇ョ櫥褰曞悕宸茶鍗犵敤
        SET PROC_RET_CODE = '30010';
		RETURN;
    END IF;    

	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_LOGON_UPDFAILTIMES_COMMON
(
    IN IN_CARDNO VARCHAR(30),
    IN IN_SUCCESSFLAG CHAR(1),
    IN IN_IPADDR   VARCHAR(20),
	OUT PROC_RET_CODE VARCHAR(5),
	OUT errCode VARCHAR(8)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐧昏澶т紬鐢ㄦ埛鍗＄櫥褰曞瘑鐮佽緭鍏ラ敊璇?鐢ㄤ簬鍏叡services

-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬崱鍙?-- IN_SUCCESSFLAG 鍗″瘑鐮佹纭笌鍚︽爣蹇?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- errCode锛氱綉閾堕敊璇唬鐮?
-- 鏈€鍚庝慨鏀逛汉锛氬瓩闇?-- 鏈€鍚庝慨鏀规棩鏈燂細2006.01.06
------------------------------------------------------------------------

BEGIN
    -- 鍙橀噺澹版槑
    DECLARE V_DATE				CHAR(14);			-- 褰撳墠鏃堕棿
    DECLARE V_FAILNUM           INT;                -- 澶辫触娆℃暟

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF IN_SUCCESSFLAG = '0' THEN
	    -- 鐧诲綍鎴愬姛鍒犻櫎涔嬪墠鐨勫け璐ヨ褰?	    DELETE
	    FROM PB_LOGFAIL
	    WHERE PLF_CARDNO = IN_CARDNO AND PLF_TYPE='0';
	    COMMIT;
	    SET PROC_RET_CODE = '00000';
	    RETURN;
    ELSE
        -- 鐧诲綍澶辫触澶勭悊澶辫触璁板綍
        -- 鑾峰彇褰撳墠鏃ユ湡
		SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
		SELECT
			PLF_TIMES
		INTO
			V_FAILNUM
		FROM PB_LOGFAIL
		WHERE 
			PLF_CARDNO = IN_CARDNO AND PLF_TYPE='0';
		IF V_FAILNUM IS NULL  
    	THEN
    	    -- 绗竴娆″瘑鐮佽緭鍏ラ敊璇?    	    INSERT INTO PB_LOGFAIL
			(
				PLF_CARDNO,
				PLF_TIMES,
				PLF_UPDTIM,
				PLF_TYPE
			)
			VALUES
			(
				IN_CARDNO,
				1,
				V_DATE,
				'0'
			);
			COMMIT;
			SET PROC_RET_CODE = '30012';
			SET errCode = 'EBPB0012';
			RETURN;
        ELSE
            -- 闈炵涓€娆″瘑鐮佽緭鍏ラ敊璇?			IF V_FAILNUM > 5 THEN
		    	SET PROC_RET_CODE = '30006';
		        SET errCode = 'EBPB0006';
		        RETURN;
		    END IF;
			
			UPDATE PB_LOGFAIL
			SET
				PLF_TIMES = V_FAILNUM + 1,
				PLF_IPADDR = IN_IPADDR
			WHERE 
				PLF_CARDNO = IN_CARDNO AND PLF_TYPE='0';
				COMMIT;
			CASE V_FAILNUM
		    WHEN 1
		    THEN 
		        SET PROC_RET_CODE = '30013';
		        SET errCode = 'EBPB0013';
		        RETURN;
		    WHEN 2
		    THEN 
		        SET PROC_RET_CODE = '30014';
		        SET errCode = 'EBPB0014';
		        RETURN;
		    WHEN 3
		    THEN 
		        SET PROC_RET_CODE = '30015';
		        SET errCode = 'EBPB0015';
		        RETURN;
		    WHEN 4
		    THEN 
		        SET PROC_RET_CODE = '30016';
		        SET errCode = 'EBPB0016';
		        RETURN;
		   	WHEN 5
			THEN
		   		SET PROC_RET_CODE = '30006';
		        SET errCode = 'EBPB0006';
		        RETURN;
		    END CASE;		    
		END IF;
	END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_INSURANCE_QRY(
	OUT PROC_RET_CODE CHAR(5)
)
------------------------------------------------------------------------
-- 鏌ヨ缃戦摱浠ｉ攢鐨勪骇鍝佽缁嗕俊鎭?
-- 杈撳叆鍙傛暟锛氭棤

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_INSR_PROD锛氱綉閾朵唬閿€鐨勪骇鍝佷俊鎭粨鏋滈泦


-- @author锛歸ujianc
-- 鍒涘缓鏃ユ湡锛?008.04.15
------------------------------------------------------------------------
READS SQL DATA 
RESULT SETS 1 
BEGIN
	DECLARE CUR_INSR_PROD CURSOR WITH RETURN TO CALLER FOR
		SELECT * FROM PB_INSURE_PROD ORDER BY PIP_SEQNO WITH UR;
		
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN 
		SET PROC_RET_CODE ='95000';
	END;
	 
	OPEN CUR_INSR_PROD;
	SET PROC_RET_CODE ='00000';  		
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_INSURANCE_CORPOR_QRY(
	OUT PROC_RET_CODE CHAR(5)
)
------------------------------------------------------------------------
-- 鏌ヨ缃戦摱浠ｉ攢鐨勪骇鍝佺畝鐣ヤ俊鎭?
-- 杈撳叆鍙傛暟锛氭棤

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_INSR_PROD锛氱綉閾朵唬閿€鐨勪骇鍝佺畝鐣ヤ俊鎭粨鏋滈泦


-- @author锛歸ujianc
-- 鍒涘缓鏃ユ湡锛?008.04.15
------------------------------------------------------------------------
READS SQL DATA 
RESULT SETS 1 
BEGIN
	DECLARE CUR_INSR_PROD CURSOR WITH RETURN TO CALLER FOR
		SELECT PIP_INSRNO,PIP_INSRNAME,PIP_COMPANYNO,PIP_COMPANYNAME FROM PB_INSURE_PROD ORDER BY PIP_SEQNO WITH UR;
		
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN 
		SET PROC_RET_CODE ='95000';
	END;
	 
	OPEN CUR_INSR_PROD;
	SET PROC_RET_CODE ='00000';  		
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_INSURANCE_NODE_QRY(
	IN IN_COMPANYNO CHAR(7),
	OUT PROC_RET_CODE CHAR(5)
)
------------------------------------------------------------------------
-- 鏌ヨ淇濋櫓鍏徃缃戠偣淇℃伅

-- 杈撳叆鍙傛暟锛?-- IN_COMPANYNO锛氫繚闄╁叕鍙镐唬鐮?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_INSR_NODE锛氫繚闄╁叕鍙哥綉鐐逛俊鎭粨鏋滈泦


-- @author锛歸ujianc
-- 鍒涘缓鏃ユ湡锛?008.04.15
------------------------------------------------------------------------
READS SQL DATA 
RESULT SETS 1 
BEGIN
	DECLARE CUR_INSR_NODE CURSOR WITH RETURN TO CALLER FOR
		SELECT PIN_SUBCMPNO,PIN_PVICODE,PIN_CITYNAME,PIN_BRANCHNO FROM PB_INSURE_NODE 
			WHERE PIN_COMPANYNO=IN_COMPANYNO ORDER BY PIN_SUBCMPNO WITH UR;
		
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN 
		SET PROC_RET_CODE ='95000';
	END;
	 
	OPEN CUR_INSR_NODE;
	SET PROC_RET_CODE ='00000';  		
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_INSURE_CHJ_QUERY
(
  OUT PROC_RET_CODE CHARACTER(5),
	OUT NUMCCODE   CHAR(1) 
 ) 

------------------------------------------------------------------------
-- SQL 鏌ヨ鎶藉淇℃伅
-- 鏌ヨ鎶藉淇℃伅
-- 杈撳叆鍙傛暟锛?-- 
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?------------------------------------------------------------------------
-- 鍒涘缓浜猴細gongjx
-- 淇敼鏃ユ湡锛?010.11.17
------------------------------------------------------------------------



BEGIN  
DECLARE  BEGINTIME   VARCHAR(8);
DECLARE  PROBABILITY   INT;
DECLARE  PROBABILITYRATE   INT;
DECLARE  COUNTS   INT;
DECLARE  COUNTTMP   INT;
DECLARE  NOWTIME   VARCHAR(8);
DECLARE  NOWTIMETMP   TIMESTAMP;
DECLARE CUR_SERVICE CURSOR WITH HOLD FOR
SELECT ICJ_BEGINTIME,ICJ_PROBABILITY,ICJ_COUNTS FROM PB_INSURE_CHJ WHERE ICJ_ID='999' FOR UPDATE OF ICJ_PROBABILITY,ICJ_COUNTS;

-- 寮傚父澶勭悊
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
	SET PROC_RET_CODE = '95000';
	ROLLBACK ;
END;

   SET NOWTIMETMP=CURRENT TIMESTAMP;
	 SET NOWTIME=FUNC_DATETIME_FMT(NOWTIMETMP,'yyyymmdd'); 
	 SET NUMCCODE = '0';
   --鎵撳紑娓告爣
	 OPEN CUR_SERVICE;
	 --鍙栬褰?	 FETCH CUR_SERVICE INTO BEGINTIME,PROBABILITY,COUNTS;
   IF BEGINTIME<>NOWTIME THEN 
     SET COUNTS=0;
	   UPDATE PB_INSURE_CHJ SET ICJ_BEGINTIME=NOWTIME,ICJ_COUNTS=0 WHERE ICJ_ID='999';
 	 END IF;
 	 IF PROBABILITY<=0 THEN 
	 	 SET PROC_RET_CODE = '00000';
	 	 COMMIT;
		 --鍏抽棴娓告爣
		 CLOSE CUR_SERVICE;
	 	 RETURN;
 	 END IF;
 	 IF (DAYOFWEEK_ISO(NOWTIMETMP)=6 OR DAYOFWEEK_ISO(NOWTIMETMP)=7) THEN 
   		SET COUNTTMP=25; 
   ELSEIF(DAYOFWEEK_ISO(NOWTIMETMP)<6 AND DAYOFWEEK_ISO(NOWTIMETMP)>0) THEN 
   		SET COUNTTMP=30;
 	 END IF;
 	 
   IF(COUNTS>=COUNTTMP) THEN 
	   SET PROC_RET_CODE = '00000';
		 COMMIT;
		 --鍏抽棴娓告爣
		 CLOSE CUR_SERVICE;
	   RETURN;
 	 ELSE 
		SELECT ICJ_PROBABILITY INTO PROBABILITYRATE FROM PB_INSURE_CHJ WHERE NOWTIME>=ICJ_BEGINTIME AND NOWTIME<=ICJ_ENDTIME AND ICJ_ID<>'999';
 	 	IF(MOD(CAST(ROUND(RAND()*1000,0) AS INT),PROBABILITYRATE)=0) THEN
 	 		SET NUMCCODE = '1';
 	 		UPDATE PB_INSURE_CHJ SET ICJ_PROBABILITY=PROBABILITY-1,ICJ_COUNTS=COUNTS+1 WHERE ICJ_ID='999';
 	  END IF;
		COMMIT;
		--鍏抽棴娓告爣
		CLOSE CUR_SERVICE;
		SET PROC_RET_CODE='00000';
		RETURN ;
	END IF;
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_INSURE_CHJ_SAVE
(
    IN IN_INSURENO VARCHAR(30),
    IN IN_CARDNO VARCHAR(30),
	  OUT PROC_RET_CODE VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐧昏鎶藉璁板綍

-- 杈撳叆鍙傛暟锛?-- IN_INSURENO锛氳喘涔版姇淇濆崟鍙?-- IN_CARDNO锛氬崱鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------

BEGIN
    DECLARE NOWTIME VARCHAR(8);
		DECLARE NOWTIMETMP TIMESTAMP;
		
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
    SET NOWTIMETMP=CURRENT TIMESTAMP;
	  SET NOWTIME=FUNC_DATETIME_FMT(NOWTIMETMP,'yyyymmdd');
    INSERT INTO PB_INSURE_CHJSAVEINFO(ICJS_INSURENO,ICJS_CARDNO,ICJS_OPERATIONTIME) VALUES(IN_INSURENO,IN_CARDNO,NOWTIME);
	  COMMIT;
    
	  SET PROC_RET_CODE = '00000';   
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_INSURE_CHJ_QRY
(
    IN IN_INSURENO VARCHAR(30),
	  OUT PROC_RET_CODE VARCHAR(5),
	  OUT NUMCCODE CHAR(1) 
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐧昏鎶藉璁板綍

-- 杈撳叆鍙傛暟锛?-- IN_INSURENO锛氳喘涔版姇淇濆崟鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- NUMCCODE锛? 	涓嶅瓨鍦ㄨ褰? 1 瀛樺湪璁板綍
------------------------------------------------------------------------

BEGIN
		-- 澹版槑鍙橀噺
		DECLARE V_INSURENO VARCHAR(30);
    -- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE='95000';
		END;
		SET NUMCCODE='0';
    SELECT ICJS_INSURENO INTO V_INSURENO FROM PB_INSURE_CHJSAVEINFO WHERE ICJS_INSURENO=IN_INSURENO;
    IF V_INSURENO IS NOT NULL OR V_INSURENO<>'' THEN 
    	SET NUMCCODE='1';  
    END IF;
	  SET PROC_RET_CODE='00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_INSURANCE_QRY_WITH_CONDITION(
	IN IN_INSURENO VARCHAR(10),
	IN IN_INSURETYPE VARCHAR(3),
	IN IN_INSURECOPOR VARCHAR(10),
	IN IN_INSUREKW VARCHAR(500),
	OUT PROC_RET_CODE CHAR(5)
)
------------------------------------------------------------------------
-- 鏍规嵁鏉′欢鏌ヨ缃戦摱浠ｉ攢鐨勪骇鍝佽缁嗕俊鎭?
-- 杈撳叆鍙傛暟锛?-- IN_INSURENO锛氶櫓绉嶄唬鐮?-- IN_INSURETYPE锛氶櫓绉嶇被鍨?-- IN_INSURECOPOR锛氫繚闄╁叕鍙稿悕绉?-- IN_INSUREKW锛氬叧閿瓧

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_INSR_PROD锛氱綉閾朵唬閿€鐨勪骇鍝佷俊鎭粨鏋滈泦

-- @author锛歍zx
-- 鍒涘缓鏃ユ湡锛?012.01.04
------------------------------------------------------------------------
READS SQL DATA 
RESULT SETS 1 
BEGIN
	DECLARE V_COND VARCHAR(2000);
	DECLARE V_SQL VARCHAR(2100);
	DECLARE CUR_INSR_PROD CURSOR WITH RETURN FOR SQLSTATMENT;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN 
		SET PROC_RET_CODE ='95000';
	END;
	
	SET V_COND = '1 = 1';
	
	IF IN_INSURENO != '' THEN
		SET V_COND = V_COND || ' AND銆€PIP_INSRNO = ''' || IN_INSURENO || ''' ';
	END IF;
	
	IF IN_INSURETYPE != '' THEN
		SET V_COND = V_COND || ' AND銆€PIP_INSRTYPE = ''' || IN_INSURETYPE || ''' ';
	END IF;
	
	IF IN_INSURECOPOR != '' THEN
		SET V_COND = V_COND || ' AND銆€PIP_COMPANYNO = ''' || IN_INSURECOPOR || ''' ';
	END IF;
	
	IF IN_INSUREKW != '' THEN
		SET V_COND = V_COND || ' AND銆€( PIP_INSRNAME LIKE ''%' || IN_INSUREKW || '%'' ) ';
	END IF;
	
	SET V_SQL = 'SELECT * FROM PB_INSURE_PROD WHERE ' || V_COND || ' ORDER BY PIP_SEQNO';
	 
	PREPARE SQLSTATMENT FROM V_SQL;
	OPEN CUR_INSR_PROD;
	SET PROC_RET_CODE ='00000';  		
END
DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATESEQ ( 
   IN IN_CIFNO VARCHAR(20),
   IN IN_CARDNO VARCHAR(30),
   IN IN_CARDTYPE VARCHAR(2),
   IN IN_SEQ INTEGER,	
   IN IN_BANKTYPE VARCHAR(1),
   IN IN_SYC VARCHAR(1),
   OUT PROC_RET_CODE VARCHAR(5)
)

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
--鎺掑簭
-- 杈撳叆鍙傛暟锛?--IN_CIFNO    缃戦摱瀹㈡埛鍙?--IN_CARDNO   鍗″彿
--IN_CARDTYPE 鍗＄被鍨?--IN_SEQ 椤哄簭
--IN_BANKTYPE  閾惰绫诲埆 0鏈1浠栬
--IN_SYC 0:鍚屾鍔熻兘 1:鎺掑簭鏇存柊鍔熻兘
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歐angWenhai
-- 鏈€鍚庝慨鏀规棩鏈?锛?012.11.13
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	
	IF NOT  EXISTS(SELECT 1  FROM PB_CARDSEQ WHERE PCO_CSTNO=IN_CIFNO AND PCO_CARDNO=IN_CARDNO AND PCO_BANKTYPE=IN_BANKTYPE) THEN 
      INSERT INTO PB_CARDSEQ(PCO_CARDNO,PCO_CSTNO,PCO_CARDTYPE,PCO_BANKTYPE,PCO_SEQ) VALUES(IN_CARDNO,IN_CIFNO,IN_CARDTYPE,IN_BANKTYPE,IN_SEQ);
    END IF;
    IF (IN_SYC='1') THEN 
      IF   EXISTS(SELECT 1  FROM PB_CARDSEQ WHERE PCO_CSTNO=IN_CIFNO AND PCO_CARDNO=IN_CARDNO AND PCO_BANKTYPE=IN_BANKTYPE) THEN 
         UPDATE   PB_CARDSEQ  SET  PCO_CARDNO =IN_CARDNO,  PCO_CSTNO=IN_CIFNO,PCO_CARDTYPE=IN_CARDTYPE,PCO_BANKTYPE=IN_BANKTYPE,PCO_SEQ=IN_SEQ  
         WHERE PCO_CSTNO=IN_CIFNO AND PCO_CARDNO=IN_CARDNO AND PCO_BANKTYPE=IN_BANKTYPE;
      END IF;
     END IF;
    COMMIT;
	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SELECTSEQ ( 
   IN IN_CIFNO VARCHAR(20),	
   IN IN_BANKTYPE VARCHAR(1),	
   OUT PROC_RET_CODE VARCHAR(5)
)
READS SQL DATA
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
--鏌ヨ鎺掑簭鏁版嵁
-- 杈撳叆鍙傛暟锛?--IN_CIFNO    缃戦摱瀹㈡埛鍙?--IN_BANKTYPE 琛岀被鍒?0:鏈 1:浠栬
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歐angWenhai
-- 鏈€鍚庝慨鏀规棩鏈?锛?012.11.13
------------------------------------------------------------------------
BEGIN

   	 DECLARE CUR_CSEQ CURSOR WITH	RETURN FOR
	 SELECT PCO_CARDNO,PCO_CSTNO,PCO_CARDTYPE,PCO_SEQ FROM  PB_CARDSEQ
	 WHERE  PCO_CSTNO=IN_CIFNO AND  PCO_BANKTYPE=IN_BANKTYPE 
     ORDER BY PCO_SEQ ASC ;	 
     

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
   -- 鎵撳紑娓告爣
    OPEN CUR_CSEQ;

	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GETOTHERBANKACC_SEQ ( 
	IN  IN_CSTNO VARCHAR(10),
	OUT PROC_RET_CODE VARCHAR(5)
)
READS SQL DATA 
RESULT SETS	2  
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍙栧緱浠栬璐﹀彿鎺掑簭
-- 杈撳叆鍙傛暟锛氬鎴峰彿

-- 杈撳嚭鍙傛暟锛?

-- 鏈€鍚庝慨鏀逛汉锛歭ihy.sdc
-- 鏈€鍚庝慨鏀规棩鏈?锛?2012.12.03
------------------------------------------------------------------------
BEGIN
  
	
	DECLARE GET_ACCOUNT1 CURSOR WITH RETURN TO CALLER FOR
		SELECT PCO_CARDNO,PCO_SEQ FROM PB_CARDSEQ 
		WHERE 
		PCO_CSTNO = IN_CSTNO 
		AND (PCO_CARDTYPE = '0' OR PCO_CARDTYPE = '1' )
		AND PCO_BANKTYPE='1'
		ORDER BY PCO_SEQ;
		
	DECLARE GET_ACCOUNT2 CURSOR WITH RETURN TO CALLER FOR
		SELECT PBA_SIGNNO,PBA_PARTYID,PBA_MAINCARDNO,PBA_MAINNAME,PBA_CARDNO,PBA_HDNAME,PBA_CARDTYPE,PBA_BANKNAME FROM PB_BANKACC 
		WHERE 
		PBA_CSTNO = IN_CSTNO;
	  -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	 --鎵撳紑娓告爣
  OPEN GET_ACCOUNT1;
  OPEN GET_ACCOUNT2;

  SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GOLDPICKADDR_QUERY
(
	IN IN_SEQNO CHAR(10),
	OUT PROC_RETCODE CHAR(5)
)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 榛勯噾鎻愯揣鍦扮偣鏌ヨ

-- 杈撳叆鍙傛暟锛?-- IN_SEQNO锛氭彁璐у湴鐐圭紪鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RETCODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?95000涓哄紓甯?

-- 鏈€鍚庝慨鏀逛汉锛歽ao_zhang
-- 鏈€鍚庝慨鏀规棩鏈燂細2008.02.26
------------------------------------------------------------------------
READS SQL DATA 
RESULT SETS 1 
BEGIN
	DECLARE	CUR_LIST CURSOR WITH	RETURN FOR 
		SELECT PGPA_SEQNO,PGPA_CITY,PGPA_ADDR,PGPA_TOUCH FROM PB_GOLDPICKADDR 
			WHERE ((IN_SEQNO IS NULL OR IN_SEQNO='') OR PGPA_SEQNO=IN_SEQNO) WITH UR;
	
	--寮傚父澹版槑 
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN 
		SET PROC_RETCODE='95000';
	END;
	
	OPEN CUR_LIST;
	SET PROC_RETCODE='00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GOLD_PRODUCT_INFO_QUERY
(
	IN IN_PAGE_NO VARCHAR(10),
	IN IN_PAGE_SIZE VARCHAR(10),
	IN IN_PRODUCT_COD VARCHAR(2000),
	OUT PROC_RETCODE CHAR(5),
	OUT OUT_TOTALNUM INTEGER
)
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐗硅鍟嗗搧淇℃伅鏌ヨ

-- 杈撳叆鍙傛暟锛?-- IN_PAGE_NO锛氶〉鍙?-- IN_PAGE_SIZE锛氫竴椤垫樉绀烘暟
-- IN_PRODUCT_COD锛氫骇鍝佷唬鐮?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOTALNUM锛氭€绘暟

-- 鏈€鍚庝慨鏀逛汉锛歍zx
-- 鏈€鍚庝慨鏀规棩鏈燂細2011.04.26
------------------------------------------------------------------------
BEGIN
	-- 鍙橀噺澹版槑
	DECLARE V_SQL VARCHAR(2300);
	DECLARE V_SQL1 VARCHAR(2100);
	DECLARE V_PAGE_NO INTEGER;
	DECLARE V_PAGE_SIZE INTEGER;
	DECLARE V_SINT INTEGER;
	DECLARE V_LINT INTEGER;
	DECLARE CUR_PRODUCT CURSOR WITH RETURN FOR SQLSTATMENT;
	DECLARE CUR_PRODCNT CURSOR WITH RETURN FOR SQLSTATMENT1;
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RETCODE = '95000';
	END;
	
	SET V_PAGE_NO = INT(IN_PAGE_NO);
	SET V_PAGE_SIZE = INT(IN_PAGE_SIZE);
	SET V_SINT = (V_PAGE_NO - 1) * V_PAGE_SIZE;
	SET V_LINT = V_PAGE_NO * V_PAGE_SIZE;
	
	-- 鍙栧緱鐗硅鍟嗗搧淇℃伅
	IF V_PAGE_NO = 1 THEN
		SET V_SQL = 'SELECT PMI_PRODID, PMI_IMAGENAME, PMI_FLASHNAME FROM PB_METAL_IMAGE WHERE PMI_PRODID IN ' || IN_PRODUCT_COD || ' ORDER BY PMI_PRODID FETCH FIRST ' || IN_PAGE_SIZE || ' ROWS ONLY';	
	ELSE
		SET V_SQL = 'SELECT * FROM (SELECT PMI_PRODID, PMI_IMAGENAME, PMI_FLASHNAME, ROWNUMBER() OVER (ORDER BY PMI_PRODID) AS ROWID FROM PB_METAL_IMAGE WHERE PMI_PRODID IN ' || IN_PRODUCT_COD || ' ) AS T1 WHERE T1.ROWID > ' || CHAR(V_SINT) || ' AND T1.ROWID <= ' || CHAR(V_LINT);	
	END IF;
	
	-- 鍙栧緱鐗硅鍟嗗搧鎬绘暟
	SET V_SQL1 = 'SELECT COUNT(PMI_PRODID) FROM PB_METAL_IMAGE	WHERE PMI_PRODID IN ' || IN_PRODUCT_COD;
	
	PREPARE SQLSTATMENT FROM V_SQL;
	OPEN CUR_PRODUCT;
	PREPARE SQLSTATMENT1 FROM V_SQL1;
	OPEN CUR_PRODCNT;
	FETCH CUR_PRODCNT INTO OUT_TOTALNUM;
	SET PROC_RETCODE='00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GOLD_PRODUCT_PIC_QUERY
(
	IN IN_PRODUCT_COD VARCHAR(20),
	OUT PROC_RETCODE CHAR(5),
	OUT OUT_PRODUCT_PIC VARCHAR(50),
	OUT OUT_PRODUCT_FLASH VARCHAR(60)
)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐗硅鍟嗗搧淇℃伅鏌ヨ

-- 杈撳叆鍙傛暟锛?-- IN_PRODUCT_COD锛氫骇鍝佷唬鐮?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_PRODUCT_PIC锛氫骇鍝佸浘鐗?-- OUT_PRODUCT_FLASH锛氫骇鍝乫lash

-- 鏈€鍚庝慨鏀逛汉锛歍zx
-- 鏈€鍚庝慨鏀规棩鏈燂細2011.05.06
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RETCODE = '95000';
	END;
	
	SELECT
		PMI_IMAGENAME, PMI_FLASHNAME
	INTO
		OUT_PRODUCT_PIC, OUT_PRODUCT_FLASH
	FROM PB_METAL_IMAGE
	WHERE 
		PMI_PRODID = IN_PRODUCT_COD;
	SET PROC_RETCODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_INS_GOLD_TIMINV_PRC
(
	IN IN_VARIETY VARCHAR(2), 
  	IN IN_DATE VARCHAR(8), 
  	IN IN_PRICE VARCHAR(20), 
  	OUT PROC_RET_CODE VARCHAR(5)
)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鎻掑叆榛勯噾瀹氭姇鍘嗗彶浠锋牸

-- 杈撳叆鍙傛暟锛?-- IN_VARIETY锛氫氦鏄撳搧绉?-- IN_DATE锛氫氦鏄撴棩鏈?-- IN_PRICE锛氬畾鎶曚环鏍?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歍zx
-- 鏈€鍚庝慨鏀规棩鏈燂細2012.05.10
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN 
		SET PROC_RET_CODE ='95000';
		ROLLBACK;
	END;
	
	INSERT INTO PB_GOLD_TIMINV_PRICE
        (PGTP_VARIETY, PGTP_DATE, PGTP_PRICE) 
    VALUES
        (IN_VARIETY, IN_DATE, IN_PRICE);
	
	COMMIT;
	
	SET PROC_RET_CODE ='00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_GOLD_TIMINV_PRC
(
	IN IN_STARTDATE VARCHAR(8),
  	IN IN_ENDDATE VARCHAR(8),
  	IN IN_VARIETY VARCHAR(2),
  	IN IN_PAGE_NO INTEGER,
  	IN IN_PAGE_SIZE INTEGER,
  	OUT PROC_RET_CODE VARCHAR(5),
  	OUT OUT_TOTALNUM INTEGER
)
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 榛勯噾瀹氭姇鍘嗗彶浠锋牸鏌ヨ

-- 杈撳叆鍙傛暟锛?-- IN_STARTDATE锛氳捣濮嬫棩鏈?-- IN_ENDDATE锛氭埅姝㈡棩鏈?-- IN_VARIETY锛氬畾鎶曞搧绉?-- IN_PAGE_NO锛氶〉鍙?-- IN_PAGE_SIZE锛氫竴椤垫樉绀烘暟

-- 杈撳嚭鍙傛暟锛?-- OUT_TOTALNUM锛氭€绘暟
-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歍zx
-- 鏈€鍚庝慨鏀规棩鏈燂細2012.05.07
------------------------------------------------------------------------
BEGIN
	DECLARE V_COND VARCHAR(2000);
	DECLARE V_SQL VARCHAR(2100);
	DECLARE V_SQL1 VARCHAR(2100);
	DECLARE V_SINT INTEGER;
	DECLARE V_LINT INTEGER;
	DECLARE CUR_PRICE CURSOR WITH RETURN FOR SQLSTATMENT;
	DECLARE CUR_PRCCNT CURSOR FOR SQLSTATMENT1;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN 
		SET PROC_RET_CODE ='95000';
	END;
	
	SET OUT_TOTALNUM = 0;
	
	SET V_COND = '1 = 1';
	
	IF IN_STARTDATE != '' THEN
		SET V_COND = V_COND || ' AND銆€PGTP_DATE >= ''' || IN_STARTDATE || ''' ';
	END IF;
	
	IF IN_ENDDATE != '' THEN
		SET V_COND = V_COND || ' AND銆€PGTP_DATE <= ''' || IN_ENDDATE || ''' ';
	END IF;
	
	IF IN_VARIETY != '' THEN
		SET V_COND = V_COND || ' AND銆€PGTP_VARIETY = ''' || IN_VARIETY || ''' ';
	END IF;
	
	SET V_SINT = (IN_PAGE_NO - 1) * IN_PAGE_SIZE;
	SET V_LINT = IN_PAGE_NO * IN_PAGE_SIZE;
	
	SET V_SQL = 'SELECT * FROM (SELECT PB_GOLD_TIMINV_PRICE.*, ROWNUMBER() OVER (ORDER BY PGTP_DATE desc) AS ROWID FROM PB_GOLD_TIMINV_PRICE WHERE ' || V_COND || ' ) AS T1 WHERE T1.ROWID > ' || CHAR(V_SINT) || ' AND T1.ROWID <= ' || CHAR(V_LINT);
	
	SET V_SQL1 = 'SELECT COUNT(*) FROM PB_GOLD_TIMINV_PRICE	WHERE ' || V_COND;
	
	PREPARE SQLSTATMENT FROM V_SQL;
	OPEN CUR_PRICE;
	PREPARE SQLSTATMENT1 FROM V_SQL1;
	OPEN CUR_PRCCNT;
	FETCH CUR_PRCCNT INTO OUT_TOTALNUM;
	SET PROC_RET_CODE ='00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GOLD_PRODUCT_QUERY
(
	IN IN_AREANO VARCHAR(10),
	IN IN_YDGOLD VARCHAR(2),
	IN IN_PRDTYP VARCHAR(20),
	IN IN_MER VARCHAR(20),
	IN IN_UPWEIGHT VARCHAR(10),
	IN IN_LOWWEIGHT VARCHAR(10),
	IN IN_UPPRICE VARCHAR(10),
	IN IN_LOWPRICE VARCHAR(10),
	IN IN_PAGE_NO VARCHAR(10),
	IN IN_PAGE_SIZE VARCHAR(10),
	OUT PROC_RET_CODE CHAR(5),
	OUT OUT_TOTALNUM INTEGER
)
	READS SQL DATA
	DYNAMIC RESULT SETS 1
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐗硅鍟嗗搧鏌ヨ

-- 杈撳叆鍙傛暟锛?-- IN_PAGE_NO锛氶〉鍙?-- IN_PAGE_SIZE锛氫竴椤垫樉绀烘暟

-- 杈撳嚭鍙傛暟锛?-- OUT_TOTALNUM锛氭€绘暟
-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歍zx
-- 鏈€鍚庝慨鏀规棩鏈燂細2013.05.03
------------------------------------------------------------------------
BEGIN
	DECLARE V_HOUR VARCHAR(6);
	DECLARE V_PAGE_NO INTEGER;
	DECLARE V_PAGE_SIZE INTEGER;
	DECLARE V_SINT INTEGER;
	DECLARE V_LINT INTEGER;
	DECLARE V_TOTALNUM INTEGER;
	
	DECLARE	CUR_PRODUCT CURSOR WITH RETURN FOR 
		SELECT * FROM (
			SELECT PMGP_PRDCOD, PMGP_PRDNAM, PMGP_PRDTYP, PMGP_MER, PMGP_WEIGHT, PMGP_SPEC, PGPP_EXCPRC, PMI_IMAGENAME, PMI_FLASHNAME, PGPP_DISFLAG, ROWNUMBER() OVER (ORDER BY PMGP_PRDCOD) AS ROWID
			FROM PB_MQT_GOLD_PRODUCT
			WHERE PGPP_AREANO = IN_AREANO AND
				PMGP_SHOUR <= V_HOUR AND
				PMGP_EHOUR >= V_HOUR AND
				PMGP_YDGOLD = IN_YDGOLD AND
				(IN_PRDTYP = '' OR PMGP_PRDTYP = IN_PRDTYP) AND
				(IN_MER = '' OR PMGP_MER = IN_MER) AND
				(IN_UPWEIGHT = '' OR (PMGP_SPEC = '1' AND DECIMAL(IN_UPWEIGHT, 9, 2) >= PMGP_WEIGHT) OR (PMGP_SPEC = '2' AND DECIMAL(IN_UPWEIGHT, 9, 2) >= PMGP_WEIGHT * 31)) AND
				(IN_LOWWEIGHT = '' OR (PMGP_SPEC = '1' AND DECIMAL(IN_LOWWEIGHT, 9, 2) <= PMGP_WEIGHT) OR (PMGP_SPEC = '2' AND DECIMAL(IN_LOWWEIGHT, 9, 2) <= PMGP_WEIGHT * 31)) AND
				(IN_UPPRICE = '' OR DECIMAL(IN_UPPRICE, 9, 2) >= PGPP_EXCPRC) AND
				(IN_LOWPRICE = '' OR DECIMAL(IN_LOWPRICE, 9, 2) <= PGPP_EXCPRC)
			ORDER BY PMGP_PRDCOD
		) AS T1
		WHERE T1.ROWID > V_SINT AND T1.ROWID <= V_LINT
		WITH UR;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN 
		SET PROC_RET_CODE ='95000';
	END;
	
	SET V_HOUR = REPLACE(CHAR(CURRENT TIME, ISO), '.', '');
	
	SET V_PAGE_NO = INT(IN_PAGE_NO);
	SET V_PAGE_SIZE = INT(IN_PAGE_SIZE);
	SET V_SINT = (V_PAGE_NO - 1) * V_PAGE_SIZE;
	SET V_LINT = V_PAGE_NO * V_PAGE_SIZE;
	
	SELECT COUNT(*) INTO V_TOTALNUM
		FROM PB_MQT_GOLD_PRODUCT
		WHERE PGPP_AREANO = IN_AREANO AND
			PMGP_SHOUR <= V_HOUR AND
			PMGP_EHOUR >= V_HOUR AND
			PMGP_YDGOLD = IN_YDGOLD AND
			(IN_PRDTYP = '' OR PMGP_PRDTYP = IN_PRDTYP) AND
			(IN_MER = '' OR PMGP_MER = IN_MER) AND
			(IN_UPWEIGHT = '' OR (PMGP_SPEC = '1' AND DECIMAL(IN_UPWEIGHT, 9, 2) >= PMGP_WEIGHT) OR (PMGP_SPEC = '2' AND DECIMAL(IN_UPWEIGHT, 9, 2) >= PMGP_WEIGHT * 31)) AND
			(IN_LOWWEIGHT = '' OR (PMGP_SPEC = '1' AND DECIMAL(IN_LOWWEIGHT, 9, 2) <= PMGP_WEIGHT) OR (PMGP_SPEC = '2' AND DECIMAL(IN_LOWWEIGHT, 9, 2) <= PMGP_WEIGHT * 31)) AND
			(IN_UPPRICE = '' OR DECIMAL(IN_UPPRICE, 9, 2) >= PGPP_EXCPRC) AND
			(IN_LOWPRICE = '' OR DECIMAL(IN_LOWPRICE, 9, 2) <= PGPP_EXCPRC);
	
	SET OUT_TOTALNUM = CEIL(DECIMAL(V_TOTALNUM) / DECIMAL(8));
	
	OPEN CUR_PRODUCT;
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GOLD_PRODUCT_INFO_UPDATE
(
	IN IN_PRDCOD VARCHAR(8),
	IN IN_PRDNAM VARCHAR(60),
	IN IN_ENTNO VARCHAR(2),
	IN IN_ENTNAM VARCHAR(60),
	IN IN_SHOUR VARCHAR(6),
	IN IN_EHOUR VARCHAR(6),
	IN IN_YDGOLD VARCHAR(2),
	IN IN_PRDTYP VARCHAR(20),
	IN IN_PRDTYPNAME VARCHAR(60),
	IN IN_MER VARCHAR(20),
	IN IN_WEIGHT VARCHAR(13),
	IN IN_SPEC VARCHAR(10),
	OUT PROC_RET_CODE CHAR(5),
	OUT OUT_TOA_MSG_TYPE VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO VARCHAR(2),
	OUT OUT_TOA_MSG_CODE VARCHAR(4),
	OUT OUT_ANSINFO VARCHAR(50)
)
	MODIFIES SQL DATA
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏇存柊璐甸噾灞炰俊鎭?
-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歍zx
-- 鏈€鍚庝慨鏀规棩鏈燂細2013.05.08
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN 
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	UPDATE PB_GOLD_PRODUCT_INFO
		SET PGPI_PRDNAM = IN_PRDNAM, PGPI_ENTNO = IN_ENTNO, PGPI_ENTNAM = IN_ENTNAM, PGPI_SHOUR = IN_SHOUR, PGPI_EHOUR = IN_EHOUR, PGPI_YDGOLD = IN_YDGOLD, 
			PGPI_PRDTYP = IN_PRDTYP, PGPI_PRDTYPNAME = IN_PRDTYPNAME, PGPI_MER = IN_MER, PGPI_WEIGHT = DECIMAL(IN_WEIGHT, 13, 2), PGPI_SPEC = IN_SPEC
		WHERE PGPI_PRDCOD = IN_PRDCOD;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GOLD_PRODUCT_PRICE_UPDATE
(
	IN IN_PRDLIST CLOB,
	OUT PROC_RET_CODE CHAR(5),
	OUT OUT_TOA_MSG_TYPE VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO VARCHAR(2),
	OUT OUT_TOA_MSG_CODE VARCHAR(4),
	OUT OUT_ANSINFO VARCHAR(50)
)
	MODIFIES SQL DATA
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏇存柊璐甸噾灞炴壒閲忎环鏍间俊鎭?
-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歍zx
-- 鏈€鍚庝慨鏀规棩鏈燂細2013.05.08
------------------------------------------------------------------------
BEGIN
	DECLARE V_TEMP CLOB;
	DECLARE V_LENGTH INT;
	DECLARE V_POS INT;
	DECLARE V_CURRENT_PRD VARCHAR(50);
	
	DECLARE V_PRDCOD VARCHAR(8);
	DECLARE V_AREANO VARCHAR(10);
	DECLARE V_EXCPRC VARCHAR(13);
	DECLARE V_DISFLAG VARCHAR(1);
	
	DECLARE V_UPDATE_FLAG CHAR(1);
	
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION 
	BEGIN 
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		SET V_UPDATE_FLAG = '1';
	END;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
	SET V_TEMP = IN_PRDLIST;
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH > 0 DO
		SET V_UPDATE_FLAG = '0';
		
		SET V_POS = POSSTR(V_TEMP, '#');
		SET V_CURRENT_PRD = SUBSTR(V_TEMP, 1, V_POS - 1);
		SET V_TEMP = SUBSTR(V_TEMP, V_POS + 1);
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_PRD, '|');
		SET V_PRDCOD = SUBSTR(V_CURRENT_PRD, 1, V_POS - 1);
		SET V_CURRENT_PRD = SUBSTR(V_CURRENT_PRD, V_POS + 1);
		
		SET V_POS = POSSTR(V_CURRENT_PRD, '|');
		SET V_AREANO = SUBSTR(V_CURRENT_PRD, 1, V_POS - 1);
		SET V_CURRENT_PRD = SUBSTR(V_CURRENT_PRD, V_POS + 1);
		
		SET V_POS = POSSTR(V_CURRENT_PRD, '|');
		SET V_EXCPRC = SUBSTR(V_CURRENT_PRD, 1, V_POS - 1);
		SET V_CURRENT_PRD = SUBSTR(V_CURRENT_PRD, V_POS + 1);
		
		SET V_DISFLAG = V_CURRENT_PRD;
		
		IF V_UPDATE_FLAG = '0' THEN
			UPDATE PB_GOLD_PRODUCT_PRICE
				SET PGPP_EXCPRC = DECIMAL(V_EXCPRC, 13, 2), PGPP_DISFLAG = V_DISFLAG
				WHERE PGPP_PRDCOD = V_PRDCOD AND PGPP_AREANO = V_AREANO;
		END IF;
	END WHILE;
	COMMIT;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GOLD_PRODUCT_DELETE
(
	OUT PROC_RET_CODE CHAR(5)
)
	MODIFIES SQL DATA
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒犻櫎璐甸噾灞?
-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歍zx
-- 鏈€鍚庝慨鏀规棩鏈燂細2013.05.09
------------------------------------------------------------------------
BEGIN
	DECLARE V_COUNT INTEGER;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN 
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	DELETE FROM PB_GOLD_PRODUCT_INFO;
	COMMIT;
	
	SELECT COUNT(*) INTO V_COUNT FROM PB_GOLD_PRODUCT_PRICE;
	
	WHILE V_COUNT > 0 DO
		DELETE FROM (SELECT * FROM PB_GOLD_PRODUCT_PRICE FETCH FIRST 10000 ROWS ONLY);
		COMMIT;
		SET V_COUNT = V_COUNT - 10000;
	END WHILE;
	
	SET PROC_RET_CODE = '00000';
END
DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PBANK.PB_SCORE_BATCH_CURSOR_PROCESS(	
	OUT PROC_RET_CODE VARCHAR(200)
)
LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁熻涓婁竴宸ヤ綔鏃ョ殑绉垎
-- 杈撳叆鍙傛暟锛氭棤
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鏈€鍚庝慨鏀逛汉 锛?ECC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.3.26
------------------------------------------------------------------------
BEGIN
	------------绗竴閮ㄥ垎锛氬紑濮嬪０鏄庡彉閲?--------
	DECLARE V_TIME VARCHAR(8);								-- 鏇存柊鏃ユ湡
	DECLARE STT VARCHAR(1);									-- 鎵瑰鐞嗙姸鎬?    DECLARE IN_BATNO VARCHAR(4) DEFAULT '0001';				-- 鍦ㄦ壒澶勭悊涓涓€涓墽琛岋紙0001锛?    DECLARE REPFLG VARCHAR(1);								-- 鏄惁鍙互閲嶅鎵ц锛堟暟鎹簱涓槸鍚︼級
    DECLARE V_CARDNO VARCHAR(30);							-- 瀛樻斁娓告爣閲岀殑锛氬崱鍙?    DECLARE V_CHANNEL VARCHAR(1);							-- 瀛樻斁娓告爣閲岀殑锛氭笭閬撳彿
    DECLARE V_SCORE DECIMAL(15,2);							-- 瀛樻斁娓告爣閲岀殑锛氱Н鍒嗗€?    DECLARE V_FOR_UPDATE INT DEFAULT 0;						-- 鏇存柊鐨勫崱鍙锋暟
    DECLARE V_FOR_INSERT INT DEFAULT 0;						-- 鏂板鐨勫崱鍙锋暟
    DECLARE V_CURSOR_LABEL VARCHAR(3) DEFAULT '000'	;		-- 娓告爣閬嶅巻鐨勫紑濮嬫爣璁帮紙000:寮€濮嬶紱001锛氱粨鏉燂級
    DECLARE V_AT_END SMALLINT DEFAULT 0;					-- 鍒ゆ柇娓告爣鏄惁閬嶅巻瀹岋紙0锛氬惁锛?锛氭槸锛?    DECLARE V_NOT_FOUND CONDITION FOR SQLSTATE '02000';		-- 澹版槑寮傚父鍙傛暟
	DECLARE V_ROWCOUNT INTEGER;								-- SQL褰卞搷璁板綍鏁?	DECLARE V_COUNT INTEGER;								-- 绱褰卞搷璁板綍鏁?    
    /*
    	澹版槑娓告爣锛氭煡璇㈢Н鍒嗕复鏃惰〃
    	娓告爣鍙橀噺锛歏_PB_SCRTMP_CURSOR
    	娓告爣鍐呭锛氬崱鍙凤紝娓犻亾鍙凤紝鏄ㄥぉ鎵€鏈夊崱鍙峰湪缃戞垨鎵嬫満娓犻亾绱鐨勭Н鍒?    */
    DECLARE V_PB_SCRTMP_CURSOR CURSOR FOR					
        SELECT 	PST_CARDNO,PST_CHANNEL,SUM(PST_SCORE) 
        FROM 	PB_SCRTMP 
        GROUP BY PST_CARDNO,PST_CHANNEL ;  
    /*
    	娓告爣寮傚父锛氬湪閬嶅巻娓告爣鏃跺鏋滄父鏍囦腑鏃犺褰曟垨娓告爣閬嶅巻缁撴潫锛屾崟鑾疯寮傚父
    	寮傚父澶勭悊锛氶鍏堝垽鏂寮傚父鏄惁鏄湪澶勭悊娓告爣鏃惰鎹曡幏鐨勶紝濡傛灉鏄殑璇濓紝璁剧疆娓告爣閬嶅巻缁撴潫鏍囧織涓虹粨鏉熺姸鎬?    */        
    DECLARE CONTINUE  HANDLER FOR V_NOT_FOUND				
        BEGIN
            IF V_CURSOR_LABEL = '001' THEN
             SET V_AT_END = 1;
            END IF;
        END; 
        
    /*
    	鍏朵粬寮傚父锛氬綋绋嬪簭鍙戠敓鍏跺畠閿欒鏃讹紝鎹曡幏璇ュ紓甯?    	寮傚父澶勭悊锛氶鍏堝洖婊氬嚭閿欑殑浜嬪姟锛屾洿鏂版壒澶勭悊琛ㄧ殑澶勭悊鐘舵€佷负澶辫触鐘舵€侊紙2锛氬け璐ワ級
    */  
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK ;
		UPDATE 	PB_BATFLG 
		SET 	PBT_STT = '2',
				PBT_TIME = V_TIME 
		WHERE 	PBT_BATNO = IN_BATNO;
		COMMIT;
	END;
	------------缁撴潫澹版槑鍙橀噺---------
	
	------------绗簩閮ㄥ垎锛氬紑濮嬫鏌ョ姸鎬?--------
	SET V_TIME = FUNC_DATETIME_FMT((CURRENT TIMESTAMP-1 days),'yyyymmdd');		-- 璁剧疆缁熻鐨勭Н鍒嗘椂闂翠负鏄ㄥぉ
	
	SET PROC_RET_CODE = '99999锛氭煡璇㈡壒閲忚〃鍑洪敊锛岃妫€鏌ユ壒閲忚〃';
	/*
		鏌ヨ鎵归噺琛ㄤ腑瀵逛簬璇ユ壒娆＄殑绉垎璁＄畻锛?001锛夌殑鍙噸澶嶆墽琛屽拰鍒濆鐘舵€?	*/
	SELECT 	PBT_REPFLG, 
			PBT_STT  
	INTO 	REPFLG,
			STT
	FROM 	PB_BATFLG 
	WHERE 	PBT_BATNO = IN_BATNO;
	
	IF STT <> '0' THEN
        RETURN;
    END IF;
    
	IF EXISTS (
        SELECT 1 FROM PB_CRDSCR WHERE PCS_UPDDATE = V_TIME
	) THEN
		SET PROC_RET_CODE = '99998锛氱Н鍒嗗湪杩欎箣鍓嶅凡缁忔墽琛岃繃锛岃妫€鏌ョН鍒嗚〃PB_CRDSCR';
		RETURN;		
	END IF;
	/*
		娓呯悊绉垎琛ㄥ拰绉垎鍘嗗彶琛?	*/
	SET V_COUNT=0;
	SET PROC_RET_CODE = '99997锛氭竻鐞嗙Н鍒嗕复鏃惰〃鏃跺嚭閿欙紝宸茬粡鍥炴粴锛岃妫€鏌B_SCRTMP';
    DELETE FROM PB_SCRTMP ;
    GET DIAGNOSTICS V_ROWCOUNT = ROW_COUNT;
   	SET V_COUNT = V_COUNT + V_ROWCOUNT;
   	IF V_COUNT>=300000 THEN
   	 	COMMIT;
    	SET V_COUNT=0;
	END IF;  	
    SET PROC_RET_CODE = '99996锛氭竻鐞嗙Н鍒嗗巻鍙茶〃鏃跺嚭閿欙紝宸茬粡鍥炴粴锛岃妫€鏌B_SCRTMP_HIS';
    DELETE FROM PB_SCRTMP_HIS WHERE PSTH_LOGDATE = V_TIME;
   	GET DIAGNOSTICS V_ROWCOUNT = ROW_COUNT;
   	SET V_COUNT = V_COUNT + V_ROWCOUNT;
   	IF V_COUNT>=300000 THEN
   	 	COMMIT;
    	SET V_COUNT=0;
	END IF;  	

	------------缁撴潫妫€鏌ョ姸鎬?--------
	    
    ------------绗笁閮ㄥ垎锛氬紑濮嬮噰闆嗘暟鎹?--------
    /*
    	婧? 琛細浜ゆ槗娴佹按琛紙PB_TRNFLW锛夛紝绉垎瑙勫垯琛紙PB_CSRRUL锛夛紝閲戦杞崲鐜囪〃锛圥B_USDRAT锛?    	鐩爣琛細绉垎涓存椂琛紙PB_SCRTMP锛?    	
    	< 缃戜笂閾惰 >
    	瑙勫垯 1锛氬崱  鍌細鍗″崱杞笎					
    			澶栨眹瀹濓細鍗充娇浜ゆ槗
    			鍩? 閲戯細璁よ喘锛岀敵璐紝璧庡洖锛岃浆鎹?    			淇＄敤鍗★細淇＄敤鍗¤繕娆?    	瑙勫垯 2锛氫汉姘戝竵姣?00鍏冩崲1绉垎锛屼笉瓒?00鍏冧笉璁板垎
    			澶栧竵鎶樼畻鎴愮編鍏冿紝姣?00缇庡厓鎹?绉垎锛屼笉瓒?00缇庡厓涓嶈鍒?    	< 鎵嬫満閾惰 >
    	瑙勫垯 1锛氬姹囧疂锛氬嵆浣夸氦鏄?    			鍩? 閲戯細璁よ喘锛岀敵璐紝璧庡洖锛岃浆鎹?    			淇＄敤鍗★細淇＄敤鍗¤繕娆?    	瑙勫垯 2锛氫汉姘戝竵姣?00鍏冩崲3绉垎锛屼笉瓒?00鍏冧笉璁板垎
    			澶栧竵鎶樼畻鎴愮編鍏冿紝姣?00缇庡厓鎹?绉垎锛屼笉瓒?00缇庡厓涓嶈鍒?    			
    	鍔熻兘鎻忚堪锛?1.绛涢€夌鍚堢粺璁℃棩鏈熺殑鏁版嵁
    				2.绛涢€変氦鏄撴垚鍔熺殑娴佹按
    				3.绛涢€夎绉垎鐨勪富鏈轰氦鏄?    				4.鍖哄垎娓犻亾
    				5.鍖哄垎甯佺
    				6.璁＄畻鏌愪釜鍗″彿鍦ㄦ煇涓笭閬撶殑鏌愪釜浜ゆ槗鐨勭Н鍒?    				7.鍏紡:浜ゆ槗閲戦/(缇庡厓鍏戞崲鐜?100)*绉垎鍗曚綅锛濇瘡100锛堢編锛夊厓绉垎
    */
    SET PROC_RET_CODE = '99995锛氶噰闆嗙Н鍒嗘暟鎹椂鍑洪敊锛屽凡缁忓洖婊氾紝璇锋鏌B_SCRTMP';
	INSERT INTO PB_SCRTMP(	
							PST_LOGNO,				--绉垎娴佹按鍙?							PST_LOGDATE,			--绉垎鏃堕棿
							PST_CARDNO,				--鍗″彿
							PST_TRANCODE,			--浜ゆ槗鐮?							PST_TRANFLAG,			--浜ゆ槗绉嶇被 0锛氶噾棰濈Н鍒?							PST_CHANNEL,			--娓犻亾鍙?							PST_SCORE				--绉垎
						 ) 
	SELECT 	DISTINCT
			PTF.PTF_TRNFLW,							--缃戦摱娴佹按鍙?			V_TIME,									--缃戦摱鏃堕棿
			PTF.PTF_PAYCARDNO,						--浠樻鍗″彿
			PTF.PTF_HOSTCODE,						--浜ゆ槗浠ｇ爜
			'0'	,									--浜ゆ槗绉嶇被锛氶噾棰濈Н鍒?			PTF.PTF_CHANNEL,						--娓犻亾
			TRUNC(DECIMAL(PTF.PTF_PAYAMT/(100*PUR.PUR_RATE),15,0)*PCR_USDSCORE,0) --绉垎
	FROM 	PB_TRNFLW PTF,
			PB_CSRRUL PCR,
			PB_USDRAT PUR	
	WHERE 	PTF.PTF_TRANTIM LIKE V_TIME||'%' 
	AND 	PTF.PTF_STT = '00' 
	AND 	((PTF.PTF_HOSTCODE = PCR.PCR_HOSTCODE AND PTF.PTF_HOSTCODE <> '80921210') 
			OR 
			(PTF.PTF_HOSTCODE = PCR.PCR_HOSTCODE AND PTF.PTF_HOSTCODE = '80921210' AND PTF.PTF_PAYBRA <>PTF.PTF_RCVBRA))
	AND   	PTF.PTF_CHANNEL = PCR.PCR_CHANNEL 
	AND 	PTF.PTF_PAYCRYTYP=PUR.PUR_CRYTYP;		

   	GET DIAGNOSTICS V_ROWCOUNT = ROW_COUNT;
   	SET V_COUNT = V_COUNT + V_ROWCOUNT;
   	IF V_COUNT>=300000 THEN
   	 	COMMIT;
    	SET V_COUNT=0;
	END IF;  	

	------------缁撴潫閲囬泦鏁版嵁---------	
	
	------------绗洓閮ㄥ垎锛氬紑濮嬪鐞嗙Н鍒?--------

	/*
		鍔熻兘鎻忚堪锛?姝ラ1锛氭墦寮€娓告爣
					姝ラ2锛氶亶鍘嗘父鏍囧苟璧嬪€肩粰鍙橀噺
					姝ラ3锛氬垽鏂Н鍒嗚〃锛堬級涓槸鍚﹀瓨鍦ㄨ鍗″彿锛屽鏋滃瓨鍦紝鍋氭洿鏂版搷浣滐紝鍚﹀垯鍋氭彃鍏ユ搷浣?					姝ラ4: 鍒ゆ柇鏄惁閬嶅巻缁撴潫
					姝ラ5锛氬叧闂父鏍?	*/
	-- 姝ラ1锛氭墦寮€娓告爣
	SET PROC_RET_CODE = '99994:鎵撳紑V_PB_SCRTMP_CURSOR娓告爣鏃跺嚭閿欙紝璇锋鏌ョН鍒嗕复鏃惰〃锛圥B_SCRTMP锛?;
    OPEN V_PB_SCRTMP_CURSOR;
    SET PROC_RET_CODE = '99993:璁＄畻绉垎鏃跺嚭閿欙紝璇锋鏌ョН鍒嗕复鏃惰〃锛圥B_SCRTMP锛夊拰绉垎琛紙PB_CRDSCR锛?;
    FETCH_LOOP:
    REPEAT
    	-- 姝ラ2锛氶亶鍘嗘父鏍囧苟璧嬪€肩粰鍙橀噺
        SET V_CURSOR_LABEL = '001';
        FETCH V_PB_SCRTMP_CURSOR INTO V_CARDNO,V_CHANNEL,V_SCORE;
        IF(V_AT_END > 0) THEN
        	LEAVE FETCH_LOOP;
       	END IF;
        -- 姝ラ3锛氬垽鏂Н鍒嗚〃锛堬級涓槸鍚﹀瓨鍦ㄨ鍗″彿锛屽鏋滃瓨鍦紝鍋氭洿鏂版搷浣滐紝鍚﹀垯鍋氭彃鍏ユ搷浣?        IF EXISTS(SELECT 1 FROM PB_CRDSCR WHERE PCS_CARDNO = V_CARDNO AND PCS_CHANNEL = V_CHANNEL) THEN
       		UPDATE 	PB_CRDSCR
	        SET 	PCS_SCORE = PCS_SCORE+V_SCORE,
	                PCS_UPDDATE = V_TIME
		    WHERE 	PCS_CARDNO = V_CARDNO
	        AND     PCS_CHANNEL = V_CHANNEL;  
	        SET 	V_FOR_UPDATE = V_FOR_UPDATE + 1;
		ELSE 
			INSERT INTO PB_CRDSCR(
				PCS_CARDNO,
				PCS_CHANNEL,
				PCS_SCORE,
				PCS_UPDDATE
			 )	
			VALUES	(	
				V_CARDNO,
				V_CHANNEL,
				V_SCORE,
				V_TIME										
			);
			SET 	V_FOR_INSERT = V_FOR_INSERT + 1;
		END IF;	
		-- 姝ラ4: 鍒ゆ柇鏄惁閬嶅巻缁撴潫		              
        UNTIL V_AT_END > 0 
    END REPEAT FETCH_LOOP;
    -- 姝ラ5锛氬叧闂父鏍?    SET PROC_RET_CODE = '99992:鍏抽棴V_PB_SCRTMP_CURSOR娓告爣鏃跺嚭閿欙紝璇锋鏌ョН鍒嗕复鏃惰〃锛圥B_SCRTMP锛?;
    CLOSE V_PB_SCRTMP_CURSOR;
   	SET V_COUNT = V_COUNT + V_FOR_INSERT + V_FOR_UPDATE;
   	IF V_COUNT>=300000 THEN
   	 	COMMIT;
    	SET V_COUNT=0;
	END IF;  	
	------------缁撴潫澶勭悊绉垎---------
	
	------------绗簲閮ㄥ垎锛氬紑濮嬪悗缁鐞?--------
	/*
	  	鍔熻兘鎻忚堪锛?1.灏嗙Н鍒嗕复鏃惰〃鏁版嵁瀵煎叆鍒扮Н鍒嗗巻鍙茶〃涓€?	  				2.鍒犻櫎绉垎涓存椂琛ㄦ暟鎹?	  				3.鏇存柊鎵归噺琛ㄦ暟鎹姸鎬佷负鎿嶄綔鎴愬姛
	*/
	SET PROC_RET_CODE = '99991:绉垎涓存椂琛紙PB_SCRTMP锛夊鏁版嵁鑷崇Н鍒嗗巻鍙茶〃锛圥B_SCRTMP_HIS锛夋椂鍑洪敊锛屽凡缁忓洖婊氾紝璇锋墜鍔ㄥ琛?;
    INSERT INTO PB_SCRTMP_HIS(  PSTH_LOGNO,
                                PSTH_CARDNO,
                                PSTH_TRANCODE,
                                PSTH_CHANNEL,
                                PSTH_TRANFLAG,
                                PSTH_SCORE,
                                PSTH_LOGDATE)
    SELECT  PST_LOGNO,
            PST_CARDNO,
            PST_TRANCODE,
            PST_CHANNEL,
            PST_TRANFLAG,
            PST_SCORE,
            PST_LOGDATE
    FROM    PB_SCRTMP;
    GET DIAGNOSTICS V_ROWCOUNT = ROW_COUNT;
   	SET V_COUNT = V_COUNT + V_ROWCOUNT;
   	IF V_COUNT>=300000 THEN
   	 	COMMIT;
    	SET V_COUNT=0;
	END IF;  
    --鍒犻櫎绉垎涓存椂琛ㄦ暟鎹?	SET PROC_RET_CODE = '99990:鍒犻櫎绉垎涓存椂琛紙PB_SCRTMP锛夋暟鎹椂鍑洪敊锛屽凡缁忓洖婊氾紝璇锋鏌ヨ琛?;
	DELETE FROM PB_SCRTMP;
    GET DIAGNOSTICS V_ROWCOUNT = ROW_COUNT;
   	SET V_COUNT = V_COUNT + V_ROWCOUNT;
   	IF V_COUNT>=300000 THEN
   	 	COMMIT;
    	SET V_COUNT=0;
	END IF;  
    
    --鏇存柊鎵归噺琛ㄦ暟鎹姸鎬佷负鎿嶄綔鎴愬姛
	SET PROC_RET_CODE = '99989:鏇存柊鎵归噺琛ㄦ椂鍑洪敊锛屽凡缁忓洖婊氾紝璇锋鏌ヨ琛?;   
	UPDATE PB_BATFLG 
	SET PBT_STT = '1',PBT_TIME = V_TIME 
	WHERE PBT_BATNO = IN_BATNO;
    COMMIT;
	------------缁撴潫鍚庣画澶勭悊---------    
	SET PROC_RET_CODE='00000锛氱Н鍒嗚绠楁垚鍔?	鏇存柊鐨勫崱鍙凤細'||CHAR(V_FOR_UPDATE)||';鏂板鐨勫崱鍙凤細'||CHAR(V_FOR_INSERT)||'銆?;
END
DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SCORE_CHANGE_ACTIVITY_QUERY
 (IN IN_CARDNO VARCHAR(30), 
 	IN IN_ACTIVITYTYPE VARCHAR(10),
 	IN IN_CUSTNO VARCHAR(30),
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
  READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缃戜笂鍏戞崲娲诲姩鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO 锛?	鍗″彿
-- IN_ACTIVITYTYPE 锛?娲诲姩绫诲瀷
-- IN_CUSTNO: 鏍稿績瀹㈡埛鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?-- 淇敼浜猴細pengxb
------------------------------------------------------------------------
BEGIN
	
	DECLARE V_ACTIVITYTYPE  VARCHAR(10);
	DECLARE CUR_Q CURSOR  WITH RETURN TO CALLER FOR
		SELECT IPC_CARDNO,IPA_ACTIVENO,IPA_ACTIVENAME,IPA_BEGINDATE,IPA_ENDDATE,IPC_NAME,IPC_AMT,IPC_DELESCORE,IPC_PRIZENO,IPC_STT,IPA_CONTENTURL

		FROM IM_PRIZE_CSTINFO,IM_PRIZE_ACTIVE 
		
		WHERE (IPC_CARDNO=IN_CUSTNO OR IPC_CARDNO = IN_CARDNO)AND IPC_ACTIVENO = IPA_ACTIVENO AND (IPA_ACTIVETYP like V_ACTIVITYTYPE OR IPA_ACTIVETYP='222') 
		
		AND FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd') >= IPA_BEGINDATE AND FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd') <=  IPA_ENDDATE;
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	SET V_ACTIVITYTYPE= REPLACE(IN_ACTIVITYTYPE,'0','%');
	-- 鎵撳紑娓告爣
	OPEN CUR_Q;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_UPDATE_PRIZE_TRNFLW
 (IN IN_STATUS 				CHAR(1),
  IN IN_CARDNO        VARCHAR(30),
  IN IN_CSTNO         VARCHAR(20),
  IN IN_ACTIVENO      VARCHAR(10),
  IN IN_ACTIVENAME    VARCHAR(60),
  IN IN_ACCADDRESS    VARCHAR(30),
  IN IN_PRIZENO       VARCHAR(20),
  IN IN_CHANNEL       CHAR(1),
  IN IN_TRANTYPE			CHAR(2),
  IN IN_TRANCODE      VARCHAR(6),
  IN IN_HOSTCODE      VARCHAR(20),
  IN IN_ZFNAME        VARCHAR(30),
  IN IN_MERNO         VARCHAR(20),
  IN IN_MERNAME       VARCHAR(30),
  IN IN_REM           DECIMAL(15, 2),
  IN IN_DELESCORE     DECIMAL(15, 2),
  IN IN_STT1          CHAR(1),
  IN IN_STT2          CHAR(2),
  IN IN_REM1          VARCHAR(100),
  IN IN_REM2          VARCHAR(50),
  IN IN_REMARK        VARCHAR(100),  
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
  ------------------------------------------------------------------------
-- 鍒涘缓浜猴細pengxb
-- SQL 瀛樺偍杩囩▼
-- 璁扮Н鍒嗗厬鎹㈡椿鍔ㄦ祦姘?-- 杈撳叆鍙傛暟锛?-- IN_STATUS 			:鍒ゆ柇闇€瑕佽繘琛岀殑澶勭悊娴佺▼
-- 0锛氭垚鍔?鐩存帴杩涜鎻掑叆绉垎娴佹按鎿嶄綔锛堟垚鍔熺姸鎬侊級
-- 1锛氬凡鍏戝 杩涜鎻掑叆鎿嶄綔锛堝け璐ョ姸鎬侊級锛屼笖闇€瑕佹煡璇㈡渶杩戠殑涓€绗旀祦姘达紝缃湭鍐崇姸鎬佷负鎴愬姛鐘舵€?-- 2锛氬け璐?杩涜鎻掑叆鎿嶄綔锛堝け璐ョ姸鎬侊級
-- 3锛氳秴鏃?杩涜鎻掑叆鎿嶄綔锛堟湭鍐崇姸鎬侊級
-- 瀵逛簬0銆?銆?閮介渶瑕佸瀹㈡埛鍏戝鎯呭喌杩涜鏇存柊锛?銆?鏇存敼涓哄凡鍏戝鐘舵€侊紝3鏇存敼涓烘湭鍐崇姸鎬併€?                   
-- IN_CARDNO    :鍗″彿	                
-- IN_CSTNO     :瀹㈡埛鍙?             
-- IN_ACTIVENO  :娲诲姩鍙?              
-- IN_ACTIVENAME:娲诲姩鍚嶇О            
-- IN_ACCADDRESS:鏀粯瀹濊处鎴?Email鍦板潃 
-- IN_PRIZENO   :濂栧埜鍙?              
-- IN_CHANNEL   :娓犻亾鏍囧織
-- IN_TRANTYPE  :浜ゆ槗绫诲瀷	  
-- 00:鍏戝娲诲姩 01锛氬厬濂栭绾?         
-- IN_TRANCODE  :缃戦摱浜ゆ槗浠ｇ爜        
-- IN_HOSTCODE  :涓绘満浜ゆ槗浠ｇ爜        
-- IN_ZFNAME    :鏀粯瀹濈櫥璁扮殑濮撳悕     
-- IN_MERNO     :鍟嗘埛缂栧彿	            
-- IN_MERNAME   :鍟嗘埛鍚嶇О             
-- IN_REM       :閲戦                   
-- IN_DELESCORE :鎶垫墸绉垎	            
-- IN_STT1      :鍏戝鐘舵€?  
-- IN_STT2      :娴佹按琛ㄤ腑浜ゆ槗鐘舵€?          
-- IN_REM1      :澶囨敞                
-- IN_REM2      :鍟嗘埛澶囨敞            
-- IN_REMARK    :绯荤粺澶囨敞             
        
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 淇敼浜? pengxb
-- 淇敼鏃ユ湡锛?007/10/27
-- 淇敼鍘熷洜锛氬綋瀹㈡埛鍙傚姞鍏戞崲娲诲姩鎴愬姛鍚庯紝瀹㈡埛娓呭崟淇℃伅琛ㄤ腑澶囨敞1璁板綍鏀粯瀹濊处鎴凤紝澶囨敞2璁板綍鏀粯瀹濈櫥璁扮殑濮撳悕
-----------------------------------------------------------------------------------------------------
BEGIN
	-- 鍙橀噺澹版槑
	DECLARE V_CURR_DATE  VARCHAR(8);
	DECLARE V_CURR_TRNTIM VARCHAR(14);
	DECLARE V_TRNFLW  VARCHAR(20);
	DECLARE V_FLWNO			BIGINT;			        -- 娴佹按鍙?	DECLARE V_FLOW_NO VARCHAR(20);
	DECLARE V_SCORE DECIMAL(15,2);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	SET V_CURR_TRNTIM = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
  
	--鏇存柊绉垎鍏戞崲鐘舵€?	IF(IN_TRANTYPE='00')THEN
		
	 IF(IN_STT1='1')THEN
	 UPDATE IM_PRIZE_CSTINFO	
	 SET IPC_STT = IN_STT1,IPC_REM1 = IN_ACCADDRESS,IPC_REM2 = IN_ZFNAME 
	 WHERE IPC_ACTIVENO = IN_ACTIVENO AND IPC_CARDNO = IN_CARDNO;
	 ELSE
	 UPDATE IM_PRIZE_CSTINFO	
	 SET IPC_STT = IN_STT1 
	 WHERE IPC_ACTIVENO = IN_ACTIVENO AND IPC_CARDNO = IN_CARDNO;
	 END IF;
	 	 
	END IF;
	
	-- 鐢熸垚绉垎娴佹按鍙?	SELECT NEXTVAL FOR PB_PRIZE_FLOWNO
	INTO V_FLWNO
	FROM SYSIBM.SYSDUMMY1;
	
	SET V_FLOW_NO = CHAR(V_FLWNO);
	
	--鏇存柊绉垎鍏戞崲娴佹按琛?	--鍏戞崲娲诲姩
  IF(IN_STATUS='1' AND IN_TRANTYPE='00')THEN
  	--鏌ヨ鏈€杩戠殑涓€绗斾负鏈喅鐘舵€佺殑娴佹按璁板綍锛屼笖鏇存柊姝よ褰曚负鎴愬姛鐘舵€?  	SELECT MAX(IPT_TRNFLW) INTO V_TRNFLW FROM IM_PRIZE_TRNFLW WHERE IPT_CARDNO = IN_CARDNO AND IPT_STT = '10' AND IN_TRANTYPE='00';
  	UPDATE IM_PRIZE_TRNFLW SET IPT_STT = '00' WHERE IPT_CARDNO = IN_CARDNO AND IPT_TRNFLW = V_TRNFLW;
  	--鏇存柊鎵€鏈夋鍗′笅鍏戝鐘舵€佷负鏈喅鐘舵€佺殑娴佹按璁板綍涓哄け璐ョ姸鎬?  	UPDATE IM_PRIZE_TRNFLW SET IPT_STT = '01' WHERE IPT_CARDNO = IN_CARDNO AND IPT_STT = '10' AND IN_TRANTYPE='00';
  END IF;

  --璁版祦姘?			
	INSERT INTO IM_PRIZE_TRNFLW
	(
		IPT_TRNFLW,
		IPT_CARDNO,
		IPT_CSTNO,
		IPT_ACTIVENO,
		IPT_ACTIVENAME,
		IPT_ACCADDRESS,
		IPT_PRIZENO,
		IPT_CHANNEL,
		IPT_TRANTYPE,
		IPT_TRANCODE,
		IPT_HOSTCODE,
		IPT_ZFNAME,
		IPT_MERNO,
		IPT_MERNAME,
		IPT_REM,
		IPT_DELESCORE,
		IPT_ACCDATE,
		IPT_TRANTIM,
		IPT_STT,
		IPT_REM1,
		IPT_REM2,
		IPT_REMARK    
	)   
	VALUES
	(
		V_FLOW_NO,
		IN_CARDNO,
		IN_CSTNO,
		IN_ACTIVENO,
		IN_ACTIVENAME,
		IN_ACCADDRESS,
		IN_PRIZENO,
		IN_CHANNEL,
		IN_TRANTYPE,
		IN_TRANCODE,
		IN_HOSTCODE,
		IN_ZFNAME,
		IN_MERNO,
		IN_MERNAME,
		IN_REM,
		IN_DELESCORE,
		V_CURR_DATE,
		V_CURR_TRNTIM,
		IN_STT2,
		IN_REM1,
		IN_REM2,
		IN_REMARK    
	);                  
                        
	COMMIT;	
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHANGE_DEAL_QRY
 (IN IN_CARDNO VARCHAR(30), 
  IN IN_CUSTNO VARCHAR(20), 
  IN IN_START_DATE VARCHAR(8), 
  IN IN_END_DATE VARCHAR(8), 
  IN IN_TRAN_STATUS VARCHAR(2),
  IN IN_QRY_TYPE INTEGER, 
  IN IN_BEGINPOS INTEGER, 
  IN IN_SHOWNUM INTEGER, 
  OUT PROC_RET_CODE VARCHAR(5), 
  OUT OUT_TOTALNUM INTEGER
 ) 
 	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-瀹㈡埛鏈嶅姟-绉垎-鍏戞崲鏄庣粏鏌ヨ瀛樺偍杩囩▼
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO 			锛?鍗″彿
-- IN_START_DATE 	锛?璧峰鏃ユ湡
-- IN_END_DATE 	 	: 	鎴鏃ユ湡
-- IN_TRAN_STATUS       :       鏌ヨ鐘舵€?00锛氭煡璇㈡垚鍔燂紝11锛氭煡璇㈡墍鏈?
-- IN_QRY_TYPE		:		鏌ヨ绫诲瀷(0:鏌ュ叏閮?1鏌ラ儴鍒?
-- IN_BEGINPOS 		锛?	鏌ヨ寮€濮嬩綅缃?-- IN_SHOWNUM 		锛?	鏌ヨ鏉℃暟

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE 	锛?	瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯?-- OUT_TOTALNUM 	锛?	鎬昏褰曟潯鏁?-- CUR_RESULT1		锛?閾惰绔祦姘磋〃缁撴灉闆?-- 淇敼浜?maonf  :澧炲姞鍒ゅ畾鏌ヨ鍏戞崲娲诲姩娴佹按鐨勬潯浠?-- 淇敼浜?pengxb :澧炲姞鏌ヨ鎴愬姛鍜屾墍鏈夌殑鏉′欢
-- 鏈€鍚庝慨鏀逛汉锛歭iuyu
-- 鏈€鍚庝慨鏀规棩鏈燂細2007.07.24
------------------------------------------------------------------------
BEGIN
		DECLARE CUR_RESULT1 CURSOR  WITH RETURN TO CALLER FOR

				SELECT 
							IPT_TRNFLW,
							IPT_TRANTIM,
							IPT_ACTIVENAME,
							IPT_ACCADDRESS,
							IPT_ZFNAME,
							IPT_MERNO,
							IPT_REM,
							IPT_REM1,
							IPT_STT
				FROM
				(
							SELECT 
										IPT_TRNFLW,
										IPT_TRANTIM,
										IPT_ACTIVENAME,
										IPT_ACCADDRESS,
										IPT_ZFNAME,
										IPT_MERNO,
										IPT_REM,
										IPT_REM1,
										IPT_STT,
										ROW_NUMBER()OVER(ORDER BY IPT_TRANTIM) ROW_ID
							FROM 
										IM_PRIZE_TRNFLW
							WHERE 
										(IPT_CARDNO = IN_CARDNO OR IPT_CSTNO=IN_CUSTNO) AND
										SUBSTR(IPT_TRANTIM,1,8) >= IN_START_DATE AND
										SUBSTR(IPT_TRANTIM,1,8) <= IN_END_DATE AND
										IPT_TRANTYPE='00' AND ('11' = IN_TRAN_STATUS OR IPT_STT = IN_TRAN_STATUS)
				)
				AS TMPTABLE
				WHERE
							(IN_QRY_TYPE = 0) OR (ROW_ID >= IN_BEGINPOS AND
              ROW_ID < IN_BEGINPOS + IN_SHOWNUM);		
			  
				-- 寮傚父澶勭悊
				DECLARE EXIT HANDLER FOR SQLEXCEPTION
				BEGIN
					SET PROC_RET_CODE = '95000';
					ROLLBACK ;
				END;
		--------------------------------------------------------------------------
				SELECT 
							COUNT(*) INTO OUT_TOTALNUM
				FROM
							IM_PRIZE_TRNFLW
				WHERE 
							(IPT_CARDNO = IN_CARDNO OR IPT_CSTNO=IN_CUSTNO) AND
							SUBSTR(IPT_TRANTIM,1,8) >= IN_START_DATE AND
							SUBSTR(IPT_TRANTIM,1,8) <= IN_END_DATE AND
							IPT_TRANTYPE='00' AND ('11' = IN_TRAN_STATUS OR IPT_STT = IN_TRAN_STATUS);
				
				OPEN CUR_RESULT1;
				SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_ADD_ACTIVE_INFO
(
    IN IN_ACTIVENO      VARCHAR(10),
    IN IN_ACTIVENAME    VARCHAR(60),
    IN IN_ROLENO        VARCHAR(2),
    IN IN_BEGINDATE     VARCHAR(8),
    IN IN_ENDDATE       VARCHAR(8),
    IN IN_ACTIVETYP     CHAR(3),
    IN IN_CONTENTURL    VARCHAR(200),
    IN IN_REM		VARCHAR(60),
    
 
    OUT PROC_RET_CODE	VARCHAR(5),
    OUT ACTEXIST	VARCHAR(1)
	

)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娣诲姞

-- 杈撳叆鍙傛暟锛?-- IN_ACTIVENO: 娲诲姩鍙?-- IN_ACTIVENAME: 娲诲姩鍚嶇О
-- IN_ROLENO: 鐢ㄦ埛瑙掕壊
-- IN_BEGINDATE: 璧峰鏃ユ湡
-- IN_ENDDATE: 鎴鏃ユ湡
-- IN_ACTIVETYP: 娲诲姩绫诲瀷
-- IN_CONTENTURL: 璇︾粏鍦板潃
-- IN_REM: 澶囨敞


-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.07.17
------------------------------------------------------------------------
BEGIN
		
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET ACTEXIST='2';
		ROLLBACK ;
	END;
	
	IF EXISTS (
		SELECT 1  
		FROM IM_PRIZE_ACTIVE 
		WHERE IPA_ACTIVENO = IN_ACTIVENO
	) THEN
		SET PROC_RET_CODE = '00000';
		SET ACTEXIST='1';
		RETURN;
	ELSE
		 INSERT INTO IM_PRIZE_ACTIVE
		(
			IPA_ACTIVENO ,
			IPA_ACTIVENAME ,
			IPA_ROLENO ,
			IPA_BEGINDATE ,
			IPA_ENDDATE ,
			IPA_ACTIVETYP ,
			IPA_CONTENTURL ,
			IPA_REM
			         
		)
		VALUES
		(
			IN_ACTIVENO,
			IN_ACTIVENAME,
			IN_ROLENO,
			IN_BEGINDATE,
			IN_ENDDATE,
			IN_ACTIVETYP,
			IN_CONTENTURL,
			IN_REM
		);
	
	
	END IF;	

	COMMIT;

	SET ACTEXIST='0';
	SET PROC_RET_CODE = '00000';
   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_ADD_CUSTLIST_PRIZE
(
    IN IN_ACTIVENO      VARCHAR(10),
    IN IN_CARDNO	VARCHAR(30),
    IN IN_NAME		VARCHAR(30),
    IN IN_AMT		VARCHAR(16),
    IN IN_REM1		VARCHAR(50),
    IN IN_REM2		VARCHAR(100),
   
    OUT PROC_RET_CODE	VARCHAR(5),
    OUT OUT_ERRINFO	VARCHAR(50)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 灏嗗鎴锋竻鍗曟枃浠跺鍏ユ暟鎹簱

-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬鎴峰彿
-- IN_NAME锛?濮撳悕
-- IN_AMT锛? 閲戦
-- IN_DELESCORE:  鎶垫墸绉垎
-- IN_PRIZENO锛? 濂栧埜鍙?-- IN_REM1锛?澶囨敞1
-- IN_REM2锛?澶囨敞2
-- IN_REM3锛?澶囨敞3
-- IN_STT锛? 鐘舵€?-- IN_ACTIVENO锛氭椿鍔ㄥ彿
-- IN_ACTIVENAME锛?娲诲姩鍚?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.07.12
------------------------------------------------------------------------
BEGIN
	
    DECLARE V_AMT DEC(15, 2);
   DECLARE V_PRIZENO_SEQ BIGINT;
   DECLARE V_PRIZENO VARCHAR(8);
    

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_ERRINFO  = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK ;
	END;
	
    IF NOT EXISTS 
		(
			SELECT 1 
			FROM IM_PRIZE_CSTINFO
			WHERE IPC_CARDNO  = IN_CARDNO
			AND IPC_ACTIVENO  = IN_ACTIVENO
		) 
	THEN
	    -- 璇ュ鎴蜂俊鎭強鎵€瀵瑰簲鐨勬椿鍔ㄤ笉瀛樺湪琛ㄤ腑
	    SET V_AMT = DEC(IN_AMT, 15, 2);
	   
	    
	 SELECT NEXTVAL FOR PB_PRIZENO
		INTO V_PRIZENO_SEQ
		FROM SYSIBM.SYSDUMMY1;
		SET V_PRIZENO = LEFT(CHAR(DECIMAL(V_PRIZENO_SEQ,8)),8);	

	    INSERT INTO IM_PRIZE_CSTINFO
		(
			IPC_ACTIVENO ,
			IPC_CARDNO ,
			IPC_NAME ,
			IPC_AMT ,
			IPC_DELESCORE ,
			IPC_PRIZENO ,
			IPC_STT ,
			IPC_REM1 ,
			IPC_REM2          
		)
		VALUES
		(
			IN_ACTIVENO,
			IN_CARDNO,
			IN_NAME,
			V_AMT,
			0,
			V_PRIZENO,
			'0',
			IN_REM1,
			IN_REM2
		);
    ELSE
		
		SET     PROC_RET_CODE = '95000';
		SET	OUT_ERRINFO='璇ヤ俊鎭凡缁忓瓨鍦?;
		RETURN;
	END IF;
	
	COMMIT;
    
	SET PROC_RET_CODE = '00000'; 
	SET OUT_ERRINFO='浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_ALL_QUERY_ACTIVE_INFO
(
    IN IN_TELLER      VARCHAR(2),
 
    OUT PROC_RET_CODE	VARCHAR(5)
)
DYNAMIC RESULT SETS 1
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ娲诲姩

-- 杈撳叆鍙傛暟锛?-- IN_TELLER: 鐢ㄦ埛瑙掕壊


-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.07.17
------------------------------------------------------------------------
BEGIN
	
   DECLARE CUR_ACT CURSOR  WITH RETURN FOR

		SELECT IPA_ACTIVENO , IPA_ACTIVENAME, IPA_BEGINDATE , IPA_ENDDATE , IPA_ACTIVETYP , IPA_CONTENTURL , IPA_REM      

		FROM IM_PRIZE_ACTIVE ;
		

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	--鎵撳紑娓告爣

	OPEN CUR_ACT;

	SET PROC_RET_CODE = '00000';
   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_DELETE_ACTIVE_INFO
(
    IN IN_ACTIVENO      VARCHAR(10),
   
 
    OUT PROC_RET_CODE	VARCHAR(5)	

)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒犻櫎

-- 杈撳叆鍙傛暟锛?-- IN_ACTIVENO: 娲诲姩鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.07.20
------------------------------------------------------------------------
BEGIN
		
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		
		ROLLBACK ;
	END;
	
	DELETE FROM IM_PRIZE_ACTIVE 
	WHERE IPA_ACTIVENO = IN_ACTIVENO;
	
	DELETE FROM IM_PRIZE_CSTINFO 
	WHERE IPC_ACTIVENO = IN_ACTIVENO;
	

	COMMIT;

	SET PROC_RET_CODE = '00000';
   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE  IM_DELETE_PRIZE_INFO
(
    IN IN_ACTIVENO      VARCHAR(10),

    IN IN_CARDNO      VARCHAR(5000),
   
 
    OUT PROC_RET_CODE	VARCHAR(5)	

)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒犻櫎

-- 杈撳叆鍙傛暟锛?-- IN_ACTIVENO: 娲诲姩鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.07.20
------------------------------------------------------------------------
BEGIN
	DECLARE V_SQL  VARCHAR(7000);
	DECLARE V_CARD VARCHAR(6000);
	DECLARE V_TMP VARCHAR(5100);
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		
		ROLLBACK ;
	END;


	IF IN_ACTIVENO IS NULL OR IN_CARDNO IS NULL THEN
		SET PROC_RET_CODE = '96000';
		RETURN;
	END IF;
	
	SET V_TMP = UPPER(IN_ACTIVENO) || '|' || UPPER(IN_CARDNO);

	IF POSSTR(V_TMP,'OR') > 0 OR POSSTR(V_TMP,'--') > 0 OR POSSTR(V_TMP,'AND') > 0 THEN
		SET PROC_RET_CODE = '96000';
		RETURN;
	END IF;

	SET V_CARD = REPLACE(IN_CARDNO,'|',''',''');
	SET  V_SQL='DELETE FROM IM_PRIZE_CSTINFO WHERE IPC_ACTIVENO = '''||IN_ACTIVENO||''' AND IPC_CARDNO IN ( ''' ||V_CARD||''''||')';

	EXECUTE IMMEDIATE V_SQL;

	COMMIT;

	SET PROC_RET_CODE = '00000';
   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_QUERY_CUSTLIST_PRIZE_INFO
(
    IN IN_ACTIVENO      VARCHAR(10),
    IN IN_STT		CHAR(1),
    IN IN_CARDNO        VARCHAR(30),
    IN IN_NAME		VARCHAR(30),
    IN IN_BEGINMONEY    VARCHAR(20),
    IN IN_ENDMONEY	VARCHAR(20),
    IN IN_DELESCORE    VARCHAR(20),
    IN IN_REM		VARCHAR(50),
    IN IN_BEGINPOS INTEGER, 
    IN IN_SHOWNUM INTEGER, 
 
    OUT PROC_RET_CODE	VARCHAR(5), 
    OUT OUT_TOTALNUM INTEGER	,
    OUT OUT_SUMMONEY  DECIMAL(20,2)

)
DYNAMIC RESULT SETS 1
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍏戝鍗曚俊鎭煡璇?
-- 杈撳叆鍙傛暟锛?-- IN_ACTIVENO: 娲诲姩鍙?-- IN_ACTIVENAME: 娲诲姩鍚嶇О
-- IN_ROLENO: 鐢ㄦ埛瑙掕壊
-- IN_BEGINDATE: 璧峰鏃ユ湡
-- IN_ENDDATE: 鎴鏃ユ湡
-- IN_ACTIVETYP: 娲诲姩绫诲瀷
-- IN_CONTENTURL: 璇︾粏鍦板潃
-- IN_REM: 澶囨敞
-- IN_BEGINPOS 锛氱炕椤佃捣濮嬩綅缃?-- IN_SHOWNUM 锛氱炕椤垫瘡椤垫樉绀烘潯鏁?

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOTALNUM锛氱炕椤垫煡璇㈡€昏鏁?-- OUT_SUMMONEY锛氭€婚噾棰?
-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.07.23
------------------------------------------------------------------------
BEGIN
	DECLARE V_BEGINM DEC(15, 2);
	DECLARE V_ENDM DEC(15, 2);
	DECLARE V_DELESCORE DEC(15, 2);
    
	
	DECLARE CUR_VIR CURSOR WITH RETURN TO CALLER FOR

		    SELECT

		    	IPC_CARDNO,

		    	IPC_NAME,

		    	IPC_AMT,

		    	IPC_DELESCORE,

		    	IPC_PRIZENO,

		    	IPC_STT,

		    	IPC_REM1,

		    	IPC_REM2

		    FROM 
		    (

		     SELECT 
				
				IPC_CARDNO,

				IPC_NAME,

				IPC_AMT,

				IPC_DELESCORE,

				IPC_PRIZENO,

				IPC_STT,

				IPC_REM1,

				IPC_REM2,

				ROW_NUMBER()OVER(ORDER BY IPC_CARDNO) ROW_ID
		    
		    FROM IM_PRIZE_CSTINFO

		    WHERE IPC_ACTIVENO =IN_ACTIVENO

		    AND (IN_STT ='3' OR IPC_STT = IN_STT)

		    AND (IN_CARDNO ='' OR IPC_CARDNO = IN_CARDNO)

		    AND (IN_NAME ='' OR IPC_NAME = IN_NAME)

		    AND (V_BEGINM =0 OR IPC_AMT > V_BEGINM )

		    AND (V_ENDM =0 OR IPC_AMT < V_ENDM )

		    AND (V_DELESCORE =0 OR IPC_DELESCORE = V_DELESCORE)

		    AND (IN_REM = '' OR IPC_REM1 LIKE '%'||IN_REM||'%')

		    )

		    AS TMPTABLE

		    WHERE

			(IN_SHOWNUM<>20) OR

			(ROW_ID > IN_BEGINPOS AND

			ROW_ID<= IN_BEGINPOS + IN_SHOWNUM);


    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		
		ROLLBACK ;
	END;
	
	SET V_BEGINM = DEC(IN_BEGINMONEY, 15, 2);
	SET V_ENDM = DEC(IN_ENDMONEY, 15, 2);
	SET V_DELESCORE = DEC(IN_DELESCORE, 15, 2);

	 SELECT  COUNT(IPC_CARDNO),SUM(IPC_AMT)
                 INTO OUT_TOTALNUM,OUT_SUMMONEY

		    FROM IM_PRIZE_CSTINFO

		    WHERE IPC_ACTIVENO =IN_ACTIVENO

		    AND (IN_STT ='3' OR IPC_STT = IN_STT)

		    AND (IN_CARDNO ='' OR IPC_CARDNO = IN_CARDNO)

		    AND (IN_NAME ='' OR IPC_NAME = IN_NAME)

		    AND (V_BEGINM =0 OR IPC_AMT > V_BEGINM )

		    AND (V_ENDM =0 OR IPC_AMT < V_ENDM )

		    AND (V_DELESCORE =0 OR IPC_DELESCORE = V_DELESCORE)

		    AND (IN_REM = '' OR IPC_REM1 LIKE '%'||IN_REM||'%');

	OPEN CUR_VIR;

	SET PROC_RET_CODE = '00000';
   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_QUERY_TRANFLOW_PRIZE_INFO
(
    IN IN_ACTIVENO      VARCHAR(10),
    IN IN_BEGINDATE      CHARACTER(8),
    IN IN_ENDDATE      CHARACTER(8),
    IN IN_STT		CHAR(2),
    IN IN_CARDNO        VARCHAR(30),
    IN IN_MERNO		VARCHAR(20),
    IN IN_ACCADDRESS	VARCHAR(30),
    IN IN_BEGINMONEY    VARCHAR(20),
    IN IN_ENDMONEY	VARCHAR(20),
    IN IN_DELESCORE    VARCHAR(20),
    IN IN_REM1		VARCHAR(50),
    IN IN_BEGINPOS INTEGER, 
    IN IN_SHOWNUM INTEGER, 
 
    OUT PROC_RET_CODE	VARCHAR(5), 
    OUT OUT_TOTALNUM INTEGER	,
    OUT OUT_SUMMONEY  DECIMAL(20,2)

)
DYNAMIC RESULT SETS 1
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ瀹㈡埛鍏戝娴佹按

-- 杈撳叆鍙傛暟锛?-- IN_ACTIVENO: 娲诲姩鍙?-- IN_BEGINDATE: 璧峰鏃ユ湡
-- IN_ENDDATE: 缁撴潫鏃ユ湡
-- IN_STT: 鐘舵€?-- IN_CARDNO: 鍗″彿
-- IN_MERNO: 璧峰鏃ユ湡
-- IN_ACCADDRESS: 鎴鏃ユ湡
-- IN_BEGINMONEY: 娲诲姩绫诲瀷
-- IN_ENDMONEY: 璇︾粏鍦板潃
-- IN_DELESCORE: 鎶垫墸绉垎
-- IN_REM1: 澶囨敞
-- IN_BEGINPOS 锛氱炕椤佃捣濮嬩綅缃?-- IN_SHOWNUM 锛氱炕椤垫瘡椤垫樉绀烘潯鏁?

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOTALNUM锛氱炕椤垫煡璇㈡€昏鏁?-- OUT_SUMMONEY锛氭€婚噾棰?
-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.07.23
------------------------------------------------------------------------
BEGIN
	DECLARE V_BEGINM DEC(15, 2);
	DECLARE V_ENDM DEC(15, 2);
	DECLARE V_DELESCORE DEC(15, 2);
    
	
	DECLARE CUR_VIR CURSOR WITH RETURN TO CALLER FOR

		    SELECT

			IPT_TRNFLW,

			IPT_TRANTIM,

		  IPT_CARDNO,

			IPT_CSTNO,

		  IPT_ZFNAME,

			IPT_MERNO,

		  IPT_MERNAME,

			IPT_ACCADDRESS,

		  IPT_DELESCORE,

		  IPT_PRIZENO,

		  IPT_STT,

		  IPT_REM,

			IPT_REM1,

			IPT_REM2,
			
			IPT_REMARK
		    FROM 
		    (

		     SELECT 
				IPT_TRNFLW,

				IPT_TRANTIM,

				IPT_CARDNO,

				IPT_CSTNO,

				IPT_ZFNAME,

				IPT_MERNO,

				IPT_MERNAME,

				IPT_DELESCORE,

				IPT_ACCADDRESS,

				IPT_PRIZENO,

				IPT_STT,

				IPT_REM,

				IPT_REM1,

				IPT_REM2,
				
				IPT_REMARK,

				ROW_NUMBER()OVER(ORDER BY IPT_REM DESC) ROW_ID
		    
		    FROM IM_PRIZE_TRNFLW

		    WHERE IPT_ACTIVENO =IN_ACTIVENO

		    AND IPT_TRANTYPE='00'

		    AND IPT_TRANTIM <= IN_ENDDATE||'24'

		    AND IPT_TRANTIM > IN_BEGINDATE

		    AND (IN_STT ='03' OR IPT_STT = IN_STT)

		    AND (IN_CARDNO ='' OR IPT_CARDNO = IN_CARDNO)

		    AND (IN_MERNO ='' OR IPT_MERNO = IN_MERNO)

		    AND (V_BEGINM =0 OR IPT_REM >= V_BEGINM )

		    AND (V_ENDM =0 OR IPT_REM <= V_ENDM )

		    AND (V_DELESCORE =0 OR IPT_DELESCORE = V_DELESCORE)

		    AND (IN_REM1 = '' OR IPT_REM1 LIKE '%'||IN_REM1||'%')

		    )

		    AS TMPTABLE

		    WHERE

			(IN_SHOWNUM<>20) OR

			(ROW_ID > IN_BEGINPOS AND

			ROW_ID<= IN_BEGINPOS + IN_SHOWNUM);


    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		
		ROLLBACK ;
	END;
	
	SET V_BEGINM = DEC(IN_BEGINMONEY, 15, 2);
	SET V_ENDM = DEC(IN_ENDMONEY, 15, 2);
	SET V_DELESCORE = DEC(IN_DELESCORE, 15, 2);

	 SELECT  COUNT(IPT_CARDNO),SUM(IPT_REM)
                 INTO OUT_TOTALNUM,OUT_SUMMONEY

		     FROM IM_PRIZE_TRNFLW

		    WHERE IPT_ACTIVENO =IN_ACTIVENO

		    AND IPT_TRANTYPE='00'

		    AND IPT_TRANTIM <= IN_ENDDATE||'24'

		    AND IPT_TRANTIM > IN_BEGINDATE

		    AND (IN_STT ='03' OR IPT_STT = IN_STT)

		    AND (IN_CARDNO ='' OR IPT_CARDNO = IN_CARDNO)

		    AND (IN_MERNO ='' OR IPT_MERNO = IN_MERNO)

		    AND (V_BEGINM =0 OR IPT_REM >= V_BEGINM )

		    AND (V_ENDM =0 OR IPT_REM <= V_ENDM )

		    AND (V_DELESCORE =0 OR IPT_DELESCORE = V_DELESCORE)

		    AND (IN_REM1 = '' OR IPT_REM1 LIKE '%'||IN_REM1||'%');

	OPEN CUR_VIR;

	SET PROC_RET_CODE = '00000';
   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_UPDATE_ACTIVE_INFO
(
    IN IN_ACTIVENO      VARCHAR(10),
    IN IN_ACTIVENAME    VARCHAR(60),
    IN IN_ROLENO        VARCHAR(2),
    IN IN_BEGINDATE     VARCHAR(8),
    IN IN_ENDDATE       VARCHAR(8),
    IN IN_ACTIVETYP     CHAR(3),
    IN IN_CONTENTURL    VARCHAR(200),
    IN IN_REM		VARCHAR(60),
 
    OUT PROC_RET_CODE	VARCHAR(5)	

)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娣诲姞

-- 杈撳叆鍙傛暟锛?-- IN_ACTIVENO: 娲诲姩鍙?-- IN_ACTIVENAME: 娲诲姩鍚嶇О
-- IN_ROLENO: 鐢ㄦ埛瑙掕壊
-- IN_BEGINDATE: 璧峰鏃ユ湡
-- IN_ENDDATE: 鎴鏃ユ湡
-- IN_ACTIVETYP: 娲诲姩绫诲瀷
-- IN_CONTENTURL: 璇︾粏鍦板潃
-- IN_REM: 澶囨敞


-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.07.20
------------------------------------------------------------------------
BEGIN
		
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		
		ROLLBACK ;
	END;
	
	
		UPDATE IM_PRIZE_ACTIVE

			SET
				IPA_ACTIVENAME  =IN_ACTIVENAME,
				IPA_BEGINDATE	=IN_BEGINDATE,
				IPA_ENDDATE     =IN_ENDDATE,
				IPA_ACTIVETYP   =IN_ACTIVETYP,
				IPA_CONTENTURL  =IN_CONTENTURL,
				IPA_REM         =  IN_REM 
			WHERE

				IPA_ACTIVENO= IN_ACTIVENO ;
	COMMIT;

	SET PROC_RET_CODE = '00000';
   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_ADD_RCVADDR_INFO
(
  IN IN_CSTNO VARCHAR(10),
  IN IN_PRVNO CHARACTER(3),
  IN IN_CITYNO CHARACTER(4),
  IN IN_DISTRICTNO CHARACTER(6),
  IN IN_ADDRESS VARCHAR(60),
  IN IN_ZIPCODE VARCHAR(6),
  IN IN_PHONE VARCHAR(20),
  IN IN_MOBILE VARCHAR(20),
  IN IN_NAME VARCHAR(60),
  IN IN_DEFAULT CHARACTER(1),
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏀惰揣鍦板潃绨跨鐞嗘坊鍔犳敹璐у湴鍧€
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?瀹㈡埛鍙?-- IN_PRVNO 锛?鐪佷唬鐮佸彿
-- IN_CITYNO 锛?甯備唬鐮佸彿
-- IN_DISTRICTNO 锛?鍖轰唬鐮佸彿
-- IN_ADDRESS 锛?琛楅亾鍦板潃
-- IN_ZIPCODE 锛?閭斂缂栫爜
-- IN_PHONE 锛?鍥哄畾鐢佃瘽
-- IN_MOBILE 锛?鎵嬫満
-- IN_NAME 锛?鏀惰揣浜哄鍚?-- IN_DEFAULT 锛?榛樿鏍囧織浣?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?------------------------------------------------------------------------
-- 鏈€鍚庝慨鏀逛汉锛歾houny
-- 鏈€鍚庝慨鏀规棩鏈?锛?2013.2.16
------------------------------------------------------------------------
BEGIN
	DECLARE V_LASTMODIFY VARCHAR(14);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	  BEGIN 
	     SET PROC_RET_CODE='95000';
	     ROLLBACK;
	  END;
	  
	SET  V_LASTMODIFY=FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');

	IF(IN_DEFAULT<>'0')
	THEN
		UPDATE PB_RCVADDR SET PSR_DEFAULT = '0' WHERE PSR_CSTNO=IN_CSTNO;
	END IF;

	IF(NOT EXISTS(SELECT 1 FROM PB_RCVADDR 
		WHERE
		 PSR_CSTNO=IN_CSTNO
		 AND PSR_PRVNO=IN_PRVNO
		 AND PSR_CITYNO=IN_CITYNO
		 AND PSR_DISTRICTNO=IN_DISTRICTNO
		 AND PSR_ADDRESS=IN_ADDRESS))
	THEN
	INSERT INTO PB_RCVADDR 
	(
		PSR_CSTNO,
		PSR_PRVNO,
		PSR_CITYNO,
		PSR_DISTRICTNO,
		PSR_ADDRESS,
		PSR_ZIPCODE,
		PSR_PHONE,
		PSR_MOBILE,
		PSR_NAME,
		PSR_DEFAULT,
		PSR_UPDTIME
 	)VALUES(
		IN_CSTNO,
		IN_PRVNO,
		IN_CITYNO,
		IN_DISTRICTNO,
		IN_ADDRESS,
		IN_ZIPCODE,
		IN_PHONE,
		IN_MOBILE,
		IN_NAME,
		IN_DEFAULT,
		V_LASTMODIFY
 	);
 	ELSE 
		UPDATE PB_RCVADDR
		SET
			PSR_ZIPCODE = IN_ZIPCODE,
			PSR_PHONE = IN_PHONE,
			PSR_MOBILE = IN_MOBILE,
			PSR_NAME = IN_NAME,
			PSR_DEFAULT = IN_DEFAULT,
			PSR_UPDTIME = V_LASTMODIFY
		WHERE 
		 PSR_CSTNO=IN_CSTNO
		 AND PSR_PRVNO=IN_PRVNO
		 AND PSR_CITYNO=IN_CITYNO
		 AND PSR_DISTRICTNO=IN_DISTRICTNO
		 AND PSR_ADDRESS=IN_ADDRESS;
 	END IF;

  COMMIT;
 	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_DEL_RCVADDR_INFO
(
  IN IN_CSTNO VARCHAR(10),
  IN IN_PRVNO CHARACTER(3),
  IN IN_CITYNO CHARACTER(4),
  IN IN_DISTRICTNO CHARACTER(6),
  IN IN_ADDRESS VARCHAR(60),
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏀惰揣鍦板潃绨垮垹闄ゆ敹璐у湴鍧€
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?瀹㈡埛鍙?-- IN_PRVNO 锛?鐪佷唬鐮佸彿
-- IN_CITYNO 锛?甯備唬鐮佸彿
-- IN_DISTRICTNO 锛?鍖轰唬鐮佸彿
-- IN_ADDRESS 锛?琛楅亾鍦板潃

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?------------------------------------------------------------------------
-- 鏈€鍚庝慨鏀逛汉锛歾houny
-- 鏈€鍚庝慨鏀规棩鏈?锛?2013.2.16
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	  BEGIN 
	     SET PROC_RET_CODE='95000';
	     ROLLBACK;
	  END;
	  
	DELETE FROM PB_RCVADDR
	WHERE
	  PSR_CSTNO=IN_CSTNO
	  AND PSR_PRVNO=IN_PRVNO
	  AND PSR_CITYNO=IN_CITYNO
	  AND PSR_DISTRICTNO=IN_DISTRICTNO
	  AND PSR_ADDRESS=IN_ADDRESS;

	COMMIT;
 	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SCORE_QUERY_CSTRELACC_INFO
(
  IN IN_CSTNO VARCHAR(10), 
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏀惰揣鍦板潃绨跨鐞嗘煡璇㈡敹璐у湴鍧€
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?瀹㈡埛鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?------------------------------------------------------------------------
-- 鏈€鍚庝慨鏀逛汉锛歾houny
-- 鏈€鍚庝慨鏀规棩鏈?锛?2013.2.16
------------------------------------------------------------------------
BEGIN
    DECLARE	CUR_CSTRELACC	CURSOR WITH	RETURN FOR 
		SELECT  PSR_PRVNO, PSR_CITYNO, PSR_DISTRICTNO, PSR_ADDRESS, PSR_ZIPCODE, PSR_PHONE, PSR_MOBILE, PSR_NAME, PSR_DEFAULT
		FROM  PB_RCVADDR 
	  WHERE  PSR_CSTNO=IN_CSTNO;
	
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	--杩斿洖缁撴灉闆?    OPEN CUR_CSTRELACC; 

	SET PROC_RET_CODE = '00000';
	
END
DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_ATTEND_FUND(
	IN IN_ACCNO			VARCHAR(20),
	IN IN_FUNDCODE		VARCHAR(6),
	OUT OUT_RET_CODE	VARCHAR(5)
)
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娣诲姞涓€鍙熀閲戝埌鎴戞墍鍏虫敞鐨勫熀閲戣〃涓苟鏌ヨ杩斿洖鎵€鏈夌殑鍩洪噾璁板綍
-- 杈撳叆鍙傛暟锛?-- IN_ACCNO: 瀹㈡埛鍙?-- IN_FUNDCODE: 鍩洪噾浠ｇ爜
-- IN_FUNDNAME锛氬熀閲戝悕绉?-- IN_FEETYP: 鏀惰垂绫诲瀷

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ATTEND_LST: 缁撴灉闆?
-- 淇敼浜?锛?ECC.WUJC
-- 淇敼鏃ユ湡 锛?2007.03.27

-- 鏈€鍚庝慨鏀逛汉 锛?ECC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.11.15
------------------------------------------------------------------------
BEGIN
	
	DECLARE V_FUNDNAME VARCHAR(40);
	DECLARE V_FEETYP CHAR(1);

		
	DECLARE	OUT_ATTEND_LST CURSOR WITH RETURN FOR
		SELECT DISTINCT 
			PAF_ACCNO,
			PFM_FUNDCODE,
			PFM_FUNDNAME,
			PFM_FEETYP,
			PFM_FUNDTYP,
			PFM_FUNDLEVEL,
			PFM_MONTHRATE,
			PFM_SEASONRATE,
			PFM_YEARRATE,
			PFM_NEWVOL,
			PFM_NETVAL,
			PFM_UPDDATE,
			PFM_FEERATE,
			PFM_VALCHANGE,
			PFM_BACKFUNDCODE,
			PFM_CURRRATE,
			PFM_CURRWEEKRATE					

		FROM (SELECT * FROM PB_ATTFUND WHERE PAF_ACCNO = IN_ACCNO) AS TAB1 LEFT OUTER JOIN PB_FUNDMSG ON PFM_FUNDCODE = PAF_FUNDCODE OR PAF_FUNDCODE = PFM_BACKFUNDCODE 
		WHERE PAF_FUNDCODE = PFM_FUNDCODE OR PAF_FUNDCODE = PFM_BACKFUNDCODE ORDER BY PFM_FUNDCODE;

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
        
	IF EXISTS( 
		SELECT 1 
		FROM PB_ATTFUND 
		WHERE 
			PAF_ACCNO = IN_ACCNO AND 
			PAF_FUNDCODE = IN_FUNDCODE
	) THEN
		SET OUT_RET_CODE = '30407';
		RETURN;
	END IF;
	
	SELECT PFI_FUNDNAME,PFI_FEETYP INTO V_FUNDNAME,V_FEETYP
	FROM PB_FUNDINFO
	WHERE PFI_FUNDCODE = IN_FUNDCODE;
	
	IF V_FUNDNAME IS NULL OR V_FUNDNAME='' THEN
		SET OUT_RET_CODE = '30413';
		RETURN;
	END IF;
	


	INSERT INTO PB_ATTFUND
	VALUES
	(
		IN_ACCNO,
		IN_FUNDCODE,
		V_FUNDNAME,
		V_FEETYP
	);
    
	COMMIT;
	
	--杩斿洖缁撴灉鍊?	OPEN OUT_ATTEND_LST;
	
	SET OUT_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_CHGCOD(
	IN IN_STR_LIST		CLOB,
	OUT OUT_RET_CODE	    	VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娣诲姞寮€甯備俊鎭紞鍩洪噾杞崲淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_UPDDATE		锛?鏇存柊鏃ユ湡
-- IN_FUNDCODE	    锛?鍩洪噾浠ｇ爜
-- IN_FEETYP		锛氭敹璐规ā寮?-- IN_TARGETCODE		锛氱洰鏍囧熀閲戜唬鐮?-- IN_TARGETTYP		锛氬熀閲戞敹璐规ā寮?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--00000锛氭甯?--30430锛氭洿鏂板熀閲戣浆鎹㈣〃澶辫触

-- 鏈€鍚庝慨鏀逛汉 锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.26
------------------------------------------------------------------------
BEGIN
	-- 澹版槑鍙橀噺
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_ACCOUNT VARCHAR(30) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	
	DECLARE ERRCOUNT 	INT DEFAULT 0;             -- 寮€鍏冲畾涔?	DECLARE INSERT_FAILED  CONDITION FOR '23505';  		-- insert 澶辫触
	
	DECLARE V_UPDDATE		VARCHAR(8);
	DECLARE V_FUNDCODE		VARCHAR(6);
	DECLARE V_FEETYP		CHAR(1);
	DECLARE V_TARGETCODE	VARCHAR(6);
	DECLARE V_TARGETTYP		CHAR(1);
	DECLARE V_INSERT_FLAG   CHAR(1);
    -- 寮傚父澶勭悊
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30430';
		SET V_INSERT_FLAG = '1';
	END;
	
	SET OUT_RET_CODE = '00000';
	
	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_ACCOUNT = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_UPDDATE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FEETYP = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_TARGETCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_TARGETTYP =  V_CURRENT_ACCOUNT;
    	
    	IF V_INSERT_FLAG = '0' THEN
	    	-- 娣诲姞鍩洪噾杞崲淇℃伅	
			INSERT INTO PB_CHGCOD
			(
				PCC_UPDDATE,
				PCC_FUNDCODE,
				PCC_FEETYP,
				PCC_TARGETCODE,
				PCC_TARGETTYP
			)
			VALUES
			(
				V_UPDDATE,
				V_FUNDCODE,
				V_FEETYP,
				V_TARGETCODE,
				V_TARGETTYP
			);
		END IF;
	END WHILE;
	COMMIT;
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_COMSMP(
	IN IN_STR_LIST CLOB, 
	OUT OUT_RET_CODE	    	VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娣诲姞寮€甯備俊鎭紞鍩洪噾缁勫悎濂楅鏍蜂緥淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_COMCODE		锛?濂楅浠ｇ爜
-- IN_FUNDCODE	    锛?鍩洪噾浠ｇ爜
-- IN_AMOUNT		锛氱敵璇烽噾棰?-- IN_FEETYP		锛氭敹璐规ā寮?-- IN_DISRATE		锛氫剑閲戞姌鎵ｇ巼
-- IN_TADISRATE		锛?TA鎶樻墸鐜?-- IN_COMAMT		锛?寮傚湴鍗℃墜缁垂
-- IN_SCALE			锛氭牱鏈瘮渚?-- IN_STARTDATE	    锛氬紑濮嬫棩鏈?--IN_ENDDATE		锛氭埅姝㈡棩鏈?--IN_STATUS		    锛氱姸鎬?--IN_MEMO			锛氬娉?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--00000锛氭甯?--30432锛氭洿鏂板熀閲戠粍鍚堝椁愭牱渚嬭〃澶辫触

-- 鏈€鍚庝慨鏀逛汉 锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.26
------------------------------------------------------------------------
BEGIN
	-- 澹版槑鍙橀噺
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_ACCOUNT VARCHAR(240) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	
	DECLARE V_COMCODE			VARCHAR(24);
	DECLARE V_FUNDCODE		VARCHAR(6);
	DECLARE V_AMOUNT			DECIMAL(16,2);
	DECLARE V_FEETYP			CHAR(1);
	DECLARE V_DISRATE			DECIMAL(8,4);
	DECLARE V_TADISRATE		DECIMAL(8,4);
	DECLARE V_COMAMT			DECIMAL(15,2);
	DECLARE V_SCALE				DECIMAL(8,4);
	DECLARE V_STARTDATE		VARCHAR(8);
	DECLARE V_ENDDATE		  VARCHAR(8);
	DECLARE V_STATUS			VARCHAR(1);
	DECLARE V_MEMO		   	VARCHAR(100);
	DECLARE V_INSERT_FLAG   CHAR(1);
    -- 寮傚父澶勭悊
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30432';
		SET V_INSERT_FLAG = '1';
	END;
	
	SET OUT_RET_CODE = '00000';
	
	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_ACCOUNT = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_COMCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_AMOUNT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FEETYP = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_DISRATE = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(8,4));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_TADISRATE = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(8,4));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_COMAMT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(15,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_SCALE = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(8,4));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_STARTDATE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_ENDDATE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_STATUS = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_MEMO = V_CURRENT_ACCOUNT;
    	
    	IF V_INSERT_FLAG = '0' THEN
    	-- 娣诲姞缁勫悎濂楅鏍蜂緥淇℃伅	
		INSERT INTO PB_COMSMP
	    (
	        PCS_COMCODE,
	        PCS_FUNDCODE,
	        PCS_AMOUNT,
	        PCS_FEETYP,
	        PCS_DISRATE,
	        PCS_TADISRATE,
	        PCS_COMAMT,
	        PCS_SCALE,
	        PCS_STARTDATE,
	        PCS_ENDDATE,
	        PCS_STATUS,
	        PCS_MEMO
	    )
		VALUES
		(
			V_COMCODE,
			V_FUNDCODE,
			V_AMOUNT,
			V_FEETYP,
			V_DISRATE,
			V_TADISRATE,
			V_COMAMT,
			V_SCALE,
			V_STARTDATE,
			V_ENDDATE,
			V_STATUS,
			V_MEMO
		);
		END IF;
	END WHILE; 
	
	COMMIT;
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_FUNDCOM(
	IN IN_STR_LIST CLOB, 
	OUT OUT_RET_CODE		VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娣诲姞寮€甯備俊鎭紞鍩洪噾缁勫悎濂楅淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_COMCODE	锛?濂楅鍚嶇О
-- IN_MNGNO	锛?鐞嗚储缁忕悊浜轰唬鐮?-- IN_MINAMT	锛氭渶灏忔姇璧勯噾棰?-- IN_MAXAMT	锛氭渶澶ф姇璧勯噾棰?-- IN_COMCHT	锛氬椁愮壒鐐?-- IN_FEERATE	锛?璐圭巼
-- IN_DISRATE	锛?鎶樻墸鐜?-- IN_MEMO		锛氬娉?-- IN_COMNAME	锛氬椁愬悕绉?-- IN_RISKLVL	锛氬熀閲戦闄╃瓑绾?-- IN_RISKLVLCN	锛氬熀閲戦闄╃瓑绾т腑鏂囨弿杩?-- IN_RISKLVLEN	锛氬熀閲戦闄╃瓑绾ц嫳鏂囨弿杩?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--00000锛氭甯?--30431锛氭洿鏂板熀閲戠粍鍚堝椁愯〃澶辫触

-- 鏈€鍚庝慨鏀逛汉 锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.26

-- 鏈€鍚庝慨鏀逛汉 锛欵CC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2008.12.19
------------------------------------------------------------------------
BEGIN
	-- 澹版槑鍙橀噺
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_ACCOUNT VARCHAR(1100) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	
	
	DECLARE V_COMCODE	  VARCHAR(24);        
	DECLARE	V_MNGNO		  VARCHAR(6);       
	DECLARE	V_MINAMT	  DECIMAL(16,2);      
	DECLARE	V_MAXAMT	  DECIMAL(16,2);      
	DECLARE	V_COMCHT	  VARCHAR(200);       
	DECLARE	V_FEERATE	  DECIMAL(8,4);       
	DECLARE	V_DISRATE	  DECIMAL(8,4);       
	DECLARE	V_MEMO		  VARCHAR(100);     
	DECLARE	V_COMNAME	  VARCHAR(40);      
	DECLARE	V_RISKLVL     CHAR(2);          
	DECLARE	V_RISKLVLCN	  VARCHAR(200);   
	DECLARE	V_RISKLVLEN	  VARCHAR(400);   
	DECLARE	V_SCHEMINAMT  DECIMAL(16,2);
	DECLARE	V_SCHEMAXAMT  DECIMAL(16,2);
	DECLARE V_INSERT_FLAG   CHAR(1);
	DECLARE V_OPENFLAG    CHAR(1);
	 -- 寮傚父澶勭悊
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30431';
		SET V_INSERT_FLAG = '1';
	END;
	
	SET OUT_RET_CODE = '00000';
	
	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_ACCOUNT = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_COMCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MNGNO = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MINAMT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MAXAMT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_COMCHT = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FEERATE = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(8,4));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_DISRATE = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(8,4));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MEMO = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_COMNAME = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_RISKLVL = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_RISKLVLCN = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_RISKLVLEN = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_SCHEMINAMT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_SCHEMAXAMT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_OPENFLAG =  V_CURRENT_ACCOUNT;
   
	    -- 娣诲姞缁勫悎濂楅淇℃伅
		IF V_INSERT_FLAG = '0' THEN	
			INSERT INTO PB_FUNDCOM
		    (
		        PFC_COMCODE,
		        PFC_MNGNO,
		        PFC_MINAMT,
		        PFC_MAXAMT,
		        PFC_COMCHT,
		        PFC_FEERATE,
		        PFC_DISRATE,
		        PFC_MEMO,
		        PFC_COMNAME,
		        PFC_RISKLVL,
		        PFC_RISKLVLCN,
		        PFC_RISKLVLEN,
		        PFC_SCHEMINAMT,
				PFC_SCHEMAXAMT,
				PFC_ONCEOPENFLAG
		    )
			VALUES
			(
				V_COMCODE,
				V_MNGNO,
				V_MINAMT,
				V_MAXAMT,
				V_COMCHT,
				V_FEERATE,
				V_DISRATE,
				V_MEMO,
				V_COMNAME,
				V_RISKLVL,
				V_RISKLVLCN,
				V_RISKLVLEN,
				V_SCHEMINAMT,
				V_SCHEMAXAMT,
				V_OPENFLAG
			);
		END IF;
	END WHILE; 
	COMMIT;
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_FUNDCOR(
	IN IN_CODE			VARCHAR(6),
	IN IN_NAME			VARCHAR(60),
	OUT OUT_RET_CODE		VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娣诲姞寮€甯備俊鎭紞鍩洪噾鍏徃
-- 杈撳叆鍙傛暟锛?-- IN_CODE锛?鍏徃浠ｇ爜
-- IN_NAME锛?鍏徃鍚嶇О

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉 锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.26
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET OUT_RET_CODE = '95000';
			ROLLBACK;
		END;
	INSERT INTO PB_FUNDCOR
	VALUES
	(
		IN_CODE,
		IN_NAME
	);
    
	COMMIT;	
	SET OUT_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_FUNDINFO(
	IN IN_STR_LIST CLOB, 
	OUT OUT_RET_CODE CHARACTER(5)
)
    LANGUAGE SQL

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍩洪噾寮€甯傦細灏嗗紑绀轰俊鎭彃鍏ュ埌鍩洪噾淇℃伅琛?-- IN_STR_LIST  : 澶氭潯璁板綍锛屾瘡涓褰曚腑闂翠互#鍙峰垎鍓诧紝姣忎釜瀛楁涔嬮棿鐢▅鍒嗗壊
--	etc.
-- 杈撳嚭鍙傛暟锛?-- 	OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝30433涓哄嚭閿?鏇存柊鍩洪噾淇℃伅琛ㄥけ璐?-- 鏈€鍚庝慨鏀逛汉锛歑IE,JIAKAI
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.27
--鏈€鍚庝慨鏀逛汉锛歬ongdean
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.07.13      澧炲姞涓や釜杈撳叆鍙傛暟IN_TYPE CHAR(3), IN_FLAG CHAR(1),
--鏈€鍚庝慨鏀逛汉锛歱engxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2008.12.18      澧炲姞3涓緭鍏ュ弬鏁癐N_RISKLVL CHAR(2), IN_RISKLVLCN VARCHAR(200),IN_RISKLVLEN VARCHAR(400)
------------------------------------------------------------------------

	BEGIN
	
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_ACCOUNT VARCHAR(1000) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	
	DECLARE V_FUNDNAME VARCHAR(40);
	DECLARE V_FUNDCODE VARCHAR(6);
	DECLARE V_STATUS CHAR(1);
	DECLARE V_NETVAL DECIMAL(8,4);
	DECLARE V_UPDDATE VARCHAR(8);
	DECLARE V_MAXRDMVOL DECIMAL(16,2);
	DECLARE V_MINACCBAL DECIMAL(16,2);
	DECLARE V_APPSUBVOL DECIMAL(16,2);
	DECLARE V_APPSUBAMT DECIMAL(16,2);
	DECLARE V_MINSUBVOL DECIMAL(16,2);
	DECLARE V_MINSUBAMT DECIMAL(16,2);
	DECLARE V_REGCODE VARCHAR(6);
	DECLARE V_FACEVAL DECIMAL(8,4);
	DECLARE V_FEERATE DECIMAL(8,4);
	DECLARE V_MAXSUBVOL DECIMAL(16,2);
	DECLARE V_MAXSUBAMT DECIMAL(16,2);
	DECLARE V_UNITSUBVOL DECIMAL(16,2);
	DECLARE V_MINRDMVOL DECIMAL(16,2);
	DECLARE V_MINCHGVOL DECIMAL(16,2);
	DECLARE V_SUBTYP CHAR(1);
	DECLARE V_TRADPRICE DECIMAL(8,4);
	DECLARE V_NEXTDATE VARCHAR(8);
	DECLARE V_MINBIDAMT DECIMAL(16,2);
	DECLARE V_MINAPPBIDAMT DECIMAL(16,2);
	DECLARE V_UNITBIDAMT DECIMAL(16,2);
	DECLARE V_MAXBIDAMT DECIMAL(16,2);
	DECLARE V_DAYINCOME DECIMAL(8,5);
	DECLARE V_WEEKINCOME DECIMAL(8,5);
	DECLARE V_FEETYP CHAR(1);
	DECLARE V_CRYTYP CHAR(3);
	DECLARE V_CASHFLG CHAR(1);
	DECLARE V_RISKLVL CHAR(2);
	DECLARE V_RISKLVLCN VARCHAR(200);
	DECLARE V_RISKLVLEN VARCHAR(400);
	DECLARE V_INSERT_FLAG   CHAR(1);
	
	
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
		BEGIN
			SET OUT_RET_CODE = '30433';
			SET V_INSERT_FLAG = '1';
		END;
	
	--杩斿洖淇℃伅                    
	SET OUT_RET_CODE = '00000';	
	
	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_ACCOUNT = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDNAME = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_STATUS = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_NETVAL = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(8,4));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_UPDDATE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MAXRDMVOL = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MINACCBAL = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 )  AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_APPSUBVOL = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 )  AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_APPSUBAMT =CAST( SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 )  AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MINSUBVOL =CAST( SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 )  AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MINSUBAMT =CAST( SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 )  AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_REGCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FACEVAL = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(8,4));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FEERATE = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(8,4));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MAXSUBVOL = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MAXSUBAMT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_UNITSUBVOL = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MINRDMVOL = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MINCHGVOL = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_SUBTYP = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_TRADPRICE = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(8,4));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_NEXTDATE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MINBIDAMT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MINAPPBIDAMT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_UNITBIDAMT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MAXBIDAMT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_DAYINCOME = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(8,5));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_WEEKINCOME = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(8,5));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FEETYP = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_CRYTYP = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_CASHFLG = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_RISKLVL = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_RISKLVLCN = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_RISKLVLEN = V_CURRENT_ACCOUNT;
		
		IF V_INSERT_FLAG = '0' THEN
			INSERT INTO PB_FUNDINFO
			(
				PFI_FUNDNAME, 	
				PFI_FUNDCODE, 	
				PFI_STATUS, 	
				PFI_NETVAL, 	
				PFI_UPDDATE, 	
				PFI_MAXRDMVOL,    
				PFI_MINACCBAL,    
				PFI_APPSUBVOL,    
				PFI_APPSUBAMT, 	
				PFI_MINSUBVOL,    
				PFI_MINSUBAMT,   
				PFI_REGCODE, 	
				PFI_FACEVAL, 	
				PFI_FEERATE, 	
				PFI_MAXSUBVOL,    
				PFI_MAXSUBAMT,    
				PFI_UNITSUBVOL,   
				PFI_MINRDMVOL,    
				PFI_MINCHGVOL,    
				PFI_SUBTYP, 	
				PFI_TRADPRICE,    
				PFI_NEXTDATE, 	
				PFI_MINBIDAMT,    
				PFI_MINAPPBIDAMT,   
				PFI_UNITBIDAMT,   
				PFI_MAXBIDAMT,    
				PFI_DAYINCOME,    
				PFI_WEEKINCOME,   
				PFI_FEETYP,
				PFI_TYPE,
				PFI_FLAG,
				PFI_RISKLVL,
				PFI_RISKLVLCN,
				PFI_RISKLVLEN
			)   
			VALUES
			(
				V_FUNDNAME, 	
				V_FUNDCODE, 	
				V_STATUS, 	
				V_NETVAL, 	
				V_UPDDATE, 	
				V_MAXRDMVOL,    
				V_MINACCBAL,    
				V_APPSUBVOL,    
				V_APPSUBAMT, 	
				V_MINSUBVOL,    
				V_MINSUBAMT,   
				V_REGCODE, 	
				V_FACEVAL, 	
				V_FEERATE, 	
				V_MAXSUBVOL,    
				V_MAXSUBAMT,    
				V_UNITSUBVOL,   
				V_MINRDMVOL,    
				V_MINCHGVOL,    
				V_SUBTYP, 	
				V_TRADPRICE,    
				V_NEXTDATE, 	
				V_MINBIDAMT,    
				V_MINAPPBIDAMT,   
				V_UNITBIDAMT,   
				V_MAXBIDAMT,    
				V_DAYINCOME,    
				V_WEEKINCOME,   
				V_FEETYP,
				V_CRYTYP,
				V_CASHFLG,
				V_RISKLVL,
				V_RISKLVLCN,
				V_RISKLVLEN   
			);  
		END IF;                
    END WHILE;                        
	COMMIT;	
                            
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_FUNDPAR(
	IN IN_STR_LIST CLOB, 
	OUT OUT_RET_CODE	    VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娣诲姞寮€甯備俊鎭紞鍩洪噾鍙傛暟淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_UPDDATE		锛?鏇存柊鏃ユ湡
-- IN_REGCODE	    锛?娉ㄥ唽鏈烘瀯浠ｇ爜
-- IN_MNGCODE		锛氱悊璐㈢粡鐞嗕唬鐮?-- IN_FUNDCODE		锛氬熀閲戜唬鐮?-- IN_STARTTIM		锛氫氦鏄撳紑濮嬫椂闂?-- IN_ENDTIM		锛?浜ゆ槗缁撴潫鏃堕棿
-- IN_FLAG	    锛?瀹氭湡鐢宠喘鏍囧織
-- IN_TRANPAR		锛氬熀閲戜氦鏄撳弬鏁?-- IN_TRANTYP		锛氳浆鎵樼鏂瑰紡
-- IN_MINSUBAMT		锛氬畾鏈熷畾棰濈敵璐噾棰濅笅闄?-- IN_FEETYP		锛氭敹璐规柟寮?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--00000锛氭甯?--30429锛氭洿鏂板熀閲戝弬鏁颁俊鎭〃澶辫触

-- 鏈€鍚庝慨鏀逛汉 锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.26
------------------------------------------------------------------------
BEGIN
  -- 澹版槑鍙橀噺
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_ACCOUNT VARCHAR(110) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	
	DECLARE V_UPDDATE		VARCHAR(8);
	DECLARE V_REGCODE		VARCHAR(6);
	DECLARE V_MNGCODE		VARCHAR(6);
	DECLARE V_FUNDCODE		VARCHAR(6);
	DECLARE V_STARTTIM		VARCHAR(6);
	DECLARE V_ENDTIM		VARCHAR(6);
	DECLARE V_FLAG		CHAR(1);
	DECLARE V_TRANPAR		VARCHAR(20);
	DECLARE V_TRANTYP		CHAR(1);
	DECLARE V_MINSUBAMT		DECIMAL(16,2);
	DECLARE V_FEETYP		CHAR(1);
	DECLARE V_MAXSUBAMT		DECIMAL(16,2);
	DECLARE V_INSERT_FLAG   CHAR(1);
	DECLARE V_FUNDMNGCODE   VARCHAR(6);
	DECLARE V_QRFLAG        CHAR(1);
	DECLARE V_AUTOTRADFLAG  CHAR(1);
  -- 寮傚父澶勭悊
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30429';
		SET V_INSERT_FLAG = '1';
	END;
	
	SET OUT_RET_CODE = '00000';
  
 	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_ACCOUNT = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_UPDDATE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_REGCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MNGCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_STARTTIM = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_ENDTIM = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FLAG = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_TRANPAR = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_TRANTYP = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MINSUBAMT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(15,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FEETYP = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_MAXSUBAMT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_QRFLAG = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_AUTOTRADFLAG =  V_CURRENT_ACCOUNT;
		
	SET V_FUNDMNGCODE = V_MNGCODE;
	
    IF length(rtrim(V_MNGCODE)) = 2 THEN
        SET V_MNGCODE = CONCAT('2',rtrim(V_MNGCODE));
    ELSE
        SET V_MNGCODE = CONCAT('2',SUBSTR(V_MNGCODE,2,2));
    END IF;
    IF V_INSERT_FLAG = '0' THEN
    -- 娣诲姞鍩洪噾杞崲淇℃伅	
		INSERT INTO PB_FUNDPAR
		(
			PFP_UPDDATE,
			PFP_REGCODE,
			PFP_MNGCODE,
			PFP_FUNDCODE,
			PFP_STARTTIM,
			PFP_ENDTIM,
			PFP_FLAG,
			PFP_TRANPAR,
			PFP_TRANTYP,
			PFP_MINSUBAMT,
			PFP_FEETYP,
			PFP_MAXSUBAMT,
			PFP_FUNDMNGCODE,
			PFP_QRFLAG,
			PFP_AUTOTRADEFLAG
		)
		VALUES
		(
			V_UPDDATE,
			V_REGCODE,
			V_MNGCODE,
			V_FUNDCODE,
			V_STARTTIM,
			V_ENDTIM,
			V_FLAG,
			V_TRANPAR,
			V_TRANTYP,
			V_MINSUBAMT,
			V_FEETYP,
			V_MAXSUBAMT,
			V_FUNDMNGCODE,
			V_QRFLAG,
			V_AUTOTRADFLAG
		);
	END IF;
	END WHILE; 
	COMMIT;
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_FUNDREG(
	IN IN_CODE			VARCHAR(6),
	IN IN_NAME			VARCHAR(60),
	OUT OUT_RET_CODE		VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 杈撳叆鍙傛暟锛?-- IN_CODE锛?娉ㄥ唽鏈烘瀯浠ｇ爜
-- IN_NAME锛?涓氬姟浠ｇ爜

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?30420鎻掑叆娉ㄥ唽鏈烘瀯淇℃伅鍑洪敊

-- 鏈€鍚庝慨鏀逛汉 锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.26
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30420';
		ROLLBACK ;
	END;
	INSERT INTO PB_FUNDREG
	VALUES
	(
		IN_CODE,
		IN_NAME
	);
	COMMIT;    
	SET OUT_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_TRANFEE(
	IN IN_STR_LIST CLOB, 
	OUT OUT_RET_CODE	    	VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娣诲姞寮€甯備俊鎭紞鍩洪噾鎵嬬画璐逛緥淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_STR_LIST  : 澶氭潯璁板綍锛屾瘡涓褰曚腑闂翠互#鍙峰垎鍓诧紝姣忎釜瀛楁涔嬮棿鐢▅鍒嗗壊

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--00000锛氭甯?--30428锛氭洿鏂版墜缁垂琛ㄥけ璐?
-- 鏈€鍚庝慨鏀逛汉 锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.26
------------------------------------------------------------------------
BEGIN
	-- 澹版槑鍙橀噺
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_ACCOUNT VARCHAR(50) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	
	DECLARE V_REGCODE		VARCHAR(6);
	DECLARE V_BUSCODE		VARCHAR(6);
	DECLARE V_COMAMT		DECIMAL(15,2);
	DECLARE V_DISRATE		DECIMAL(8,4);
	DECLARE V_UPDDATE		VARCHAR(8);
	DECLARE V_INSERT_FLAG   CHAR(1);
    -- 寮傚父澶勭悊
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30428';
		SET V_INSERT_FLAG = '1';
	END;
	
	SET OUT_RET_CODE = '00000';
	
	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_ACCOUNT = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_REGCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_BUSCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_COMAMT = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(15,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_DISRATE = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(8,4));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		--鏈€鍚庝竴涓瓧娈碉紝涓嶅啀鎴彇
		SET V_UPDDATE = V_CURRENT_ACCOUNT;
		
		IF V_INSERT_FLAG = '0' THEN
		    -- 娣诲姞鎵嬬画璐硅〃淇℃伅	
			INSERT INTO PB_TRANFEE
			(
				PTF_REGCODE,
				PTF_BUSCODE,
				PTF_COMAMT,
				PTF_DISRATE,
				PTF_UPDDATE
			)
			VALUES
			(
				V_REGCODE,
				V_BUSCODE,
				V_COMAMT,
				V_DISRATE,
				V_UPDDATE
			);
		END IF;
	END WHILE; 
	COMMIT;
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_DEL_ATTEND_FUND
 (IN IN_ACCNO VARCHAR(19), 
  IN IN_FUNDCODE VARCHAR(6), 
  IN IN_BACKFUNDCODE VARCHAR(6),
  OUT OUT_RET_CODE VARCHAR(5)
 ) 

DYNAMIC RESULT SETS 1

  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-鍩洪噾-鍒犻櫎鎴戞墍鍏虫敞鐨勬煇鍙熀閲戝苟鏌ヨ杩斿洖鎵€鏈夌殑鍩洪噾璁板綍
-- 杈撳叆鍙傛暟锛?-- IN_ACCNO 锛氬崱鍙?-- IN_FUNDCODE 锛氬熀閲戜唬鐮?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE 锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0402涓哄垹闄ゆ垜鍏虫敞鐨勫熀閲戝嚭閿?00000涓烘甯?-- OUT_ATTEND_LST 锛氱粨鏋滈泦

-- 淇敼浜?锛?ECC.ZhangHao
-- 淇敼鏃ユ湡 锛?2005.09.15

-- 鏈€鍚庝慨鏀逛汉 锛?ECC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.11.19
------------------------------------------------------------------------
BEGIN
		
	DECLARE	OUT_ATTEND_LST CURSOR WITH RETURN FOR
		SELECT DISTINCT 
			PAF_ACCNO,
			PFM_FUNDCODE,
			PFM_FUNDNAME,
			PFM_FEETYP,
			PFM_FUNDTYP,
			PFM_FUNDLEVEL,
			PFM_MONTHRATE,
			PFM_SEASONRATE,
			PFM_YEARRATE,
			PFM_NEWVOL,
			PFM_NETVAL,
			PFM_UPDDATE,
			PFM_FEERATE,
			PFM_VALCHANGE,
			PFM_BACKFUNDCODE,
			PFM_CURRRATE,
			PFM_CURRWEEKRATE					

		FROM (SELECT * FROM PB_ATTFUND WHERE PAF_ACCNO = IN_ACCNO) AS TAB1 LEFT OUTER JOIN PB_FUNDMSG ON PFM_FUNDCODE = PAF_FUNDCODE OR PAF_FUNDCODE = PFM_BACKFUNDCODE 
		WHERE 		
		PAF_FUNDCODE <> IN_FUNDCODE AND PAF_FUNDCODE <> IN_BACKFUNDCODE AND (PAF_FUNDCODE = PFM_FUNDCODE OR PAF_FUNDCODE = PFM_BACKFUNDCODE) ORDER BY PFM_FUNDCODE;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30402';
		ROLLBACK ;
	END;   
        
	DELETE FROM PB_ATTFUND
	WHERE
		PAF_ACCNO = IN_ACCNO AND
		(PAF_FUNDCODE = IN_FUNDCODE OR PAF_FUNDCODE = IN_BACKFUNDCODE);
	
	COMMIT;
	
	--杩斿洖缁撴灉鍊?	OPEN OUT_ATTEND_LST;

	SET OUT_RET_CODE = '00000';
       
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_DEL_FUNDDATA(
	OUT OUT_RET_CODE	    	VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒犻櫎鍩洪噾鏁版嵁
-- 杈撳叆鍙傛暟锛氭棤

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--00000锛氭甯?--30434锛氬垹闄ゅ熀閲戞暟鎹け璐?
-- 鏈€鍚庝慨鏀逛汉 锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.26
------------------------------------------------------------------------
BEGIN
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30434';
		ROLLBACK ;
	END;
    -- 鍒犻櫎鍩洪噾淇℃伅琛?    DELETE FROM PB_FUNDINFO;
    --  鍒犻櫎鍩洪噾鍙傛暟琛?    DELETE FROM PB_FUNDPAR;
     --鍒犻櫎甯愭埛绫绘墜缁垂琛?     DELETE FROM PB_TRANFEE;
     -- 鍒犻櫎鍩洪噾杞崲琛?     DELETE FROM PB_CHGCOD;
     -- 鍒犻櫎缁勫悎濂楅琛?     DELETE FROM PB_FUNDCOM;
     -- 鍒犻櫎缁勫悎鏍蜂緥琛?     DELETE FROM PB_COMSMP;
     -- 鍒犻櫎鍩洪噾浠ｇ爜琛?     DELETE FROM PB_FDCD;
     -- 鍒犻櫎鏅烘収閫夊熀琛?	 DELETE FROM PB_FDZH;
	 -- 鍒犻櫎鍒稿晢闆嗗悎鐞嗚储浜у搧琛?	 DELETE FROM PB_FUNDQS;
	 -- 鍒犻櫎鍩洪噾璐圭巼琛?	 DELETE FROM PB_FUND_FEE;
	 -- 鍒犻櫎鍩洪噾浜ゅ壊鏃ヨ〃
	 DELETE FROM PB_FUND_YSK;
     -- 鍒犻櫎鍩洪噾绫诲埆琛?       DELETE FROM PB_FUNDCLASS;
     -- 璐у竵鍩洪噾瀹炴椂鎻愮幇琛?     DELETE FROM PB_FUND_PROMPT;
	COMMIT;

	SET OUT_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_OPERATE_FUNDCOR
(
	IN IN_CODE			VARCHAR(6),
	IN IN_NAME			VARCHAR(60),
	IN IN_FLAG			VARCHAR(1),
	OUT OUT_RET_CODE		VARCHAR(5)
)
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 杈撳叆鍙傛暟锛?-- IN_CODE锛?娉ㄥ唽鏈烘瀯浠ｇ爜
-- IN_NAME锛?涓氬姟浠ｇ爜
--IN_FLAG锛?锛堝鍔狅級锛?锛堝垹闄わ級锛?锛堟洿鏂帮級

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

-- 鏈€鍚庝慨鏀逛汉 锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.26
------------------------------------------------------------------------
BEGIN

    DECLARE OUT_CUR_COR CURSOR WITH RETURN FOR
       SELECT PFC_CODE,
              PFC_NAME
       FROM PB_FUNDCOR;
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	    IF IN_FLAG='1'          THEN
		    SET OUT_RET_CODE = '10424';		--10424鎻掑叆娉ㄥ唽鏈烘瀯淇℃伅鍑洪敊
		    ROLLBACK ;
	    ELSE 
            IF IN_FLAG = '2'   THEN
		        SET OUT_RET_CODE = '10425';		--10425鍒犻櫎娉ㄥ唽鏈烘瀯淇℃伅鍑洪敊
		        ROLLBACK ;
	        ELSE IF IN_FLAG = '3'   THEN
		            SET OUT_RET_CODE = '10426';		--10426鏇存柊娉ㄥ唽鏈烘瀯淇℃伅鍑洪敊
		            ROLLBACK ;
	             ELSE
                    SET OUT_RET_CODE = '10427';		--10427鏌ヨ娉ㄥ唽鏈烘瀯淇℃伅鍑洪敊
	             END IF;
            END IF;
        END IF;
    END; 
    -- 缁存姢娉ㄥ唽鏈烘瀯琛?	IF  IN_FLAG = '1'          THEN
		INSERT INTO PB_FUNDCOR VALUES(IN_CODE,IN_NAME);
		COMMIT;
    ELSE
	    IF IN_FLAG = '2'   THEN
		    DELETE FROM PB_FUNDCOR WHERE PFC_CODE=IN_CODE;
		    COMMIT;
        ELSE
            IF IN_FLAG = '3'   THEN
		        UPDATE PB_FUNDCOR SET PFC_NAME = IN_NAME WHERE PFC_CODE=IN_CODE;
		        COMMIT;
            END IF;
        END IF;
    END IF;



    -- 鎵撳紑娓告爣
	OPEN OUT_CUR_COR;
	SET OUT_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_OPERATE_FUNDREG
(
	IN IN_CODE			VARCHAR(6),
	IN IN_NAME			VARCHAR(60),
	IN IN_FLAG			VARCHAR(1),
	OUT OUT_RET_CODE		VARCHAR(5)
)
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 杈撳叆鍙傛暟锛?-- IN_CODE锛?娉ㄥ唽鏈烘瀯浠ｇ爜
-- IN_NAME锛?涓氬姟浠ｇ爜
--IN_FLAG锛?锛堝鍔狅級锛?锛堝垹闄わ級锛?锛堟洿鏂帮級

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

-- 鏈€鍚庝慨鏀逛汉 锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.26
------------------------------------------------------------------------
BEGIN

    DECLARE OUT_CUR_REG CURSOR WITH RETURN FOR
       SELECT PFR_REGCODE,
              PFR_REGNAME
       FROM PB_FUNDREG
       ORDER BY PFR_REGCODE;
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	    IF IN_FLAG='1'          THEN
		    SET OUT_RET_CODE = '10420';		--10420鎻掑叆娉ㄥ唽鏈烘瀯淇℃伅鍑洪敊
		    ROLLBACK ;
	    ELSE 
            IF IN_FLAG = '2'   THEN
		        SET OUT_RET_CODE = '10421';		--10421鍒犻櫎娉ㄥ唽鏈烘瀯淇℃伅鍑洪敊
		        ROLLBACK ;
	        ELSE IF IN_FLAG = '3'   THEN
		            SET OUT_RET_CODE = '10422';		--10422鏇存柊娉ㄥ唽鏈烘瀯淇℃伅鍑洪敊
		            ROLLBACK ;
	             ELSE
                    SET OUT_RET_CODE = '10423';		--10423鏌ヨ娉ㄥ唽鏈烘瀯淇℃伅鍑洪敊
	             END IF;
            END IF;
        END IF;
    END; 
    -- 缁存姢娉ㄥ唽鏈烘瀯琛?	IF  IN_FLAG = '1'          THEN
		INSERT INTO PB_FUNDREG VALUES(IN_CODE,IN_NAME);
		COMMIT;
    ELSE
	    IF IN_FLAG = '2'   THEN
		    DELETE FROM PB_FUNDREG WHERE PFR_REGCODE=IN_CODE;
		    COMMIT;
        ELSE
            IF IN_FLAG = '3'   THEN
		        UPDATE PB_FUNDREG SET PFR_REGNAME = IN_NAME WHERE PFR_REGCODE=IN_CODE;
		        COMMIT;
            END IF;
        END IF;
    END IF;


    -- 鎵撳紑娓告爣
	OPEN OUT_CUR_REG;
	SET OUT_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_ATTEND_FUND_LIST
 (IN IN_ACCNO VARCHAR(20), 
  OUT OUT_RET_CODE VARCHAR(5)
 ) 
READS SQL DATA 
DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鎴戞墍鍏虫敞鐨勬墍鏈夊熀閲?-- 杈撳叆鍙傛暟锛?-- IN_ACCNO: 鍗″彿

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0401涓烘煡璇㈡垜鍏虫敞鐨勫熀閲戝嚭閿?00000涓烘甯?-- OUT_ATTEND_LST: 缁撴灉闆?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.XieJia.Kai(Jaky)
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.15

-- 鏈€鍚庝慨鏀逛汉 锛?liming
-- 鏈€鍚庝慨鏀规棩鏈?锛?2010.12.06
------------------------------------------------------------------------
BEGIN
	
	DECLARE	OUT_ATTEND_LST CURSOR WITH RETURN FOR
		SELECT DISTINCT 
			PAF_ACCNO,
			PFM_FUNDCODE,
			PFM_FUNDNAME,
			PFM_FEETYP,
			PFM_FUNDTYP,
			PFM_FUNDLEVEL,
			PFM_MONTHRATE,
			PFM_SEASONRATE,
			PFM_YEARRATE,
			PFM_NEWVOL,
			PFM_NETVAL,
			PFM_UPDDATE,
			PFM_FEERATE,
			PFM_VALCHANGE,
			PFM_BACKFUNDCODE,
			PFM_CURRRATE,
			PFM_CURRWEEKRATE,
			PFI_STATUS				

		FROM (SELECT * FROM PB_ATTFUND WHERE PAF_ACCNO = IN_ACCNO) AS TAB1
				LEFT OUTER JOIN (SELECT PQS_FUNDCODE,PFI_STATUS FROM PB_FUNDINFO,PB_FUNDQS WHERE PQS_PROTYPE='1' AND PFI_FUNDCODE=PQS_FUNDCODE) AS TAB2 ON (TAB2.PQS_FUNDCODE = PAF_FUNDCODE)
				,PB_FUNDMSG
		WHERE  PAF_FUNDCODE = PFM_FUNDCODE OR PAF_FUNDCODE = PFM_BACKFUNDCODE ORDER BY PFM_MONTHRATE DESC;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
			BEGIN
				SET OUT_RET_CODE = '30401';
			ROLLBACK ;
	END;
	--杩斿洖缁撴灉鍊?	OPEN OUT_ATTEND_LST;
	
	SET OUT_RET_CODE = '00000';
       
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_COMBINED_LIST
(
    OUT OUT_RET_CODE VARCHAR(5)
)
READS SQL DATA 
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁勫悎濂楅鏌ヨ

-- 杈撳叆鍙傛暟锛氭棤
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝030405涓哄嚭閿?-- OUT_ATTEND_LST: 缁撴灉闆?
-- 鏈€鍚庝慨鏀逛汉 锛?Yin YF
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.19
------------------------------------------------------------------------
BEGIN
	
	DECLARE	OUT_CUR_COMBINED CURSOR WITH RETURN FOR
		SELECT
			PFC_COMNAME,
            PFC_COMCODE,
			PFC_COMCHT,
            PFI_FUNDNAME,
            PFC_MINAMT,
			PCS_FEETYP,
			PCS_SCALE
		FROM PB_FUNDCOM,PB_COMSMP,PB_FUNDINFO
		WHERE PCS_COMCODE=PFC_COMCODE AND PFI_FUNDCODE=PCS_FUNDCODE
		ORDER BY PFC_COMCODE;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30405';
	ROLLBACK;
	END;
	
	--杩斿洖缁撴灉鍊?	OPEN OUT_CUR_COMBINED;
	
	SET OUT_RET_CODE = '00000';
       
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_CORP_FUND_LIST(
	IN IN_CORP_CODE VARCHAR(6),
    	OUT OUT_RET_CODE VARCHAR(5)
)
READS SQL DATA 
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-鍩洪噾-鏌ヨ涓€涓垨鍏ㄩ儴鍩洪噾鍏徃涓嬮潰鐨勫熀閲戜俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_CORP_CODE 锛氬熀閲戝叕鍙镐唬鐮?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE 锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝030410涓哄嚭閿?-- OUT_QRY_COFUND_LST 锛氱粨鏋滈泦

-- 鏈€鍚庝慨鏀逛汉 锛?ECC.ZhangHao
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.15
------------------------------------------------------------------------

BEGIN
	
	DECLARE	OUT_QRY_COFUND_LS1 CURSOR WITH RETURN FOR
		SELECT 
			PFI_FUNDCODE,
			PFI_FUNDNAME,
			PFI_FEETYP,
			PFI_STATUS,
			PFI_MINSUBAMT,
			PFI_MINBIDAMT,
			PFI_MINRDMVOL,
			PFI_MINCHGVOL,
			PFI_SUBTYP,
			PFP_FLAG,
			PFP_TRANTYP,
			PFP_MINSUBAMT,
			PFC_CODE,
			PFC_NAME
		FROM PB_FUNDINFO, PB_FUNDPAR, PB_FUNDCOR 
		WHERE 
			PFP_FUNDCODE = PFI_FUNDCODE AND 
			PFP_MNGCODE = PFC_CODE
		ORDER BY PFC_CODE,PFI_FUNDCODE;
		
	DECLARE	OUT_QRY_COFUND_LS2 CURSOR WITH RETURN FOR
		SELECT PFI_FUNDCODE,
			PFI_FUNDNAME,
			PFI_FEETYP,
			PFI_STATUS,
			PFI_MINSUBAMT,
			PFI_MINBIDAMT,
			PFI_MINRDMVOL,
			PFI_MINCHGVOL,
			PFI_SUBTYP,
			PFP_FLAG,
			PFP_TRANTYP,
			PFP_MINSUBAMT,
			PFC_CODE,
			PFC_NAME
		FROM PB_FUNDINFO, PB_FUNDPAR,PB_FUNDCOR
		WHERE
			PFP_MNGCODE = IN_CORP_CODE AND 
			PFP_FUNDCODE = PFI_FUNDCODE AND  
			PFP_MNGCODE = PFC_CODE
		ORDER BY PFC_CODE,PFI_FUNDCODE;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
			SET OUT_RET_CODE = '30410';
			ROLLBACK;
	END;
	
	IF (IN_CORP_CODE = '-1') THEN
		OPEN OUT_QRY_COFUND_LS1;
	ELSE
		OPEN OUT_QRY_COFUND_LS2;
	END IF;
	
	SET OUT_RET_CODE = '00000';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_CURRENT_NAV_LIST
 (OUT OUT_RET_CODE VARCHAR(5)
 ) 
READS SQL DATA 
DYNAMIC RESULT SETS 1

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-鍩洪噾-鑾峰彇鍑€鍊间俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_FUNDCODE: 鍩洪噾浠ｇ爜

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0408涓烘煡璇㈠嚭閿?00000涓烘甯?-- OUT_FUNDCODE: 鍩洪噾浠ｇ爜
-- OUT_NETVAL:   鍩洪噾鍑€鍊?-- OUT_UPDATETIME鍑€鍊兼棩鏈?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.SunZhen
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.15
------------------------------------------------------------------------
BEGIN
	
	DECLARE	OUT_NETVAL_LIST CURSOR WITH RETURN FOR
		SELECT
			PFI_FUNDCODE,
			PFI_NETVAL,
			PFI_UPDDATE
		FROM PB_FUNDINFO;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30408';
		ROLLBACK ;
	END;   
	--杩斿洖缁撴灉鍊?	OPEN OUT_NETVAL_LIST;
	
	SET OUT_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_DAYCUTTING_FLAG(

	    OUT OUT_RET_CODE CHARACTER(5),
        OUT OUT_DAY_CUT_TIME_FLAG VARCHAR(1),
		OUT OUT_DAY_CUT_TIME VARCHAR(14)
		)
READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ褰撴棩浜ゆ槗鐨勭粨鏉熸椂闂存爣蹇楋紝骞跺垽鏂綋鍓嶆椂闂存槸鍚︽棩鍒囦箣鍚庯紱
-- 杈撳叆鍙傛暟锛?-- 鏃?
-- 杈撳嚭鍙傛暟锛?--OUT_DAY_CUT_TIME_FLAG锛氬鏋滄槸鏃ュ垏涔嬪悗鍊间负0锛屽惁鍒欏€间负1
--OUT_DAY_CUT_TIME:鏃ュ垏鏃堕棿
-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.19
------------------------------------------------------------------------
BEGIN
	
    DECLARE V_DATETIME VARCHAR(14);
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END; 
    
    SET V_DATETIME = substr(FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss'),9,14);
    
	SELECT MAX(PFP_ENDTIM) 
	INTO  OUT_DAY_CUT_TIME
	FROM PB_FUNDPAR ;
	
	IF (OUT_DAY_CUT_TIME<V_DATETIME AND V_DATETIME<'240000') THEN
	    SET OUT_DAY_CUT_TIME_FLAG = '0';
    ELSE 
        SET OUT_DAY_CUT_TIME_FLAG = '1';
	END IF;

	SET OUT_RET_CODE = '00000';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_EXCHANGE_FUND_LIST
 (IN IN_FUND_CODE VARCHAR(6), 
  OUT OUT_RET_CODE CHARACTER(5)
 ) 
READS SQL DATA 
DYNAMIC RESULT SETS 1

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ杈撳叆鍩洪噾鍙互杞崲鐨勫熀閲戝垪琛?-- 杈撳叆鍙傛暟锛?-- IN_FUND_CODE: 鍩洪噾浠ｇ爜

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0409涓烘煡璇㈠彲杞崲鍩洪噾鍑洪敊,00000涓烘甯?-- OUT_FUND_LIST锛氱粨鏋滈泦锛堣浆鎹㈠熀閲戜唬鐮侊紝杞崲鍩洪噾鏀惰垂妯″紡锛?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.16
------------------------------------------------------------------------
BEGIN
	DECLARE	OUT_FUND_LIST CURSOR WITH RETURN FOR 
		SELECT	PCC_TARGETCODE,
				PFI_FUNDNAME,
				PCC_TARGETTYP,
				PFI_RISKLVL
		FROM PB_CHGCOD,PB_FUNDINFO
		WHERE PCC_FUNDCODE = IN_FUND_CODE
		AND PCC_TARGETCODE=PFI_FUNDCODE;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30409';
		ROLLBACK ;
	END; 
	--杩斿洖缁撴灉鍊?	OPEN OUT_FUND_LIST;
       SET OUT_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_FUNDSTATUS
(
	IN IN_FUND_CODE			VARCHAR(6),
    --IN IN_FUND_CHARGEWAY	VARCHAR(1),
	OUT OUT_RET_CODE		VARCHAR(5),
	OUT OUT_FLAG			VARCHAR(1)
)
READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 杈撳叆鍙傛暟锛?-- IN_FUND_CODE锛?鍩洪噾浠ｇ爜
-- IN_FUND_CHARGE_WAY锛氬熀閲戞敹璐规柟寮?-- OUT_FLAG锛?锛堢敵璐級锛?锛堢敵璐級

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?  30417 璇ュ熀閲戜笉鍦ㄨ喘涔版湡闂?
-- 鏈€鍚庝慨鏀逛汉 锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.26
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
		DECLARE V_FLAG VARCHAR(1);
	-- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET OUT_RET_CODE = '30418';
			ROLLBACK;
		END;
        SET OUT_RET_CODE = '00000';
		SELECT  DISTINCT PFI_STATUS
		INTO    V_FLAG
		FROM    PB_FUNDINFO, PB_FUNDPAR
		WHERE   PFP_FUNDCODE = PFI_FUNDCODE
		AND     PFP_FUNDCODE = IN_FUND_CODE;
		--AND     PFP_FEETYP = IN_FUND_CHARGEWAY;
        
	    IF (V_FLAG = '0') OR (V_FLAG = '6') OR (V_FLAG = '7') OR (V_FLAG = '8') THEN
		    SET OUT_FLAG = '0' ;
	    ELSE 
            IF(V_FLAG = '1') THEN
			    SET OUT_FLAG = '1';
		    ELSE
			    SET	 OUT_RET_CODE = '30418';
		    END IF;
	    END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_NET_VALUE
 (
 	IN IN_FUNDCODE VARCHAR(6),
 	OUT OUT_RET_CODE VARCHAR(5)
 ) 
  READS SQL DATA 
  DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-鍩洪噾-鑾峰彇鍑€鍊间俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_FUNDCODE: 鍩洪噾浠ｇ爜

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0408涓烘煡璇㈠嚭閿?30417涓烘棤璇ュ熀閲戝噣鍊间俊鎭紝00000涓烘甯?-- OUT_FUNDCODE: 鍩洪噾浠ｇ爜
-- OUT_NETVAL:   鍩洪噾鍑€鍊?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.SunZhen
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.10.18
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2009.06.08
-- 淇敼鍘熷洜锛氬鍔犲叕鍛婃棩鏈?------------------------------------------------------------------------
BEGIN
	
	DECLARE	OUT_FUND_NETVAL CURSOR WITH RETURN FOR
		SELECT	PFI_FUNDCODE,
			PFI_FUNDNAME,
			PFI_UPDDATE,
			PFI_NETVAL
		FROM PB_FUNDINFO
		WHERE PFI_FUNDCODE = IN_FUNDCODE;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30408';
		ROLLBACK ;
	END;
	   
	IF NOT EXISTS(
		SELECT 1 
		FROM PB_FUNDINFO
		WHERE PFI_FUNDCODE = IN_FUNDCODE)
	THEN
		SET OUT_RET_CODE = '30417';
		RETURN;
	END IF;
	
	
	--杩斿洖缁撴灉鍊?	OPEN OUT_FUND_NETVAL;
	
	SET OUT_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_ORG_COR_RELATION_LIST(
	OUT OUT_RET_CODE VARCHAR(5)
)
    READS SQL DATA 
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-鍩洪噾-鏌ヨ娉ㄥ唽鏈烘瀯涓庡熀閲戝叕鍙哥殑瀵瑰簲鍏崇郴
-- 杈撳叆鍙傛暟锛氭棤
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE 锛?瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯革紝30406涓哄嚭閿?-- OUT_CUR_ORG_COR_RELATION 锛?缁撴灉闆?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.ZhangHao
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.15
------------------------------------------------------------------------
BEGIN

    	
	DECLARE	OUT_CUR_ORG_COR CURSOR WITH RETURN FOR
		SELECT DISTINCT
            PFP_FUNDCODE,
            PFI_FUNDNAME,
            PFI_FEETYP,
            PFC_CODE,
			PFC_NAME,
            PFP_REGCODE,
			PFR_REGNAME,
			PFP_FUNDMNGCODE 
		FROM PB_FUNDINFO
		INNER JOIN PB_FUNDPAR ON PFP_FUNDCODE = PFI_FUNDCODE
		INNER JOIN PB_FUNDCOR ON PFP_MNGCODE = PFC_CODE
		LEFT JOIN PB_FUNDREG ON PFR_REGCODE = PFP_REGCODE
		ORDER BY PFC_CODE;
 	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30406';
		ROLLBACK;
	END;       
	OPEN OUT_CUR_ORG_COR;
	
	SET OUT_RET_CODE = '00000';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_REG_ORG_FEE_LIST( 
	IN IN_OPEN_NEW_CODE VARCHAR(6),
	IN IN_OPEN_OLD_CODE VARCHAR(6),
	IN IN_CANCEL_CODE VARCHAR(6),
	OUT OUT_RET_CODE VARCHAR(5)
) 
READS SQL DATA 
RESULT SETS	3
LANGUAGE SQL   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ寮€鎴烽攢鎴风殑鎵嬬画璐?-- 杈撳叆鍙傛暟锛?-- IN_OPEN_OLD_CODE:	寮€閫氬凡鏈夊熀閲戣处鎴凤紙502420锛?-- IN_OPEN_NEW_CODE: 	寮€閫氭柊鐨勫熀閲戝笎鎴凤紙1699锛?-- IN_CANCEL_CODE: 		鍙栨秷鍩洪噾甯愭埛锛?02430锛?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝30411涓烘煡璇㈠嚭閿?-- OUT_CUR_OPEN_ACCOUND_OLD锛氬紑閫氭柊鎵嬬画璐硅〃()
-- OUT_CUR_OPEN_ACCOUNT_NEW锛氬紑閫氬凡鏈夋墜缁垂琛?-- OUT_CUR_CANCEL_ACCOUNT锛氬彇娑堟墜缁垂琛?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.19
------------------------------------------------------------------------
BEGIN

	DECLARE O_ACCOUNT_NEW CURSOR WITH RETURN FOR 
    SELECT DISTINCT PTF2.PTF_REGCODE,
                    PTF2.PTF_COMAMT,
                    PTF2.PTF_UPDDATE        
    FROM  (SELECT DISTINCT    PTF_REGCODE,
                        PTF_BUSCODE,
                        MAX(PTF_UPDDATE) MAX_DATE
                 FROM   PB_TRANFEE
                 GROUP BY PTF_REGCODE,PTF_BUSCODE) PTF1,PB_TRANFEE PTF2,PB_FUNDPAR,PB_FUNDCOD 
    WHERE  PTF1.PTF_REGCODE = PTF2.PTF_REGCODE
    AND    PTF1.PTF_BUSCODE = PTF2.PTF_BUSCODE
    AND    PTF1.MAX_DATE = PTF2.PTF_UPDDATE
    AND    PFC_TRANCODE = '1699'
    AND    PTF2.PTF_REGCODE=PFP_REGCODE   
    AND    PTF2.PTF_BUSCODE = PFC_BUSCODE   
    ORDER BY    PTF2.PTF_REGCODE; 
	
	DECLARE O_ACCOUND_OLD CURSOR WITH  RETURN FOR 
    SELECT DISTINCT PTF2.PTF_REGCODE,
                    PTF2.PTF_COMAMT,
                    PTF2.PTF_UPDDATE        
    FROM  (SELECT DISTINCT    PTF_REGCODE,
                        PTF_BUSCODE,
                        MAX(PTF_UPDDATE) MAX_DATE
                 FROM   PB_TRANFEE
                 GROUP BY PTF_REGCODE,PTF_BUSCODE) PTF1,PB_TRANFEE PTF2,PB_FUNDPAR,PB_FUNDCOD 
    WHERE  PTF1.PTF_REGCODE = PTF2.PTF_REGCODE
    AND    PTF1.PTF_BUSCODE = PTF2.PTF_BUSCODE
    AND    PTF1.MAX_DATE = PTF2.PTF_UPDDATE
    AND    PFC_TRANCODE = '502420'
    AND    PTF2.PTF_REGCODE=PFP_REGCODE   
    AND    PTF2.PTF_BUSCODE = PFC_BUSCODE   
    ORDER BY    PTF2.PTF_REGCODE; 

	DECLARE O_CANCEL_ACCOUNT CURSOR WITH RETURN FOR 
    SELECT DISTINCT PTF2.PTF_REGCODE,
                    PTF2.PTF_COMAMT,
                    PTF2.PTF_UPDDATE        
    FROM  (SELECT DISTINCT    PTF_REGCODE,
                        PTF_BUSCODE,
                        MAX(PTF_UPDDATE) MAX_DATE
                 FROM   PB_TRANFEE
                 GROUP BY PTF_REGCODE,PTF_BUSCODE) PTF1,PB_TRANFEE PTF2,PB_FUNDPAR,PB_FUNDCOD 
    WHERE  PTF1.PTF_REGCODE = PTF2.PTF_REGCODE
    AND    PTF1.PTF_BUSCODE = PTF2.PTF_BUSCODE
    AND    PTF1.MAX_DATE = PTF2.PTF_UPDDATE
    AND    PFC_TRANCODE = '502430'
    AND    PTF2.PTF_REGCODE=PFP_REGCODE   
    AND    PTF2.PTF_BUSCODE = PFC_BUSCODE   
    ORDER BY    PTF2.PTF_REGCODE; 
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30411';
		ROLLBACK ;
	END; 
--鎵撳紑娓告爣
	OPEN O_ACCOUNT_NEW;
	OPEN O_ACCOUND_OLD;
	OPEN O_CANCEL_ACCOUNT;
	SET OUT_RET_CODE = '00000';	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_REG_ORG_FEE( 
	IN IN_REG_CODE VARCHAR(6),
	IN IN_ACCOUNT_FLAG CHAR(1),
	OUT OUT_RET_CODE VARCHAR(5),
	OUT OUT_FEE DECIMAL(16,2)
)
READS SQL DATA 
LANGUAGE SQL   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ寮€鎴烽攢鎴风殑鎵嬬画璐?-- 杈撳叆鍙傛暟锛?-- IN_REG_CODE:			娉ㄥ唽鏈烘瀯浠ｇ爜
-- IN_ACCOUNT_FLAG:		浜ゆ槗绫诲瀷锛?锛嶅紑閫氭柊甯愭埛锛?699锛夛紝1锛嶅紑閫氬凡鏈夊笎鎴凤紙502420锛夛紝2锛嶆挙閿€甯愭埛锛?02430锛?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛?	瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯革紝30416 鏌ヨ璇ユ敞鍐屾満鏋勭殑浜ゆ槗鎵嬬画璐瑰嚭閿?-- OUT_FEE锛?			鎵嬬画璐?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.10.22
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATE VARCHAR(8);
	DECLARE V_TRAN_CODE VARCHAR(6);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30416';
		ROLLBACK;
	END;
    SET OUT_FEE = 0;
	IF IN_ACCOUNT_FLAG = '0' THEN
		SET	 V_TRAN_CODE = '1699';
	ELSE
		IF IN_ACCOUNT_FLAG = '1' THEN
			SET V_TRAN_CODE = '502420';
		ELSE
			IF IN_ACCOUNT_FLAG = '2' THEN
				SET V_TRAN_CODE = '502430';
			END IF;
		END IF;
	END IF;


    SELECT DISTINCT DECIMAL(PTF2.PTF_COMAMT,2),
                    PTF2.PTF_UPDDATE
    INTO	OUT_FEE,V_DATE        
    FROM  (SELECT DISTINCT    PTF_REGCODE,
                        PTF_BUSCODE,
                        MAX(PTF_UPDDATE) MAX_DATE
                 FROM   PB_TRANFEE
                 GROUP BY PTF_REGCODE,PTF_BUSCODE) PTF1,PB_TRANFEE PTF2,PB_FUNDPAR,PB_FUNDCOD 
    WHERE  PTF1.PTF_REGCODE = PTF2.PTF_REGCODE
    AND    PTF1.PTF_BUSCODE = PTF2.PTF_BUSCODE
    AND    PTF1.MAX_DATE = PTF2.PTF_UPDDATE
    AND    PFC_TRANCODE = V_TRAN_CODE
    AND    PTF2.PTF_REGCODE= IN_REG_CODE   
    AND    PTF2.PTF_BUSCODE = PFC_BUSCODE;
    
	SET OUT_RET_CODE = '00000';	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PBANK.PB_FUND_QRY_SWITCH_FEE_LIST
 (IN IN_SWITCH_IN_CODE VARCHAR(6), 
  IN IN_SWITCH_OUT_CODE VARCHAR(6), 
  IN IN_SWITCH_LOF_CODE VARCHAR(6), 
  OUT OUT_RET_CODE VARCHAR(5)
 ) 
  READS SQL DATA 
  DYNAMIC RESULT SETS 3

  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ杞墭绠¤浆鍑鸿浆鍏ョ殑鎵嬬画璐?-- 杈撳叆鍙傛暟锛?-- IN_SWITCH_IN_CODE: 杞叆浜ゆ槗浠ｇ爜锛?01460锛?-- IN_SWITCH_OUT_CODE: 杞嚭浜ゆ槗浠ｇ爜锛?01450锛?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?30412鏌ヨ鍑洪敊
-- OUT_CUR_SWITCH_IN锛氳浆鍏ユ墜缁垂琛?-- OUT_CUR_SWITCH_OUT锛氳浆鍑烘墜缁垂琛?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.13
------------------------------------------------------------------------
BEGIN
	DECLARE OUT_CUR_SWITCH_IN CURSOR WITH RETURN FOR 
     SELECT DISTINCT    PTF2.PTF_REGCODE,
                        PFP_FUNDCODE,
                        PFP_FEETYP,
                        PFP_TRANTYP,
                        PTF2.PTF_COMAMT,
                        PTF2.PTF_UPDDATE
      FROM  (SELECT DISTINCT    PTF_REGCODE,
                                PTF_BUSCODE,
                                MAX(PTF_UPDDATE) MAX_DATE
             FROM   PB_TRANFEE
             GROUP BY PTF_REGCODE,PTF_BUSCODE) PTF1,PB_TRANFEE PTF2,PB_FUNDPAR,PB_FUNDCOD
      WHERE  PTF1.PTF_REGCODE = PTF2.PTF_REGCODE
      AND    PTF1.PTF_BUSCODE = PTF2.PTF_BUSCODE
      AND    PTF1.MAX_DATE = PTF2.PTF_UPDDATE
      AND    PFC_TRANCODE = IN_SWITCH_IN_CODE
      AND    PTF2.PTF_REGCODE=PFP_REGCODE   
      AND    PTF2.PTF_BUSCODE = PFC_BUSCODE   
      ORDER BY    PTF2.PTF_REGCODE;

	DECLARE OUT_CUR_SWITCH_OUT CURSOR WITH RETURN FOR 
     SELECT DISTINCT    PTF2.PTF_REGCODE,
                        PFP_FUNDCODE,
                        PFP_FEETYP,
                        PFP_TRANTYP,
                        PTF2.PTF_COMAMT,
                        PTF2.PTF_UPDDATE
      FROM  (SELECT DISTINCT    PTF_REGCODE,
                                PTF_BUSCODE,
                                MAX(PTF_UPDDATE) MAX_DATE
             FROM   PB_TRANFEE
             GROUP BY PTF_REGCODE,PTF_BUSCODE) PTF1,PB_TRANFEE PTF2,PB_FUNDPAR,PB_FUNDCOD
      WHERE  PTF1.PTF_REGCODE = PTF2.PTF_REGCODE
      AND    PTF1.PTF_BUSCODE = PTF2.PTF_BUSCODE
      AND    PTF1.MAX_DATE = PTF2.PTF_UPDDATE
      AND    PFC_TRANCODE = IN_SWITCH_OUT_CODE
      AND    PTF2.PTF_REGCODE=PFP_REGCODE   
      AND    PTF2.PTF_BUSCODE = PFC_BUSCODE   
      ORDER BY    PTF2.PTF_REGCODE;

	DECLARE OUT_CUR_SWITCH_LOF CURSOR WITH RETURN FOR 
     SELECT DISTINCT    PTF2.PTF_REGCODE,
                        PFP_FUNDCODE,
                        PFP_FEETYP,
                        PFP_TRANTYP,
                        PTF2.PTF_COMAMT,
                        PTF2.PTF_UPDDATE
      FROM  (SELECT DISTINCT    PTF_REGCODE,
                                PTF_BUSCODE,
                                MAX(PTF_UPDDATE) MAX_DATE
             FROM   PB_TRANFEE
             GROUP BY PTF_REGCODE,PTF_BUSCODE) PTF1,PB_TRANFEE PTF2,PB_FUNDPAR,PB_FUNDCOD
      WHERE  PTF1.PTF_REGCODE = PTF2.PTF_REGCODE
      AND    PTF1.PTF_BUSCODE = PTF2.PTF_BUSCODE
      AND    PTF1.MAX_DATE = PTF2.PTF_UPDDATE
      AND    PFC_TRANCODE = IN_SWITCH_LOF_CODE
      AND    PTF2.PTF_REGCODE=PFP_REGCODE   
      AND    PTF2.PTF_BUSCODE = PFC_BUSCODE   
      ORDER BY    PTF2.PTF_REGCODE;
            
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30412';
		ROLLBACK ;
	END; 
--鎵撳紑娓告爣
	OPEN OUT_CUR_SWITCH_IN;
	OPEN OUT_CUR_SWITCH_OUT;
    OPEN OUT_CUR_SWITCH_LOF;
	SET OUT_RET_CODE = '00000';	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_SWITCH_LOF_FEE_LIST( 
	IN 	IN_SWITCH_CODE VARCHAR(6),
	OUT OUT_RET_CODE VARCHAR(5)
)
READS SQL DATA 
RESULT SETS	1

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨLOF杞墭绠＄殑鎵嬬画璐?-- 杈撳叆鍙傛暟锛?-- IN_SWITCH_IN_CODE: 杞叆浜ゆ槗浠ｇ爜锛?01470锛?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?30414鏌ヨ鍑洪敊
-- OUT_CUR_SWITCH锛氭墜缁垂琛?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.SunZhen
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.13
------------------------------------------------------------------------
BEGIN
	DECLARE OUT_CUR_SWITCH CURSOR WITH RETURN FOR 
     SELECT DISTINCT    PTF2.PTF_REGCODE,
                        PFP_FUNDCODE,
                        PFP_FEETYP,
                        PFP_TRANTYP,
                        PTF2.PTF_COMAMT,
                        PTF2.PTF_UPDDATE
      FROM  (SELECT DISTINCT    PTF_REGCODE,
                                PTF_BUSCODE,
                                MAX(PTF_UPDDATE) MAX_DATE
             FROM   PB_TRANFEE
             GROUP BY PTF_REGCODE,PTF_BUSCODE) PTF1,PB_TRANFEE PTF2,PB_FUNDPAR,PB_FUNDCOD
      WHERE  PTF1.PTF_REGCODE = PTF2.PTF_REGCODE
      AND    PTF1.PTF_BUSCODE = PTF2.PTF_BUSCODE
      AND    PTF1.MAX_DATE = PTF2.PTF_UPDDATE
      AND    PFC_TRANCODE = IN_SWITCH_CODE
      AND    PTF2.PTF_REGCODE=PFP_REGCODE   
      AND    PTF2.PTF_BUSCODE = PFC_BUSCODE   
      ORDER BY    PTF2.PTF_REGCODE;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30414';
		ROLLBACK ;
	END; 
--鎵撳紑娓告爣
	OPEN OUT_CUR_SWITCH;
	SET OUT_RET_CODE = '00000';	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_TA_LIST
 (
  OUT OUT_RET_CODE VARCHAR(5)
 ) 
READS SQL DATA 
DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鎵€鏈夋敞鍐屾満鏋勪唬鐮佸拰鍚嶇О
-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0415涓烘煡璇㈠嚭閿?00000涓烘甯?-- OUT_TA_LST: 缁撴灉闆?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.SunZhen
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.19
------------------------------------------------------------------------
BEGIN
	
	DECLARE OUT_TA_LST CURSOR WITH RETURN FOR
		SELECT
			PFR_REGCODE,
			PFR_REGNAME
		FROM
			PB_FUNDREG;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30415';
		ROLLBACK ;
	END;
	--杩斿洖缁撴灉鍊?	OPEN OUT_TA_LST;
	
	SET OUT_RET_CODE = '00000';
       
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_NEW_LIST
 (
  OUT OUT_RET_CODE VARCHAR(5)
 ) 

DYNAMIC RESULT SETS 1

  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-鏌ヨ鏂颁唬鐞嗙殑5涓熀閲戜俊鎭?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE 锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?5000涓烘煡璇㈠嚭閿?00000涓烘甯?-- OUT_NEW_LST 锛氱粨鏋滈泦

-- 鍒涘缓浜?锛?zhangxq
-- 鍒涘缓鏃ユ湡 锛?2010.11.18
-- 淇敼浜?  yinlei
-- 淇敼鏃ユ湡: 2011.04.28
------------------------------------------------------------------------
BEGIN	
	DECLARE	OUT_NEW_LST	CURSOR WITH	RETURN FOR 
		SELECT
			PFI_FUNDCODE,
			PFI_FUNDNAME,
			PFI_STATUS,
			PFI_UPDDATE,
			PFI_FEERATE,
			PFI_FEETYP,
			PFM_FUNDTYP,
			PFM_STARTDDATE,
			PFM_ENDDDATE,
			PFDR_SEQNO
		FROM PB_FUNDINFO 
		INNER JOIN PB_FUNDORDER ON PFI_FUNDCODE = PFDR_FUNDCODE AND PFDR_FUNDTYPE = '0'
		LEFT JOIN PB_FUNDMSG ON PFM_FUNDCODE = PFI_FUNDCODE
		ORDER BY PFDR_SEQNO ASC;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	--杩斿洖缁撴灉鍊?	OPEN OUT_NEW_LST;

	SET OUT_RET_CODE = '00000';
       
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_SELECT_LIST
 (
  OUT OUT_RET_CODE VARCHAR(5)
 ) 

DYNAMIC RESULT SETS 1

  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-鍩洪噾澶у叏-閫夊熀閲?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE 锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?5000涓烘煡璇㈠嚭閿?00000涓烘甯?-- OUT_SELECT_LST 锛氱粨鏋滈泦

-- 鏈€鍚庝慨鏀逛汉 锛?ECC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.11.01

-- 鏈€鍚庝慨鏀逛汉锛歽inlei
-- 鏈€鍚庝慨鏀规棩鏈燂細 2010.10.28
------------------------------------------------------------------------
BEGIN	
	DECLARE	OUT_SELECT_LST	CURSOR WITH	RETURN FOR 
	SELECT
	        CODE,
			NAME,
			PFM_FUNDTYP,
			MANAGER,
			PFM_FEETYP,
			PFM_FUNDLEVEL,
			PFM_MONTHRATE,
			PFM_SEASONRATE,
			PFM_YEARRATE,
			PFM_NEWVOL,
			PFM_NETVAL,
			PFM_UPDDATE,
			PFM_FEERATE,
			PFM_VALCHANGE,
			PFM_BACKFUNDCODE,
			PFM_CURRRATE,
			PFM_CURRWEEKRATE,
			PFM_STARTDDATE,
			PFM_DISCOUNT
	FROM(
	(SELECT
			PFM_FUNDCODE CODE,
			PFM_FUNDNAME NAME,
			PFM_FUNDTYP,
			'null' MANAGER,
			PFM_FEETYP,
			PFM_FUNDLEVEL,
			PFM_MONTHRATE,
			PFM_SEASONRATE,
			PFM_YEARRATE,
			PFM_NEWVOL,
			PFM_NETVAL,
			PFM_UPDDATE,
			PFM_FEERATE,
			PFM_VALCHANGE,
			PFM_BACKFUNDCODE,
			PFM_CURRRATE,
			PFM_CURRWEEKRATE,
			CASE WHEN PFM_STARTDDATE IS NULL THEN '00000000' ELSE PFM_STARTDDATE END PFM_STARTDDATE,
			PFM_DISCOUNT
		from pb_fundmsg where pfm_fundcode not in (select pfi_fundcode from pb_fundinfo))
		union 
		(SELECT
			PFI_FUNDCODE CODE,
			PFI_FUNDNAME NAME,
			PFM_FUNDTYP,
			(SELECT PFC_NAME FROM PB_FUNDPAR,PB_FUNDCOR	WHERE PFP_FUNDCODE = PFI_FUNDCODE AND PFP_MNGCODE = PFC_CODE) MANAGER,
			PFM_FEETYP,
			PFM_FUNDLEVEL,
			PFM_MONTHRATE,
			PFM_SEASONRATE,
			PFM_YEARRATE,
			PFM_NEWVOL,
			PFM_NETVAL,
			PFM_UPDDATE,
			PFM_FEERATE,
			PFM_VALCHANGE,
			PFM_BACKFUNDCODE,
			PFM_CURRRATE,
			PFM_CURRWEEKRATE,
			CASE WHEN PFM_STARTDDATE IS NULL THEN '00000000' ELSE PFM_STARTDDATE END PFM_STARTDDATE,
			PFM_DISCOUNT
		FROM PB_FUNDINFO LEFT JOIN PB_FUNDMSG ON PFI_FUNDCODE = PFM_FUNDCODE)) AS TEMPFUND ORDER BY PFM_STARTDDATE DESC;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	--杩斿洖缁撴灉鍊?	OPEN OUT_SELECT_LST;

	SET OUT_RET_CODE = '00000';
       
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_ATTEND(
	IN IN_ACCNO		VARCHAR(20),
	IN IN_FUNDCODE		VARCHAR(6),
	IN IN_FUNDNAME  VARCHAR(40),
	IN IN_FEETYP  CHAR(1),
	OUT OUT_RET_CODE	VARCHAR(5)
)
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娣诲姞涓€鍙熀閲戝埌鎴戞墍鍏虫敞鐨勫熀閲戣〃涓?-- 杈撳叆鍙傛暟锛?-- IN_ACCNO: 瀹㈡埛鍙?-- IN_FUNDCODE: 鍩洪噾浠ｇ爜

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.11.05
------------------------------------------------------------------------
BEGIN
	
	DECLARE V_FUNDNAME VARCHAR(40);
	DECLARE V_FEETYP CHAR(1);

	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
        
	IF EXISTS( 
		SELECT 1 
		FROM PB_ATTFUND 
		WHERE 
			PAF_ACCNO = IN_ACCNO AND 
			PAF_FUNDCODE = IN_FUNDCODE
	) THEN
		SET OUT_RET_CODE = '30407';
		RETURN;
	END IF;

	INSERT INTO PB_ATTFUND
	VALUES
	(
		IN_ACCNO,
		IN_FUNDCODE,
		IN_FUNDNAME,
		IN_FEETYP
	);
    
	COMMIT;
	
	SET OUT_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_CORP_QRY(
	IN IN_FUNDCODE		VARCHAR(6),
	OUT OUT_RET_CODE	VARCHAR(5)
)
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ璇ュ熀閲戞槸鍚﹀湪鍩洪噾淇℃伅琛紝骞舵煡璇㈠嚭灞炰簬鍝釜鍩洪噾鍏徃
-- 杈撳叆鍙傛暟锛?-- IN_FUNDCODE: 鍩洪噾浠ｇ爜

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.11.07
------------------------------------------------------------------------
BEGIN
	DECLARE	OUT_SELECT_LST	CURSOR WITH	RETURN FOR 
		SELECT			
			PFP_MNGCODE
		FROM PB_FUNDPAR
		WHERE PFP_FUNDCODE = IN_FUNDCODE;
		
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
        
	IF NOT EXISTS( 
		SELECT 1 
		FROM PB_FUNDINFO
		WHERE 
			PFI_FUNDCODE = IN_FUNDCODE
	) THEN
		SET OUT_RET_CODE = '30810';
		RETURN;
	END IF;
	
	
	
	--杩斿洖缁撴灉闆?	OPEN OUT_SELECT_LST;
	
	SET OUT_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_WITH_RISK_LIST(
	IN IN_CORP_CODE VARCHAR(6),
    OUT OUT_RET_CODE VARCHAR(5)
)
READS SQL DATA 
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-鍩洪噾-鏌ヨ涓€涓垨鍏ㄩ儴鍩洪噾鍏徃涓嬮潰鐨勫熀閲戜俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_CORP_CODE 锛氬熀閲戝叕鍙镐唬鐮?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE 锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝030410涓哄嚭閿?-- OUT_QRY_COFUND_LST 锛氱粨鏋滈泦

-- 鏈€鍚庝慨鏀逛汉 锛?ECC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2008.12.17
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.fenghj
-- 鏈€鍚庝慨鏀规棩鏈?锛?2010.06.28
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.WangWenhai
-- 鍩洪噾鍒楄〃涓繃婊ゆ帀鍒稿晢闆嗗悎鐞嗚储鐨勪骇鍝?-- 鏈€鍚庝慨鏀规棩鏈?锛?2012.06.27
-- 鍩洪噾鍒楄〃涓鍔犵粨绠楀竵绉嶅瓧娈?------------------------------------------------------------------------

BEGIN
	
	DECLARE	OUT_QRY_COFUND_LS1 CURSOR WITH RETURN FOR
		SELECT 
			PFI_FUNDCODE,     -- 鍩洪噾浠ｇ爜
			PFI_FUNDNAME,	  -- 鍩洪噾鍚嶇О
			PFI_FEETYP,		  -- 鏀惰垂绫诲埆
			PFI_STATUS,       -- 鍩洪噾鐘舵€?			PFI_MINSUBAMT,    -- 涓汉鏈€灏忚璐噾棰?			PFI_MINBIDAMT,    -- 涓汉棣栨鐢宠喘鏈€浣庨噾棰?			PFI_MINRDMVOL,    -- 鏈€灏忚祹鍥炰唤棰?			PFI_MINCHGVOL,    -- 鏈€灏忚浆鎹唤棰?			PFI_SUBTYP,       -- 璁よ喘鏂瑰紡
			PFP_FLAG,		  -- 鐜伴挒鐜版眹鏍囧織
			PFP_TRANTYP,      -- 杞墭绠℃柟寮?			PFP_MINSUBAMT,    -- 瀹氭湡瀹氶鐢宠喘閲戦涓嬮檺
			PFC_CODE,		  -- 鍏徃浠ｇ爜
			PFC_NAME,		  -- 鍏徃鍚嶇О
			PFI_RISKLVL,      -- 鍩洪噾椋庨櫓绛夌骇
			PFI_RISKLVLCN,    -- 鍩洪噾椋庨櫓绛夌骇涓枃鎻忚堪
			PFI_RISKLVLEN,	  -- 鍩洪噾椋庨櫓绛夌骇鑻辨枃鎻忚堪
			PFI_MAXSUBAMT,    -- 鏈€楂樿璐噾棰?			PFI_APPSUBAMT,    -- 涓汉杩藉姞璁よ喘閲戦
			PFI_MAXBIDAMT,    -- ?釜浜虹敵璐渶楂橀噾棰?			PFI_MINAPPBIDAMT, -- 涓汉杩藉姞鐢宠喘鏈€浣庨噾棰?			PFI_FEERATE,      -- 璐圭巼
			PFP_MAXSUBAMT,     -- 瀹氭湡瀹氶鐢宠喘閲戦涓婇檺
			PFI_TYPE,		  -- 缁撶畻甯佺
			PFI_FLAG,		  -- 閽炴眹鏍囪
			PFP_REGCODE		  -- 娉ㄥ唽鏈烘瀯浠ｇ爜
		FROM PB_FUNDINFO, PB_FUNDPAR, PB_FUNDCOR 
		WHERE 
			PFP_FUNDCODE = PFI_FUNDCODE AND 
			PFP_MNGCODE = PFC_CODE AND  EXISTS (SELECT 1 FROM PB_FUNDQS WHERE PQS_PROTYPE='1' AND PFP_FUNDCODE=PQS_FUNDCODE) 
		ORDER BY PFC_CODE,PFI_FUNDCODE;
		
	DECLARE	OUT_QRY_COFUND_LS2 CURSOR WITH RETURN FOR
		SELECT 
			PFI_FUNDCODE,     -- 鍩洪噾浠ｇ爜
			PFI_FUNDNAME,	  -- 鍩洪噾鍚嶇О
			PFI_FEETYP,		  -- 鏀惰垂绫诲埆
			PFI_STATUS,       -- 鍩洪噾鐘舵€?			PFI_MINSUBAMT,    -- 涓汉鏈€灏忚璐噾棰?			PFI_MINBIDAMT,    -- 涓汉棣栨鐢宠喘鏈€浣庨噾棰?			PFI_MINRDMVOL,    -- 鏈€灏忚祹鍥炰唤棰?			PFI_MINCHGVOL,    -- 鏈€灏忚浆鎹唤棰?			PFI_SUBTYP,       -- 璁よ喘鏂瑰紡
			PFP_FLAG,		  -- 鐜伴挒鐜版眹鏍囧織
			PFP_TRANTYP,      -- 杞墭绠℃柟寮?			PFP_MINSUBAMT,    -- 瀹氭湡瀹氶鐢宠喘閲戦涓嬮檺
			PFC_CODE,		  -- 鍏徃浠ｇ爜
			PFC_NAME,		  -- 鍏徃鍚嶇О
			PFI_RISKLVL,      -- 鍩洪噾椋庨櫓绛夌骇
			PFI_RISKLVLCN,    -- 鍩洪噾椋庨櫓绛夌骇涓枃鎻忚堪
			PFI_RISKLVLEN,	  -- 鍩洪噾椋庨櫓绛夌骇鑻辨枃鎻忚堪
			PFI_MAXSUBAMT,    -- 鏈€楂樿璐噾棰?			PFI_APPSUBAMT,    -- 涓汉杩藉姞璁よ喘閲戦
			PFI_MAXBIDAMT,    -- 涓汉鐢宠喘鏈€楂橀噾棰?			PFI_MINAPPBIDAMT, -- 涓汉杩藉姞鐢宠喘鏈€浣庨噾棰?			PFI_FEERATE,      -- 璐圭巼
			PFP_MAXSUBAMT,     -- 瀹氭湡瀹氶鐢宠喘閲戦涓婇檺
			PFI_TYPE,		  -- 缁撶畻甯佺
			PFI_FLAG,		  -- 閽炴眹鏍囪
			PFP_REGCODE		  -- 娉ㄥ唽鏈烘瀯浠ｇ爜
		FROM PB_FUNDINFO, PB_FUNDPAR,PB_FUNDCOR
		WHERE
			PFP_MNGCODE = IN_CORP_CODE AND 
			PFP_FUNDCODE = PFI_FUNDCODE AND  
			PFP_MNGCODE = PFC_CODE AND EXISTS (SELECT 1 FROM PB_FUNDQS WHERE PQS_PROTYPE='1' AND PFP_FUNDCODE=PQS_FUNDCODE) 
		ORDER BY PFC_CODE,PFI_FUNDCODE;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
			SET OUT_RET_CODE = '30410';
			ROLLBACK;
	END;
	
	IF (IN_CORP_CODE = '-1') THEN
		OPEN OUT_QRY_COFUND_LS1;
	ELSE
		OPEN OUT_QRY_COFUND_LS2;
	END IF;
	
	SET OUT_RET_CODE = '00000';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_COM_WITH_RISK_LIST
(
    OUT OUT_RET_CODE VARCHAR(5)
)
READS SQL DATA 
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁勫悎濂楅鏌ヨ

-- 杈撳叆鍙傛暟锛氭棤
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝030405涓哄嚭閿?-- OUT_ATTEND_LST: 缁撴灉闆?
-- 鏈€鍚庝慨鏀逛汉 锛?pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2008.12.19
------------------------------------------------------------------------
BEGIN
	
	DECLARE	OUT_CUR_COMBINED CURSOR WITH RETURN FOR
		SELECT
			PFC_COMNAME,
            PFC_COMCODE,
			PFC_COMCHT,
            PFI_FUNDNAME,
            PCS_FUNDCODE,
            PFC_MINAMT,
			PCS_FEETYP,
			PCS_SCALE,
			PFC_RISKLVL,
			PFC_RISKLVLCN,
			PFC_RISKLVLEN,
			PFC_MAXAMT,
			PFC_SCHEMINAMT,
			PFC_SCHEMAXAMT,
			PFC_ONCEOPENFLAG
		FROM PB_COMSMP INNER JOIN PB_FUNDCOM ON PCS_COMCODE=PFC_COMCODE
		   LEFT JOIN PB_FUNDINFO ON PFI_FUNDCODE=PCS_FUNDCODE
		ORDER BY PFC_COMCODE,PCS_FUNDCODE;
		-- 鎺掑簭浠ヤ繚璇侀〉闈㈣瘯绠楃敵璇烽噾棰濅笌鍚庡彴涓€鑷?
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30405';
	ROLLBACK;
	END;
	
	--杩斿洖缁撴灉鍊?	OPEN OUT_CUR_COMBINED;
	
	SET OUT_RET_CODE = '00000';
       
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_FDCD(
	IN IN_STR_LIST CLOB, 

	OUT OUT_RET_CODE CHARACTER(5)
)
	LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍩洪噾寮€甯傦細灏嗗紑甯備俊鎭彃鍏ュ埌鍩洪噾浠ｇ爜琛?-- 杈撳叆鍙傛暟锛?--	IN_FUNDCODE          鍩洪噾浠ｇ爜
--	IN_FUNDNAME          鍩洪噾鍚嶇О
--	IN_SHARECLASS        鏀惰垂鏂瑰紡(0-鍓嶆敹璐癸紝1-鍚庢敹璐?
--	IN_SUBTYP            璁ょ敵璐爣蹇楋紙0-鐢宠喘锛?-璁よ喘锛?--	IN_PRDTYP            浜у搧绫诲瀷 01-鍩洪噾锛?2-鍒稿晢鐞嗚储锛?3锛嶄笓鎴风悊璐?涓€瀵瑰涓撴埛鐞嗚储闇€姹傛柊澧炴瀛楁)

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000姝ｅ父锛?5000寮傚父

-- 鏈€鍚庝慨鏀逛汉锛欵CC.
-- 鏈€鍚庝慨鏀规棩鏈?锛?2009.08.17
------------------------------------------------------------------------
BEGIN
	-- 澹版槑鍙橀噺
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_ACCOUNT VARCHAR(60) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	
	DECLARE V_FUNDCODE   VARCHAR(6);
	DECLARE V_FUNDNAME   VARCHAR(40);
	DECLARE V_SHARECLASS VARCHAR(1);
	DECLARE V_SUBTYP     VARCHAR(1);
	DECLARE V_PRDTYP     VARCHAR(2);
	DECLARE V_INSERT_FLAG   CHAR(1);
	-- 寮傚父澶勭悊
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
		BEGIN
			SET OUT_RET_CODE = '95000';
			SET V_INSERT_FLAG = '1';
		END;
		
	-- 瀛樺偍杩囩▼杩斿洖鐮?	SET OUT_RET_CODE = '00000';

	------------------
	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_ACCOUNT = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDNAME = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_SHARECLASS = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_SUBTYP = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_PRDTYP = V_CURRENT_ACCOUNT;
		
		IF V_INSERT_FLAG = '0' THEN
			INSERT INTO PB_FDCD
			(
				PFC_FUNDCODE,
				PFC_FUNDNAME,
				PFC_SHARECLASS,
				PFC_SUBTYP,
				PFC_PRDTYP
			)
			VALUES
			(
				V_FUNDCODE,
				V_FUNDNAME,
				V_SHARECLASS,
				V_SUBTYP,
				V_PRDTYP
			);
		END IF;
	END WHILE; 
	COMMIT;


END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_REPAIR_DATA
(
	OUT OUT_RET_CODE CHARACTER(5)
)
	LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍩洪噾寮€甯傦細鍒犻櫎浜у搧绫诲瀷涓轰笓鎴风悊璐㈢殑鍩洪噾淇℃伅
--               娑夊強鍒扮殑琛ㄤ负锛氬熀閲戜唬鐮佽〃CB_FDCD銆佸熀閲戜俊鎭〃CB_FUNDINFO
--                             鍩洪噾鍙傛暟琛–B_FUNDPAR銆佸熀閲戣浆鎹㈣〃CB_CHGCOD
-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000姝ｅ父锛?5000寮傚父

-- 鏈€鍚庝慨鏀逛汉锛欵CC.
-- 鏈€鍚庝慨鏀规棩鏈?锛?2009.08.17
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET OUT_RET_CODE = '95000';
			ROLLBACK;
		END;

	------------------

	DELETE FROM PB_FUNDINFO WHERE PFI_FUNDCODE IN (SELECT PQS_FUNDCODE FROM PB_FUNDQS WHERE PQS_PROTYPE='3' OR PQS_PROTYPE='4' OR PQS_PROTYPE='5' OR PQS_PROTYPE='6');
	DELETE FROM PB_FUNDPAR  WHERE PFP_FUNDCODE IN (SELECT PQS_FUNDCODE FROM PB_FUNDQS WHERE PQS_PROTYPE='3' OR PQS_PROTYPE='4' OR PQS_PROTYPE='5' OR PQS_PROTYPE='6');
	DELETE FROM PB_CHGCOD   WHERE PCC_FUNDCODE IN (SELECT PQS_FUNDCODE FROM PB_FUNDQS WHERE PQS_PROTYPE='3' OR PQS_PROTYPE='4' OR PQS_PROTYPE='5' OR PQS_PROTYPE='6');

	COMMIT;

	-- 瀛樺偍杩囩▼杩斿洖鐮?	SET OUT_RET_CODE = '00000';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SAPIENT_FUND_QRY(
	   IN  IN_QRYTYPE           CHAR(1),
	   IN  IN_PAGESIZE          INTEGER,
	   IN  IN_TARGETPAGE        INTEGER,
	   OUT OUT_RET_CODE	    	VARCHAR(5),
	   OUT OUT_TOTAL            INTEGER
)
READS SQL DATA 
DYNAMIC RESULT SETS 1
----------------------------------------------------------------
-- SQL瀛樺偍杩囩▼
-- 鏌ヨ鏅烘収閫夊熀鏄庣粏
-- 杈撳叆鍙傛暟锛?--  IN_QRYTYPE    :   鏌ヨ鏂瑰紡 0 鏌ヨ鍒楄〃
--                            鍏跺畠 鍏宠仈鏌ヨ鏀惰垂鏂瑰紡绛変俊鎭?--  IN_PAGESIZE   :   姣忛〉璁板綍鏁?--  IN_TARGETPAGE 锛?  椤靛彿
--
-- 杈撳嚭鍙傛暟:
--        OUT_RET_CODE  :  瀛樺偍杩囩▼杩斿洖鐮?00000 鎴愬姛
--        OUT_TOTAL     :  鎬昏褰曟暟
--
-- 鏈€鍚庝慨鏀逛汉 锛歭an_xb
-- 鏈€鍚庝慨鏀规棩鏈燂細2009.09.12
----------------------------------------------------------------
BEGIN
	 
	 
	 DECLARE QRY_FUND_INF CURSOR WITH RETURN FOR 
	 		 SELECT 
	 		 		PFZ_FUNDCODE,
			        PFZ_FUNDNAME,
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					PFZ_COMPANY,
					'',
					'',
					'',
					PFZ_DSE
			 FROM (
			 		SELECT 
			 			PFZ_FUNDCODE,
			        	PFZ_FUNDNAME,
			        	PFZ_COMPANY,
			        	PFZ_DSE,
						ROW_NUMBER() OVER(ORDER BY PFZ_FUNDCODE)  ROWNUM
					FROM PB_FDZH
				   ) AS T1
			 WHERE
			        ROWNUM > (IN_TARGETPAGE - 1) * IN_PAGESIZE
					AND ROWNUM <= IN_TARGETPAGE*IN_PAGESIZE;
	 
	 DECLARE QRY_INNER_FUND_INF CURSOR WITH RETURN FOR
	 		 SELECT 
				PFI_FUNDCODE,
				PFI_FUNDNAME,
				PFI_FEETYP,
				PFI_STATUS,
				PFI_MINSUBAMT,
				PFI_MINBIDAMT,
				PFI_MINRDMVOL,
				PFI_MINCHGVOL,
				PFI_SUBTYP,
				PFP_FLAG,
				PFP_TRANTYP,
				PFP_MINSUBAMT,
				PFC_CODE,
				PFC_NAME,
				PFI_RISKLVL,
				PFI_RISKLVLCN,
				PFI_RISKLVLEN,
				''
			FROM PB_FUNDINFO, PB_FUNDPAR, PB_FUNDCOR,PB_FDZH
			WHERE 
				PFP_FUNDCODE = PFI_FUNDCODE AND 
				PFP_MNGCODE = PFC_CODE  AND
				PFZ_FUNDCODE = PFP_FUNDCODE
			ORDER BY PFC_CODE,PFI_FUNDCODE;
			 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	 BEGIN
	 	  SET OUT_RET_CODE = '30435';
	 END;
	 
	SET OUT_TOTAL = 0;
	IF IN_QRYTYPE = '0' THEN
	   SELECT COUNT(1) INTO OUT_TOTAL FROM PB_FDZH;
	   
	   OPEN QRY_FUND_INF;
	ELSE
	   OPEN QRY_INNER_FUND_INF;
	END IF;
	
	SET OUT_RET_CODE = '00000';
	 
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_FDZH(
	IN IN_STR_LIST CLOB, 

	OUT OUT_RET_CODE CHARACTER(5)
)
	LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍩洪噾寮€甯傦細灏嗗紑甯備俊鎭彃鍏ュ埌鏅烘収閫夊熀鏄庣粏琛?-- 杈撳叆鍙傛暟锛?--	IN_FUNDCODE          鍩洪噾浠ｇ爜
--	IN_FUNDNAME          鍩洪噾鍚嶇О
--	IN_COMPANY           鍩洪噾鍏徃
--	IN_DSE               鍩洪噾绫诲瀷鎻忚堪

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000姝ｅ父锛?5000寮傚父

-- 鏈€鍚庝慨鏀逛汉锛欵CC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2009.10.19
------------------------------------------------------------------------
BEGIN
	
	-- 澹版槑鍙橀噺
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_ACCOUNT VARCHAR(160) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	
	DECLARE V_FUNDCODE   VARCHAR(6);
	DECLARE V_FUNDNAME   VARCHAR(40);
	DECLARE V_COMPANY    VARCHAR(60);
	DECLARE V_DSE        VARCHAR(40);
	DECLARE V_INSERT_FLAG   CHAR(1);
	-- 寮傚父澶勭悊
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
		BEGIN
			SET OUT_RET_CODE = '95000';
			SET V_INSERT_FLAG = '1';
		END;

	-- 瀛樺偍杩囩▼杩斿洖鐮?	SET OUT_RET_CODE = '00000';
	------------------
	
	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_ACCOUNT = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDNAME = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_COMPANY = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
	
		SET V_DSE = V_CURRENT_ACCOUNT;
		
		IF V_INSERT_FLAG = '0' THEN
		INSERT INTO PB_FDZH
		(
			PFZ_FUNDCODE,
			PFZ_FUNDNAME,
			PFZ_COMPANY,
			PFZ_DSE
		)
		VALUES
		(
			V_FUNDCODE,
			V_FUNDNAME,
			V_COMPANY,
			V_DSE
		);
		END IF;
	END WHILE; 
	COMMIT;


END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QUANSHANG_PROLIST
(
    IN IN_BEGINPOS INTEGER, 
    IN IN_SHOWNUM INTEGER, 
    OUT PROC_RET_CODE VARCHAR(5), 
    OUT OUT_TOTALNUM INTEGER
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒稿晢鐞嗚储浜у搧鏌ヨ

-- 杈撳叆鍙傛暟锛欼N IN_BEGINPOS  璧峰椤?-- 杈撳叆鍙傛暟锛欼N IN_SHOWNUM	 姣忛〉鏄剧ず璁板綍鏁?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOTALNUM锛氭€昏褰曟暟

-- @author锛歠enghj
-- 鍒涘缓鏃ユ湡锛?010.06.23
------------------------------------------------------------------------
BEGIN

	DECLARE CUR_ROUTE CURSOR WITH RETURN TO CALLER FOR
	
	
	SELECT PQS_FUNDCODE,PQS_FUNDNAME,PQS_FEETYP, PQS_PROTYPE,PQS_COMPANY,PQS_CONTROL
		FROM (
		SELECT  PQS_FUNDCODE,PQS_FUNDNAME,PQS_FEETYP, PQS_PROTYPE,PQS_COMPANY,
		ROW_NUMBER()OVER(ORDER BY PQS_FUNDCODE) ROW_ID,PQS_CONTROL
		FROM PB_FUNDQS WHERE PQS_PROTYPE='2'
		)
		AS TMPTABLE

		WHERE  PQS_PROTYPE='2' AND  ROW_ID > (IN_BEGINPOS-1)*IN_SHOWNUM AND

			ROW_ID<= (IN_BEGINPOS-1)*IN_SHOWNUM + IN_SHOWNUM
		;
        
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	SELECT  COUNT(*) INTO OUT_TOTALNUM
		FROM PB_FUNDQS WHERE PQS_PROTYPE='2';

    --鎵撳紑娓告爣
    OPEN CUR_ROUTE;
	
    SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QUANSHANG_PROQRY_LIST
 (
  	IN IN_PRO_TYPE VARCHAR(2),
  	OUT PROC_RET_CODE VARCHAR(5)
 ) 
  READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒稿晢闆嗗悎鐞嗚储浜у搧璇存槑涔︽煡璇?-- 杈撳叆鍙傛暟锛?-- IN_PRO_TYPE:涓氬姟绉嶇被(寰楀埄瀹濓細NULL,鍒稿晢缁撳悎鐞嗚储锛?1)

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?-- 鍒涘缓浜猴細FENGHJ
------------------------------------------------------------------------
BEGIN
	
	DECLARE CUR_Q CURSOR  WITH RETURN TO CALLER FOR
		SELECT PPG_PRODUCTNO, PPG_FIRSTTIME, PPG_LASTTIME, PPG_PROGUIDE

		FROM PB_PROGUIDE WHERE PPG_TYPE =IN_PRO_TYPE;
			
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	-- 鎵撳紑娓告爣
	OPEN CUR_Q;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QUANSHANG_RISKLIST
(
    IN IN_FUND_CODE VARCHAR(6),
    OUT OUT_RET_CODE VARCHAR(5)
)
READS SQL DATA 
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍩洪噾淇℃伅鏌ヨ

-- 杈撳叆鍙傛暟锛?-- IN_FUND_CODE 锛氬熀閲戜唬鐮?-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝030405涓哄嚭閿?-- OUT_ATTEND_LST: 缁撴灉闆?
-- 鏈€鍚庝慨鏀逛汉 锛?fenghj
-- 鏈€鍚庝慨鏀规棩鏈?锛?2010.06.12
------------------------------------------------------------------------
BEGIN
	
	DECLARE	OUT_CUR_COMBINED CURSOR WITH RETURN FOR
		SELECT
			PQS_FUNDCODE,
      		PFI_FUNDNAME,
			PFI_STATUS,
      		PFI_REGCODE,
			PFI_RISKLVL,
			PFI_RISKLVLCN,
			PFI_RISKLVLEN
		FROM PB_FUNDINFO,PB_FUNDQS
		   WHERE PFI_FUNDCODE=PQS_FUNDCODE AND PFI_FUNDCODE= IN_FUND_CODE 
		ORDER BY PQS_FUNDCODE;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
	ROLLBACK;
	END;
	
	--杩斿洖缁撴灉鍊?	OPEN OUT_CUR_COMBINED;
	
	SET OUT_RET_CODE = '00000';
       
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_FUNDQS(
	IN IN_STR_LIST CLOB, 
	OUT OUT_RET_CODE CHARACTER(5)
)
    LANGUAGE SQL

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍩洪噾寮€甯傦細灏嗗紑涓氫俊鎭彃鍏ュ埌鍒稿晢闆嗗悎鐞嗚储浜у搧淇℃伅琛?-- 杈撳叆鍙傛暟锛?涓?--	鍩洪噾浠ｇ爜
--	鍩洪噾鍚嶇О
--	鍓嶅悗鏀惰垂鏍囧織
--	浜у搧绫诲瀷(1鍩洪噾銆?鍒稿晢鐞嗚储銆?涓€瀵逛竴涓撴埛鐞嗚储銆?涓€瀵瑰涓撴埛鐞嗚储銆?绉佸嫙浜у搧銆?淇℃墭浜у搧)
--	鍩洪噾鍏徃

-- 杈撳嚭鍙傛暟锛?input type="hidden" >
-- 	OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝30436涓哄嚭閿?鏇存柊鍒稿晢闆嗗悎鐞嗚储浜у搧淇℃伅琛ㄥけ璐?-- 鍒涘缓浜猴細fengj
-- 鍒涘缓鏃ユ湡 锛?2010.06.23
------------------------------------------------------------------------

	BEGIN
	
	-- 澹版槑鍙橀噺
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_ACCOUNT VARCHAR(120) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	
	DECLARE V_FUNDCODE  VARCHAR(6);
	DECLARE V_FUNDNAME  VARCHAR(40);
	DECLARE V_FEETYP 	VARCHAR(1);
	DECLARE V_PROTYPE	VARCHAR(2);
	DECLARE V_COMPANY	VARCHAR(60);
	DECLARE V_CONTROL	VARCHAR(1);
	DECLARE V_INSERT_FLAG   CHAR(1);
	
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
		BEGIN
			SET OUT_RET_CODE = '30436';
			SET V_INSERT_FLAG = '1';
		END;
	--杩斿洖淇℃伅                    
	SET OUT_RET_CODE = '00000';
	
	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_ACCOUNT = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
	
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDNAME = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FEETYP = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_PROTYPE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_COMPANY = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_CONTROL = V_CURRENT_ACCOUNT;
		
		IF V_INSERT_FLAG = '0' THEN
			INSERT INTO PB_FUNDQS
			(
				PQS_FUNDCODE, 	
				PQS_FUNDNAME, 	
				PQS_FEETYP, 	
				PQS_PROTYPE, 	
				PQS_COMPANY,
				PQS_CONTROL	
			)   
			VALUES
			(
				V_FUNDCODE, 	
				V_FUNDNAME, 	
				V_FEETYP, 	
				V_PROTYPE, 	
				V_COMPANY,
				V_CONTROL
			);  
		END IF;
		
	END WHILE;                
                            
	COMMIT;	
                            
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_FEERATE_QRY(
	IN  IN_FUNDCODE  VARCHAR(6),
	OUT OUT_RET_CODE CHARACTER(5)
)   
READS SQL DATA 
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍩洪噾寮€甯傦細灏嗗紑涓氫俊鎭彃鍏ュ埌鍒稿晢闆嗗悎鐞嗚储浜у搧淇℃伅琛?-- 杈撳叆鍙傛暟锛?--	IN_FUNDCODE:  鍩洪噾浠ｇ爜

-- 杈撳嚭鍙傛暟锛?-- 	OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝9500涓哄嚭閿?璁块棶瀛樺偍杩囩▼鍑洪敊
-- 鍒涘缓浜猴細LAN_XB
-- 鍒涘缓鏃ユ湡 锛?2010.10.20
------------------------------------------------------------------------
BEGIN
	
	DECLARE	OUT_CUR_FUNDFEE CURSOR WITH RETURN FOR
		SELECT
			PFF_FUNDCODE,
			PFF_BUSINESSCODE,
			PFF_FEETYP,
			PFF_AMTVOL,
			PFF_CHANNELTYPE,
			PFF_RATE,
			PFF_MINDISCOUNT
		FROM PB_FUND_FEE
		   WHERE PFF_FUNDCODE=IN_FUNDCODE AND 
		         PFF_CHANNELTYPE='2'
		ORDER BY PFF_AMTVOL;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK;
	END;
	
		
	OPEN OUT_CUR_FUNDFEE;
	
	SET OUT_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_YSKQUERY(
	IN  IN_FUNDCODE   VARCHAR(6),
	IN  IN_FEETYP     CHAR(1),
	OUT OUT_RET_CODE  CHARACTER(5),
	OUT OUT_OFFDAYS   CHAR(2),
	OUT OUT_MINRDMAMT DECIMAL(16,2)
)
READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鍩洪噾璧庡洖浜ゆ槗鎵€闇€瑕佺殑浜ゅ壊鏃ユ湡鍜屾渶浣庤祹鍥炰唤棰?-- 杈撳叆鍙傛暟锛?--	IN_FUNDCODE:  鍩洪噾浠ｇ爜
--	IN_FEETYP  :  鍩洪噾浠ｇ爜

-- 杈撳嚭鍙傛暟锛?-- 	OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝9500涓哄嚭閿?璁块棶瀛樺偍杩囩▼鍑洪敊
-- 	OUT_OFFDAYS  锛氫氦鍓叉棩
-- 	OUT_MINRDMAMT锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
-- 鍒涘缓浜猴細LAN_XB
-- 鍒涘缓鏃ユ湡 锛?2010.10.20
------------------------------------------------------------------------
BEGIN
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	SELECT PFI_MINRDMVOL
	INTO   OUT_MINRDMAMT
	FROM   PB_FUNDINFO
	WHERE  PFI_FUNDCODE = IN_FUNDCODE
	AND    PFI_FEETYP   = IN_FEETYP
	FETCH FIRST 1 ROWS ONLY;
	
	-- 鐢变簬鏀惰垂鏂瑰紡琛ㄧず鏂规硶涓嶄竴锛屽熀閲戝悗鍙拌姹備笉鏍规嵁鏀惰垂鏂瑰紡鏌ユ壘
	SELECT PFY_OFFDAYS
		INTO   OUT_OFFDAYS
		FROM   PB_FUND_YSK
	WHERE  PFY_FUNDCODE = IN_FUNDCODE
	AND    PFY_BUSINESSCODE = '124'
	FETCH FIRST 1 ROWS ONLY;
	
	
	SET OUT_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_YSK_ADD(
	IN IN_STR_LIST CLOB, 
	OUT OUT_RET_CODE      CHARACTER(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鍩洪噾璧庡洖浜ゆ槗鎵€闇€瑕佺殑浜ゅ壊鏃ユ湡鍜屾渶浣庤祹鍥炰唤棰?-- 杈撳叆鍙傛暟锛?-- IN_FUNDCODE       CHAR(6)      ,  -- 鍩洪噾浠ｇ爜
-- IN_FEETYP         CHAR(1)      ,  -- 鏀惰垂妯″紡
-- IN_BUSINESSCODE   CHAR(3)      ,  -- 涓氬姟浠ｇ爜
-- IN_OFFDAYS        CHAR(2)      ,  -- 浜ゅ壊鏃ユ湡

-- 杈撳嚭鍙傛暟锛?-- 	OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝9500涓哄嚭閿?璁块棶瀛樺偍杩囩▼鍑洪敊
-- 鍒涘缓浜猴細lan_xb	
-- 鍒涘缓鏃ユ湡 锛?2010.10.20
------------------------------------------------------------------------
BEGIN
	
	-- 澹版槑鍙橀噺
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_ACCOUNT VARCHAR(20) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	
	DECLARE V_FUNDCODE      VARCHAR(6);
	DECLARE V_FEETYP        VARCHAR(1);
	DECLARE V_BUSINESSCODE  VARCHAR(3);
	DECLARE V_OFFDAYS       VARCHAR(2);
	DECLARE V_INSERT_FLAG   CHAR(1);
	
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		SET V_INSERT_FLAG = '1';
	END;
	
	SET OUT_RET_CODE = '00000';
	
	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_ACCOUNT = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FEETYP = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_BUSINESSCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_OFFDAYS = V_CURRENT_ACCOUNT;
	
		IF V_INSERT_FLAG = '0' THEN
			INSERT INTO PB_FUND_YSK(
				PFY_FUNDCODE,
				PFY_FEETYP,
				PFY_BUSINESSCODE,
				PFY_OFFDAYS
			)VALUES(
				V_FUNDCODE,
				V_FEETYP,
				V_BUSINESSCODE,
				V_OFFDAYS
			);
		END IF;
	
	END WHILE; 
	
	COMMIT;
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_FEE_ADD(
	IN IN_STR_LIST CLOB,
	OUT OUT_RET_CODE      CHARACTER(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鍩洪噾璧庡洖浜ゆ槗鎵€闇€瑕佺殑浜ゅ壊鏃ユ湡鍜屾渶浣庤祹鍥炰唤棰?-- 杈撳叆鍙傛暟锛?-- IN_FUNDCODE		  CHAR(6) 	    ,  -- 鍩洪噾浠ｇ爜
-- IN_BUSINESSCODE    CHAR(3) 	    ,  -- 涓氬姟浠ｇ爜 :璁よ喘 020 鐢宠喘 022
-- IN_FEETYP	      CHAR(1) 	    ,  -- 鍓嶅悗鏀惰垂鏍囧織: 0:鍓嶆敹璐? 1:鍚庢敹璐?
-- IN_AMTVOL          DECIMAL(16,2) ,  -- 閲戦鏁伴噺
-- IN_CHANNELTYPE     CHAR(1)       ,  -- 娓犻亾鏍囧織
-- IN_RATE            DECIMAL(5,4)  ,  -- 璐圭巼
-- IN_MINDISCOUNT     DECIMAL(5,4)  ,  -- 鏈€浣庝唬閿€鎵嬬画璐规姌鎵ｇ巼

-- 杈撳嚭鍙傛暟锛?-- 	OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝9500涓哄嚭閿?璁块棶瀛樺偍杩囩▼鍑洪敊
-- 鍒涘缓浜猴細lan_xb	
-- 鍒涘缓鏃ユ湡 锛?2010.10.20
------------------------------------------------------------------------
BEGIN
	-- 澹版槑鍙橀噺
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_ACCOUNT VARCHAR(50) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	
	DECLARE V_FUNDCODE       VARCHAR(6);
	DECLARE V_BUSINESSCODE   VARCHAR(3);
	DECLARE V_FEETYP      VARCHAR(1);
	DECLARE V_AMNTVOL        DECIMAL(16,2);
	DECLARE V_CHANNELTYPE    VARCHAR(1);
	DECLARE V_RATE           DECIMAL(5,4);
	DECLARE V_MINDISCOUNT    DECIMAL(5,4);
	DECLARE V_INSERT_FLAG   CHAR(1);
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		SET V_INSERT_FLAG = '1';
	END;
	
	SET OUT_RET_CODE = '00000';
	
	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_ACCOUNT = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_BUSINESSCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FEETYP = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_AMNTVOL = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_CHANNELTYPE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_RATE = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(5,4));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_MINDISCOUNT = CAST(V_CURRENT_ACCOUNT AS DECIMAL(5,4));
		
		IF V_INSERT_FLAG = '0' THEN
		INSERT INTO PB_FUND_FEE(
			PFF_FUNDCODE,
			PFF_BUSINESSCODE,
			PFF_FEETYP,
			PFF_AMTVOL,
			PFF_CHANNELTYPE,
			PFF_RATE,
			PFF_MINDISCOUNT
		)VALUES(
			V_FUNDCODE,
			V_BUSINESSCODE,
			V_FEETYP,
			V_AMNTVOL,
			V_CHANNELTYPE,
			V_RATE,
			V_MINDISCOUNT
		);
		END IF;
	END WHILE; 
	
	COMMIT;
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_FUNDPAR_FORSH(
	IN IN_UPDDATE			VARCHAR(8),
	IN IN_REGCODE			VARCHAR(6),
	IN IN_MNGCODE			VARCHAR(6),
	IN IN_FUNDCODE			VARCHAR(6),
	IN IN_STARTTIM		    VARCHAR(6),
	IN IN_ENDTIM			VARCHAR(6),
	IN IN_FLAG				CHAR(1),
	IN IN_TRANPAR			VARCHAR(20),
	IN IN_TRANTYP			CHAR(1),
	IN IN_MINSUBAMT			DECIMAL(16,2),
	IN IN_FEETYP			CHAR(1),
	IN IN_MAXSUBAMT         DECIMAL(16,2),
	IN IN_QRFLAG            CHAR(1),
	IN IN_AUTOTRADFLAG      CHAR(1),
	OUT OUT_RET_CODE	    VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娣诲姞寮€甯備俊鎭紞鍩洪噾鍙傛暟淇℃伅,涓鸿嚜鍔ㄨ繍琛岀殑shell鑴氭湰娣诲姞
-- 杈撳叆鍙傛暟锛?-- IN_UPDDATE		锛?鏇存柊鏃ユ湡
-- IN_REGCODE	    锛?娉ㄥ唽鏈烘瀯浠ｇ爜
-- IN_MNGCODE		锛氱悊璐㈢粡鐞嗕唬鐮?-- IN_FUNDCODE		锛氬熀閲戜唬鐮?-- IN_STARTTIM		锛氫氦鏄撳紑濮嬫椂闂?-- IN_ENDTIM		锛?浜ゆ槗缁撴潫鏃堕棿
-- IN_FLAG	    锛?瀹氭湡鐢宠喘鏍囧織
-- IN_TRANPAR		锛氬熀閲戜氦鏄撳弬鏁?-- IN_TRANTYP		锛氳浆鎵樼鏂瑰紡
-- IN_MINSUBAMT		锛氬畾鏈熷畾棰濈敵璐噾棰濅笅闄?-- IN_FEETYP		锛氭敹璐规柟寮?-- IN_QRFLAG		锛氬揩閫熻祹鍥炴爣蹇?  0-涓嶅紑閫? 1-寮€閫歍+0  2-寮€閫歍+1

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--00000锛氭甯?--30429锛氭洿鏂板熀閲戝弬鏁颁俊鎭〃澶辫触

-- 鏈€鍚庝慨鏀逛汉 锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.26
------------------------------------------------------------------------
BEGIN
    DECLARE V_MNGCODE		VARCHAR(6);
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30429';
		ROLLBACK ;
	END;
    
    IF length(rtrim(IN_MNGCODE)) = 2 THEN
        SET V_MNGCODE = CONCAT('2',rtrim(IN_MNGCODE));
    ELSE
        SET V_MNGCODE = CONCAT('2',SUBSTR(IN_MNGCODE,2,2));
    END IF;
    
    -- 娣诲姞鍩洪噾杞崲淇℃伅	
	INSERT INTO PB_FUNDPAR
	(
		PFP_UPDDATE,
		PFP_REGCODE,
		PFP_MNGCODE,
		PFP_FUNDCODE,
		PFP_STARTTIM,
		PFP_ENDTIM,
		PFP_FLAG,
		PFP_TRANPAR,
		PFP_TRANTYP,
		PFP_MINSUBAMT,
		PFP_FEETYP,
		PFP_MAXSUBAMT,
		PFP_FUNDMNGCODE,
		PFP_QRFLAG,
		PFP_AUTOTRADEFLAG
	)
	VALUES
	(
		IN_UPDDATE,
		IN_REGCODE,
		V_MNGCODE,
		IN_FUNDCODE,
		IN_STARTTIM,
		IN_ENDTIM,
		IN_FLAG,
		IN_TRANPAR,
		IN_TRANTYP,
		IN_MINSUBAMT,
		IN_FEETYP,
		IN_MAXSUBAMT,
		IN_MNGCODE,
		IN_QRFLAG,
		IN_AUTOTRADFLAG
	);
	COMMIT;

	SET OUT_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_FASTYSK_QRY(
	IN  IN_FUNDCODE			VARCHAR(160),
	OUT OUT_RET_CODE	    VARCHAR(5)
)
READS SQL DATA 
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁浼犲叆闆嗗悎鏌ヨ蹇€熻祹鍥炲埌甯愭棩
-- 杈撳叆鍙傛暟锛?-- IN_FUNDCODE		锛?鍩洪噾浠ｇ爜锛屽涓熀閲戜唬鐮佷箣闂翠娇鐢▅鍒嗗壊
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
-- 00000锛氭甯?-- 缁撴灉闆嗭細
-- 鍩洪噾浠ｇ爜涓庡埌甯愭棩瀵瑰簲鍏崇郴


-- 鏈€鍚庝慨鏀逛汉 锛歭an_xb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.04.25
------------------------------------------------------------------------
BEGIN

	DECLARE	OUT_CUR_FUNDPAR CURSOR WITH RETURN FOR
	SELECT
		PFP_FUNDCODE,
		PFP_QRFLAG
	FROM 
	    PB_FUNDPAR
	WHERE 
		LOCATE(PFP_FUNDCODE,IN_FUNDCODE) > 0;
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
	END;
	
		
	OPEN OUT_CUR_FUNDPAR;
	
	SET OUT_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_GET_ORDER(
	IN	IN_TYPE				CHAR(1),	--鏌ヨ绫诲瀷0-鏂板彂鍩洪噾锛?-缁勫悎鍩洪噾锛?-鐑攢鍩洪噾锛孉-鎵€鏈?	OUT OUT_RET_CODE	    VARCHAR(5)
)
READS SQL DATA 
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鑾峰彇鎺掑簭淇℃伅

-- 杈撳叆鍙傛暟锛欼N_TYPE		鏌ヨ绫诲瀷0-鏂板彂鍩洪噾锛?-缁勫悎鍩洪噾锛?-鐑攢鍩洪噾锛孉-鎵€鏈?-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CUR_ORDER: 缁撴灉闆?
-- 鏈€鍚庝慨鏀逛汉 锛?yinlei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.04.15
------------------------------------------------------------------------
BEGIN
	DECLARE V_SQL VARCHAR(600);
	DECLARE	OUT_CUR_ORDER CURSOR WITH RETURN FOR SQLSTATMENT;
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
	END;
	SET V_SQL = 'SELECT PFDR_FUNDCODE, PFDR_SEQNO, PFDR_FUNDTYPE, PFDR_FUNDNAME, PFDR_SETDATE FROM PB_FUNDORDER';
	IF IN_TYPE <> 'A' THEN
		SET V_SQL = V_SQL || ' WHERE PFDR_FUNDTYPE = ''' || IN_TYPE || '''';
	END IF;
	PREPARE SQLSTATMENT FROM V_SQL;
	--杩斿洖缁撴灉闆?	OPEN OUT_CUR_ORDER;
	SET OUT_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_GET_COMBILE(
	OUT OUT_RET_CODE	    VARCHAR(5)
)
READS SQL DATA 
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鑾峰彇鎺掑簭淇℃伅

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CUR_COMBILE: 缁撴灉闆?
-- 鏈€鍚庝慨鏀逛汉 锛?yinlei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.04.15
------------------------------------------------------------------------
BEGIN
	DECLARE	OUT_CUR_COMBILE CURSOR WITH RETURN FOR
		SELECT PFC_COMCODE, PFC_COMNAME,PFC_COMCHT,PFC_MINAMT , PFDR_SEQNO
		FROM PB_FUNDCOM 
		LEFT JOIN PB_FUNDORDER ON PFC_COMCODE = PFDR_FUNDCODE AND PFDR_FUNDTYPE = '1' 
		WHERE PFC_ONCEOPENFLAG <> '1'
		ORDER BY PFDR_SEQNO ASC;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	OPEN OUT_CUR_COMBILE;
	SET OUT_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_HOT_FUND_LIST
 (
  OUT OUT_RET_CODE VARCHAR(5)
 ) 

DYNAMIC RESULT SETS 1

  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-鏌ヨ鐑攢鍩洪噾

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE 锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?5000涓烘煡璇㈠嚭閿?00000涓烘甯?-- OUT_NEW_LST 锛氱粨鏋滈泦

-- 淇敼浜?  yinlei
-- 淇敼鏃ユ湡: 2011.04.28
------------------------------------------------------------------------
BEGIN	
	DECLARE	OUT_NEW_LST	CURSOR WITH	RETURN FOR (
		SELECT CODE, NAME, PFI_STATUS, PFI_UPDDATE, PFI_FEERATE, PFI_FEETYP, PFM_FUNDTYP, PFM_STARTDDATE, PFM_ENDDDATE, PFDR_SEQNO
		FROM(
		SELECT
			PFI_FUNDCODE CODE,
			PFI_FUNDNAME NAME,
			PFI_STATUS,
			PFI_UPDDATE,
			PFI_FEERATE,
			PFI_FEETYP,
			PFM_FUNDTYP,
			PFM_STARTDDATE,
			PFM_ENDDDATE
		from PB_FUNDINFO LEFT JOIN PB_FUNDMSG ON PFI_FUNDCODE = PFM_FUNDCODE
		) temp
		LEFT JOIN PB_FUNDORDER ON CODE = PFDR_FUNDCODE AND PFDR_FUNDTYPE = '2' ORDER BY PFDR_SEQNO ASC);
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	--杩斿洖缁撴灉鍊?	OPEN OUT_NEW_LST;

	SET OUT_RET_CODE = '00000';
       
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE DELETE_OLD_FUND_ORDER
(
	IN IN_FUND_FLAG 		CHAR(1),
	OUT OUT_RET_CODE	VARCHAR(5)
)
	LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁鍦ㄦ帓搴忕殑鍩洪噾绫诲瀷鍒犻櫎瀵瑰簲鐨勫熀閲戞帓搴忚褰?-- 杈撳叆鍙傛暟锛欶UND_FLAG 鍩洪噾绫诲瀷 0-鏂板彂鍩洪噾锛?1-钀ュ吇缁勫悎鍩洪噾锛?-鐑攢鍩洪噾

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝95000涓哄紓甯?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.li.xiang
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.3.31

------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET OUT_RET_CODE = '95000';
			ROLLBACK;
		END;
	-- 鍒犻櫎
	DELETE FROM PB_FUNDORDER WHERE PFDR_FUNDTYPE = IN_FUND_FLAG;

	COMMIT;

	-- 瀛樺偍杩囩▼杩斿洖鐮?	SET OUT_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE ADD_NEW_FUND_ORDER(
	IN IN_FUND_FLAG CHAR(1),
	IN IN_STR_LIST VARCHAR(2000), 

	OUT OUT_RET_CODE CHARACTER(5)
)
	LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍩洪噾寮€甯傦細鍦ㄦ垚鍔熷垹闄ゆ帀鎺掑簭琛ㄤ腑鏌愮被鍨嬬殑鎺掑簭璁板綍鍚庯紝閲嶆柊鎻掑叆鏂扮殑鎺掑簭璁板綍銆?-- 杈撳叆鍙傛暟锛?涓?--	IN_FUND_FLAG          鍩洪噾绫诲瀷 0-鏂板彂鍩洪噾锛?1-钀ュ吇缁勫悎鍩洪噾锛?-鐑攢鍩洪噾
--	IN_STR_LIST         鍩洪噾淇℃伅涓?鍩洪噾浠ｇ爜|鍩洪噾鍚嶇О|搴忓彿#.......

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝95000涓哄嚭閿?鎻掑叆鍩洪噾鎺掑簭淇℃伅琛ㄥけ璐?

-- 鏈€鍚庝慨鏀逛汉锛欵CC.li.xiang
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.03.31
------------------------------------------------------------------------
BEGIN
	-- 澹版槑鍙橀噺
	DECLARE V_TEMP VARCHAR(2000) ;
	DECLARE V_CURRENT_LINE VARCHAR(100) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	
	DECLARE V_FUNDCODE VARCHAR(24);
	DECLARE V_FUNDNAME VARCHAR(40);
	DECLARE V_SEQNO VARCHAR(3);
	DECLARE V_DATETIME VARCHAR(14);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET OUT_RET_CODE = '95000';
			ROLLBACK;
		END;

	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	WHILE V_LENGTH>0 DO 
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_LINE = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_LINE,'|');
		SET V_FUNDCODE = SUBSTR( V_CURRENT_LINE, 1, V_POS-1 );
		SET V_CURRENT_LINE = SUBSTR( V_CURRENT_LINE, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_LINE,'|');
		SET V_FUNDNAME = SUBSTR( V_CURRENT_LINE, 1, V_POS-1 );
		SET V_CURRENT_LINE = SUBSTR( V_CURRENT_LINE, V_POS+1 );
		
		SET V_SEQNO = V_CURRENT_LINE;
		IF V_SEQNO IS NOT NULL AND V_SEQNO != '' THEN
			set V_SEQNO = LEFT(CHAR(DECIMAL(V_SEQNO,3)),3);
		ELSE
			set V_SEQNO = 'AAA';
		END IF;
		 

		INSERT INTO PB_FUNDORDER
		(
			PFDR_FUNDCODE,
			PFDR_FUNDNAME,
			PFDR_SEQNO,
			PFDR_FUNDTYPE,
			PFDR_SETDATE
		)
		VALUES
		(
			V_FUNDCODE,
			V_FUNDNAME,
			V_SEQNO,
			IN_FUND_FLAG,
			V_DATETIME
		);
	END WHILE; 
	COMMIT;

	-- 瀛樺偍杩囩▼杩斿洖鐮?	SET OUT_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_ORDER_LIST
 (
  OUT OUT_RET_CODE VARCHAR(5)
 ) 

DYNAMIC RESULT SETS 1

  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍐呯浣跨敤鏌ヨ鎵€鏈夊熀閲戝苟甯﹀嚭鎺掑簭搴忓彿

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE 锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?5000涓烘煡璇㈠嚭閿?00000涓烘甯?-- OUT_NEW_LST 锛氱粨鏋滈泦

-- 鍒涘缓浜?锛?lan_xb
-- 鍒涘缓鏃ユ湡 锛?2011.07.12
------------------------------------------------------------------------
BEGIN	
	DECLARE	OUT_NEW_LST	CURSOR WITH	RETURN FOR 
		SELECT
			PFI_FUNDCODE,
			PFI_FUNDNAME,
			PFDR_FUNDTYPE,
			PFDR_SEQNO
		FROM PB_FUNDINFO 
		LEFT JOIN PB_FUNDORDER ON PFI_FUNDCODE = PFDR_FUNDCODE 
		ORDER BY PFDR_SEQNO ASC;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	--杩斿洖缁撴灉鍊?	OPEN OUT_NEW_LST;

	SET OUT_RET_CODE = '00000';
       
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_AUTO_TRADE_FUND_QRY
(
  OUT OUT_RET_CODE VARCHAR(5)
) 

DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鏀寔蹇€熻祹鍥炵绾︾殑鍩洪噾淇℃伅

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE 锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?5000涓烘煡璇㈠嚭閿?00000涓烘甯?-- OUT_AUTOTRADE_LST 锛氱粨鏋滈泦

-- 鍒涘缓浜?锛?lan_xb
-- 鍒涘缓鏃ユ湡 锛?2011.07.27
------------------------------------------------------------------------
BEGIN	
	DECLARE	OUT_AUTOTRADE_LST CURSOR WITH RETURN FOR
	SELECT 
		PFI_FUNDCODE,
		PFI_FUNDNAME,
		PFI_FEETYP,
		PFC_CODE,
		PFC_NAME,
		PFI_RISKLVL
	FROM PB_FUNDINFO, PB_FUNDPAR, PB_FUNDCOR 
	WHERE 
		PFP_FUNDCODE = PFI_FUNDCODE AND 
		PFP_MNGCODE  = PFC_CODE AND 
		PFP_AUTOTRADEFLAG = '1'
	ORDER BY PFC_CODE,PFI_FUNDCODE;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	--杩斿洖缁撴灉鍊?	OPEN OUT_AUTOTRADE_LST;

	SET OUT_RET_CODE = '00000';
       
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_AVG_FUNDRATE
(
  OUT OUT_RET_CODE VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鎸夊叕鍙稿拰鍩洪噾绫诲瀷鍒嗙被璁＄畻鎵€鏈夊熀閲戝悇涓懆鏈熷唴鐨勫闀跨巼骞冲潎鍊?-- 渚涙棩缁堣剼鏈皟鐢?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE 锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?5000涓烘煡璇㈠嚭閿?00000涓烘甯?
-- 鍒涘缓浜?锛?lan_xb
-- 鍒涘缓鏃ユ湡 锛?2011.11.29
------------------------------------------------------------------------
BEGIN
  -- 寮傚父澶勭悊
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    SET OUT_RET_CODE = '95000';
    ROLLBACK;
  END;

  DELETE FROM PB_FUND_AVG;
  -- 缁熻鍚勪釜鍒嗙被鍜屽叕鍙哥殑骞冲潎鍊间俊鎭?  INSERT INTO
    PB_FUND_AVG(PFA_CODE,PFA_TYPE,PFA_W1NAVG,PFA_W4NAVG,PFA_W13NAVG,PFA_W26NAVG,PFA_W52NAVG,PFA_YTDAVG)
  SELECT 
    PFP_FUNDTYPE,
    '0',
    AVG(PFD_W1NAVG) ,        
    AVG(PFD_W4NAVG)   ,        
    AVG(PFD_W13NAVG)  ,        
    AVG(PFD_W26NAVG)  ,         
    AVG(PFD_W52NAVG)  ,          
    AVG(PFD_YTDAVG)     
  FROM 
    PB_FUND_DERNAV,PB_FUND_PROFILE
  WHERE
    PFD_FUNDCODE = PFP_FUNDCODE AND
    PFP_STYPE='FDO'
  GROUP BY
    PFP_FUNDTYPE
  UNION
  SELECT 
    PFP_COMPANYCODE,
    '1',
    AVG(PFD_W1NAVG) ,        
    AVG(PFD_W4NAVG)   ,        
    AVG(PFD_W13NAVG)  ,        
    AVG(PFD_W26NAVG)  ,         
    AVG(PFD_W52NAVG)  ,          
    AVG(PFD_YTDAVG)     
  FROM 
    PB_FUND_DERNAV,PB_FUND_PROFILE
  WHERE
    PFD_FUNDCODE = PFP_FUNDCODE AND
    PFP_STYPE='FDO'
  GROUP BY
    PFP_COMPANYCODE
  ;
  -- 閲嶇疆鎺掑悕鏁版嵁
   UPDATE PB_FUND_DERNAV
 	 SET
	    PFD_W1NAVGR   =  NULL,  
	    PFD_W4NAVGR   =  NULL,  
	    PFD_W13NAVGR  =  NULL, 
	    PFD_W26NAVGR  =  NULL, 
	    PFD_W52NAVGR  =  NULL, 
	    PFD_YTDAVGR   =  NULL, 
	    PFD_W1NAVGRC  =  NULL, 
	    PFD_W4NAVGRC  =  NULL, 
	    PFD_W13NAVGRC =  NULL,
	    PFD_W26NAVGRC =  NULL,
	    PFD_W52NAVGRC =  NULL,
	    PFD_YTDAVGRC  =  NULL
  ;
  -- 閲嶆柊璁＄畻鍚勪釜鍩洪噾鐨勬帓鍚?  MERGE INTO PB_FUND_DERNAV AS A
	USING( 
	  SELECT 
	  	PFD_FUNDCODE,
	    ROWNUMBER() OVER(PARTITION BY PFP_FUNDTYPE    ORDER BY COALESCE(PFD_W1NAVG ,-9999999) DESC) AS W1,  
	    ROWNUMBER() OVER(PARTITION BY PFP_FUNDTYPE    ORDER BY COALESCE(PFD_W4NAVG ,-9999999) DESC) AS W4,  
	    ROWNUMBER() OVER(PARTITION BY PFP_FUNDTYPE    ORDER BY COALESCE(PFD_W13NAVG,-9999999) DESC) AS W13, 
	    ROWNUMBER() OVER(PARTITION BY PFP_FUNDTYPE    ORDER BY COALESCE(PFD_W26NAVG,-9999999) DESC) AS W26, 
	    ROWNUMBER() OVER(PARTITION BY PFP_FUNDTYPE    ORDER BY COALESCE(PFD_W52NAVG,-9999999) DESC) AS W52, 
	    ROWNUMBER() OVER(PARTITION BY PFP_FUNDTYPE    ORDER BY COALESCE(PFD_YTDAVG ,-9999999) DESC) AS YTD,
	    ROWNUMBER() OVER(PARTITION BY PFP_COMPANYCODE ORDER BY COALESCE(PFD_W1NAVG ,-9999999) DESC) AS W1C,  
	    ROWNUMBER() OVER(PARTITION BY PFP_COMPANYCODE ORDER BY COALESCE(PFD_W4NAVG ,-9999999) DESC) AS W4C,  
	    ROWNUMBER() OVER(PARTITION BY PFP_COMPANYCODE ORDER BY COALESCE(PFD_W13NAVG,-9999999) DESC) AS W13C, 
	    ROWNUMBER() OVER(PARTITION BY PFP_COMPANYCODE ORDER BY COALESCE(PFD_W26NAVG,-9999999) DESC) AS W26C, 
	    ROWNUMBER() OVER(PARTITION BY PFP_COMPANYCODE ORDER BY COALESCE(PFD_W52NAVG,-9999999) DESC) AS W52C, 
	    ROWNUMBER() OVER(PARTITION BY PFP_COMPANYCODE ORDER BY COALESCE(PFD_YTDAVG ,-9999999) DESC) AS YTDC
	  FROM                                                                                          
	    PB_FUND_DERNAV 
	  LEFT JOIN
	    PB_FUND_PROFILE  ON PFD_FUNDCODE = PFP_FUNDCODE
	  WHERE
    	PFP_STYPE='FDO'
	)AS B
	ON A.PFD_FUNDCODE = B.PFD_FUNDCODE    
	WHEN MATCHED THEN
	 UPDATE
	 	 SET
		    PFD_W1NAVGR   =  W1,  
		    PFD_W4NAVGR   =  W4,  
		    PFD_W13NAVGR  =  W13, 
		    PFD_W26NAVGR  =  W26, 
		    PFD_W52NAVGR  =  W52, 
		    PFD_YTDAVGR   =  YTD, 
		    PFD_W1NAVGRC  =  W1C, 
		    PFD_W4NAVGRC  =  W4C, 
		    PFD_W13NAVGRC =  W13C,
		    PFD_W26NAVGRC =  W26C,
		    PFD_W52NAVGRC =  W52C,
		    PFD_YTDAVGRC  =  YTDC 
	;
  SET OUT_RET_CODE = '00000';
  	
  COMMIT;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUNDORDER_QUERY
(
        IN IN_QUERYTYPE     CHAR(1),
        IN IN_FUNDCODE      VARCHAR(8),
        IN IN_FUNDTYPE      VARCHAR(8),
        IN IN_CORPOR        CHAR(8),
        IN IN_ORDERTYPE     CHAR(1),
        OUT OUT_RET_CODE    VARCHAR(5)
)
DYNAMIC RESULT SETS 1
BEGIN
  
  -- 鍚庣鏀惰垂浠ｇ爜
  DECLARE V_SYMBOL VARCHAR(20);
  
  DECLARE OUT_TYPE_LST CURSOR WITH RETURN FOR
  SELECT 
      PFD_FUNDCODE,
      PFP_FUNDNAME,
      AVG_FIELD,
      ORDER_FIELD
  FROM(
      SELECT 
          PFD_FUNDCODE,
          PFP_FUNDNAME,
          CASE
             WHEN IN_ORDERTYPE='0' THEN PFD_YTDAVG
             WHEN IN_ORDERTYPE='1' THEN PFD_W4NAVG
             WHEN IN_ORDERTYPE='2' THEN PFD_W13NAVG
             WHEN IN_ORDERTYPE='3' THEN PFD_W26NAVG
             WHEN IN_ORDERTYPE='4' THEN PFD_W52NAVG
          END AS AVG_FIELD,
          CASE
             WHEN IN_ORDERTYPE='0' AND IN_QUERYTYPE='0' THEN PFD_YTDAVGR
             WHEN IN_ORDERTYPE='0' AND IN_QUERYTYPE='1' THEN PFD_YTDAVGRC
             WHEN IN_ORDERTYPE='1' AND IN_QUERYTYPE='0' THEN PFD_W4NAVGR
             WHEN IN_ORDERTYPE='1' AND IN_QUERYTYPE='1' THEN PFD_W4NAVGRC
             WHEN IN_ORDERTYPE='2' AND IN_QUERYTYPE='0' THEN PFD_W13NAVGR
             WHEN IN_ORDERTYPE='2' AND IN_QUERYTYPE='1' THEN PFD_W13NAVGRC
             WHEN IN_ORDERTYPE='3' AND IN_QUERYTYPE='0' THEN PFD_W26NAVGR
             WHEN IN_ORDERTYPE='3' AND IN_QUERYTYPE='1' THEN PFD_W26NAVGRC
             WHEN IN_ORDERTYPE='4' AND IN_QUERYTYPE='0' THEN PFD_W52NAVGR
             WHEN IN_ORDERTYPE='4' AND IN_QUERYTYPE='1' THEN PFD_W52NAVGRC
          END AS ORDER_FIELD 
      FROM 
         PB_FUND_DERNAV
      LEFT JOIN
        PB_FUND_PROFILE
      ON 
        PFD_FUNDCODE = PFP_FUNDCODE
      WHERE
         -- 鏌ヨ鍚屽叕鍙告垨鍚岀被鍨嬫帓鍚嶇涓€鐨勫熀閲?         (((IN_QUERYTYPE='0' AND PFP_FUNDTYPE = IN_FUNDTYPE) OR (IN_QUERYTYPE='1' AND PFP_COMPANYCODE = IN_CORPOR))  AND PFP_STYPE='FDO')
         -- 鏌ヨ鎸囧畾鍩洪噾鐨勬帓鍚嶄俊鎭?         OR PFD_FUNDCODE  = IN_FUNDCODE OR PFD_FUNDCODE = V_SYMBOL
 ) AS T1
 WHERE
  ORDER_FIELD = 1 OR  PFD_FUNDCODE  = IN_FUNDCODE OR PFD_FUNDCODE = V_SYMBOL;
   
 -- 鑾峰彇鍚庣鏀惰垂浠ｇ爜瀵瑰簲鐨勫競鍦轰唬鐮? SELECT PFS_FUNDCODE INTO V_SYMBOL FROM PB_FUND_SYMBOL WHERE PFS_SYMBOL=IN_FUNDCODE AND PFS_SYMBOL_TYPE='04';
 
 OPEN OUT_TYPE_LST;
   
 SET OUT_RET_CODE = '00000';
       
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUNDAVG_QUERY
(
	IN IN_FUNDCODE      VARCHAR(8),
	IN IN_ORDERTYPE     CHAR(1),
	OUT OUT_RET_CODE    VARCHAR(5),
	OUT OUT_FUNDTYPE    VARCHAR(8),
	OUT OUT_COMPANYCODE VARCHAR(8),
	OUT OUT_COMPANYNAME VARCHAR(50),
	OUT OUT_W4NAVG      DECIMAL(9,2),       
	OUT OUT_W4NAVGR     INTEGER,
	OUT OUT_W4NAVGRC    INTEGER,       
	OUT OUT_W13NAVG     DECIMAL(9,2),       
	OUT OUT_W13NAVGR    INTEGER,       
	OUT OUT_W13NAVGRC   INTEGER,
	OUT OUT_W26NAVG     DECIMAL(9,2),       
	OUT OUT_W26NAVGR    INTEGER,       
	OUT OUT_W26NAVGRC   INTEGER,
	OUT OUT_W52NAVG     DECIMAL(9,2),       
	OUT OUT_W52NAVGR    INTEGER,       
	OUT OUT_W52NAVGRC   INTEGER,    
	OUT OUT_YTDAVG      DECIMAL(9,2),       
	OUT OUT_YTDAVGR     INTEGER,
	OUT OUT_YTDAVGRC    INTEGER,
	OUT OUT_TYPECOUNT   INT,
	OUT OUT_CORPORCOUNT INT,
	OUT OUT_STYPE       CHAR(3)
)
DYNAMIC RESULT SETS 3
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ涓庢寚瀹氬熀閲戝悓绫诲瀷鍜屽悓鍏徃澧為暱鐜囨帓鍚嶅墠10鐨勫熀閲?-- 骞舵寜鐓ф寚瀹氬瓧娈垫帓搴?-- 杈撳叆鍙傛暟
-- IN_FUNDCODE:鍩洪噾浠ｇ爜
-- IN_ORDERTYPE:
--        0-浠婂勾浠ユ潵
--	      1-杩戜竴涓湀
--	      2-杩戜笁涓湀
--	      3-杩戝叚涓湀
--	      4-杩戜竴骞?-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE 锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?5000涓烘煡璇㈠嚭閿?00000涓烘甯?-- OUT_FUNDTYPE : 鍩洪噾绫诲瀷
-- OUT_COMPANYCODE:鎵€灞炲叕鍙镐唬鐮?-- OUT_COMPANYNAME:鎵€灞炲叕鍙稿悕绉?-- 缁撴灉闆?-- OUT_TYPE_LST 锛氱浉鍚屽熀閲戝垎绫荤殑TOP10
-- OUT_COMPANY_LST:鐩稿悓鍏徃鐨凾OP10
-- OUT_AVG_LST  : 鐩稿悓鍏徃鎴栫浉鍚屽垎绫荤殑骞冲潎鍊间俊鎭?
-- 鍒涘缓浜?锛?lan_xb
-- 鍒涘缓鏃ユ湡 锛?2011.07.27
------------------------------------------------------------------------
BEGIN
	-- 鍚庣鏀惰垂浠ｇ爜
	DECLARE V_SYMBOL VARCHAR(20);
	
	DECLARE	OUT_TYPE_LST CURSOR WITH RETURN FOR
	SELECT 
	  PFD_FUNDCODE    , 
	  PFP_FUNDNAME    ,          -- 鍩洪噾鍚嶇О
	  PFP_FUNDTYPE    ,          -- 鍩洪噾绫诲瀷
	  PFP_COMPANYCODE ,          -- 鏈烘瀯浠ｇ爜
	  PFP_COMPANYNAME ,          -- 鏈烘瀯鍚嶇О  
	  PFD_W4NAVG   ,       
	  PFD_W4NAVGR  ,       
	  PFD_W13NAVG  ,       
	  PFD_W13NAVGR ,       
	  PFD_W26NAVG  ,       
	  PFD_W26NAVGR ,       
	  PFD_W52NAVG  ,       
	  PFD_W52NAVGR ,       
	  PFD_YTDAVG   ,       
	  PFD_YTDAVGR  ,
	  PQS_PROTYPE  ,
	  PCC_FUNDCODE
	FROM
	(
		SELECT 
		  PFD_FUNDCODE    , 
		  PFP_FUNDNAME    ,          -- 鍩洪噾鍚嶇О
		  PFP_FUNDTYPE    ,          -- 鍩洪噾绫诲瀷
		  PFP_COMPANYCODE ,          -- 鏈烘瀯浠ｇ爜
		  PFP_COMPANYNAME ,          -- 鏈烘瀯鍚嶇О  
		  PFD_W4NAVG   ,       
		  PFD_W4NAVGR  ,       
		  PFD_W13NAVG  ,       
		  PFD_W13NAVGR ,       
		  PFD_W26NAVG  ,       
		  PFD_W26NAVGR ,       
		  PFD_W52NAVG  ,       
		  PFD_W52NAVGR ,       
		  PFD_YTDAVG   ,       
		  PFD_YTDAVGR  ,
		  CASE
		   WHEN IN_ORDERTYPE='0' THEN COALESCE(PFD_YTDAVGR,999999999)
		   WHEN IN_ORDERTYPE='1' THEN COALESCE(PFD_W4NAVGR,999999999)
		   WHEN IN_ORDERTYPE='2' THEN COALESCE(PFD_W13NAVGR,999999999)
		   WHEN IN_ORDERTYPE='3' THEN COALESCE(PFD_W26NAVGR,999999999)
		   WHEN IN_ORDERTYPE='4' THEN COALESCE(PFD_W52NAVGR,999999999)
		  END AS ORDER_FIELD
		FROM 
		  PB_FUND_DERNAV,PB_FUND_PROFILE
		WHERE
		  PFD_FUNDCODE = PFP_FUNDCODE AND
    	  PFP_STYPE='FDO' AND
		  PFP_FUNDTYPE = OUT_FUNDTYPE 
		ORDER BY
		  ORDER_FIELD ASC
		FETCH FIRST 10 ROWS ONLY
	) AS T1 LEFT JOIN PB_FUNDQS ON PFD_FUNDCODE=PQS_FUNDCODE AND PQS_PROTYPE='1'
	LEFT JOIN PB_CHGCOD ON PCC_TARGETCODE=PFD_FUNDCODE AND PCC_FUNDCODE = IN_FUNDCODE AND PCC_TARGETCODE=PQS_FUNDCODE
	ORDER BY ORDER_FIELD;
	
	DECLARE	OUT_COMPANY_LST CURSOR WITH RETURN FOR
	SELECT 
	  PFD_FUNDCODE    , 
	  PFP_FUNDNAME    ,          -- 鍩洪噾鍚嶇О
	  PFP_FUNDTYPE    ,          -- 鍩洪噾绫诲瀷
	  PFP_COMPANYCODE ,          -- 鏈烘瀯浠ｇ爜
	  PFP_COMPANYNAME ,          -- 鏈烘瀯鍚嶇О  
	  PFD_W4NAVG   ,       
	  PFD_W4NAVGRC ,       
	  PFD_W13NAVG  ,       
	  PFD_W13NAVGRC,       
	  PFD_W26NAVG  ,       
	  PFD_W26NAVGRC,       
	  PFD_W52NAVG  ,       
	  PFD_W52NAVGRC,       
	  PFD_YTDAVG   ,       
	  PFD_YTDAVGRC ,
	  PQS_PROTYPE  ,
	  PCC_FUNDCODE
	FROM
	(
		SELECT 
		  PFD_FUNDCODE    , 
		  PFP_FUNDNAME    ,          -- 鍩洪噾鍚嶇О
		  PFP_FUNDTYPE    ,          -- 鍩洪噾绫诲瀷
		  PFP_COMPANYCODE ,          -- 鏈烘瀯浠ｇ爜
		  PFP_COMPANYNAME ,          -- 鏈烘瀯鍚嶇О  
		  PFD_W4NAVG    ,       
		  PFD_W4NAVGRC  ,       
		  PFD_W13NAVG   ,       
		  PFD_W13NAVGRC ,       
		  PFD_W26NAVG   ,       
		  PFD_W26NAVGRC ,       
		  PFD_W52NAVG   ,       
		  PFD_W52NAVGRC ,       
		  PFD_YTDAVG    ,       
		  PFD_YTDAVGRC  ,
		  CASE
		   WHEN IN_ORDERTYPE='0' THEN COALESCE(PFD_YTDAVGRC,999999999)
		   WHEN IN_ORDERTYPE='1' THEN COALESCE(PFD_W4NAVGRC,999999999)
		   WHEN IN_ORDERTYPE='2' THEN COALESCE(PFD_W13NAVGRC,999999999)
		   WHEN IN_ORDERTYPE='3' THEN COALESCE(PFD_W26NAVGRC,999999999)
		   WHEN IN_ORDERTYPE='4' THEN COALESCE(PFD_W52NAVGRC,999999999)
		  END AS ORDER_FIELD
		FROM 
		  PB_FUND_DERNAV,PB_FUND_PROFILE
		WHERE
		  PFD_FUNDCODE = PFP_FUNDCODE AND
    	  PFP_STYPE='FDO' AND
		  PFP_COMPANYCODE = OUT_COMPANYCODE 
		ORDER BY ORDER_FIELD ASC
		FETCH FIRST 10 ROWS ONLY
	) AS T1 LEFT JOIN PB_FUNDQS ON PFD_FUNDCODE=PQS_FUNDCODE AND PQS_PROTYPE='1'
	LEFT JOIN PB_CHGCOD ON PCC_TARGETCODE=PFD_FUNDCODE AND PCC_FUNDCODE = IN_FUNDCODE AND PCC_TARGETCODE=PQS_FUNDCODE
	ORDER BY ORDER_FIELD;
	
	-- 鑾峰彇鍚岀被鍨嬨€佸悓鍏徃鐨勫潎鍊间俊鎭?	DECLARE	OUT_AVG_LST CURSOR WITH RETURN FOR
	SELECT 
	  PFA_TYPE       ,          -- 0-鎸夌被鍨?1-鎸夊叕鍙?	  PFA_CODE       ,          -- 0鏃讹紝浠ｈ〃鍩洪噾绫诲瀷浠ｇ爜 1鏃朵唬琛ㄥ叕鍙镐唬鐮?	  PFA_W1NAVG     ,          -- 鏈€杩?鍛ㄥ闀跨巼       
	  PFA_W4NAVG     ,          -- 鏈€杩?鍛ㄥ闀跨巼       
	  PFA_W13NAVG    ,          -- 鏈€杩?3鍛ㄥ闀跨巼      
	  PFA_W26NAVG    ,          -- 鏈€杩?6鍛ㄥ闀跨巼      
	  PFA_W52NAVG    ,          -- 鏈€杩?2鍛ㄥ闀跨巼      
	  PFA_YTDAVG                -- 骞村垵鑷充粖鍑€鍊煎闀跨巼  
	FROM 
	   PB_FUND_AVG
	WHERE
	   (PFA_TYPE='0' AND PFA_CODE = OUT_FUNDTYPE) OR
	   (PFA_TYPE='1' AND PFA_CODE = OUT_COMPANYCODE)
	;
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
	END;
	
	-- 鑾峰彇鍚庣鏀惰垂浠ｇ爜瀵瑰簲鐨勫競鍦轰唬鐮?    SELECT PFS_FUNDCODE INTO V_SYMBOL FROM PB_FUND_SYMBOL WHERE PFS_SYMBOL=IN_FUNDCODE AND PFS_SYMBOL_TYPE='04';
	
	-- 鑾峰彇鐢ㄦ埛閫夋嫨鍩洪噾鐨勬帓鍚嶄俊鎭?	SELECT 
		PFP_FUNDTYPE,
		PFP_COMPANYCODE,
		PFP_COMPANYNAME,
		PFD_W4NAVG   ,       
		PFD_W4NAVGR  ,
		PFD_W4NAVGRC ,        
		PFD_W13NAVG  ,       
		PFD_W13NAVGR ,       
		PFD_W13NAVGRC, 
		PFD_W26NAVG  ,       
		PFD_W26NAVGR ,       
		PFD_W26NAVGRC,       
		PFD_W52NAVG  ,       
		PFD_W52NAVGR ,       
		PFD_W52NAVGRC,       
		PFD_YTDAVG   ,       
		PFD_YTDAVGR  ,
		PFD_YTDAVGRC ,
		PFP_STYPE 
    INTO 
    	OUT_FUNDTYPE,
    	OUT_COMPANYCODE,
    	OUT_COMPANYNAME,
		OUT_W4NAVG   ,       
		OUT_W4NAVGR  ,
		OUT_W4NAVGRC ,       
		OUT_W13NAVG  ,       
		OUT_W13NAVGR ,
		OUT_W13NAVGRC,       
		OUT_W26NAVG  ,       
		OUT_W26NAVGR ,
		OUT_W26NAVGRC,       
		OUT_W52NAVG  ,       
		OUT_W52NAVGR , 
		OUT_W52NAVGRC,      
		OUT_YTDAVG   ,       
		OUT_YTDAVGR  ,
		OUT_YTDAVGRC ,
		OUT_STYPE
    FROM 
    	PB_FUND_PROFILE
    LEFT JOIN
        PB_FUND_DERNAV ON PFD_FUNDCODE = PFP_FUNDCODE
	WHERE
    	PFP_FUNDCODE = IN_FUNDCODE OR PFP_FUNDCODE = V_SYMBOL
    FETCH FIRST 1 ROWS ONLY;
    
    -- 璐у竵寮忓熀閲戞姤閿?    IF OUT_FUNDTYPE = '100401' THEN
    	SET  OUT_RET_CODE = '90454';
    ELSEIF OUT_FUNDTYPE IS NOT NULL THEN
		OPEN OUT_TYPE_LST;
		OPEN OUT_COMPANY_LST;
		OPEN OUT_AVG_LST;
		SELECT COUNT(1) INTO OUT_TYPECOUNT FROM PB_FUND_PROFILE WHERE PFP_FUNDTYPE = OUT_FUNDTYPE;
		SELECT COUNT(1) INTO OUT_CORPORCOUNT FROM PB_FUND_PROFILE WHERE PFP_COMPANYCODE = OUT_COMPANYCODE;
		SET  OUT_RET_CODE = '00000';
    ELSE
    	SET  OUT_RET_CODE = '90453';
    END IF;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUNDCURRENCY_QUERY
(
	IN  IN_FUNDCODE        VARCHAR(8),
	IN  IN_DATE            CHAR(8),
	IN  IN_ORDERTYPE       CHAR(1),
	OUT OUT_RET_CODE       CHAR(5),
	OUT OUT_DATE           CHAR(8),
	OUT OUT_AVGRATE        DECIMAL(9,4),
	OUT OUT_AVGWEEK        DECIMAL(9,4)
)
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ璐у竵鍩洪噾鍑€鍊兼帓鍚?-- 杈撳叆鍙傛暟锛?-- IN_FUNDCODE: 鍩洪噾浠ｇ爜
-- IN_DATE: 鏌ヨ鏃ユ湡锛圷YYYMMDD锛?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 淇敼浜?锛?ECC.lan_xb
-- 淇敼鏃ユ湡 锛?2011.12.28

------------------------------------------------------------------------
BEGIN
	-- 鍚庣鏀惰垂浠ｇ爜
	DECLARE V_SYMBOL VARCHAR(20);
	
	-- 杩斿洖缁撴灉闆?	DECLARE	OUT_CURRENCY_LST CURSOR WITH RETURN FOR
	SELECT
	    PFN_FUNDCODE,
		PFP_FUNDNAME,
		PFN_RATE,
		RATE_ORDER,
		PFN_WEEKRATE,
		WEEK_ORDER
	FROM
		(
			SELECT  
				CASE WHEN PFN_FUNDCODE = V_SYMBOL THEN IN_FUNDCODE ELSE  PFN_FUNDCODE END AS  PFN_FUNDCODE,
				PFP_FUNDNAME,
				PFN_RATE,
				ROWNUMBER() OVER(ORDER BY COALESCE(PFN_RATE,-99999999) DESC) AS RATE_ORDER,
				PFN_WEEKRATE,
				ROWNUMBER() OVER(ORDER BY COALESCE(PFN_WEEKRATE,-99999999) DESC) AS WEEK_ORDER
			FROM 
			    PB_FUND_NAVCUR
			LEFT JOIN
			    PB_FUND_PROFILE
			ON
			    PFP_FUNDCODE=PFN_FUNDCODE AND PFP_FUNDTYPE='100401'
			WHERE
			    PFN_PUBDATE = OUT_DATE AND PFP_STYPE='FDO'
		) AS T1
	WHERE 
	  (IN_ORDERTYPE<>'0' AND T1.RATE_ORDER<11) 
	  OR (IN_ORDERTYPE='0' AND T1.WEEK_ORDER<11) 
	  OR T1.PFN_FUNDCODE=IN_FUNDCODE OR T1.PFN_FUNDCODE=V_SYMBOL
	ORDER BY
	    CASE WHEN IN_ORDERTYPE = '0' THEN
			WEEK_ORDER
		ELSE
			RATE_ORDER
		END
	;
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
	END;
	
	-- 鑾峰彇鍚庣鏀惰垂浠ｇ爜瀵瑰簲鐨勫競鍦轰唬鐮?    SELECT PFS_FUNDCODE INTO V_SYMBOL FROM PB_FUND_SYMBOL WHERE PFS_SYMBOL=IN_FUNDCODE AND PFS_SYMBOL_TYPE='04';
    
    IF IN_DATE IS NULL OR IN_DATE = '' THEN
    	SELECT MAX(PFN_PUBDATE) INTO OUT_DATE FROM PB_FUND_NAVCUR WHERE PFN_FUNDCODE = IN_FUNDCODE OR PFN_FUNDCODE = V_SYMBOL;
    ELSE
    	SET OUT_DATE = IN_DATE;
    END IF;
    
    IF OUT_DATE IS NULL OR OUT_DATE='' THEN
    	SET OUT_RET_CODE = '90454';
    ELSE
	    OPEN OUT_CURRENCY_LST;
	    
	    SELECT
	        AVG(PFN_RATE),
	        AVG(PFN_WEEKRATE)
	    INTO
	        OUT_AVGRATE,
			OUT_AVGWEEK
		FROM
			PB_FUND_NAVCUR
		LEFT JOIN
		    PB_FUND_PROFILE
		ON
		    PFP_FUNDCODE=PFN_FUNDCODE AND PFP_FUNDTYPE='100401'
		WHERE
		    PFN_PUBDATE = OUT_DATE AND PFP_STYPE='FDO';
		
	    SET OUT_RET_CODE = '00000';
    END IF;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_CALSS(
	IN IN_STR_LIST CLOB, 
	OUT OUT_RET_CODE	    	VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娣诲姞寮€甯備俊鎭紞鐭湡鐞嗚储鍩洪噾鏍囪
-- 杈撳叆鍙傛暟锛?-- IN_STR_LIST  : 澶氭潯璁板綍锛屾瘡涓褰曚腑闂翠互#鍙峰垎鍓诧紝姣忎釜瀛楁涔嬮棿鐢▅鍒嗗壊

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--00000锛氭甯?--30428锛氭洿鏂扮煭鏈熺悊璐㈠熀閲戣〃澶辫触

-- 鏈€鍚庝慨鏀逛汉 锛?wangwenhai
-- 鏈€鍚庝慨鏀规棩鏈?锛?2012.11.27
------------------------------------------------------------------------
BEGIN
	-- 澹版槑鍙橀噺
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_ACCOUNT VARCHAR(50) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	DECLARE V_INSERT_FLAG   CHAR(1);
	
	DECLARE V_FUNDCODE		VARCHAR(6);
	DECLARE V_SHARECLASS	CHAR(1);
	DECLARE V_CURRENCYTYPE	CHAR(3);
	DECLARE V_CURRFLAG		CHAR(1);
	DECLARE V_FUNDCLASS		CHAR(2);
	DECLARE V_RESV1         VARCHAR(10);
	DECLARE V_GETCIF		CHAR(1);
    -- 寮傚父澶勭悊
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30428';
		SET V_INSERT_FLAG = '1';
	END;
	
	SET OUT_RET_CODE = '00000';
	
	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_ACCOUNT = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_SHARECLASS = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_CURRENCYTYPE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_CURRFLAG = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDCLASS = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_RESV1 = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		--鏈€鍚庝竴涓瓧娈碉紝涓嶅啀鎴彇
		SET V_GETCIF = V_CURRENT_ACCOUNT;
		
		IF V_INSERT_FLAG = '0' THEN
		    -- 娣诲姞鐭湡鐞嗚储鍩洪噾绫诲埆
			INSERT INTO PB_FUNDCLASS
			(
				PFC_FUNDCODE,
				PFC_SHARECLASS,
				PFC_CURRENCYTYPE,
				PFC_CURRFLAG,
				PFC_FUNDCLASS,
				PFC_RESV1,
				PFC_GETCIF
			)
			VALUES
			(
			   V_FUNDCODE,		
	           V_SHARECLASS	,
	           V_CURRENCYTYPE,	
	           V_CURRFLAG	,	
	           V_FUNDCLASS,	
	           V_RESV1,
	           V_GETCIF
			);
		END IF;
	END WHILE; 
	COMMIT;
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_CLASS_LIST ( 
   IN IN_FUNDCODE VARCHAR(10),	
   OUT PROC_RET_CODE VARCHAR(5)
)
READS SQL DATA
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
--鐭湡鐞嗚储鍩洪噾
-- 杈撳叆鍙傛暟锛?-- IN_FUNDCODE    鍩洪噾浠ｇ爜
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歐angWenhai
-- 鏈€鍚庝慨鏀规棩鏈?锛?012.11.29
------------------------------------------------------------------------
BEGIN

   	 DECLARE CUR_FUNDLIST1 CURSOR WITH	RETURN FOR
	  SELECT PFC_FUNDCODE,PFC_SHARECLASS,PFC_CURRENCYTYPE,PFC_CURRFLAG,PFC_FUNDCLASS,PFC_RESV1 FROM  PB_FUNDCLASS
	  WHERE PFC_FUNDCLASS='7'
     ORDER BY PFC_FUNDCODE ASC ;	 
     
     DECLARE CUR_FUNDLIST2 CURSOR WITH	RETURN FOR
	  SELECT PFC_FUNDCODE,PFC_SHARECLASS,PFC_CURRENCYTYPE,PFC_CURRFLAG,PFC_FUNDCLASS,PFC_RESV1 FROM  PB_FUNDCLASS
	  WHERE PFC_FUNDCLASS='7' AND   PFC_FUNDCODE=IN_FUNDCODE
      ORDER BY PFC_FUNDCODE ASC ;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
   -- 鎵撳紑娓告爣
  IF (IN_FUNDCODE = '-1') THEN
		OPEN CUR_FUNDLIST1;
	ELSE
		OPEN CUR_FUNDLIST2;
  END IF;
	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ADD_PROMPT(
	IN IN_STR_LIST CLOB, 
	OUT OUT_RET_CODE	    	VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娣诲姞寮€甯備俊鎭紞鐭湡鐞嗚储鍩洪噾鏍囪
-- 杈撳叆鍙傛暟锛?-- IN_STR_LIST  : 澶氭潯璁板綍锛屾瘡涓褰曚腑闂翠互#鍙峰垎鍓诧紝姣忎釜瀛楁涔嬮棿鐢▅鍒嗗壊

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--00000锛氭甯?--30428锛氳揣甯佸熀閲戝疄鏃舵彁鐜?琛ㄥけ璐?
-- 鏈€鍚庝慨鏀逛汉 锛?wangwenhai
-- 鏈€鍚庝慨鏀规棩鏈?锛?2013.2.19
------------------------------------------------------------------------
BEGIN
	-- 澹版槑鍙橀噺
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_ACCOUNT VARCHAR(70) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	DECLARE V_INSERT_FLAG   CHAR(1);

	DECLARE V_REGCODE        CHAR(2);
    DECLARE V_FUNDCODE       CHAR(6);
    DECLARE V_SHARECLASS     CHAR(1);
    DECLARE V_AMNTVOL        DECIMAL(16,2);
    DECLARE V_CHANNELTYPE    CHAR(1);
    DECLARE V_BNSCODE        CHAR(3);
    DECLARE V_CUSTGRADE      CHAR(1);
    DECLARE V_CHARGEFLAG     CHAR(1);
    DECLARE V_PERFEE         DECIMAL(10,2);
    DECLARE V_RATE           DECIMAL(9,8);
    DECLARE V_DISRATE        DECIMAL(9,8);     
    -- 寮傚父澶勭悊
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30428';
		SET V_INSERT_FLAG = '1';
	END;
	
	SET OUT_RET_CODE = '00000';
	
	SET V_TEMP = IN_STR_LIST;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_ACCOUNT = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_LENGTH = LENGTH(V_TEMP);
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_REGCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_FUNDCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_SHARECLASS = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_AMNTVOL = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_CHANNELTYPE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_BNSCODE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_CUSTGRADE = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_CHARGEFLAG = SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 );
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_PERFEE = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(10,2));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		SET V_POS = POSSTR(V_CURRENT_ACCOUNT,'|');
		SET V_RATE = CAST(SUBSTR( V_CURRENT_ACCOUNT, 1, V_POS-1 ) AS DECIMAL(9,8));
		SET V_CURRENT_ACCOUNT = SUBSTR( V_CURRENT_ACCOUNT, V_POS+1 );
		
		--鏈€鍚庝竴涓瓧娈碉紝涓嶅啀鎴彇
		SET V_DISRATE = CAST  (V_CURRENT_ACCOUNT  AS DECIMAL(9,8));
		
		IF V_INSERT_FLAG = '0' THEN
		    -- 澧炲姞璐у竵鍩洪噾瀹炴椂鎻愮幇 
			INSERT INTO PB_FUND_PROMPT
			(
				PFP_REGCODE ,
    			PFP_FUNDCODE,  
   				PFP_SHARECLASS , 
    			PFP_AMNTVOL, 
    			PFP_CHANNELTYPE, 
    			PFP_BNSCODE, 
    			PFP_CUSTGRADE,
    			PFP_CHARGEFLAG,
    			PFP_PERFEE,
    			PFP_RATE,
    			PFP_DISRATE 
			)
			VALUES
			(
			    V_REGCODE ,
    			V_FUNDCODE,  
   				V_SHARECLASS , 
    			V_AMNTVOL, 
    			V_CHANNELTYPE, 
    			V_BNSCODE, 
    			V_CUSTGRADE,
    			V_CHARGEFLAG,
    			V_PERFEE,
    			V_RATE,
    			V_DISRATE 	
			);
		END IF;
	END WHILE; 
	COMMIT;
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_QRY_PROMPT_LIST ( 
   IN IN_FUNDCODE VARCHAR(10),
   IN IN_BNSCODE VARCHAR(3),
   IN IN_AMNTVOL DECIMAL(16,2),
   IN IN_CHANNETTYPE VARCHAR(2),
   IN IN_ISAVL VARCHAR(2),
   OUT PROC_RET_CODE VARCHAR(5)
)
READS SQL DATA
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 璐у竵鍩洪噾
-- 杈撳叆鍙傛暟锛?-- IN_FUNDCODE       鍩洪噾浠ｇ爜
-- IN_BNSCODE        涓氬姟浠ｇ爜
-- IN_AMNTVOL        瀹㈡埛杈撳叆浠介
-- IN_CHANNETTYPE    娓犻亾鏍囪
-- IN_ISAVL          鏄惁鏍规嵁浠介鏌ヨ0:鍚?1:鏄?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歐angWenhai
-- 鏈€鍚庝慨鏀规棩鏈?锛?013.2.20
------------------------------------------------------------------------
BEGIN

   	 DECLARE CUR_FUNDLIST1 CURSOR WITH	RETURN FOR
   	 SELECT  PFP_REGCODE,PFP_FUNDCODE,PFP_SHARECLASS,PFP_AMNTVOL,PFP_CHARGEFLAG,PFP_PERFEE,PFP_RATE,PFP_DISRATE FROM PB_FUND_PROMPT
   	 WHERE PFP_FUNDCODE=IN_FUNDCODE AND PFP_BNSCODE=IN_BNSCODE AND PFP_CHANNELTYPE=IN_CHANNETTYPE AND PFP_AMNTVOL>IN_AMNTVOL
     ORDER BY PFP_AMNTVOL ASC  FETCH FIRST ROW ONLY;
   	 
     DECLARE CUR_FUNDLIST2 CURSOR WITH	RETURN FOR
   	 SELECT  PFP_REGCODE,PFP_FUNDCODE,PFP_SHARECLASS,PFP_AMNTVOL,PFP_CHARGEFLAG,PFP_PERFEE,PFP_RATE,PFP_DISRATE FROM PB_FUND_PROMPT
   	 WHERE PFP_FUNDCODE=IN_FUNDCODE AND PFP_BNSCODE=IN_BNSCODE AND PFP_CHANNELTYPE=IN_CHANNETTYPE 
     ORDER BY PFP_AMNTVOL ASC;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
   -- 鎵撳紑娓告爣
	  IF (IN_ISAVL = '1') THEN
		OPEN CUR_FUNDLIST1;
	ELSE
		OPEN CUR_FUNDLIST2;
  END IF;

	SET PROC_RET_CODE = '00000';
END

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FAMLIY_ACC_FETCH_QUERY(
	IN  IN_CSTNO    CHAR(10),
	OUT OUT_RET_CODE    CHAR(5)
)
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鏌愪釜瀹㈡埛鐧昏鐨勫搴处鎴?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO: 瀹㈡埛鍙?

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜?lan_xb
-- 鍒涘缓鏃ユ湡锛?011-1-10
------------------------------------------------------------------------
BEGIN
	DECLARE  OUT_ACC_CUR CURSOR WITH RETURN FOR
	SELECT 
		PFA_ACCNO      ,       -- 瀹跺涵鎴愬憳鍗″彿
		PFA_HLDNAME    ,       -- 瀹跺涵鎴愬憳鍗℃寔鍗′汉鎴峰悕
		PFA_MOBILE     ,       -- 瀹跺涵鎴愬憳鍗℃墜鏈?		PFA_BANKTYPE   ,       -- 瀹跺涵鎴愬憳鍗″紑鎴烽摱琛?琛屽埆
		PFA_BANKNAME   ,       -- 瀹跺涵鎴愬憳鍗″紑鎴烽摱琛?鍚嶇О
		PFA_SELF       ,       -- 鏈汉鍗℃爣蹇?        0-鏈鏈汉鍗?1-鏈浠栦汉鍗?2-浠栬鍗?		PFA_CARDTYP    ,       -- 瀹跺涵鎴愬憳鍗″崱绫诲瀷   0-鍊熻鍗?1-鍑嗚捶璁板崱 2-淇＄敤鍗?4-淇＄敤鍗″噯璐疯鍗?		PFA_QRYSTT     ,       -- 鏌ヨ寮€閫氭爣蹇?      0-鏈紑閫?1-宸插紑閫?		PFA_STT        ,       -- 鐘舵€?0-姝ｅ父 1-浠庡搴湀涓墧闄? 
        PFA_ALIAS      ,       -- 璐︽埛鍒悕
        PFA_MAINCARD           -- 瀹跺涵涓昏处鎴锋爣蹇?1 - 涓昏处鎴?鍏朵粬-闈炰富甯愭埛
	FROM
		PB_FAMLIY_ACC
	WHERE
		PFA_CSTNO = IN_CSTNO;
		
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
	END;
	
	OPEN OUT_ACC_CUR;
	
	SET OUT_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FAMLIY_ACC_ADD(
	IN IN_CSTNO      CHAR(10)    ,
	IN IN_ACCNO      VARCHAR(32) ,
	IN IN_HLDNAME    VARCHAR(60) ,        
	IN IN_MOBILE     CHAR(11)    ,        
	IN IN_BANKTYPE   CHAR(3)     ,        
	IN IN_BANKNAME   VARCHAR(60) ,        
	IN IN_SELF       CHAR(1)     ,        
	IN IN_CARDTYP    CHAR(1)     ,        
	IN IN_QRYSTT     CHAR(1)     , 
	IN IN_ALIAS      VARCHAR(60) ,      
	OUT OUT_RET_CODE    CHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐧昏瀹跺涵璐︽埛
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO     -- 缃戦摱瀹㈡埛鍙?-- IN_ACCNO     -- 瀹跺涵鎴愬憳鍗″彿
-- IN_HLDNAME   -- 瀹跺涵鎴愬憳鍗℃寔鍗′汉鎴峰悕
-- IN_MOBILE    -- 瀹跺涵鎴愬憳鍗℃墜鏈?-- IN_BANKTYPE  -- 瀹跺涵鎴愬憳鍗″紑鎴烽摱琛?琛屽埆
-- IN_BANKNAME  -- 瀹跺涵鎴愬憳鍗″紑鎴烽摱琛?鍚嶇О
-- IN_SELF      -- 鏈汉鍗℃爣蹇?        0-鏈鏈汉鍗?1-鏈浠栦汉鍗?2-浠栬鍗?-- IN_CARDTYP   -- 瀹跺涵鎴愬憳鍗″崱绫诲瀷   0-鍊熻鍗?1-鍑嗚捶璁板崱 2-淇＄敤鍗?4-淇＄敤鍗″噯璐疯鍗?-- IN_QRYSTT    -- 鏌ヨ寮€閫氭爣蹇?      0-鏈紑閫?1-宸插紑閫?

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜?lan_xb
-- 鍒涘缓鏃ユ湡锛?011-1-10
------------------------------------------------------------------------
BEGIN
	DECLARE V_COUNT INT;
	--杩濆弽鍞竴绾︽潫
	DECLARE EXIT HANDLER FOR SQLSTATE '23505'
	BEGIN
		SET OUT_RET_CODE = '91900';
		ROLLBACK;
	END;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	SELECT COUNT(1) INTO V_COUNT
	FROM PB_FAMLIY_ACC WHERE PFA_CSTNO = IN_CSTNO;
	
	IF V_COUNT>99 THEN
		SET OUT_RET_CODE='91909';
		RETURN;
	END IF;
	
	INSERT INTO PB_FAMLIY_ACC(
		PFA_CSTNO   ,
		PFA_ACCNO   ,
		PFA_HLDNAME ,
		PFA_MOBILE  ,
		PFA_BANKTYPE,
		PFA_BANKNAME,
		PFA_SELF    ,
		PFA_CARDTYP ,
		PFA_QRYSTT  ,
		PFA_STT     ,
		PFA_ALIAS   
	)VALUES(
		IN_CSTNO   ,
		IN_ACCNO   ,
		IN_HLDNAME ,
		IN_MOBILE  ,
		IN_BANKTYPE,
		IN_BANKNAME,
		IN_SELF    ,
		IN_CARDTYP ,
		IN_QRYSTT  ,
		'0'        ,
		IN_ALIAS
	);
	
	COMMIT;
	SET OUT_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FAMLIY_ACCSTT_MODIFY(
	IN IN_CSTNO      CHAR(10)    ,
	IN IN_ACCNO      VARCHAR(32) ,
	IN IN_HLDNAME    VARCHAR(60) ,        
	IN IN_QRYSTT     CHAR(1)     ,        
	OUT OUT_RET_CODE    CHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐧昏瀹跺涵璐︽埛
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO     -- 缃戦摱瀹㈡埛鍙?-- IN_ACCNO     -- 瀹跺涵鎴愬憳鍗″彿
-- IN_HLDNAME   -- 瀹跺涵鎴愬憳鍗℃寔鍗′汉鎴峰悕
-- IN_QRYSTT    -- 鏌ヨ寮€閫氭爣蹇?      0-鏈紑閫?1-宸插紑閫?

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜?lan_xb
-- 鍒涘缓鏃ユ湡锛?011-1-10
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	UPDATE PB_FAMLIY_ACC SET
		-- 鐧昏璐︽埛鏃跺鍔犺仈鏈烘埛鍚嶆牎楠岋紝姝ゅ涓嶅啀鏇存柊鎴峰悕
		-- PFA_HLDNAME = IN_HLDNAME,
		PFA_QRYSTT  = IN_QRYSTT
	WHERE
		PFA_CSTNO   = IN_CSTNO AND
		PFA_ACCNO   =IN_ACCNO;
	
	COMMIT;
	SET OUT_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FAMLIY_ACCALIAS_MODIFY(
	IN IN_CSTNO         CHAR(10)    ,
	IN IN_ACCNO         VARCHAR(32) ,
	IN IN_ALIAS         VARCHAR(60) ,        
	OUT OUT_RET_CODE    CHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 淇敼瀹跺涵璐︽埛鍗″埆鍚?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO     -- 缃戦摱瀹㈡埛鍙?-- IN_ACCNO     -- 瀹跺涵鎴愬憳鍗″彿
-- IN_ALIAS     -- 鍒悕


-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜?lan_xb
-- 鍒涘缓鏃ユ湡锛?011-1-10
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	UPDATE PB_FAMLIY_ACC SET
		PFA_ALIAS  = IN_ALIAS
	WHERE
		PFA_CSTNO   = IN_CSTNO AND
		PFA_ACCNO   =IN_ACCNO;
	
	COMMIT;
	SET OUT_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FAMLIY_ACC_BAT_DEL(
	IN IN_CSTNO      CHAR(10)    ,
	IN IN_ACCNO      VARCHAR(32) ,
	OUT OUT_RET_CODE    CHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐧昏瀹跺涵璐︽埛
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO     -- 缃戦摱瀹㈡埛鍙?-- IN_ACCNO     -- 瀹跺涵鎴愬憳鍗″彿 

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜?lan_xb
-- 鍒涘缓鏃ユ湡锛?011-1-10
------------------------------------------------------------------------
BEGIN
	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	DELETE FROM PB_FAMLIY_ACC WHERE PFA_CSTNO = IN_CSTNO AND PFA_ACCNO = IN_ACCNO;
	
	COMMIT;
	SET OUT_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FAMLIY_CSTTYPE_FETCH(
	IN  IN_ACCNO      VARCHAR(32) ,
	OUT OUT_RET_CODE  CHAR(5)  ,
	OUT OUT_CSTTYPE   CHAR(1)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鑾峰彇琚櫥璁板崱缃戦摱瀹㈡埛绫诲瀷
-- 鍚屼竴寮犲崱涓嶈兘琚笉鍚屾敞鍐岀被鍨嬬殑瀹㈡埛鍚屾椂涓嬫寕
-- 杈撳叆鍙傛暟锛?-- IN_ACCNO     -- 瀹跺涵鎴愬憳鍗″彿 

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?91901 鏈紑閫氱綉閾剁敤鎴?-- OUT_CSTNO锛氳鐧昏鍗＄綉閾跺鎴峰彿
-- OUT_CSTTYPE锛氳鐧昏鍗＄綉閾跺鎴风被鍨?
-- 鍒涘缓浜?lan_xb
-- 鍒涘缓鏃ユ湡锛?011-1-10
------------------------------------------------------------------------
BEGIN
	DECLARE V_CUSTNO VARCHAR(13);
	DECLARE V_CSTNO  VARCHAR(10);

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
	END;
	
	SELECT PAI_CSTNO INTO V_CSTNO FROM PB_ACCINF WHERE PAI_CARDNO = IN_ACCNO FETCH FIRST 1 ROWS ONLY;
	
	-- 濡傛灉鏈壘鍒伴渶瑕佸埌娌冨痉瀛愬笎鎴疯〃鏌ユ壘
	IF V_CSTNO IS NULL THEN
		SELECT PAW_CUSTNO INTO V_CUSTNO 
		FROM PB_WODE_ACCINF WHERE PAW_SUBACC = IN_ACCNO AND PAW_WODECARD IS NOT NULL  FETCH FIRST 1 ROWS ONLY;
		
		SELECT PIF_CSTTYP INTO OUT_CSTTYPE FROM PB_CSTINF WHERE PIF_RESERVE3 = V_CUSTNO FETCH FIRST 1 ROWS ONLY;
	ELSE
		SELECT PIF_CSTTYP INTO OUT_CSTTYPE FROM PB_CSTINF WHERE PIF_CSTNO = V_CSTNO FETCH FIRST 1 ROWS ONLY;
	END IF;
	
	
	IF OUT_CSTTYPE IS NULL THEN
		SET OUT_RET_CODE = '91901';
		RETURN;
	END IF;
	
	SET OUT_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FINANCING_BOOK_CHART(
	IN    IN_CSTNO        CHAR(10),
	IN    IN_STARTDATE    CHAR(8),
	IN    IN_ENDDATE      CHAR(8),
	IN    IN_FLAG         CHAR(1),
	IN    IN_CLASS        CHAR(4),
	IN    IN_TYPE         CHAR(5),
	OUT   OUT_RET_CODE    CHAR(5)
)
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 瀹跺涵鐞嗚储-鏀舵敮鏄庣粏鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO        缃戦摱瀹㈡埛鍙?-- IN_STARTDATE    寮€濮嬫棩鏈?-- IN_ENDDATE      缁撴潫鏃ユ湡
-- IN_FLAG         鏀舵敮鏍囧織  0-鏀跺叆 1-鏀嚭
-- IN_CLASS        鏀舵敮绫诲瀷
-- IN_TYPE         鏀舵敮绉嶇被

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

-- 鍒涘缓浜?lan_xb
-- 鍒涘缓鏃ユ湡锛?011-1-10
------------------------------------------------------------------------
BEGIN
	
	DECLARE  OUT_ACC_CUR CURSOR WITH RETURN FOR
	SELECT 
		PFI_FLAG    ,
		SUM(PFI_AMT),
		PFI_CLASS   ,
		PFI_TYPE    ,
		PFI_DATE
	FROM (
		SELECT 
			PFI_FLAG    ,
			PFI_AMT     ,
			PFI_CLASS   ,
			PFI_TYPE    ,
			SUBSTR(PFI_DATE,1,6) AS PFI_DATE
		FROM
			PB_FINACING_INF
		WHERE
			PFI_CSTNO = IN_CSTNO
			AND (IN_STARTDATE IS NULL OR IN_STARTDATE = '' OR PFI_DATE >= IN_STARTDATE)
			AND (IN_ENDDATE   IS NULL OR IN_ENDDATE = ''   OR PFI_DATE <= IN_ENDDATE)
			AND (IN_FLAG      IS NULL OR IN_FLAG = ''      OR PFI_FLAG  = IN_FLAG)
			AND (IN_CLASS     IS NULL OR IN_CLASS = ''     OR PFI_CLASS = IN_CLASS)
			AND (IN_TYPE      IS NULL OR IN_TYPE = ''      OR PFI_TYPE  = IN_TYPE)
	) AS T1
	GROUP BY 
		PFI_CLASS,PFI_DATE,PFI_TYPE,PFI_FLAG;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
	END;
	
	OPEN OUT_ACC_CUR;
	
	SET OUT_RET_CODE = '00000';
		
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FINANCING_BOOK_QRY(
	IN    IN_CSTNO        CHAR(10),
	IN    IN_PAGENO       INT,
	IN    IN_PAGESIZE     INT,
	OUT   OUT_RET_CODE    CHAR(5),
	OUT   OUT_TOTALSIZE   INT
)
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 瀹跺涵鐞嗚储-鏀舵敮鏄庣粏鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO        缃戦摱瀹㈡埛鍙?

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

-- 鍒涘缓浜?lan_xb
-- 鍒涘缓鏃ユ湡锛?011-1-10
------------------------------------------------------------------------
BEGIN
	
	
		
	DECLARE  OUT_PAGE_CUR CURSOR WITH RETURN FOR
	SELECT * FROM (
		SELECT 
			PFI_SEQ     ,
			PFI_CSTNO   ,
			PFI_DATE    , 
			PFI_AMT     ,
			PFI_FLAG    ,
			PFI_CLASS   ,
			PFI_TYPE    ,
			PFI_BOOKDATE,
			PFI_REMARK  ,
			ROW_NUMBER() OVER(ORDER BY PFI_DATE DESC)   ROWNUM
		FROM
			PB_FINACING_INF
		WHERE
			PFI_CSTNO = IN_CSTNO
	) AS T1 WHERE ROWNUM >  (IN_PAGENO-1)*IN_PAGESIZE
	  AND   ROWNUM <= IN_PAGENO*IN_PAGESIZE;


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
	END;
	
	
	OPEN OUT_PAGE_CUR;
	
	SELECT COUNT(1) 
	INTO OUT_TOTALSIZE
	FROM PB_FINACING_INF WHERE PFI_CSTNO = IN_CSTNO;
	
	
	SET OUT_RET_CODE = '00000';
		
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FINANCING_BOOK_MOD(
	IN    IN_CSTNO        CHAR(10),
	IN    IN_DATE         CHAR(8),
	IN    IN_AMT          DECIMAL(16,2),
	IN    IN_FLAG         CHAR(1),
	IN    IN_CLASS        CHAR(4),
	IN    IN_TYPE         CHAR(5),
	IN    IN_REMARK       VARCHAR(80),
	IN    IN_TRANTYPE     CHAR(1),
	IN    IN_SEQNO        VARCHAR(400),
	OUT   OUT_RET_CODE    CHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 瀹跺涵鐞嗚储-鏀舵敮鏄庣粏澧炲垹鏀?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO        缃戦摱瀹㈡埛鍙?-- IN_DATE         鏀舵敮鏃ユ湡
-- IN_AMT          鏀舵敮閲戦
-- IN_FLAG         鏀舵敮鏍囧織
-- IN_CLASS        鏀舵敮绫诲瀷
-- IN_TYPE         鏀舵敮绉嶇被
-- IN_REMARK       澶囨敞
-- IN_TRANTYPE     浜ゆ槗绫诲瀷 0-鏂板 1-淇敼 2-鍒犻櫎
-- IN_SEQNO        缂栧彿


-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

-- 鍒涘缓浜?lan_xb
-- 鍒涘缓鏃ユ湡锛?011-1-10
------------------------------------------------------------------------
BEGIN
	
	DECLARE V_BOOKDATE CHAR(8);
	DECLARE V_SEQNO    BIGINT;
	
	DECLARE V_TEMP VARCHAR(20);
	DECLARE V_POS INT;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	IF IN_TRANTYPE = '0' THEN
		-- 鍙栫郴缁熸棩鏈?		SET V_BOOKDATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		-- 鍙栫紪鍙?		SELECT NEXTVAL FOR PB_FINACING_KEY
		INTO V_SEQNO
		FROM SYSIBM.SYSDUMMY1;
		
		INSERT INTO PB_FINACING_INF(
			PFI_SEQ     ,
			PFI_CSTNO   ,
			PFI_DATE    , 
			PFI_AMT     ,
			PFI_FLAG    ,
			PFI_CLASS   ,
			PFI_TYPE    ,
			PFI_BOOKDATE,
			PFI_REMARK  
		)VALUES(
			V_BOOKDATE || LEFT(CHAR(V_SEQNO),12),
			IN_CSTNO    ,
			IN_DATE     ,
			IN_AMT      ,
			IN_FLAG     ,
			IN_CLASS    ,
			IN_TYPE     ,
			V_BOOKDATE  ,
			IN_REMARK   
		);
	ELSEIF IN_TRANTYPE = '1' THEN
		-- 鍙栫郴缁熸棩鏈?		SET V_BOOKDATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		
		UPDATE PB_FINACING_INF SET
			PFI_DATE      = IN_DATE,
			PFI_AMT       = IN_AMT,
			PFI_FLAG      = IN_FLAG,
			PFI_CLASS     = IN_CLASS,
			PFI_TYPE      = IN_TYPE,
			PFI_BOOKDATE  = V_BOOKDATE,
			PFI_REMARK    = IN_REMARK
		WHERE 
			PFI_CSTNO = IN_CSTNO AND
			PFI_SEQ   = IN_SEQNO;
	ELSE		
		SET V_POS=1;
		WHILE  V_POS <> 0  DO
			SET V_POS = POSSTR(IN_SEQNO,'#');
			IF V_POS = 0 THEN
			   SET V_TEMP = IN_SEQNO;
			ELSE 
			   SET V_TEMP = SUBSTR(IN_SEQNO,1,V_POS-1);
			   SET IN_SEQNO = SUBSTR(IN_SEQNO,V_POS+1);
			END IF;
			DELETE FROM PB_FINACING_INF 
				WHERE 
					  PFI_CSTNO = IN_CSTNO AND
					  PFI_SEQ   = V_TEMP;
		END WHILE;
	END IF;
	
	SET OUT_RET_CODE = '00000';
	COMMIT;
		
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FINANCING_BOOK_BAT(
	IN    IN_CSTNO        CHAR(10),
	IN    IN_BATSTR       CLOB,
	IN    IN_CHECKFLAG    CHAR(1),
	OUT   OUT_RET_CODE    CHAR(5),
	OUT   OUT_RESULT      VARCHAR(20)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 瀹跺涵鐞嗚储-鏀舵敮鏄庣粏澧炲垹鏀?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO        缃戦摱瀹㈡埛鍙?-- IN_BATSTR    


-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

-- 鍒涘缓浜?lan_xb
-- 鍒涘缓鏃ユ湡锛?011-10-19
------------------------------------------------------------------------
BEGIN
	DECLARE    V_CSTNO        CHAR(10);
	DECLARE    V_DATE         CHAR(8);
	DECLARE    V_AMT          DECIMAL(16,2);
	DECLARE    V_FLAG         CHAR(1);
	DECLARE    V_CLASS        CHAR(4);
	DECLARE    V_TYPE         CHAR(5);
	DECLARE    V_REMARK       VARCHAR(80);
	
	DECLARE    V_BOOKDATE     CHAR(8);
	DECLARE    V_SEQNO        BIGINT;
	
	DECLARE V_TEMP CLOB ;
	DECLARE V_CURRENT_RECORD VARCHAR(120) ;
	DECLARE V_POS INT;
	DECLARE V_LENGTH INT;
	DECLARE V_INSERT_FLAG   CHAR(1);

	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN
		SET V_INSERT_FLAG = '1';
	END;
	
	SET OUT_RESULT = '';
	
	SET V_TEMP = IN_BATSTR;
	
	SET V_LENGTH = LENGTH(V_TEMP);
	
	-- 鍙栫郴缁熸棩鏈?	SET V_BOOKDATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	
	WHILE V_LENGTH>0 DO 
		SET V_INSERT_FLAG = '0';
		SET V_POS = POSSTR(V_TEMP,'#');
		SET V_CURRENT_RECORD = SUBSTR( V_TEMP, 1, V_POS-1 );
		IF V_LENGTH > V_POS THEN
			SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
			SET V_LENGTH = LENGTH(V_TEMP);
		ELSE
			SET V_LENGTH = 0;
		END IF;
		
		SET V_POS  = POSSTR(V_CURRENT_RECORD,'|');
		SET V_DATE = SUBSTR( V_CURRENT_RECORD, 1, V_POS-1 );
		SET V_CURRENT_RECORD = SUBSTR( V_CURRENT_RECORD, V_POS+1 );
		
		SET V_POS  = POSSTR(V_CURRENT_RECORD,'|');
		SET V_AMT = CAST(SUBSTR( V_CURRENT_RECORD, 1, V_POS-1 ) AS DECIMAL(16,2));
		SET V_CURRENT_RECORD = SUBSTR( V_CURRENT_RECORD, V_POS+1 );
		
		SET V_POS  = POSSTR(V_CURRENT_RECORD,'|');
		SET V_FLAG = SUBSTR(V_CURRENT_RECORD, 1, V_POS-1 );
		SET V_CURRENT_RECORD = SUBSTR( V_CURRENT_RECORD, V_POS+1 );
		
		SET V_POS  = POSSTR(V_CURRENT_RECORD,'|');
		SET V_CLASS = SUBSTR(V_CURRENT_RECORD, 1, V_POS-1 );
		SET V_CURRENT_RECORD = SUBSTR( V_CURRENT_RECORD, V_POS+1 );
		
		SET V_POS  = POSSTR(V_CURRENT_RECORD,'|');
		SET V_TYPE = SUBSTR(V_CURRENT_RECORD, 1, V_POS-1 );
		SET V_CURRENT_RECORD = SUBSTR( V_CURRENT_RECORD, V_POS+1 );
		
		
		SET V_REMARK = V_CURRENT_RECORD;
		
		IF IN_CHECKFLAG = '1' THEN 
			IF EXISTS(
					SELECT 1 FROM PB_FINACING_INF 
					WHERE 
						PFI_CSTNO = IN_CSTNO AND  PFI_AMT = V_AMT
						AND PFI_FLAG=V_FLAG AND PFI_TYPE = V_TYPE
						AND PFI_DATE = V_DATE AND PFI_REMARK = V_REMARK) THEN
				SET V_INSERT_FLAG = '2';
			END IF;
		END IF;
		
		IF V_INSERT_FLAG = '0' THEN
			-- 鍙栫紪鍙?			SELECT NEXTVAL FOR PB_FINACING_KEY
			INTO V_SEQNO
			FROM SYSIBM.SYSDUMMY1;
	    	
	    	INSERT INTO PB_FINACING_INF(
				PFI_SEQ     ,
				PFI_CSTNO   ,
				PFI_DATE    , 
				PFI_AMT     ,
				PFI_FLAG    ,
				PFI_CLASS   ,
				PFI_TYPE    ,
				PFI_BOOKDATE,
				PFI_REMARK  
			)VALUES(
				V_BOOKDATE || LEFT(CHAR(V_SEQNO),12),
				IN_CSTNO    ,
				V_DATE     ,
				V_AMT      ,
				V_FLAG     ,
				V_CLASS    ,
				V_TYPE     ,
				V_BOOKDATE  ,
				V_REMARK   
			);
		END IF;
	
		SET OUT_RESULT = OUT_RESULT || V_INSERT_FLAG;
	END WHILE;
	
	COMMIT;
	
	SET OUT_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FAMLIY_SET_MAINACC(
	IN IN_CSTNO      CHAR(10)    ,
	IN IN_ACCNO      VARCHAR(32) ,
	IN IN_HLDNAME    VARCHAR(60) ,        
	IN IN_MOBILE     CHAR(11)    ,        
	IN IN_SELF       CHAR(1)     ,        
	IN IN_CARDTYP    CHAR(1)     ,        
	IN IN_ALIAS      VARCHAR(60) ,      
	OUT OUT_RET_CODE    CHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 璁剧疆瀹跺涵绠″涓昏处鎴?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO     -- 缃戦摱瀹㈡埛鍙?-- IN_ACCNO     -- 瀹跺涵鎴愬憳鍗″彿
-- IN_HLDNAME   -- 瀹跺涵鎴愬憳鍗℃寔鍗′汉鎴峰悕
-- IN_MOBILE    -- 瀹跺涵鎴愬憳鍗℃墜鏈?-- IN_SELF      -- 鏈汉鍗℃爣蹇?        0-鏈鏈汉鍗?1-鏈浠栦汉鍗?2-浠栬鍗?-- IN_CARDTYP   -- 瀹跺涵鎴愬憳鍗″崱绫诲瀷   0-鍊熻鍗?1-鍑嗚捶璁板崱 2-淇＄敤鍗?4-淇＄敤鍗″噯璐疯鍗?-- IN_ALIAS     -- 鍒悕


-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜?lan_xb
-- 鍒涘缓鏃ユ湡锛?011-1-10
------------------------------------------------------------------------
BEGIN
	DECLARE V_COUNT INT;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	-- 鍒犻櫎鍘熸湁涓昏处鎴疯褰?	DELETE FROM PB_FAMLIY_ACC WHERE PFA_CSTNO = IN_CSTNO AND PFA_MAINCARD='1';
	-- 璁剧疆鏂扮殑涓昏处鎴?	IF EXISTS(SELECT 1 FROM PB_FAMLIY_ACC WHERE PFA_CSTNO = IN_CSTNO AND PFA_ACCNO = IN_ACCNO) THEN
		UPDATE PB_FAMLIY_ACC
		SET
			PFA_MAINCARD = '1',
			PFA_STT      = '0'
		 WHERE 
		 	PFA_CSTNO = IN_CSTNO AND PFA_ACCNO = IN_ACCNO;
	ELSE
		INSERT INTO PB_FAMLIY_ACC(
			PFA_CSTNO   ,
			PFA_ACCNO   ,
			PFA_HLDNAME ,
			PFA_MOBILE  ,
			PFA_BANKTYPE,
			PFA_BANKNAME,
			PFA_SELF    ,
			PFA_CARDTYP ,
			PFA_QRYSTT  ,
			PFA_STT     ,
			PFA_ALIAS   ,
			PFA_MAINCARD
		)VALUES(
			IN_CSTNO   ,
			IN_ACCNO   ,
			IN_HLDNAME ,
			IN_MOBILE  ,
			'301',
			'浜ら€氶摱琛?,
			IN_SELF    ,
			IN_CARDTYP ,
			'1'  ,
			'0'        ,
			IN_ALIAS   ,
			'1'
		);
	END IF;
	
	COMMIT;
	SET OUT_RET_CODE = '00000';
END
DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GET_TIPORGINF_INFO(
    IN  IN_DEPARTNO VARCHAR(20),                               
	OUT PROC_RET_CODE CHAR(5)                                             
)                                                                       
------------------------------------------------------------------------
-- 鏌ヨ鎵€鏈夊緛鏀舵満鍏冲彿鍜屽緛鏀舵満鍏冲悕绉?                                    
                                                                        
-- 杈撳叆鍙傛暟锛?--DEPARTNOTEMP:寰佹敹鏈哄叧鍙风殑绗竴浣?                                                        
                                                                        
-- 杈撳嚭鍙傛暟锛?                                                          
-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?                          
-- CUR_INSR_PROD锛氭墍鏈夊緛鏀舵満鍏冲彿鍜屽緛鏀舵満鍏冲悕绉扮粨鏋滈泦                    
                                                                        
                                                                        
-- zhouwb                                                               
-- 鍒涘缓鏃ユ湡锛?012.06.29                                                 
------------------------------------------------------------------------
READS SQL DATA                                                          
RESULT SETS 1                                                           
BEGIN                                                                   
	DECLARE CUR_INSR_PROD CURSOR WITH RETURN TO CALLER FOR                
		SELECT PT_ORGCOD,PT_ORGNAM FROM PB_TIPORGINF WHERE substr(PT_ORGCOD,1,1) = IN_DEPARTNO  ORDER BY PT_ORGCOD WITH UR;     
		                                                                    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION                                 
	BEGIN                                                                 
		SET PROC_RET_CODE ='95000';                                         
	END;                                                                  
	                                                                      
	OPEN CUR_INSR_PROD;                                                   
	SET PROC_RET_CODE ='00000';  		                                      
END
DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_DEAL_FORCHN_UPDATE
(	

    IN  IN_CHNTYP     CHAR(1),
    IN  IN_TELLERNO   VARCHAR(20),
    IN  IN_TRNFLW   VARCHAR(20),
    IN  IN_STATUS   CHAR(2),
    OUT PROC_RET_CODE VARCHAR(5),
		OUT OUT_ANSINFO				VARCHAR(50)
) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁撹喘姹囩敵璇峰鐞嗚〃
-- 缁撹喘姹囩被鍨嬶細IN_CHNTYP
-- 鎿嶄綔鍛橈細IN_SHOWNUM
-- 鍒嗚鍙凤細IN_BRANCHNO

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_CHNINFO锛氱粨璐眹淇℃伅缁撴灉闆?-- 澶勭悊娴佺▼锛?--			鏌ヨ璇ヨ褰曟槸鍚﹀瓨鍦紝鏌ヨ璇ョ姸鎬佹槸鍚︿负01锛岃嫢婊¤冻鏉′欢鍒欒繘琛屼慨鏀?
-- maonf
-- 鍒涘缓鏃ユ湡锛?008.08.15
------------------------------------------------------------------------
BEGIN

  -- 鍙栧緱缁撹喘姹囦俊鎭?   DECLARE V_STATUS VARCHAR(2);
   DECLARE V_ROWCOUNT INTEGER;	
  		
	
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';

		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
  	
  	UPDATE PB_BUYFORDEL
  	 SET PYF_STATUS=IN_STATUS ,
  	PYF_TELLERNO= IN_TELLERNO 
  	WHERE PYF_TRNFLW=IN_TRNFLW
  	AND
  	((IN_STATUS<>'03' AND PYF_TELLERNO= IN_TELLERNO )  OR (IN_STATUS='03'AND PYF_STATUS='01'))
  	
  	;
		GET DIAGNOSTICS V_ROWCOUNT = ROW_COUNT;
   
   IF V_ROWCOUNT=0 THEN
       SET PROC_RET_CODE = '95000';
       SET OUT_ANSINFO = '璇ヨ褰曠姸鎬佷笉姝ｇ‘鎴栧鎴峰凡鎾ら攢';
			 RETURN;			 
	ELSE	 	 
		COMMIT;
		SET PROC_RET_CODE='00000';
	END IF ;
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_DEAL_RESULT_FORCHN_SEARCH
(	
	IN  IN_STATUS     CHAR(2),
	IN IN_BEGINDATE      CHARACTER(8),
    IN IN_ENDDATE      CHARACTER(8),
	IN  IN_BEGINPOS 	INTEGER, 
    IN  IN_SHOWNUM 		INTEGER, 
    IN  IN_CHNTYP     CHAR(1),
    IN  IN_TELLERNO   VARCHAR(20),
    IN  IN_TELLERLEVEL  CHAR(1),
    IN  IN_BRANCHNO  	VARCHAR(6),
    IN  IN_TRANFLW  	VARCHAR(15),
    OUT PROC_RET_CODE VARCHAR(5),
    OUT OUT_TOTALNUM INTEGER,
    OUT OUT_SHOWNUM  INTEGER,
    OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
		OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
		OUT OUT_TOA_MSG_CODE		VARCHAR(4),
		OUT OUT_ANSINFO				VARCHAR(50)
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁撹喘姹囩敵璇风粨鏋滆〃

-- 杈撳叆鍙傛暟锛?-- 鐘舵€侊細IN_STATUS
-- 璧峰浣嶇疆锛欼N_BEGINPOS
-- 鏄剧ず璁板綍鏁帮細IN_SHOWNUM
-- 缁撹喘姹囩被鍨嬶細IN_CHNTYP
-- 鎿嶄綔鍛橈細IN_TELLERNO
-- 鍒嗚鍙凤細IN_BRANCHNO
-- 娴佹按鍙凤細IN_TRANFLW

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_CHNINFO锛氱粨璐眹淇℃伅缁撴灉闆?-- 澶勭悊娴佺▼锛?--			濡傛灉IN_STATUS涓?0鏌ヨ鍏ㄩ儴璁板綍锛屽鏋淚N_TELLERLEVEL涓? 锛屽垯琛ㄧず鎬昏鎿嶄綔鍛橈紝鍙煡璇㈠叏閮ㄥ惁鍒欐寜鐓у垎琛屽彿鏌ヨ

-- maonf
-- 鍒涘缓鏃ユ湡锛?008.07.25
------------------------------------------------------------------------
BEGIN

  -- 鍙栧緱缁撹喘姹囦俊鎭?  	DECLARE V_BRANCHNO CHAR(3);
  	DECLARE ROWNOID INTEGER;
  
    DECLARE S_CUR_CHNINFO CURSOR WITH RETURN TO CALLER FOR
     	 SELECT PYS_TRNFLW,PYS_TRANDAY,PYS_STATUS,
		     PYS_TRANTIM,PYS_CACULATENO,PYS_CARDNO,PYS_NAME,PYS_SEX,
		     PYS_CTFTYP,PYS_CTFNO,PYS_BIRTHDAY,PYS_CHNNO,PYS_CHNTYP,PYS_CHNADDR
		     ,PYS_TRANBODY,PYS_COUNTRYTYP,PYS_BUYCHNTYPE,PYS_CHNCODE,PYS_CHNCUR,PYS_CHNEXC
		     ,PYS_CHNAMT,PYS_NEEDRMB,PYS_REFUSERES
		 FROM   PB_BUYFORRES 
		 WHERE  PYS_TRNFLW=IN_TRANFLW AND (IN_TELLERLEVEL='1' OR PYS_BRANCHNO =V_BRANCHNO)  AND  PYS_CHNTYP =IN_CHNTYP;
    DECLARE CUR_CHNINFO CURSOR WITH RETURN TO CALLER FOR

		    SELECT PYS_TRNFLW,PYS_TRANDAY,PYS_STATUS,
		     PYS_TRANTIM,PYS_CACULATENO,PYS_CARDNO,PYS_NAME,PYS_SEX,
		     PYS_CTFTYP,PYS_CTFNO,PYS_BIRTHDAY,PYS_CHNNO,PYS_CHNTYP,PYS_CHNADDR
		     ,PYS_TRANBODY,PYS_COUNTRYTYP,PYS_BUYCHNTYPE,PYS_CHNCODE,PYS_CHNCUR,PYS_CHNEXC
		     ,PYS_CHNAMT,PYS_NEEDRMB,PYS_REFUSERES

		    FROM 
		    (
		     SELECT PYS_TRNFLW,PYS_TRANDAY,PYS_STATUS,
		     PYS_TRANTIM,PYS_CACULATENO,PYS_CARDNO,PYS_NAME,PYS_SEX,
		     PYS_CTFTYP,PYS_CTFNO,PYS_BIRTHDAY,PYS_CHNNO,PYS_CHNTYP,PYS_CHNADDR
		     ,PYS_TRANBODY,PYS_COUNTRYTYP,PYS_BUYCHNTYPE,PYS_CHNCODE,PYS_CHNCUR,PYS_CHNEXC
		     ,PYS_CHNAMT,PYS_NEEDRMB,PYS_REFUSERES,
				ROW_NUMBER()OVER(ORDER BY PYS_TRANTIM ASC) ROW_ID
		    
		    FROM PB_BUYFORRES

		    WHERE	PYS_TRANTIM <= IN_ENDDATE||'24'

		    AND PYS_TRANTIM > IN_BEGINDATE
		    AND		
		    (		IN_TELLERLEVEL='1' 
				OR PYS_BRANCHNO =V_BRANCHNO)
		
		    AND  PYS_CHNTYP =IN_CHNTYP
				AND
					( IN_STATUS='00'
			  OR PYS_STATUS = IN_STATUS)
				)
		    AS TMPTABLE

		    WHERE

			(ROW_ID >IN_BEGINPOS AND

			ROW_ID<= IN_BEGINPOS + IN_SHOWNUM);
	
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	SET V_BRANCHNO=SUBSTR(IN_BRANCHNO, 1, 3);	
	
	IF IN_TRANFLW IS NULL OR IN_TRANFLW='' THEN
			
			SELECT COUNT(PYS_TRNFLW)
			    INTO OUT_TOTALNUM
			    FROM PB_BUYFORRES
			    WHERE PYS_TRANTIM <= IN_ENDDATE||'24'
	
			    AND PYS_TRANTIM > IN_BEGINDATE
			    AND		
			    (		IN_TELLERLEVEL='1' 
					OR PYS_BRANCHNO =V_BRANCHNO)
			
			    AND  PYS_CHNTYP =IN_CHNTYP
					AND
						( IN_STATUS='00'
				  OR PYS_STATUS = IN_STATUS);
	    --鎵撳紑娓告爣
	    OPEN CUR_CHNINFO;
	  	SET  OUT_SHOWNUM=CASE
						WHEN OUT_TOTALNUM-IN_BEGINPOS>20 THEN 20
						ELSE OUT_TOTALNUM-IN_BEGINPOS
				  END;
		ELSE
			SELECT COUNT(PYS_TRNFLW)
		    INTO OUT_TOTALNUM
			FROM PB_BUYFORRES
		    WHERE PYS_TRNFLW=IN_TRANFLW AND (IN_TELLERLEVEL='1' OR PYS_BRANCHNO =V_BRANCHNO) AND  PYS_CHNTYP =IN_CHNTYP;
			--鎵撳紑娓告爣
		    OPEN S_CUR_CHNINFO;
		  	SET  OUT_SHOWNUM=OUT_TOTALNUM;
		END IF;
    SET PROC_RET_CODE = '00000';
    SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_DEALING_FORCHN_SEARCH
(	
    IN  IN_CHNTYP     CHAR(1),
    IN  IN_TELLERNO   VARCHAR(20),
    IN  IN_TRANFLOW   VARCHAR(15),
    OUT PROC_RET_CODE VARCHAR(5),
    OUT OUT_CARDNO			VARCHAR(30),
    OUT OUT_CHHTYP			CHAR(1),
    OUT OUT_CTFTYP			CHAR(2),
    OUT OUT_CTFNO 			VARCHAR(20),
    OUT OUT_NAME 				VARCHAR(30),
    OUT OUT_CHNCUR			CHAR(3),
    OUT OUT_CHNAMT			DECIMAL(15,2),
    OUT OUT_CACULATENO	VARCHAR(20),
    OUT OUT_CHNEXC			DECIMAL(8,4),
    OUT OUT_NEEDRMB			DECIMAL(15,2),
    OUT OUT_RATFLG				CHAR(1),
    OUT OUT_CHNCODE			VARCHAR(8),
    OUT OUT_TRANBODY				CHAR(1),
    OUT OUT_COUNTRYTYP			VARCHAR(30),
    OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
		OUT OUT_TOA_MSG_AP_MMO	VARCHAR(2),
		OUT OUT_TOA_MSG_CODE		VARCHAR(4),
		OUT OUT_ANSINFO					VARCHAR(50)
) 
    READS SQL DATA 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁撹喘姹囩敵璇峰鐞嗚〃

-- 杈撳叆鍙傛暟锛?-- 缁撹喘姹囩被鍨嬶細IN_CHNTYP
-- 鎿嶄綔鍛橈細IN_TELLERNO
-- 娴佹按鍙凤細IN_TRANFLOW

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 澶勭悊娴佺▼锛?--			

-- maonf
-- 鍒涘缓鏃ユ湡锛?008.08.04
------------------------------------------------------------------------
BEGIN

  -- 鍙栧緱缁撹喘姹囦俊鎭?  	DECLARE V_STATUS CHAR(2);
	
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
		SELECT PYF_STATUS INTO V_STATUS 
  	FROM PB_BUYFORDEL 
  	WHERE PYF_TRNFLW=IN_TRANFLOW;
  	IF V_STATUS IS NULL OR V_STATUS='' THEN
  		SET PROC_RET_CODE = '95000';
  		SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0802';
  		SET OUT_ANSINFO = '璇ヨ褰曚笉瀛樺湪';
  		RETURN;
  	END IF;
		
		SELECT 
		     PYF_CACULATENO,PYF_CARDNO,PYF_NAME,PYF_CHHTYP,PYF_CTFTYP,PYF_CTFNO
		     ,PYF_TRANBODY,PYF_COUNTRYTYP,PYF_CHNCODE,PYF_CHNCUR,PYF_CHNEXC
		     ,PYF_CHNAMT,PYF_NEEDRMB,PYF_RATFLG INTO OUT_CACULATENO,OUT_CARDNO,OUT_NAME,
		     OUT_CHHTYP,OUT_CTFTYP,OUT_CTFNO,OUT_TRANBODY,OUT_COUNTRYTYP,
		     OUT_CHNCODE,OUT_CHNCUR,OUT_CHNEXC,OUT_CHNAMT,OUT_NEEDRMB,OUT_RATFLG

		    FROM 	PB_BUYFORDEL
		 WHERE    PYF_TRNFLW=IN_TRANFLOW;
		

    SET PROC_RET_CODE = '00000';
    SET OUT_TOA_MSG_TYPE = 'N';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0000';
		SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_MOVE_FORCHN_RECORD
(	
    IN  IN_TRNFLW               VARCHAR(20),
    IN  IN_STATUS               CHAR(2),
    IN  IN_REFUSEREM            VARCHAR(200),
    IN	IN_HOSTFLOW	            VARCHAR(20),
    IN	IN_FISCALFLOW           VARCHAR(20),
    OUT PROC_RET_CODE           VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO	    VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50)
) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁撹喘姹囩敵璇峰鐞嗚〃
-- 缁撹喘姹囩被鍨嬶細IN_CHNTYP
-- 鎿嶄綔鍛橈細IN_SHOWNUM
-- 鍒嗚鍙凤細IN_BRANCHNO
-- 涓绘満娴佹按锛欼N_HOSTFLOW
-- 涓绘満浼氳娴佹按锛欼N_FISCALFLOW

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_CHNINFO锛氱粨璐眹淇℃伅缁撴灉闆?-- 澶勭悊娴佺▼锛?--			鏌ヨ璇ヨ褰曟槸鍚﹀瓨鍦紝鏌ヨ璇ョ姸鎬佹槸鍚︿负01锛岃嫢婊¤冻鏉′欢鍒欒繘琛屼慨鏀?
-- maonf
-- 鍒涘缓鏃ユ湡锛?008.08.04
------------------------------------------------------------------------
BEGIN
	DECLARE			V_TRNFLW     VARCHAR(20);    	
	DECLARE			V_CARDNO     VARCHAR(30);      
	DECLARE			V_CHHTYP     CHAR(1);   			
	DECLARE			V_BRANCHNO   VARCHAR(6) ;    	
	DECLARE			V_TRANDAY    VARCHAR(8);       
	DECLARE			V_TRANTIM    VARCHAR(14);			
	DECLARE			V_NAME       VARCHAR(30);			
	DECLARE			V_SEX        CHAR(1);					
	DECLARE			V_CTFTYP     CHAR(2);					
	DECLARE			V_CTFNO      VARCHAR(20)	;		
	DECLARE			V_BIRTHDAY   VARCHAR(8)	;		  
	DECLARE			V_CHNTYP     CHAR(2);         
	DECLARE			V_CHNNO      VARCHAR(30);     
	DECLARE			V_CHNADDR    VARCHAR(200);    
	DECLARE			V_BUYCHNTYPE VARCHAR(60);  
	DECLARE			V_CHNCODE VARCHAR(8);     
	DECLARE			V_CHNCUR     CHAR(3);         
	DECLARE			V_CHNAMT     DECIMAL(15,2);   
	DECLARE			V_CACULATENO VARCHAR(20);     
	DECLARE			V_CHNEXC     DECIMAL(8,4);    
	DECLARE			V_NEEDRMB    DECIMAL(15,2);
	DECLARE			V_RATFLG   CHAR(1);    
	DECLARE			V_TRANBODY   CHAR(1);         
	DECLARE			V_COUNTRYTYP VARCHAR(30);       
	DECLARE			V_TELLERNO   VARCHAR(20);     
	DECLARE 		V_ROWCOUNT INTEGER;	
	DECLARE 		V_DEALTIME	VARCHAR(14);
	DECLARE			V_OPENNO VARCHAR(6);
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';

		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	SET V_DEALTIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
		IF NOT EXISTS (
        SELECT 1 FROM PB_BUYFORDEL WHERE PYF_TRNFLW=IN_TRNFLW
	) THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '璇ヨ褰曚笉瀛樺湪';
		RETURN;		
	END IF;
  	
    	SELECT 
    		PYF_TRNFLW,PYF_CARDNO,PYF_CHHTYP,PYF_BRANCHNO,PYF_TRANDAY,PYF_TRANTIM,
			 	PYF_NAME,PYF_SEX,PYF_CTFTYP,PYF_CTFNO,  PYF_BIRTHDAY,PYF_CHNNO,PYF_CHNTYP,
			 	PYF_CHNADDR,PYF_BUYCHNTYPE,PYF_CHNCODE,PYF_CHNCUR,PYF_CHNEXC,PYF_CHNAMT,PYF_NEEDRMB,PYF_RATFLG,
			 	PYF_CACULATENO,PYF_TRANBODY,PYF_COUNTRYTYP,PYF_TELLERNO,PYF_OPENNETNO  INTO 
			 	
			 	V_TRNFLW,V_CARDNO,V_CHHTYP,V_BRANCHNO,V_TRANDAY,V_TRANTIM,
			 	V_NAME,V_SEX,V_CTFTYP,V_CTFNO,  V_BIRTHDAY,V_CHNNO,V_CHNTYP,
			 	V_CHNADDR,V_BUYCHNTYPE,V_CHNCODE,V_CHNCUR,V_CHNEXC,V_CHNAMT,V_NEEDRMB,V_RATFLG,
			 	V_CACULATENO,V_TRANBODY,V_COUNTRYTYP,V_TELLERNO,V_OPENNO
    	FROM PB_BUYFORDEL 
    	WHERE PYF_TRNFLW=IN_TRNFLW;
    	
    		INSERT INTO PB_BUYFORRES 
  		(
  			PYS_TRNFLW    ,
				PYS_CARDNO    ,
				PYS_CHHTYP    ,
				PYS_BRANCHNO  ,
				PYS_TRANDAY   ,
				PYS_TRANTIM   ,
				PYS_DEALTIM   ,
				PYS_NAME      ,
				PYS_SEX       ,
				PYS_CTFTYP    ,
				PYS_CTFNO     ,
				PYS_BIRTHDAY  ,
				PYS_CHNTYP    ,
				PYS_CHNNO     ,
				PYS_CHNADDR   ,
				PYS_BUYCHNTYPE,
				PYS_CHNCODE		,
				PYS_CHNCUR    ,
				PYS_CHNAMT    ,
				PYS_CACULATENO,
				PYS_CHNEXC    ,
				PYS_NEEDRMB   ,
				PYS_RATFLG    ,
				PYS_TRANBODY  ,
				PYS_COUNTRYTYP,
				PYS_STATUS    ,
				PYS_REFUSERES ,
				PYS_TELLERNO  ,
				PYS_HSTFLOWNO ,
				PYS_OPENNETNO ,
				PYS_FISCALFLOW
  		
  		)VALUES(
  		V_TRNFLW    ,
			V_CARDNO    ,
			V_CHHTYP    ,
			V_BRANCHNO  ,
			V_TRANDAY   ,
			V_TRANTIM   ,
			V_DEALTIME  ,
			V_NAME      ,
			V_SEX       ,
			V_CTFTYP    ,
			V_CTFNO     ,
			V_BIRTHDAY  ,
			V_CHNTYP    ,
			V_CHNNO     ,
			V_CHNADDR   ,
			V_BUYCHNTYPE,
			V_CHNCODE	  ,
			V_CHNCUR    ,
			V_CHNAMT    ,
			V_CACULATENO,
			V_CHNEXC    ,
			V_NEEDRMB   ,
			V_RATFLG		,
			V_TRANBODY  ,
			V_COUNTRYTYP,
			IN_STATUS   ,
			IN_REFUSEREM ,
			V_TELLERNO  ,
			IN_HOSTFLOW ,
			V_OPENNO,
			IN_FISCALFLOW
  		);
  		
  	DELETE FROM PB_BUYFORDEL
  	WHERE PYF_TRNFLW=IN_TRNFLW;
  			
  	GET DIAGNOSTICS V_ROWCOUNT = ROW_COUNT;
    	
     IF V_ROWCOUNT=0 THEN
      -- 璁板綍杞Щ澶辫触
       SET PROC_RET_CODE = '95000';
			 SET OUT_TOA_MSG_TYPE = 'E';
			 SET OUT_TOA_MSG_AP_MMO = 'NE';
			 SET OUT_TOA_MSG_CODE = '0802';
			 SET OUT_ANSINFO = '鏁版嵁浠庣敵璇疯〃涓浆绉诲埌缁撴灉琛ㄦ椂澶辫触';
			 RETURN;	
		ELSE 
			COMMIT;
	    SET PROC_RET_CODE = '00000';
	    SET OUT_TOA_MSG_TYPE = 'N';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0000';
			SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
		END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_NO_DEAL_FORCHN_SEARCH
(	
	IN  IN_STATUS     CHAR(2),
	IN  IN_BEGINPOS 	INTEGER, 
    IN  IN_SHOWNUM 		INTEGER, 
    IN  IN_CHNTYP     CHAR(1),
    IN  IN_TELLERNO   VARCHAR(20),
    IN  IN_TELLERLEVEL  CHAR(1),
    IN  IN_BRANCHNO   VARCHAR(6),
    IN  IN_TRANFLW   VARCHAR(15),
    OUT PROC_RET_CODE VARCHAR(5),
    OUT OUT_TOTALNUM INTEGER,
    OUT OUT_SHOWNUM  INTEGER,
    OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
		OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
		OUT OUT_TOA_MSG_CODE		VARCHAR(4),
		OUT OUT_ANSINFO				VARCHAR(50)
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁撹喘姹囩敵璇峰鐞嗚〃

-- 杈撳叆鍙傛暟锛?-- 鐘舵€侊細IN_STATUS
-- 璧峰浣嶇疆锛欼N_BEGINPOS
-- 鏄剧ず璁板綍鏁帮細IN_SHOWNUM
-- 缁撹喘姹囩被鍨嬶細IN_CHNTYP
-- 鎿嶄綔鍛橈細IN_SHOWNUM
-- 鍒嗚鍙凤細IN_BRANCHNO
-- 娴佹按鍙凤細IN_TRANFLW
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_CHNINFO锛氱粨璐眹淇℃伅缁撴灉闆?-- 澶勭悊娴佺▼锛?--	濡傛灉IN_STATUS涓?0鏌ヨ鍏ㄩ儴璁板綍锛屽寘鎷姸鎬佷负绛夊緟澶勭悊鐨勮褰曪紝鎴栬€呭凡缁忚璇ユ搷浣滃憳淇敼鐨勭姸鎬?--	濡傛灉IN_STATUS涓嶄负00锛屾煡璇㈡弧瓒宠緭鍏ョ姸鎬佺殑璁板綍锛岃嫢IN_STATUS涓嶄负01锛岃繕瑕佹弧瓒虫槸宸茬粡琚鎿嶄綔鍛樹慨鏀圭殑鐘舵€?--	濡傛灉IN_TELLERLEVEL涓? 锛屽垯琛ㄧず鎬昏鎿嶄綔鍛橈紝鍙煡璇㈠叏閮ㄥ惁鍒欐寜鐓у垎琛屽彿鏌ヨ
--	
-- maonf
-- 鍒涘缓鏃ユ湡锛?008.07.25
------------------------------------------------------------------------
BEGIN

  -- 鍙栧緱缁撹喘姹囦俊鎭?  	DECLARE V_BRANCHNO CHAR(3);
  	DECLARE ROWNOID INTEGER;
  	
  	 DECLARE S_CUR_CHNINFO CURSOR WITH RETURN TO CALLER FOR

		    SELECT PYF_TRNFLW,PYF_TRANDAY,PYF_STATUS,
		     PYF_TRANTIM,PYF_CACULATENO,PYF_CARDNO,PYF_NAME,PYF_SEX,
		     PYF_CTFTYP,PYF_CTFNO,PYF_BIRTHDAY,PYF_CHNNO,PYF_CHNTYP,PYF_CHNADDR
		     ,PYF_TRANBODY,PYF_COUNTRYTYP,PYF_BUYCHNTYPE,PYF_CHNCODE,PYF_CHNCUR,PYF_CHNEXC
		     ,PYF_CHNAMT,PYF_NEEDRMB
		     FROM PB_BUYFORDEL
  			 WHERE PYF_TRNFLW=IN_TRANFLW AND (PYF_TELLERNO='' OR PYF_TELLERNO=IN_TELLERNO) AND PYF_CHNTYP =IN_CHNTYP;
    
    DECLARE CUR_CHNINFO CURSOR WITH RETURN TO CALLER FOR

		    SELECT PYF_TRNFLW,PYF_TRANDAY,PYF_STATUS,
		     PYF_TRANTIM,PYF_CACULATENO,PYF_CARDNO,PYF_NAME,PYF_SEX,
		     PYF_CTFTYP,PYF_CTFNO,PYF_BIRTHDAY,PYF_CHNNO,PYF_CHNTYP,PYF_CHNADDR
		     ,PYF_TRANBODY,PYF_COUNTRYTYP,PYF_BUYCHNTYPE,PYF_CHNCODE,PYF_CHNCUR,PYF_CHNEXC
		     ,PYF_CHNAMT,PYF_NEEDRMB

		    FROM 
		    (
		     SELECT PYF_TRNFLW,PYF_TRANDAY,PYF_STATUS,
		     PYF_TRANTIM,PYF_CACULATENO,PYF_CARDNO,PYF_NAME,PYF_SEX,
		     PYF_CTFTYP,PYF_CTFNO,PYF_BIRTHDAY,PYF_CHNNO,PYF_CHNTYP,PYF_CHNADDR
		     ,PYF_TRANBODY,PYF_COUNTRYTYP,PYF_BUYCHNTYPE,PYF_CHNCODE,PYF_CHNCUR,PYF_CHNEXC
		     ,PYF_CHNAMT,PYF_NEEDRMB,
				ROW_NUMBER()OVER(ORDER BY PYF_STATUS DESC, PYF_TRANTIM ASC) ROW_ID
		    FROM PB_BUYFORDEL
		    WHERE 
		    ( IN_TELLERLEVEL='1' OR
				PYF_BRANCHNO =V_BRANCHNO)
		    AND  
		    PYF_CHNTYP =IN_CHNTYP
		    AND 
		   ((IN_STATUS='00' AND PYF_STATUS='01') OR (IN_STATUS='01' OR PYF_TELLERNO=IN_TELLERNO ) )
		  	AND
		    (IN_STATUS='00' OR PYF_STATUS=IN_STATUS))
		    AS TMPTABLE

		    WHERE

			(ROW_ID >IN_BEGINPOS AND

			ROW_ID<= IN_BEGINPOS + IN_SHOWNUM);
	
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
		SET V_BRANCHNO=SUBSTR(IN_BRANCHNO, 1, 3);
		IF IN_TRANFLW IS NULL OR IN_TRANFLW='' THEN
			SELECT COUNT(PYF_TRNFLW)
		    INTO OUT_TOTALNUM
		    FROM PB_BUYFORDEL
		    WHERE ( IN_TELLERLEVEL='1' OR
				PYF_BRANCHNO =V_BRANCHNO)
		    AND  PYF_CHNTYP =IN_CHNTYP
		    AND 
		     ((IN_STATUS='00' AND PYF_STATUS='01') OR (IN_STATUS='01' OR PYF_TELLERNO=IN_TELLERNO ))
		  	AND
		    (IN_STATUS='00' OR PYF_STATUS=IN_STATUS)
				;
		    --鎵撳紑娓告爣
		    OPEN CUR_CHNINFO;
		  	SET  OUT_SHOWNUM=CASE
							WHEN OUT_TOTALNUM-IN_BEGINPOS>20 THEN 20
							ELSE OUT_TOTALNUM-IN_BEGINPOS
					  END;
		   
		ELSE
			SELECT COUNT(PYF_TRNFLW)
		    INTO OUT_TOTALNUM
		    FROM PB_BUYFORDEL
		    WHERE PYF_TRNFLW=IN_TRANFLW AND (PYF_TELLERNO='' OR PYF_TELLERNO=IN_TELLERNO) AND  
		    PYF_CHNTYP =IN_CHNTYP;
			--鎵撳紑娓告爣
		    OPEN S_CUR_CHNINFO;
		  	SET  OUT_SHOWNUM=OUT_TOTALNUM;
		END IF;
		SET PROC_RET_CODE = '00000';
		SET OUT_TOA_MSG_TYPE = 'N';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0000';
		SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_BUY_EXCHANGE_ADDRESS_SEARCH
(	
    OUT PROC_RET_CODE VARCHAR(5)
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁撹喘姹囩敵璇峰鐞嗚〃

-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_CHNINFO锛氬墠/姹囧線鍦扮偣淇℃伅缁撴灉闆?
-- maonf
-- 鍒涘缓鏃ユ湡锛?008.08.08
------------------------------------------------------------------------
BEGIN

    -- 鍙栧緱缁撹喘姹囦俊鎭?	DECLARE CUR_CHNINFO CURSOR WITH RETURN TO CALLER FOR
		SELECT PCO_INITIAL,PCO_SHORTNAMECN,PCO_SHORTNAMEEN
		FROM PB_COUNTRY_CODE
		;
	
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

    --鎵撳紑娓告爣
    OPEN CUR_CHNINFO;
    
    SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_BUY_FORCHN_CANCLE(
	IN IN_FLOWNO VARCHAR(20),
	OUT PROC_RET_CODE VARCHAR(5)
)
MODIFIES SQL DATA
NOT DETERMINISTIC
LANGUAGE SQL
------------------------------------------------------------------------
-- 缁撹喘姹囪褰曟挙閿€
-- 杈撳叆鍙傛暟锛?-- IN_FLOWNO锛氫氦鏄撴祦姘村彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鏈€鍚庝慨鏀逛汉锛?maonf
-- 鏈€鍚庝慨鏀规棩鏈燂細2008.07.24
------------------------------------------------------------------------
BEGIN
	 -- 鍙橀噺澹版槑
    DECLARE V_STATUS				CHAR(2);
    DECLARE V_ROWCOUNT INTEGER;
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	    DELETE
	    FROM PB_BUYFORDEL
	    WHERE PYF_TRNFLW = IN_FLOWNO AND PYF_STATUS='01';
   
   GET DIAGNOSTICS V_ROWCOUNT = ROW_COUNT;
   
   IF V_ROWCOUNT=0 THEN
      -- 鍒犻櫎澶辫触
       SET PROC_RET_CODE = '30601';
			 RETURN;
		ELSE	 
			 
		COMMIT;
		SET PROC_RET_CODE='00000';
		END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_BUY_FORCHN_INSERT
(
    	IN IN_FLOWNO 	  VARCHAR(20), 
    	IN IN_CARDNO      VARCHAR(30), 
		IN IN_BRANCHNO    VARCHAR(6), 
		IN IN_CHHTYP      CHAR(1), 
		IN IN_NAME        VARCHAR(30), 
		IN IN_SEX         CHAR(1), 
		IN IN_CTFTYP      CHAR(2), 
		IN IN_CTFNO       VARCHAR(20), 
		IN IN_BIRTHDAY    VARCHAR(8), 
		IN IN_CHNTYP      CHAR(1),   
		IN IN_CHNNO       VARCHAR(30), 
		IN IN_CHNADDR     VARCHAR(200), 
		IN IN_BUYCHNTYPE  VARCHAR(60), 
		IN IN_CHNCODE		  VARCHAR(8), 
		IN IN_CHNCUR      CHAR(3), 
		IN IN_CHNAMT      VARCHAR(20), 
		IN IN_CHNEXC      VARCHAR(20),  
		IN IN_CHNEXCNO    VARCHAR(20), 
		IN IN_NEEDRMB     VARCHAR(20), 
		IN IN_RATFLG    CHAR(1), 
		IN IN_TRANBODY    CHAR(1),  
		IN IN_COUNTRYTYP  VARCHAR(30),   
		IN IN_STATUS      VARCHAR(30), 
		IN IN_OPENNO	  VARCHAR(6),
		IN IN_HOSTFLOWNO	  VARCHAR(20),
		IN IN_REFUSERES			VARCHAR(20),
		IN IN_TELLERNO		VARCHAR(20),
		IN IN_BUYNO			VARCHAR(30),
		IN IN_CORENO		VARCHAR(11),
		IN IN_CHANNEL      CHAR(1), 
	OUT PROC_RET_CODE VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 璁板綍璐眹淇℃伅
-- 杈撳叆鍙傛暟锛?-- 鍗″彿锛欼N_CARDNO
-- 鍒嗚鍙凤細IN_BRANCHNO
-- 閽炴眹鏍囧織锛欼N_ CHHTYP 
-- 濮撳悕锛欼N_ NAME
-- 鎬у埆锛欼N_ SEX
-- 璇佷欢绫诲瀷锛欼N_ CTFTYP
-- 璇佷欢鍙风爜锛欼N_ CTFNO
-- 鍑虹敓鏃ユ湡锛欼N_ BIRTHDAY
-- 缁撹喘姹囩被鍨嬶細IN_CHNTYP
-- 缁撹喘姹囩紪鐮侊細IN_ CHNNO
-- 鍓?姹囧線鍦扮偣锛欼N_ CHNADDR
-- 璐眹绉嶇被锛欼N_ BUYCHNTYPE
-- 璐眹浠ｇ爜锛欼N_CHNCODE
-- 璐眹甯佺锛欼N_ CHNCUR
-- 璐眹閲戦锛欼N_ CHNAMT
-- 璐眹鐗屼环锛欼N_ CHNEXC
-- 璐眹鐗屼环璇曠畻缂栧彿锛欼N_ CHNEXCNO
-- 鎵€闇€浜烘皯甯侊細IN_ NEEDRMB
-- 浜ゆ槗涓讳綋锛欼N_TRANBODY
-- 鍥藉埆锛欼N_COUNTRYTYP
-- 鐘舵€侊細IN_ STATUS
-- 鐢靛瓙鏌滃憳锛欼N_TELLERNO
-- 澶栫灞€浜ゆ槗娴佹按鍙凤細IN_BUYNO
-- 浼氳娴佹按鍙凤細IN_CORENO
-- 浜ゆ槗娓犻亾锛欼N_CHANNEL  

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_FLWNO锛氭祦姘村彿

-- maonf
-- 2008.07.21
------------------------------------------------------------------------
BEGIN
    -- 鍙橀噺澹版槑
    DECLARE V_TIME				VARCHAR(14);			    -- 褰撳墠鏃堕棿
    DECLARE V_DATE				VARCHAR(8);			      -- 褰撳墠鏃ユ湡
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	-- 鑾峰彇褰撳墠鏃ユ湡
	SET V_TIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
	SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmdd');
    
    INSERT INTO PB_BUYFORRES
        (
        	PYS_TRNFLW,              
        	PYS_CARDNO,    
        	PYS_CHHTYP,    
        	PYS_BRANCHNO,  
        	PYS_TRANDAY,   
        	PYS_TRANTIM,  
        	PYS_DEALTIM,  
        	PYS_NAME,      
        	PYS_SEX,       
        	PYS_CTFTYP,    
        	PYS_CTFNO,     
        	PYS_BIRTHDAY,  
        	PYS_CHNTYP,    
        	PYS_CHNNO,     
        	PYS_CHNADDR,   
        	PYS_BUYCHNTYPE,
        	PYS_CHNCODE,   
        	PYS_CHNCUR,    
        	PYS_CHNAMT,    
        	PYS_CACULATENO,
        	PYS_CHNEXC,    
        	PYS_NEEDRMB,   
        	PYS_RATFLG,    
        	PYS_TRANBODY,  
        	PYS_COUNTRYTYP,
        	PYS_STATUS,    
        	PYS_REFUSERES ,
        	PYS_TELLERNO , 
        	PYS_OPENNETNO ,
        	PYS_HSTFLOWNO,
        	PYS_BUYNO,
        	PYS_FISCALFLOW,
        	PYS_CHANNEL
        	 
        	) 
    VALUES
        (IN_FLOWNO, IN_CARDNO, IN_CHHTYP, IN_BRANCHNO, V_DATE, V_TIME,V_TIME,IN_NAME, IN_SEX,
        IN_CTFTYP, IN_CTFNO, IN_BIRTHDAY, IN_CHNTYP, IN_CHNNO, 
        IN_CHNADDR, IN_BUYCHNTYPE,IN_CHNCODE, IN_CHNCUR, 
        CASE
					WHEN IN_CHNAMT='' THEN 0
					ELSE DECIMAL(IN_CHNAMT,15,2)
			  END,
        
        IN_CHNEXCNO, 
        CASE
					WHEN IN_CHNEXC='' THEN 0
					ELSE DECIMAL(IN_CHNEXC,8,4)
			  END,
			  CASE
					WHEN IN_NEEDRMB='' THEN 0
					ELSE DECIMAL(IN_NEEDRMB,15,2)
			  END,IN_RATFLG,IN_TRANBODY,IN_COUNTRYTYP,IN_STATUS,IN_REFUSERES,IN_TELLERNO,IN_OPENNO,IN_HOSTFLOWNO,IN_BUYNO,IN_CORENO,IN_CHANNEL
        );
        
	COMMIT;
    
	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_NO_DEAL_FORCHN_SEARCH
(	
		IN  IN_CARDNO     VARCHAR(30),
		IN  IN_CHNTYP     CHAR(1),
		IN  IN_STATUS     CHAR(2),
    OUT PROC_RET_CODE VARCHAR(5)
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁撹喘姹囩敵璇峰鐞嗚〃

-- 杈撳叆鍙傛暟锛?-- 鍗″彿锛欼N_CARDNO
-- 缁撹喘姹囩被鍨嬶細IN_CHNTYP

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_CHNINFO锛氱粨璐眹淇℃伅缁撴灉闆?
-- maonf
-- 鍒涘缓鏃ユ湡锛?008.07.23
------------------------------------------------------------------------
BEGIN

    -- 鍙栧緱缁撹喘姹囦俊鎭?	DECLARE CUR_CHNINFO CURSOR WITH RETURN TO CALLER FOR
		SELECT PYF_TRNFLW,PYF_CHHTYP,PYF_TRANDAY, PYF_CTFTYP,PYF_CTFNO,PYF_CHNNO, PYF_CHNCUR,PYF_CHNAMT,PYF_CHNEXC,PYF_NEEDRMB,PYF_STATUS,PYF_REFUSERES
		FROM PB_BUYFORDEL
		WHERE PYF_CARDNO=IN_CARDNO AND PYF_CHNTYP=IN_CHNTYP AND
				( IN_STATUS='00' OR  PYF_STATUS=IN_STATUS)
		;
	
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

    --鎵撳紑娓告爣
    OPEN CUR_CHNINFO;
    
    SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_RESULT_FORCHN_SEARCH
(	
		IN  IN_CARDNO     VARCHAR(30),
		IN  IN_CHNTYP     CHAR(1),
		IN IN_BEGINDATE      CHARACTER(8),
    IN IN_ENDDATE      CHARACTER(8),
    IN IN_BEGINPOS INTEGER, 
    IN IN_SHOWNUM INTEGER, 
    OUT PROC_RET_CODE VARCHAR(5), 
    OUT OUT_TOTALNUM INTEGER
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁撹喘姹囩敵璇峰鐞嗚〃

-- 杈撳叆鍙傛暟锛?-- 鍗″彿锛欼N_CARDNO
-- 缁撹喘姹囩被鍨嬶細IN_CHNTYP
-- 璧峰鏃ユ湡锛欼N_BEGINDATE
-- 璧峰鏃ユ湡锛欼N_ENDDATE
-- 璧峰浣嶇疆锛欼N_BEGINPOS
-- 璧峰璁板綍鏁帮細IN_SHOWNUM

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_CHNINFO锛氱粨璐眹淇℃伅缁撴灉闆?
-- maonf
-- 鍒涘缓鏃ユ湡锛?008.07.23
------------------------------------------------------------------------
BEGIN

    -- 鍙栧緱缁撹喘姹囦俊鎭?    
    DECLARE CUR_CHNINFO CURSOR WITH RETURN TO CALLER FOR

		    SELECT PYS_TRNFLW,PYS_CHHTYP,PYS_TRANDAY,  PYS_CTFTYP,PYS_CTFNO,PYS_CHNNO, PYS_CHNCUR,PYS_CHNAMT,PYS_CHNEXC,PYS_NEEDRMB,PYS_STATUS,PYS_REFUSERES,PYS_BUYCHNTYPE,PYS_BUYNO,PYS_CHANNEL

		    FROM 
		    (
		     SELECT PYS_TRNFLW,PYS_CHHTYP,PYS_TRANDAY, PYS_CTFTYP,PYS_CTFNO,PYS_CHNNO, PYS_CHNCUR,PYS_CHNAMT,PYS_CHNEXC,PYS_NEEDRMB,PYS_STATUS,PYS_REFUSERES,PYS_BUYCHNTYPE,PYS_BUYNO,PYS_CHANNEL,

				ROW_NUMBER()OVER(ORDER BY PYS_TRNFLW) ROW_ID
		    
		    FROM PB_BUYFORRES

		    WHERE PYS_CARDNO =IN_CARDNO
		    
		    AND  PYS_CHNTYP =IN_CHNTYP

		    AND PYS_TRANTIM <= IN_ENDDATE||'24'

		    AND PYS_TRANTIM > IN_BEGINDATE

				)
		    AS TMPTABLE

		    WHERE

			(ROW_ID > IN_BEGINPOS AND

			ROW_ID<= IN_BEGINPOS + IN_SHOWNUM);
	
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
		
		 SELECT  COUNT(PYS_TRNFLW)
     INTO OUT_TOTALNUM
     FROM PB_BUYFORRES
		 WHERE  PYS_CARDNO =IN_CARDNO
		    
		    AND  PYS_CHNTYP =IN_CHNTYP
		    		
		    AND PYS_TRANTIM <= IN_ENDDATE||'24'

		    AND PYS_TRANTIM > IN_BEGINDATE;
    --鎵撳紑娓告爣
    OPEN CUR_CHNINFO;
    
    SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_EXCHG_STATUS
(	

    IN  IN_BUYNO		VARCHAR(30),
    IN  IN_STATUS		CHAR(2),
    IN  IN_REFUSERES	VARCHAR(20),
    IN  IN_CORENO		VARCHAR(11),
    OUT PROC_RET_CODE	VARCHAR(5)
)
-- SQL 瀛樺偍杩囩▼
-- 鏇存柊缁撹喘姹囪褰曠姸鎬?
-- 杈撳叆鍙傛暟锛?-- 娴佹按鍙凤細IN_BUYNO
-- 缁撹喘姹囩姸鎬侊細IN_STATUS
-- 閿欒鐮侊細IN_REFUSERES
-- 浼氳娴佹按鍙凤細IN_CORENO

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- Tzx
-- 鍒涘缓鏃ユ湡锛?012.03.08
BEGIN
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
  	UPDATE PB_BUYFORRES 
	SET 
		PYS_STATUS = IN_STATUS,
  		PYS_REFUSERES = IN_REFUSERES,
  		PYS_FISCALFLOW = IN_CORENO 
  	WHERE 
  		PYS_TRNFLW = IN_BUYNO;
  	
  	COMMIT;
    
	SET PROC_RET_CODE = '00000';  
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SERVICE_CHECK_CSTPSW (
	IN IN_CSTNO               	VARCHAR(10),
	IN IN_PASSWORD				VARCHAR(50),
	OUT PROC_RET_CODE 			CHAR(5)
)
------------------------------------------------------------------------
-- 娉ㄥ唽鐢ㄦ埛瀵嗙爜淇敼妫€娴嬪瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氱敤鎴风紪鍙?-- IN_PASSWORD锛氱櫥褰曞瘑鐮?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈燂細2007.3.26
------------------------------------------------------------------------
BEGIN

	-- 瀹氫箟鍙橀噺
	DECLARE V_PASSWORD			VARCHAR(50);		--鐢ㄦ埛瀵嗙爜
	DECLARE V_FAILNUM			INT;				--澶辫触娆℃暟
	DECLARE V_DATE				CHAR(14);			--褰撳墠鏃堕棿
	DECLARE V_STT				CHAR(1);			--鐢ㄦ埛鐘舵€?
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SELECT
		PIF_PASSWORD,
		PIF_STT
	INTO
		V_PASSWORD,
		V_STT
	FROM PB_CSTINF
	WHERE 
		PIF_CSTNO=IN_CSTNO;
	
	-- 鑾峰彇瀹㈡埛淇℃伅
	IF V_STT IS NULL OR V_STT =''
	THEN
		SET PROC_RET_CODE = '30003';
		RETURN;
	END IF;
	

	IF V_STT = '1' THEN
		-- 鐢ㄦ埛宸插喕缁?		SET PROC_RET_CODE = '30001';
		RETURN;
	END IF;
	
	SELECT
		PLF_TIMES
	INTO
		V_FAILNUM
	FROM PB_LOGFAIL
	WHERE 
		PLF_CARDNO = IN_CSTNO AND PLF_TYPE='0';
	
	
	IF IN_PASSWORD <> V_PASSWORD THEN
		-- 鑾峰彇褰撳墠鏃ユ湡
		SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
		IF V_FAILNUM IS NULL  
		THEN
			-- 姝ょ敤鎴风涓€娆＄櫥闄嗗け璐?			INSERT INTO PB_LOGFAIL
			(
				PLF_CARDNO,
				PLF_TIMES,
				PLF_UPDTIM,
				PLF_TYPE
			)
			VALUES
			(
				IN_CSTNO,
				1,
				V_DATE,
				'0'
			);
			
			COMMIT;
			
			SET PROC_RET_CODE = '30050';
		    RETURN;
		ELSE
			-- 闈炵涓€娆＄櫥闄嗗け璐?	
            IF V_FAILNUM = 5 THEN
				-- 鐧婚檰瀵嗙爜澶辫触6娆″悗鍐荤粨姝ょ敤鎴?				UPDATE PB_CSTINF
				SET
					PIF_STT = '1'
				WHERE 
					PIF_CSTNO = IN_CSTNO;
				
				-- 鍒犻櫎瀹㈡埛瀵嗙爜澶辫触鐧诲綍琛ㄨ褰?				DELETE
				FROM PB_LOGFAIL
				WHERE 
				PLF_CARDNO = IN_CSTNO AND PLF_TYPE='0';
				
				COMMIT;
				
				SET PROC_RET_CODE = '30055';
		        RETURN;
				
			ELSE
				-- 闈炵涓€娆＄櫥闄嗗け璐ワ紝澶辫触娆℃暟鍔?
				UPDATE PB_LOGFAIL
				SET
					PLF_TIMES = V_FAILNUM + 1
				WHERE 
					PLF_CARDNO = IN_CSTNO AND PLF_TYPE='0';
			
			END IF;
	
		END IF;
		
	    COMMIT;
	    
	    CASE V_FAILNUM
	    WHEN 1
	    THEN 
	        SET PROC_RET_CODE = '30051';
	        RETURN;
	    WHEN 2
	    THEN 
	        SET PROC_RET_CODE = '30052';
	        RETURN;
	    WHEN 3
	    THEN 
	        SET PROC_RET_CODE = '30053';
	        RETURN;
	    WHEN 4
	    THEN 
	        SET PROC_RET_CODE = '30054';
	        RETURN;
	    END CASE;    
	   
	ELSE
	    -- 鎴愬姛妫€娴嬩竴娆″悗鍒犻櫎涔嬪墠鐧诲綍閿欒璁板綍
	    IF  V_FAILNUM IS NOT NULL 
		THEN
			DELETE
			FROM PB_LOGFAIL
			WHERE 
			PLF_CARDNO = IN_CSTNO AND PLF_TYPE='0';
        END IF;
        
        COMMIT;
        
	END IF;
	
	SET PROC_RET_CODE = '00000';
	
END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SERVICE_DEL_CUST_DEAFULT_CARD
 (
	IN IN_CSTNO VARCHAR(10), 
	IN IN_OPERTYPE VARCHAR(1), 
	OUT OUT_RET_CODE VARCHAR(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-瀹㈡埛鏈嶅姟-鍒犻櫎鐢ㄦ埛鐧诲綍涓氬姟榛樿鍗″彿
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氱敤鎴风紪鍙?-- IN_OPERTYPE锛?鐢ㄦ埛鐧诲綍涓氬姟绫诲瀷0锛氬姹囧疂锛?锛氬熀閲戣秴甯傦紝2锛氫俊鐢ㄥ崱 3:閾惰瘉杞处	4锛氫紒涓氬勾閲?--                           5:閾舵湡璇佽浆璐?-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.03.26
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	DELETE FROM PB_DFLCRD
	WHERE 
		PDC_CSTNO=IN_CSTNO AND 
		PDC_OPRTYP=IN_OPERTYPE;
		
	COMMIT;
	
	SET OUT_RET_CODE='00000';
	
END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SERVICE_QUERY_CERT_INFO
 (
 	IN IN_CSTNO			VARCHAR(10),
 	 
	OUT OUT_RET_CODE	VARCHAR(5), 
	OUT OUT_CERST		VARCHAR(1), 
	OUT OUT_VALIDTIME	VARCHAR(14), 
	OUT OUT_CERTIME		VARCHAR(2), 
	OUT OUT_CUSTTYPE	VARCHAR(1),
	OUT OUT_AREANO		VARCHAR(6),
	OUT OUT_NOTICE		CHAR(1),
	OUT OUT_MOBILE		VARCHAR(20)
 ) 
 READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-瀹㈡埛鏈嶅姟-璇佷功淇℃伅鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氱綉閾跺鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CERST锛氳瘉涔︾姸鎬?0锛氭甯?1锛氬喕缁?2锛氫綔搴?-- OUT_VALIDTIME锛氱敓鏁堟椂闂达紙姣鏁帮級
-- OUT_CERTIME锛氳瘉涔︽湁鏁堟湡锛堟湀鏁帮級
-- OUT_CUSTTYPE: 瀹㈡埛绫诲瀷0锛氭敞鍐岀敤鎴?锛氳瘉涔︾敤鎴?-- OUT_AREANO:鍦板尯鍙?-- OUT_NOTICE:鏄惁鐭俊鎻愰啋0:鍚?:鏄?-- OUT_MOBILE:鎺ユ敹鎻愰啋鎵嬫満鍙?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.10.29
-- 鏈€鍚庝慨鏀逛汉锛歽inlei
-- 鏈€鍚庝慨鏀规棩鏈燂細2011.04.25
------------------------------------------------------------------------
BEGIN

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	-- 鏍规嵁鐢ㄦ埛缂栧彿鏌ヨ鐢ㄦ埛淇℃伅
	SELECT
		POC_CERST,
		POC_VALIDTIME,
		POC_CERTIME,
		POC_NOTICE
	INTO
		OUT_CERST,
		OUT_VALIDTIME,
		OUT_CERTIME,
		OUT_NOTICE
	FROM   IM_PERSONCSTOPRCRT
	WHERE
		POC_CSTNO = IN_CSTNO;
		
	SELECT PIF_CSTTYP,PIF_AREACODE,PIF_MOBILE INTO OUT_CUSTTYPE,OUT_AREANO,OUT_MOBILE FROM PB_CSTINF WHERE PIF_CSTNO = IN_CSTNO;

	SET OUT_RET_CODE = '00000';
  
END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CERT_NOTICE_MANAGER
 (
 	IN IN_CSTNO			VARCHAR(10),
 	IN IN_TYPE			CHAR(1),
 	IN IN_MOBILE		VARCHAR(20),
	OUT OUT_RET_CODE	VARCHAR(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-瀹㈡埛鏈嶅姟-璇佷功鍒版湡鐭俊鎻愰啋璁剧疆
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氱綉閾跺鎴峰彿
-- IN_TYPE锛氭搷浣滅被鍨?:娣诲姞锛?:鎾ら攢
-- IN_MOBILE:鎵嬫満鍙?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉 锛?yinlei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2010.04.20
------------------------------------------------------------------------
BEGIN

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	IF IN_TYPE = '0' THEN	--娣诲姞
		UPDATE IM_PERSONCSTOPRCRT SET POC_NOTICE = '1' WHERE POC_CSTNO = IN_CSTNO;
		UPDATE PB_CSTINF SET PIF_MOBILE = IN_MOBILE WHERE PIF_CSTNO = IN_CSTNO;
	ELSE					--鎾ら攢
		UPDATE IM_PERSONCSTOPRCRT SET POC_NOTICE = '0' WHERE POC_CSTNO = IN_CSTNO;
	END IF;
	COMMIT;
	SET OUT_RET_CODE = '00000';
  
END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SERVICE_QUERY_CUST_INFO
 (
 	IN IN_CSTNO			VARCHAR(10),
 	 
	OUT OUT_RET_CODE	VARCHAR(5), 
	OUT OUT_ALIAS		VARCHAR(30), 
	OUT OUT_ADDRESS		VARCHAR(60), 
	OUT OUT_PHONE		VARCHAR(20), 
	OUT OUT_EMAIL		VARCHAR(60)
 ) 
 READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-瀹㈡埛鏈嶅姟-涓汉璧勬枡鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氱敤鎴风紪鍙?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ALIAS锛氬埆鍚?-- OUT_ADDRESS锛氬湴鍧€
-- OUT_PHONE: 鑱旂郴鐢佃瘽
-- OUT_EMAIL锛氶偖浠跺湴鍧€

-- 鏈€鍚庝慨鏀逛汉 锛?ECC.ZhangHao
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.10

-- 淇敼锛氬幓闄ゆ杩庤
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.08.21
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
		
	-- 鏍规嵁鐢ㄦ埛缂栧彿鏌ヨ鐢ㄦ埛淇℃伅
	SELECT
		PIF_ALIAS,
		PIF_ADDRESS,
		PIF_PHONE,
	 	PIF_EMAIL
	INTO
		OUT_ALIAS,
		OUT_ADDRESS,
		OUT_PHONE,
		OUT_EMAIL 
	FROM   PB_CSTINF
	WHERE
		PIF_CSTNO=IN_CSTNO;

	SET OUT_RET_CODE = '00000';
  
END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SERVICE_QUERY_TWOCODE
 (
 	IN IN_CSTNO			VARCHAR(10),
 	 
	OUT OUT_RET_CODE	VARCHAR(5), 
	OUT OUT_REFNO		VARCHAR(30), 
	OUT OUT_AUTHNO	VARCHAR(30),
	OUT OUT_CONFERNO VARCHAR(16)
 ) 
 READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-瀹㈡埛鏈嶅姟-2鐮佹煡璇?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氱綉閾跺鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_REFNO锛氬弬鑰冨彿
-- OUT_AUTHNO锛氭巿鏉冪爜
-- OUT_CONFERNO:鍗忚鍙?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.10.29
------------------------------------------------------------------------
BEGIN

  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;

	
	-- 鏍规嵁鐢ㄦ埛缂栧彿鏌ヨ鐢ㄦ埛淇℃伅
	SELECT
		POC_REFNO,
		POC_AUTHNO,
		POC_CONFERNO
	INTO
		OUT_REFNO,
		OUT_AUTHNO,
		OUT_CONFERNO
	FROM   IM_PERSONCSTOPRCRT
	WHERE
		POC_CSTNO = IN_CSTNO;

	SET OUT_RET_CODE = '00000';
  
END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SERVICE_SET_CUST_STT
 (
 	IN IN_CSTNO			VARCHAR(10),
 	 
	OUT OUT_RET_CODE	VARCHAR(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-瀹㈡埛鏈嶅姟-灏嗗鎴风姸鎬佽缃负浠庢湭鐧诲綍
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氱綉閾跺鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.10.29
------------------------------------------------------------------------
BEGIN

  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
		
	UPDATE PB_CSTINF SET PIF_STT = '2' WHERE PIF_CSTNO = IN_CSTNO;
	COMMIT;

	SET OUT_RET_CODE = '00000';
  
END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SERVICE_UPDATE_CUST_DEAFULT_CARD
 (
	IN IN_CSTNO VARCHAR(10), 
	IN IN_OPERTYPE VARCHAR(1), 
	IN IN_CARDNO VARCHAR(30), 
	OUT OUT_RET_CODE VARCHAR(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-瀹㈡埛鏈嶅姟-璁板綍鐢ㄦ埛鐧诲綍涓氬姟榛樿鍗″彿
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氱敤鎴风紪鍙?-- IN_OPERTYPE锛?鐢ㄦ埛鐧诲綍涓氬姟绫诲瀷0锛氬姹囧疂锛?锛氬熀閲戣秴甯傦紝2锛氫俊鐢ㄥ崱  3:閾惰瘉杞处	4锛氫紒涓氬勾閲?--                           5:閾舵湡璇佽浆璐?-- IN_CARDNO锛氫笟鍔＄被鍨嬪搴旂殑榛樿鍗″彿
  
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.WUJC 
-- 鏈€鍚庝慨鏀规棩鏈?锛?2006.3.26
------------------------------------------------------------------------
BEGIN

  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;

	IF NOT EXISTS (
		SELECT 1 
		FROM PB_DFLCRD 
		WHERE 
			PDC_CSTNO=IN_CSTNO AND 
			PDC_OPRTYP=IN_OPERTYPE
	) THEN
		INSERT INTO PB_DFLCRD
		(
			PDC_CSTNO,
			PDC_OPRTYP,
			PDC_CARDNO
		)
		VALUES 
		(
			IN_CSTNO,
			IN_OPERTYPE,
			IN_CARDNO
		);
	ELSE 
		UPDATE PB_DFLCRD 
		SET 
			PDC_CARDNO=IN_CARDNO
		WHERE 
			PDC_CSTNO=IN_CSTNO AND
			PDC_OPRTYP=IN_OPERTYPE;
	END IF;
	
	COMMIT;
	
	SET OUT_RET_CODE='00000';
	
END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SERVICE_UPDATE_CUST_FIRST_PAGE
 (
	IN IN_CSTNO VARCHAR(10), 
	IN IN_QUERYTYPE VARCHAR(1), 
	IN IN_CARDNO VARCHAR(30), 
	OUT OUT_RET_CODE CHARACTER(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-瀹㈡埛鏈嶅姟-璁板綍鐢ㄦ埛棣栭〉闈㈣缃?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氱敤鎴风紪鍙?-- IN_QUERYTYPE锛氶椤靛笎鍙锋煡璇㈢被鍨嬶紙0锛氬父鐢ㄥ笎鎴锋煡璇紱1锛氫笅鎸傚笎鎴锋煡璇級
-- IN_CARDNO锛氭煡璇㈠笎鍙?-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.ZhangHao
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.10
------------------------------------------------------------------------
BEGIN

	-- 澹版槑鍙橀噺
	DECLARE V_CARDNO VARCHAR(30) ;

  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;


	--鍒ゆ柇鏌ヨ绫诲瀷褰撴煡璇㈢被鍨嬩负甯哥敤绫诲瀷鏌ヨ鏃?鍥哄畾鍗″彿涓衡€榥ull鈥?	IF IN_QUERYTYPE='0' THEN
		SET V_CARDNO ='';
	ELSE
		SET V_CARDNO =IN_CARDNO;
	END IF;
                         	
	--鏌ユ壘璁板綍鏄惁瀛樺湪
	IF NOT EXISTS (
		SELECT 1 
		FROM PB_PERCTM 
		WHERE 
			PPC_CSTNO=IN_CSTNO 
	) THEN
		INSERT INTO PB_PERCTM  
		(
			PPC_CSTNO,
			PPC_ACCTYP,
			PPC_CARDNO
		)
		VALUES
		(
			IN_CSTNO,
			IN_QUERYTYPE,
			V_CARDNO
		);
    ELSE 
		UPDATE PB_PERCTM  
		SET
			PPC_ACCTYP=IN_QUERYTYPE,
			PPC_CARDNO=V_CARDNO
		WHERE PPC_CSTNO=IN_CSTNO;
    END IF;
            
	COMMIT ;
	
	SET OUT_RET_CODE='00000';

END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SERVICE_UPDATE_CUST_INFO
 (
	IN IN_CSTNO			VARCHAR(10), 
	IN IN_ALIAS_FLAG	VARCHAR(1), 
	IN IN_NEW_ALIAS		VARCHAR(30), 
	IN IN_ADDRESS		VARCHAR(60), 
	IN IN_PHONE			VARCHAR(20), 
	IN IN_EMAIL			VARCHAR(60), 
	IN IN_PWD_FLAG		VARCHAR(1), 
	IN IN_OLD_PWD		VARCHAR(60), 
	IN IN_NEW_PWD		VARCHAR(60), 
	OUT OUT_RET_CODE	VARCHAR(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-瀹㈡埛鏈嶅姟-涓汉璧勬枡淇敼

-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氱敤鎴峰悕
-- IN_ALIAS-FLAG锛氱敤鎴峰埆鍚嶄慨鏀规爣蹇?
-- IN_NEW_ALIAS锛氬埆鍚?
-- IN_ADDRESS锛氬湴鍧€ 
-- IN_PHONE锛氳仈绯荤數璇?-- IN_EMAIL锛氱敤鎴烽偖浠?
-- IN_PWD_FLAG 锛氬瘑鐮佷慨鏀规爣蹇?
-- IN_OLD_PWD锛氭棫瀵嗙爜
-- IN_NEW_PWD锛氭柊瀵嗙爜 

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.hulun
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.10.10

-- 淇敼锛氬幓闄ゆ杩庤
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.08.21
------------------------------------------------------------------------
BEGIN
	-- 澹版槑鍙橀噺
	DECLARE V_OLD_PWD  VARCHAR(60) ;
	DECLARE V_CHANGE_ALIAS  VARCHAR(1) DEFAULT '0';
	DECLARE V_CHANGE_PASSWORD  VARCHAR(1) DEFAULT '0';

  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;

	--鏌ヨ鏃у瘑鐮?
	SELECT 
		PIF_PASSWORD
	INTO
		V_OLD_PWD
	FROM PB_CSTINF
	WHERE
		PIF_CSTNO=IN_CSTNO;
		
	--鍒ゆ柇鐢ㄦ埛鍒悕淇敼鏍囧織 
	IF IN_ALIAS_FLAG='1' THEN
		IF IN_NEW_ALIAS IS NULL OR IN_NEW_ALIAS='' THEN
			SET OUT_RET_CODE = '30706';
			RETURN;
		END IF;
		      
        IF EXISTS(SELECT 1 FROM PB_CSTINF 
        	WHERE PIF_CSTNO != IN_CSTNO
            AND PIF_ALIAS = IN_NEW_ALIAS) THEN
            -- 璇ョ櫥褰曞悕宸茶鍗犵敤
            SET OUT_RET_CODE = '30010';
		    RETURN;
        END IF;
            
	   	SET V_CHANGE_ALIAS = '1';
	END IF;

	--妫€鏌ュ瘑鐮佹槸鍚︿慨鏀?	IF IN_PWD_FLAG='1' THEN
		IF (IN_NEW_PWD IS NULL OR IN_NEW_PWD='') AND (IN_OLD_PWD IS NULL OR IN_OLD_PWD='' ) THEN
			SET OUT_RET_CODE = '30706';
			RETURN;
		END IF;
		
		IF IN_OLD_PWD=V_OLD_PWD THEN
			SET V_CHANGE_PASSWORD ='1';
		ELSE 
			SET OUT_RET_CODE='30705';
			RETURN ;
		END IF;
	END IF;
	
	IF V_CHANGE_PASSWORD = '0' AND  V_CHANGE_ALIAS='0' THEN 
		--鍒悕瀵嗙爜閮戒笉淇敼
		UPDATE PB_CSTINF  
		SET   
		      PIF_ADDRESS=IN_ADDRESS,
		      PIF_PHONE=IN_PHONE,
		      PIF_EMAIL=IN_EMAIL
		WHERE 
			PIF_CSTNO=IN_CSTNO;
	
	ELSEIF V_CHANGE_PASSWORD = '1' AND  V_CHANGE_ALIAS='0' THEN 
		--鍙慨鏀瑰瘑鐮?		UPDATE PB_CSTINF  
		SET   
		      PIF_ADDRESS=IN_ADDRESS,
		      PIF_PHONE=IN_PHONE,
		      PIF_EMAIL=IN_EMAIL,
		      PIF_PASSWORD=IN_NEW_PWD
		WHERE 
			PIF_CSTNO=IN_CSTNO;
	
	ELSEIF V_CHANGE_PASSWORD = '0' AND  V_CHANGE_ALIAS='1' THEN 
		--鍙慨鏀瑰埆鍚?		UPDATE PB_CSTINF  
		SET   
		      PIF_ADDRESS=IN_ADDRESS,
		      PIF_PHONE=IN_PHONE,
		      PIF_EMAIL=IN_EMAIL,
		      PIF_ALIAS = IN_NEW_ALIAS
		WHERE 
			PIF_CSTNO=IN_CSTNO;
	
	ELSE
		--鍏ㄩ儴淇敼
		UPDATE PB_CSTINF  
		SET   
		      PIF_ADDRESS=IN_ADDRESS,
		      PIF_PHONE=IN_PHONE,
		      PIF_EMAIL=IN_EMAIL,
		      PIF_PASSWORD=IN_NEW_PWD,
		      PIF_ALIAS = IN_NEW_ALIAS
		WHERE 
			PIF_CSTNO=IN_CSTNO;
	END IF;
	
	COMMIT;

	SET OUT_RET_CODE = '00000';
  
END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SERVICE_UPDATE_DEFCARDS
 (
	IN IN_CSTNO VARCHAR(10), 
	IN IN_FXCARDNO VARCHAR(30), 
	IN IN_FUNDCARDNO VARCHAR(30), 
	IN IN_CREDITCARDNO VARCHAR(30),
	IN IN_TDCARDNO VARCHAR(30),
	IN IN_ANNUITYCARDNO VARCHAR(30),
	IN IN_YQZCARDNO VARCHAR(30),
	IN IN_GOLDCARDNO VARCHAR(30),
	IN IN_INSURECARDNO VARCHAR(30),
	IN IN_SPECIALCARDNO VARCHAR(30),
	IN IN_SALARYCARDNO VARCHAR(30),
	OUT OUT_RET_CODE CHARACTER(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-瀹㈡埛鏈嶅姟-鐢ㄦ埛棰戦亾榛樿鐧诲綍鍗″彿缁戝畾淇敼

-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氱敤鎴风紪鍙?-- IN_FXCARDNO: 澶栨眹瀹濆搴旈粯璁ゅ崱鍙?
-- IN_FUNDCARDNO锛氬熀閲戣秴甯傚搴旈粯璁ゅ崱鍙?-- IN_CREDITCARDNO锛氫俊鐢ㄥ崱瀵瑰簲榛樿鍗″彿
-- IN_TDCARDNO锛氶摱璇佽浆璐﹀搴旈粯璁ゅ崱鍙?-- IN_ANNUITYCARDNO:浼佷笟骞撮噾瀵瑰簲榛樿鍗″彿
-- IN_YQZCARDNO :閾舵湡璇佽浆璐﹀搴旈粯璁ゅ崱鍙?-- IN_GOLDCARDNO : 榛勯噾涔板崠瀵瑰簲榛樿鍗″彿
-- IN_INSURECARDNO : 淇濋櫓浠ｉ攢瀵瑰簲榛樿鍗″彿
-- IN_SPECIALCARDNO : 鐗硅壊涓氬姟瀵瑰簲榛樿鍗″彿
-- IN_SALARYCARDNO : 鐢靛瓙宸ヨ祫鍗曞搴旈粯璁ゅ崱鍙?-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 褰撲紶杩涙潵鐨勫崱鍙蜂负绌烘椂灏变笉鏇存柊鍘熷搴旀暟鎹€?-- 鏈€鍚庝慨鏀逛汉 锛?鑳′鸡
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.10
-- 鏇存柊鏃ユ湡锛?006.10.08 by Wanglm
-- 淇敼鏃ユ湡锛?007.12.12 by Wanglm
-- 淇敼鏃ユ湡锛?008.04.02 by pengxb
-- 淇敼鏃ユ湡锛?011.03.03 by wanglm 澧炲姞璁板綍鐗硅壊涓氬姟缂磋垂鍗″彿
-- 淇敼鏃ユ湡锛?012.03.27 by zhouny 澧炲姞璁板綍鐢靛瓙宸ヨ祫鍗曢粯璁ゅ崱鍙?------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
    SET OUT_RET_CODE = '00000';
    IF IN_FXCARDNO IS NOT NULL AND IN_FXCARDNO<>'' THEN
	CALL PB_SERVICE_UPDATE_CUST_DEAFULT_CARD(
		IN_CSTNO,
		'0',
		IN_FXCARDNO,
		OUT_RET_CODE
	);	
	END IF;

	IF OUT_RET_CODE <> '00000' THEN
		RETURN;
	END IF;

	IF IN_FUNDCARDNO IS NOT NULL AND IN_FUNDCARDNO<>'' THEN
	CALL PB_SERVICE_UPDATE_CUST_DEAFULT_CARD(
		IN_CSTNO,
		'1',
		IN_FUNDCARDNO,
		OUT_RET_CODE
	);	
	END IF;

	IF OUT_RET_CODE <> '00000' THEN
		RETURN;
	END IF;
	
    IF IN_CREDITCARDNO IS NOT NULL AND IN_CREDITCARDNO<>'' THEN
	CALL PB_SERVICE_UPDATE_CUST_DEAFULT_CARD(
		IN_CSTNO,
		'2',
		IN_CREDITCARDNO,
		OUT_RET_CODE
	);	
    END IF;
	
	IF OUT_RET_CODE <> '00000' THEN
		RETURN;
	END IF;
	
    IF IN_TDCARDNO IS NOT NULL AND IN_TDCARDNO<>'' THEN
	CALL PB_SERVICE_UPDATE_CUST_DEAFULT_CARD(
		IN_CSTNO,
		'3',
		IN_TDCARDNO,
		OUT_RET_CODE
	);	
    END IF;
    
    IF OUT_RET_CODE <> '00000' THEN
		RETURN;
	END IF;
    
    IF IN_ANNUITYCARDNO IS NOT NULL AND IN_ANNUITYCARDNO<>'' THEN
	CALL PB_SERVICE_UPDATE_CUST_DEAFULT_CARD(
		IN_CSTNO,
		'4',
		IN_ANNUITYCARDNO,
		OUT_RET_CODE
	);	
    END IF;
    
    IF IN_YQZCARDNO IS NOT NULL AND IN_YQZCARDNO<>'' THEN
	CALL PB_SERVICE_UPDATE_CUST_DEAFULT_CARD(
		IN_CSTNO,
		'5',
		IN_YQZCARDNO,
		OUT_RET_CODE
	);	
    END IF;
    
    IF IN_GOLDCARDNO IS NOT NULL AND IN_GOLDCARDNO<>'' THEN
	CALL PB_SERVICE_UPDATE_CUST_DEAFULT_CARD(
		IN_CSTNO,
		'7',
		IN_GOLDCARDNO,
		OUT_RET_CODE
	);	
    END IF;
    
    IF IN_INSURECARDNO IS NOT NULL AND IN_INSURECARDNO<>'' THEN
	CALL PB_SERVICE_UPDATE_CUST_DEAFULT_CARD(
		IN_CSTNO,
		'8',
		IN_INSURECARDNO,
		OUT_RET_CODE
	);	
    END IF;
    
    IF IN_SPECIALCARDNO IS NOT NULL AND IN_SPECIALCARDNO<>'' THEN
	CALL PB_SERVICE_UPDATE_CUST_DEAFULT_CARD(
		IN_CSTNO,
		'9',
		IN_SPECIALCARDNO,
		OUT_RET_CODE
	);
    END IF;
    
    IF IN_SALARYCARDNO IS NOT NULL AND IN_SALARYCARDNO<>'' THEN
	CALL PB_SERVICE_UPDATE_CUST_DEAFULT_CARD(
		IN_CSTNO,
		'a',
		IN_SALARYCARDNO,
		OUT_RET_CODE
	);
    END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SERVICE_UPDATE_WELCOMEWORDS
 (
	IN IN_CSTNO			VARCHAR(10),
	IN IN_LOVENAME		VARCHAR(30),
	OUT OUT_RET_CODE	VARCHAR(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-瀹㈡埛鏈嶅姟-缃戦摱涓€ц缃?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿
-- IN_LOVENAME锛氭杩庤  

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜?锛?Michael Wang
-- 鍒涘缓鏃ユ湡 锛?2007.08.21
------------------------------------------------------------------------
BEGIN
  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
    
	UPDATE PB_CSTINF 
	
		SET PIF_LOVENAME = IN_LOVENAME
			
	WHERE
			PIF_CSTNO = IN_CSTNO;
	COMMIT;

	SET OUT_RET_CODE = '00000';
  
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECK_USE_MOBILE(
	IN IN_MOBILE		VARCHAR(11),
	OUT PROC_RET_CODE   	VARCHAR(5)	
)
READS SQL DATA 
------------------------------------------------------------------------

-- SQL 瀛樺偍杩囩▼
-- 妫€鏌ヨ緭鍏ョ綉閾舵墜鏈哄彿鏄惁宸茬粡琚娇鐢?-- 杈撳叆鍙傛暟锛?-- IN_MOBILE锛氭墜鏈哄彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細ECC.xuwei
-- 鍒涘缓鏃ユ湡 锛?2008.12.10

------------------------------------------------------------------------

BEGIN
 	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
		
	-- 鍒ゆ柇缃戦摱鎵嬫満鍙锋槸鍚﹀繁琚娇鐢?	IF EXISTS(			
			SELECT 
				1
			FROM
				PB_CSTINF
			WHERE
				PIF_MOBILE = IN_MOBILE		
		)THEN		
				SET PROC_RET_CODE = '32005';  --鎵嬫満鍙峰凡琚娇鐢?
		 ELSE			
				SET PROC_RET_CODE = '00000';					
	END IF;
		
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_MODIFY_MOBILE(
	IN IN_CSTNO		VARCHAR(10),
	IN IN_CUSTOMETYPE	VARCHAR(1),
	IN IN_MOBILE		VARCHAR(11),
	OUT PROC_RET_CODE   	VARCHAR(5)
)
------------------------------------------------------------------------

-- SQL 瀛樺偍杩囩▼
-- 淇敼缃戦摱鎵嬫満鍙风爜
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO: 瀹㈡埛鍙?-- IN IN_CUSTOMETYPE: 瀹㈡埛绫诲瀷
-- IN_MOBILE锛氭墜鏈哄彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜猴細ECC.xuwei
-- 鍒涘缓鏃ユ湡 锛?2008.12.10

------------------------------------------------------------------------

BEGIN
 	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	IF(IN_CUSTOMETYPE = '1')
	THEN
		UPDATE PB_CSTINF SET PIF_MOBILE = IN_MOBILE WHERE PIF_CSTNO = IN_CSTNO;	
	END IF;
	SET PROC_RET_CODE = '00000';
	COMMIT;
		
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_MODIFY_MOBILE2(
	IN IN_CSTNO		VARCHAR(10),
	IN IN_CUSTOMETYPE	VARCHAR(1),
	IN IN_MOBILE		VARCHAR(11),
	OUT PROC_RET_CODE   	VARCHAR(5)
)
------------------------------------------------------------------------

-- SQL 瀛樺偍杩囩▼
-- 淇敼缃戦摱鎵嬫満鍙风爜(鐭俊瀵嗙爜鐗?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO: 瀹㈡埛鍙?-- IN IN_CUSTOMETYPE: 瀹㈡埛绫诲瀷
-- IN_MOBILE锛氭墜鏈哄彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜猴細ECC.xuwei
-- 鍒涘缓鏃ユ湡 锛?2008.12.10

------------------------------------------------------------------------

BEGIN
 	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	IF(IN_CUSTOMETYPE = '0')
	THEN
		UPDATE PB_CSTINF SET PIF_MOBILE = IN_MOBILE WHERE PIF_CSTNO = IN_CSTNO;	
	END IF;
	SET PROC_RET_CODE = '00000';
	COMMIT;
		
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_CUSTOMER_STYLE_INFO
(
    IN IN_CUSTOMERID      VARCHAR(10),
    IN IN_SELFSTYLE	VARCHAR(20),
	IN IN_USERROLE VARCHAR(2),
    OUT PROC_RET_CODE	VARCHAR(5)
)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 淇濆瓨鐢ㄦ埛璁惧畾鐨勭毊鑲ゆ牱寮?
-- 杈撳叆鍙傛暟锛?-- IN_CUSTOMERID: 瀹㈡埛鍙?-- IN_SELFSTYLE:  CSS鏂囦欢鍚?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- @author锛歭an_xb
-- 鍒涘缓鏃ユ湡锛?009.07.29
------------------------------------------------------------------------
BEGIN


    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		
		ROLLBACK ;
	END;
	-- 鍒ゆ柇鏄惁鑳戒娇鐢ㄦ矁寰蜂笓浜毊鑲?	IF (IN_SELFSTYLE = 'wd_skin.css' AND 
				   (IN_USERROLE <> '20' AND IN_USERROLE <> '21') )
   THEN
    	SET PROC_RET_CODE = '30721';
		RETURN;
    END IF;
    -- 鍒ゆ柇鏄惁鑳戒娇鐢ㄤ氦閾朵笓浜毊鑲?    IF (IN_SELFSTYLE = 'jy_skin.css' AND 
				   (IN_USERROLE <> '22' AND IN_USERROLE <> '23'))
   THEN
    	SET PROC_RET_CODE = '30722';
		RETURN;
    END IF;
	
	
    IF  EXISTS 
		(
			SELECT 1 
			FROM PB_USERDEFINED
			WHERE PUD_CSTNO = IN_CUSTOMERID 
		) 
	THEN
	    -- 鏇存柊鑷畾涔夌毊鑲や俊鎭?	  UPDATE  PB_USERDEFINED SET PUD_STYLE=IN_SELFSTYLE
	  WHERE PUD_CSTNO = IN_CUSTOMERID ;
	ELSE
			 INSERT INTO PB_USERDEFINED
			(
				PUD_CSTNO   ,
				PUD_STYLE 
			)
			VALUES
			(
				IN_CUSTOMERID,
				IN_SELFSTYLE
			);
	
	
	END IF;

	COMMIT;
    
	SET PROC_RET_CODE = '00000'; 
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_CUSTOMER_MENU_INFO
(
    IN IN_CUSTOMERID      VARCHAR(10),
    IN IN_MENUCODE	VARCHAR(300),
    OUT PROC_RET_CODE	VARCHAR(5)
)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 灏嗚嚜瀹氫箟鑿滃崟淇℃伅淇℃伅瀵煎叆鏁版嵁搴?
-- 杈撳叆鍙傛暟锛?-- IN_CUSTOMERID: 瀹㈡埛鍙?-- IN_MENUCODE:  鑷畾涔夎彍鍗曠爜

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?009.07.03
------------------------------------------------------------------------
BEGIN


    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		
		ROLLBACK ;
	END;
  IF  EXISTS 
		(
			SELECT 1 
			FROM PB_USERDEFINED
			WHERE PUD_CSTNO = IN_CUSTOMERID 
		) 
	THEN
	    -- 鏇存柊鑷畾涔夎彍鍗曚俊鎭?	  UPDATE  PB_USERDEFINED SET PUD_USUALMENU=IN_MENUCODE
	  WHERE PUD_CSTNO = IN_CUSTOMERID ;
	ELSE
			 INSERT INTO PB_USERDEFINED
			(
				PUD_CSTNO   ,
				PUD_USUALMENU 
			)
			VALUES
			(
				IN_CUSTOMERID,
				IN_MENUCODE
			);
	
	
	END IF;

	COMMIT;
    
	SET PROC_RET_CODE = '00000'; 
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PC_SERVICE_UPDATE_WELCOMEWORDS
 (
	IN IN_CSTNO			VARCHAR(10),
	IN IN_LOVENAME		VARCHAR(30),
	OUT OUT_RET_CODE	VARCHAR(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 閾堕摱鍚堜綔骞冲彴-瀹㈡埛鏈嶅姟-缃戦摱涓€ц缃?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿
-- IN_LOVENAME锛氭杩庤  

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜?锛?Fenghj
-- 鍒涘缓鏃ユ湡 锛?2010.04.21
------------------------------------------------------------------------
BEGIN
  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
    
	UPDATE PB_COCSTINF 
	
		SET PCCI_LOVENAME = IN_LOVENAME
			
	WHERE
			PCCI_CSTNO = IN_CSTNO;
	COMMIT;

	SET OUT_RET_CODE = '00000';
  
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PC_SERVICE_CHECK_CSTPSW
(
  IN IN_CARDNO      VARCHAR(30),
	IN IN_OLDPWD      VARCHAR(60),
	IN IN_NEWPWD      VARCHAR(60),
	IN IN_LOGINIP     VARCHAR(20),  
	OUT PROC_RET_CODE VARCHAR(5)
)
MODIFIES SQL DATA
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏅€氱敤鎴风姸鎬佹娴?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO 锛氬崱鍙?-- IN_OLDPWD : 鍘熷瘑鐮?-- IN_NEWPWD : 鏂板瘑鐮?-- IN_LOGINIP: 瀹㈡埛IP鍦板潃

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--                00000 : 姝ｅ父
--                30032 : 鐢ㄦ埛鏈缃櫥褰曞瘑鐮?--                30033 : 鐢ㄦ埛宸查攣瀹氾紝璇烽€氳繃閲嶇疆瀵嗙爜瑙ｉ攣
--                30012 锛氬瘑鐮侀敊璇紝鍓╀綑5娆?--                30014 锛氬瘑鐮侀敊璇紝鍓╀綑4娆?--                30014 : 瀵嗙爜閿欒锛屽墿浣?娆?--                30015 : 瀵嗙爜閿欒锛屽墿浣?娆?--                30016 : 瀵嗙爜閿欒锛屽墿浣?娆?

-- 鏈€鍚庝慨鏀逛汉锛歠enghj
-- 鏈€鍚庝慨鏀规棩鏈燂細2010.05.18
------------------------------------------------------------------------

BEGIN
    -- 鍙橀噺澹版槑
    DECLARE V_STT      CHAR(1);     -- 鐢ㄦ埛鐘舵€?	DECLARE V_PASSWORD VARCHAR(60); -- 瀵嗙爜
	DECLARE V_TIMES    INT;			-- 澶辫触娆℃暟
	DECLARE V_TIME     VARCHAR(14); --瀹㈡埛鏈€鍚庣櫥褰曟椂闂?	DECLARE V_CSTNO    VARCHAR(10); --瀹㈡埛鍙?
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	
	-- 鏌ヨ鐢ㄦ埛淇℃伅
	SELECT PCCI_CSTNO,PCCI_STT,PCCI_PASSWORD
	INTO   V_CSTNO,V_STT,V_PASSWORD
	FROM PB_COCSTINF WHERE 
	PCCI_CARDNO=IN_CARDNO;
	
	IF V_CSTNO IS NULL OR V_CSTNO = ''
	THEN
		SET PROC_RET_CODE = '30003';
		RETURN;	
	END IF;	
	-- 妫€鏌ョ敤鎴锋槸鍚﹀畬鎴愮櫥褰曞瘑鐮佽缃?	IF V_STT IS NULL THEN
	   SET PROC_RET_CODE = '30032';
	   RETURN;
	-- 妫€鏌ョ敤鎴风姸鎬?0 姝ｅ父 1 鍐荤粨 2 瀵嗙爜瓒呰繃鏈€澶ч敊璇暟閿佸畾
	ELSEIF V_STT <> '0' THEN
	   SET PROC_RET_CODE = '30033';
	   RETURN;
	END IF;
	
	
	
	
	
	-- 鍒ゆ柇瀵嗙爜鏄惁姝ｇ‘
	IF IN_OLDPWD <> V_PASSWORD THEN
	   -- 鑾峰彇褰撳墠鏃堕棿
	   SET V_TIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	   -- 鑾峰彇鐧诲綍瀵嗙爜閿欒娆℃暟 TYPE='1' 涓虹櫥褰曞瘑鐮?	   SELECT PLF_TIMES INTO V_TIMES FROM PB_LOGFAIL 
	   		  WHERE PLF_CARDNO=V_CSTNO AND PLF_TYPE='2';
	   -- 鍒ゆ柇鏄惁鏄涓€娆″瘑鐮佽緭鍏ラ敊璇?	   IF V_TIMES IS NULL THEN
	   	    -- 绗竴娆″瘑鐮佽緭鍏ラ敊璇?    	    INSERT INTO PB_LOGFAIL
			(
				PLF_CARDNO,
				PLF_TIMES,
				PLF_UPDTIM,
				PLF_TYPE
			)
			VALUES
			(
				V_CSTNO,
				1,
				V_TIME,
				'2'
			);
			SET PROC_RET_CODE = '30012';
			COMMIT;
			RETURN;
		ELSE
			-- 闈炵涓€娆″瘑鐮佽緭鍏ラ敊璇?				
			UPDATE PB_LOGFAIL
			SET
				PLF_TIMES = V_TIMES + 1,
				PLF_UPDTIM= V_TIME,
				PLF_IPADDR= IN_LOGINIP
			WHERE 
				PLF_CARDNO = V_CSTNO AND PLF_TYPE='2';
			CASE V_TIMES
		    WHEN 1
		    THEN 
		        SET PROC_RET_CODE = '30013';
		    WHEN 2
		    THEN 
		        SET PROC_RET_CODE = '30014';
		    WHEN 3
		    THEN 
		        SET PROC_RET_CODE = '30015';
		    WHEN 4
		    THEN 
		        SET PROC_RET_CODE = '30016';
		   	ELSE
				-- 瓒呰繃鏈€澶ч敊璇鏁帮紝璁剧疆鐢ㄦ埛鐘舵€?				UPDATE PB_COCSTINF
				SET
				  PCCI_STT = '1'
				WHERE
				  PCCI_CARDNO = IN_CARDNO;
		   		SET PROC_RET_CODE = '30033';
		    END CASE;
			COMMIT;
			RETURN;
		END IF;
	END IF;
	
	
	-- 瀵嗙爜杈撳叆姝ｇ‘鍒犻櫎閿欒璁板綍
	DELETE FROM PB_LOGFAIL
	WHERE PLF_CARDNO = V_CSTNO AND PLF_TYPE ='2';
	
	UPDATE PB_COCSTINF
	SET
		PCCI_PASSWORD = IN_NEWPWD
	WHERE
	    PCCI_CARDNO = IN_CARDNO;   
		 
	SET PROC_RET_CODE = '00000';
	COMMIT;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SERVICE_QUERY_CMRATE
(
	IN IN_BRANCHNO      CHAR(6),   	  -- 鍒嗚鍙?    IN IN_CCY	 	    CHAR(3),      -- 甯佺
	IN IN_DEP_TYP       DECIMAL(2),   -- 瀛樼
    IN IN_DEP           CHAR(4),      -- 瀛樻湡
    OUT PROC_RET_CODE	VARCHAR(5),   -- 瀛樺偍杩囩▼杩斿洖鐮?    OUT OUT_RATE        DECIMAL(8,6)  -- 瀛樻鍒╃巼
)
----------------------------------
-- 鏍规嵁鍒嗚鍙枫€佸竵绉嶃€佸瓨鏈熸煡璇㈠瓨娆惧埄鐜?-- 30707 瀵瑰簲鍒╃巼浠ｇ爜涓嶅瓨鍦?----------------------------------
BEGIN

	DECLARE V_RATECODE  CHAR(4);
	
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_RATE = DECIMAL('0',8,6);
		ROLLBACK ;
	END;
	
	SELECT PFD_RAT_CODE INTO V_RATECODE FROM PB_FDTPARC WHERE PFD_BK = IN_BRANCHNO AND PFD_CCY = IN_CCY AND PFD_DEP_TYP = IN_DEP_TYP AND PFD_PERD = IN_DEP;
	
	IF V_RATECODE IS NULL OR V_RATECODE = '' THEN
		SET PROC_RET_CODE = '30707';
		SET OUT_RATE = DECIMAL('0',8,6);
		RETURN;
	END IF;
	
	SELECT PBC_RATE INTO OUT_RATE FROM PB_CMTINT WHERE PBC_BK = IN_BRANCHNO AND PBC_CCY = IN_CCY AND PBC_CD = V_RATECODE ORDER BY PBC_SDT DESC FETCH FIRST 1 ROWS ONLY;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SERVICE_QUERY_CUSTPWD_INFO
 (
 	IN IN_CSTNO			VARCHAR(10), 	 
	OUT OUT_RET_CODE	VARCHAR(5), 
	OUT OUT_PWD         VARCHAR(60)
 ) 
 READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-瀹㈡埛鏈嶅姟-涓汉璧勬枡鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氱綉閾跺鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_PWD锛氱敤鎴风櫥褰曞瘑鐮?------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;	
		
	-- 鏍规嵁鐢ㄦ埛缂栧彿鏌ヨ鐢ㄦ埛淇℃伅
	SELECT PIF_PASSWORD	INTO OUT_PWD FROM PB_CSTINF	WHERE PIF_CSTNO = IN_CSTNO;
	SET OUT_RET_CODE = '00000';  
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CRPCUSAGR_QUERY_AREA
(
	OUT OUT_RET_CODE	VARCHAR(5) 
)
 READS SQL DATA 
 DYNAMIC RESULT SETS 1 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鍟嗘埛閫氬湴鍖轰俊鎭?-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN
	DECLARE AREA_CURSOR CURSOR  WITH RETURN TO CALLER FOR
	SELECT
		PCAR_PVICODE,PCAR_CITYCODE,PCAR_PVINAME,PCAR_CITYNAME,PCAR_CONTYP
	FROM
	    PB_CRPCUSAGR_AREA;
	    
	    
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
	END;

	OPEN AREA_CURSOR;
	
	SET OUT_RET_CODE = '00000';  
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SEARCH_NOTES_INFO
(	
  IN IN_KEYWORDS VARCHAR(50),
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁鍏抽敭瀛楁ā绯婃煡璇㈠尮閰嶇殑缃戠偣銆佺綉鐐规墍灞炲垎琛屽強鐪佷唤淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_KEYWORDS: 鍏抽敭瀛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆嗭細CUR_NOTESINFO 
-- 鍒涘缓浜猴細gongjx
-- 鍒涘缓鏃ユ湡锛?011-12-22
------------------------------------------------------------------------
BEGIN
	--鑾峰彇鎸囧畾鐪併€佺洿杈栧競鐨勫煄甯?	--澹版槑鍙橀噺
	DECLARE V_KEYWORDS VARCHAR(60);
	--SET V_KEYWORDS = '%'||IN_KEYWORDS||'%';
	
	DECLARE	CUR_NOTESINFO CURSOR WITH	RETURN FOR
	
SELECT A.POB_DEPTNO,A.POB_ORG_NAME,A.POB_ORG_BK,A.PBR_CITYCODE,B.CIT_PVICODE,B.CIT_CITYNAME FROM 
(SELECT POB_DEPTNO,POB_ORG_NAME,POB_ORG_BK,PBR_CITYCODE FROM
 PB_ORG_BANKINFO 
 JOIN PB_BRCHRUT 
 ON POB_ORG_BK=PBR_CORENO||'999' WHERE POB_ORG_NAME LIKE '%'||IN_KEYWORDS||'%') A 
JOIN PB_CITYINFO B ON B.CIT_CITYCODE=A.PBR_CITYCODE WHERE A.POB_DEPTNO IN (SELECT DISTINCT PQNI_NODNO FROM PB_QUEUE_NOTES_INFO WHERE PQNI_OPENFLG='1') ORDER BY A.POB_DEPTNO;

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	--杩斿洖缁撴灉闆?	OPEN CUR_NOTESINFO;
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SEARCH_CITYCODE_INFO
(	
  IN IN_NODNO VARCHAR(1500),
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁缃戠偣鍙锋煡璇㈠尮閰嶇殑缃戠偣鎵€灞炲垎琛屽強鐪佷唤淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_NODNO: 缃戠偣鍙峰瓧绗︿覆锛岀敤鈥渱鈥濆垎鍓茬殑
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆嗭細CUR_NOTESINFO 
-- 鍒涘缓浜猴細gongjx
-- 鍒涘缓鏃ユ湡锛?011-12-22
------------------------------------------------------------------------
BEGIN
	--鐢虫槑鍙橀噺
	DECLARE V_TEMP 				VARCHAR(1500) ;
	DECLARE V_POS 				INT;
	DECLARE V_CURR_STR		 VARCHAR(10);
	
	DECLARE v_sql VARCHAR(3000);
	DECLARE V_NODNO_CONDITION VARCHAR(2500);
	-- 澹版槑娓告爣
	DECLARE CUR_NOTESINFO CURSOR WITH RETURN TO CALLER FOR SQLSTATMENT;
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;

	set V_NODNO_CONDITION='';
	
	--瑙ｄ覆锛屽緱鍒伴渶瑕佹煡璇㈢殑鍏ㄩ儴缃戠偣鍙凤紝缁勬垚绫讳技'110100','110200','110300'鐨勬煡璇㈡潯浠?	SET V_TEMP = IN_NODNO;
	WHILE V_TEMP<>'#' DO 
		SET V_POS = POSSTR(V_TEMP,'|');
		SET V_CURR_STR = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_NODNO_CONDITION = V_NODNO_CONDITION||''''||V_CURR_STR||''',';
	END WHILE;
	SET V_NODNO_CONDITION = SUBSTR(V_NODNO_CONDITION, 1, LENGTH(V_NODNO_CONDITION)-1);
	
 	set v_sql='SELECT A.POB_DEPTNO,A.POB_ORG_NAME,A.POB_ORG_BK,A.PBR_CITYCODE,B.CIT_PVICODE,B.CIT_CITYNAME FROM '||
	'(SELECT POB_DEPTNO,POB_ORG_NAME,POB_ORG_BK,PBR_CITYCODE FROM '||
 	'PB_ORG_BANKINFO '||
 	'JOIN PB_BRCHRUT '||
 	'ON POB_ORG_BK=PBR_CORENO||''999'' WHERE POB_DEPTNO in ('||V_NODNO_CONDITION ||')) A '||
	'JOIN PB_CITYINFO B ON B.CIT_CITYCODE=A.PBR_CITYCODE ORDER BY A.POB_DEPTNO';

	--杩斿洖缁撴灉闆?	PREPARE SQLSTATMENT FROM v_sql; 
	OPEN CUR_NOTESINFO;
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_QUEUE_NOTES_INFO
(	
  IN IN_PQNI_BRNO VARCHAR(6),
  IN IN_PQNI_NODNO VARCHAR(6),
  IN IN_PQNI_OPENFLG CHAR(1),
  IN IN_PQNI_DATETYP CHAR(1),
  IN IN_PQNI_SPDATE VARCHAR(8),
  IN IN_PQNI_BUSNO CHAR(1),
  IN IN_PQNI_AMBEGIN VARCHAR(4),
  IN IN_PQNI_AMEND VARCHAR(4),
  IN IN_PQNI_PMBEGIN VARCHAR(4),
  IN IN_PQNI_PMEND VARCHAR(4),
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 浠巃de鑾峰彇 鏅鸿兘鍙彿鎺掗槦绯荤粺宸插紑鏀鹃绾︾殑缃戠偣鍙傛暟淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_PQNI_BRNO  		鍒嗚鍙?-- IN_PQNI_NODNO    	缃戠偣鍙?-- IN_PQNI_OPENFLG   	娓犻亾棰勭害鏍囪瘑  1-寮€閫氾紱2-鍏抽棴
-- IN_PQNI_DATETYP  	鏃ユ湡绫诲瀷  1-宸ヤ綔鏃ワ紱2-鑺傚亣鏃ワ紱3-鐗规畩鏃?-- IN_PQNI_SPDATE     	鐗规畩鏃ユ湡
-- IN_PQNI_BUSNO    	涓氬姟绫诲瀷   1-涓汉涓氬姟锛?-鍏徃涓氬姟
-- IN_PQNI_AMBEGIN   	涓婂崍钀ヤ笟寮€濮嬫椂闂?-- IN_PQNI_AMEND      	涓婂崍钀ヤ笟缁撴潫鏃堕棿
-- IN_PQNI_PMBEGIN  	涓嬪崍钀ヤ笟寮€濮嬫椂闂?-- IN_PQNI_PMEND  		涓嬪崍钀ヤ笟缁撴潫鏃堕棿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細gongjx
-- 鍒涘缓鏃ユ湡锛?012-06-13
------------------------------------------------------------------------
BEGIN

  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF EXISTS (
		SELECT 1 FROM PB_QUEUE_NOTES_INFO WHERE PQNI_BRNO=IN_PQNI_BRNO AND PQNI_NODNO=IN_PQNI_NODNO AND PQNI_OPENFLG=IN_PQNI_OPENFLG AND PQNI_DATETYP=IN_PQNI_DATETYP AND PQNI_SPDATE=IN_PQNI_SPDATE AND PQNI_BUSNO=IN_PQNI_BUSNO
	) THEN
		DELETE FROM PB_QUEUE_NOTES_INFO WHERE PQNI_BRNO=IN_PQNI_BRNO AND PQNI_NODNO=IN_PQNI_NODNO AND PQNI_OPENFLG=IN_PQNI_OPENFLG AND PQNI_DATETYP=IN_PQNI_DATETYP AND PQNI_SPDATE=IN_PQNI_SPDATE AND PQNI_BUSNO=IN_PQNI_BUSNO;
	END IF;
	
	INSERT INTO PB_QUEUE_NOTES_INFO 
	(PQNI_BRNO,PQNI_NODNO,PQNI_OPENFLG,PQNI_DATETYP,PQNI_SPDATE,PQNI_BUSNO,PQNI_AMBEGIN,PQNI_AMEND,PQNI_PMBEGIN,PQNI_PMEND) 
	VALUES 
	(IN_PQNI_BRNO,IN_PQNI_NODNO,IN_PQNI_OPENFLG,IN_PQNI_DATETYP,IN_PQNI_SPDATE,IN_PQNI_BUSNO,IN_PQNI_AMBEGIN,IN_PQNI_AMEND,IN_PQNI_PMBEGIN,IN_PQNI_PMEND);
	
	COMMIT;
	
	SET PROC_RET_CODE='00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_HOLIDAY_INFO
(	
  IN IN_PCHI_YEARS VARCHAR(4),
  IN IN_PCHI_NODNO VARCHAR(3),
  IN IN_PCHI_MONTH1 VARCHAR(31),
  IN IN_PCHI_MONTH2 VARCHAR(31),
  IN IN_PCHI_MONTH3 VARCHAR(31),
  IN IN_PCHI_MONTH4 VARCHAR(31),
  IN IN_PCHI_MONTH5 VARCHAR(31),
  IN IN_PCHI_MONTH6 VARCHAR(31),
  IN IN_PCHI_MONTH7 VARCHAR(31),
  IN IN_PCHI_MONTH8 VARCHAR(31),
  IN IN_PCHI_MONTH9 VARCHAR(31),
  IN IN_PCHI_MONTH10 VARCHAR(31),
  IN IN_PCHI_MONTH11 VARCHAR(31),
  IN IN_PCHI_MONTH12 VARCHAR(31),
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 浠巃de鑾峰彇 鍋囨湡琛ㄥ弬鏁颁俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_PCHI_YEARS          骞翠唤
-- IN_PCHI_NODNO          缃戠偣鍙?-- IN_PCHI_MONTH1         1鏈堝亣鏈熷弬鏁板€?-- IN_PCHI_MONTH2         2鏈堝亣鏈熷弬鏁板€?-- IN_PCHI_MONTH3         3鏈堝亣鏈熷弬鏁板€?-- IN_PCHI_MONTH4         4鏈堝亣鏈熷弬鏁板€?-- IN_PCHI_MONTH5         5鏈堝亣鏈熷弬鏁板€?-- IN_PCHI_MONTH6         6鏈堝亣鏈熷弬鏁板€?-- IN_PCHI_MONTH7         7鏈堝亣鏈熷弬鏁板€?-- IN_PCHI_MONTH8         8鏈堝亣鏈熷弬鏁板€?-- IN_PCHI_MONTH9         9鏈堝亣鏈熷弬鏁板€?-- IN_PCHI_MONTH10        10鏈堝亣鏈熷弬鏁板€?-- IN_PCHI_MONTH11        11鏈堝亣鏈熷弬鏁板€?-- IN_PCHI_MONTH12        12鏈堝亣鏈熷弬鏁板€?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細gongjx
-- 鍒涘缓鏃ユ湡锛?012-06-25
------------------------------------------------------------------------
BEGIN

  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF EXISTS (
		SELECT 1 FROM PB_CORE_HOLIDAY_INFO WHERE PCHI_YEARS=IN_PCHI_YEARS AND PCHI_NODNO=IN_PCHI_NODNO 
	) THEN
		DELETE FROM PB_CORE_HOLIDAY_INFO WHERE PCHI_YEARS=IN_PCHI_YEARS AND PCHI_NODNO=IN_PCHI_NODNO;
	END IF;
	
	INSERT INTO PB_CORE_HOLIDAY_INFO 
	(PCHI_YEARS,PCHI_NODNO,PCHI_MONTH1,PCHI_MONTH2,PCHI_MONTH3,PCHI_MONTH4,PCHI_MONTH5,PCHI_MONTH6,PCHI_MONTH7,PCHI_MONTH8,PCHI_MONTH9,PCHI_MONTH10,PCHI_MONTH11,PCHI_MONTH12) 
	VALUES 
	(IN_PCHI_YEARS,IN_PCHI_NODNO,IN_PCHI_MONTH1,IN_PCHI_MONTH2,IN_PCHI_MONTH3,IN_PCHI_MONTH4,IN_PCHI_MONTH5,IN_PCHI_MONTH6,IN_PCHI_MONTH7,IN_PCHI_MONTH8,IN_PCHI_MONTH9,IN_PCHI_MONTH10,IN_PCHI_MONTH11,IN_PCHI_MONTH12);
	
	COMMIT;
	
	SET PROC_RET_CODE='00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECK_NOTES_INFO
(
	IN  IN_NETSPOTNO    VARCHAR(6),
	OUT OUT_RET_CODE	VARCHAR(5) 
)
 READS SQL DATA 
 DYNAMIC RESULT SETS 1 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ缃戠偣鏄惁寮€閫氭湇鍔″姛鑳斤紝骞惰繑鍥炰俊鎭?-- 杈撳叆鍙傛暟锛欼N_NETSPOTNO 缃戠偣鍙?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN
	DECLARE AREA_CURSOR CURSOR  WITH RETURN TO CALLER FOR 
	SELECT PQNI_OPENFLG,PQNI_DATETYP,PQNI_SPDATE,PQNI_BUSNO,PQNI_AMBEGIN,PQNI_AMEND,PQNI_PMBEGIN,PQNI_PMEND FROM PB_QUEUE_NOTES_INFO WHERE PQNI_NODNO=IN_NETSPOTNO AND (PQNI_OPENFLG='1' OR (PQNI_OPENFLG='2' AND PQNI_DATETYP='3'));

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
	END;

	OPEN AREA_CURSOR;
	
	SET OUT_RET_CODE = '00000';  
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SEARCH_HOLIDAY_INFO
(
	IN  IN_YEARS    	VARCHAR(20),
	IN  IN_BRANCHNO    	VARCHAR(3),
	OUT OUT_RET_CODE	VARCHAR(5) 
)
 READS SQL DATA 
 DYNAMIC RESULT SETS 1 
 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁杈撳叆鐨勫勾浠藉€煎拰鍒嗚鍙凤紝鏌ヨ瀵瑰簲鐨勬牳蹇冨亣鏈熻〃
-- 杈撳叆鍙傛暟锛欼N_NETSIN_YEARSPOTNO 骞翠唤
-- 杈撳叆鍙傛暟锛欼N_NETSIN_BRANCHNOPOTNO 鍒嗚鍙?
-- 杈撳嚭鍙傛暟锛?-- 缁撴灉闆嗭細CUR_NOTESINFO 
-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN

	--鐢虫槑鍙橀噺
	DECLARE v_sql 		VARCHAR(1000);
	DECLARE V_TEMP 	 	VARCHAR(50);
	DECLARE V_POS 		INT;
	DECLARE V_YEARS 	VARCHAR(50);
	
	-- 澹版槑娓告爣
	DECLARE CUR_NOTESINFO CURSOR WITH RETURN TO CALLER FOR SQLSTATMENT;
	
  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
	END;
	--閽堝浼犲叆鐨勫勾浠界粍涓诧紝浼犲叆瀛楃涓叉牸寮忎负2012鎴栬€?011|2012锛岄渶瑕佺粍鎴愬舰濡?'2012'锛屾垨鑰?2011','2012'鐨勬牸寮?
	SET V_TEMP = IN_YEARS;
	SET V_POS = POSSTR(V_TEMP,'|');
	IF V_POS<1 THEN 
		set V_YEARS = ''''||V_TEMP||'''';
	ELSE 
		SET V_YEARS = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_YEARS = ''''||V_YEARS||''','''||V_TEMP||'''';
	END IF;
	
	set v_sql = 'SELECT PCHI_YEARS,PCHI_NODNO,PCHI_MONTH1,PCHI_MONTH2,PCHI_MONTH3,PCHI_MONTH4,PCHI_MONTH5,PCHI_MONTH6,PCHI_MONTH7,PCHI_MONTH8,PCHI_MONTH9,PCHI_MONTH10,PCHI_MONTH11,PCHI_MONTH12 '|| 
	'FROM PB_CORE_HOLIDAY_INFO WHERE PCHI_NODNO='||''''||IN_BRANCHNO||''''||' AND PCHI_YEARS in ('||V_YEARS||')';

	--杩斿洖缁撴灉闆?	PREPARE SQLSTATMENT FROM v_sql; 
	OPEN CUR_NOTESINFO;
	
	SET OUT_RET_CODE = '00000';  
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SEARCH_BRANCHNO_INFO
 (
 	IN  IN_NETSPOTNO    VARCHAR(6),	 
	OUT OUT_RET_CODE	VARCHAR(5), 
	OUT OUT_BRANCHNO    VARCHAR(3)
 ) 
 READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 杈撳叆缃戠偣鍙凤紝杩斿洖缃戠偣鎵€灞炲垎琛屽彿
-- 杈撳叆鍙傛暟锛?-- IN_NETSPOTNO锛氱綉鐐瑰彿

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_BRANCHNO锛氬垎琛屽彿
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;	
		
	-- 鏍规嵁鐢ㄦ埛缂栧彿鏌ヨ鐢ㄦ埛淇℃伅
	SELECT SUBSTR( POB_ORG_BK,1,3) INTO OUT_BRANCHNO FROM PB_ORG_BANKINFO WHERE POB_DEPTNO=IN_NETSPOTNO;
	SET OUT_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_QUEUE_NETSPOT_INFO
 ( 
  IN IN_CITYNO CHAR(4) ,
  OUT PROC_RET_CODE CHAR(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ閾惰鍩庡競鏀涓嬬殑鎵€鏈夌綉鐐逛俊鎭?-- 杈撳叆鍙傛暟锛?--IN_CITYNO锛氬煄甯傚彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_BANKNO锛氶摱琛屽彿
--OUT_CITYNO锛氬煄甯傚彿
--OUT_PRVNO锛氱渷鍙?-- 缁撴灉闆嗭細RET_NETSPOTINFO

-- 鏈€鍚庝慨鏀逛汉锛歡ongjx
-- 鏈€鍚庝慨鏀规棩鏈?锛?2012.7.30 
------------------------------------------------------------------------
BEGIN
	--鑾峰彇缃戠偣淇℃伅
	DECLARE	RET_NETSPOTINFO	CURSOR WITH	RETURN FOR
	SELECT
		POB_DEPTNO,
		POB_ORG_NAME
	FROM
	 PB_BRCHRUT,
	 PB_ORG_BANKINFO,
	 PB_CITYINFO 
 WHERE
  PBR_CITYCODE = CIT_CITYCODE
  AND PBR_CORENO || '999' = POB_ORG_BK
  AND PBR_CITYCODE = IN_CITYNO
  AND POB_DEPTNO IN
  (SELECT DISTINCT PQNI_NODNO FROM PB_QUEUE_NOTES_INFO WHERE PQNI_OPENFLG='1');
  
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	--杩斿洖缁撴灉闆?	OPEN RET_NETSPOTINFO;
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QUERY_DAY_MOOD
 (
 	IN  IN_CSTNO    	VARCHAR(10),
	OUT OUT_RET_CODE	VARCHAR(5), 
	OUT OUT_DAYMOOD     VARCHAR(100)
 ) 
 READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 杈撳叆瀹㈡埛鍙凤紝鏌ヨ姣忔棩蹇冩儏
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_DAYMOOD锛氭瘡鏃ュ績鎯?------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;	
		
	-- 鏍规嵁鍗″彿鏌ヨ鐢ㄦ埛淇℃伅
	SELECT PCM_DAYMOOD INTO OUT_DAYMOOD FROM PB_CUSTINFMODIFY WHERE PCM_CSTNO = IN_CSTNO;
	SET OUT_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_DAY_MOOD
 (
 	IN IN_CSTNO    		VARCHAR(10),
 	IN IN_DAYMOOD    	VARCHAR(100),	 
	OUT OUT_RET_CODE	VARCHAR(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏇存柊姣忔棩蹇冩儏
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿
-- IN_DAYMOOD锛氭瘡鏃ュ績鎯?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN
	DECLARE V_DATE				CHAR(14);			--褰撳墠鏃堕棿
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;	
	
	-- 鑾峰彇褰撳墠鏃ユ湡
	SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');	
	
	-- 鏌ヨ璁板綍鏄惁瀛樺湪锛屽瓨鍦ㄦ洿鏂帮紝涓嶅瓨鍦ㄦ彃鍏?	IF EXISTS(SELECT 1 FROM PB_CUSTINFMODIFY WHERE PCM_CSTNO = IN_CSTNO) THEN 
		--鏇存柊
		UPDATE PB_CUSTINFMODIFY SET PCM_DAYMOOD = IN_DAYMOOD,PCM_LASTTIME=V_DATE  WHERE PCM_CSTNO = IN_CSTNO;
	ELSE 
		--鎻掑叆
		INSERT INTO PB_CUSTINFMODIFY(PCM_CSTNO,PCM_DAYMOOD,PCM_LASTTIME)VALUES(IN_CSTNO,IN_DAYMOOD,V_DATE);
	END IF;
	
	COMMIT;
	
	SET OUT_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QUERY_CUST_DELNODE
 (
 	IN  IN_CSTNO    	VARCHAR(10),
	OUT OUT_RET_CODE	VARCHAR(5), 
	OUT OUT_DELNODE     VARCHAR(300)
 ) 
 READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 杈撳叆瀹㈡埛鍙凤紝鏌ヨ瀹㈡埛灞忚斀鐨勭敤鎴蜂俊鎭」
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_DELNODE锛氬睆钄介」
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;	
		
	-- 鏍规嵁鍗″彿鏌ヨ鐢ㄦ埛淇℃伅
	SELECT PCM_DELNODE INTO OUT_DELNODE FROM PB_CUSTINFMODIFY WHERE PCM_CSTNO = IN_CSTNO;
	SET OUT_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_CUST_DELNODE
 (
 	IN  IN_CSTNO    	VARCHAR(10),
 	IN IN_DELNODE    	VARCHAR(300),	 
	OUT OUT_RET_CODE	VARCHAR(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 杈撳叆瀹㈡埛鍙凤紝鏇存柊瀹㈡埛灞忚斀鐨勭敤鎴蜂俊鎭」
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿
-- IN_DELNODE锛氬睆钄介」

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN
	DECLARE V_DATE				CHAR(14);			--褰撳墠鏃堕棿
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;	
	
	-- 鑾峰彇褰撳墠鏃ユ湡
	SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');	
	
	-- 鏌ヨ璁板綍鏄惁瀛樺湪锛屽瓨鍦ㄦ洿鏂帮紝涓嶅瓨鍦ㄦ彃鍏?	IF EXISTS(SELECT 1 FROM PB_CUSTINFMODIFY WHERE PCM_CSTNO = IN_CSTNO) THEN 
		--鏇存柊
		UPDATE PB_CUSTINFMODIFY SET PCM_DELNODE = IN_DELNODE,PCM_LASTTIME=V_DATE  WHERE PCM_CSTNO = IN_CSTNO;
	ELSE 
		--鎻掑叆
		INSERT INTO PB_CUSTINFMODIFY(PCM_CSTNO,PCM_DELNODE,PCM_LASTTIME)VALUES(IN_CSTNO,IN_DELNODE,V_DATE);
	END IF;
	
	COMMIT;
	
	SET OUT_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QUERY_ORG_NAME
 ( 
  IN IN_ORG_NO VARCHAR(6) ,
  OUT PROC_RET_CODE VARCHAR(5),
  OUT OUT_ORG_NAME VARCHAR(36)
 ) 
	READS SQL DATA 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁缃戠偣鍙锋煡璇㈢綉鐐瑰悕绉?-- 杈撳叆鍙傛暟锛?-- IN_ORG_NO锛氱綉鐐瑰彿
-- 杈撳嚭鍙傛暟锛?-- OUT_ORG_NAME锛氭満鏋勫悕绉?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歺uln
-- 鏈€鍚庝慨鏀规棩鏈?锛?2013.02.22
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	--鑾峰彇缃戠偣鍚嶇О
	SELECT
		POB_ORG_NAME 
	INTO 
		OUT_ORG_NAME
	FROM
	 PB_ORG_BANKINFO
 	WHERE
 	 POB_DEPTNO = IN_ORG_NO;

	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QUERY_MARKETING_NEWS
 ( 
  IN IN_BRANCHNO VARCHAR(3),
  OUT PROC_RET_CODE CHAR(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ钀ラ攢蹇淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_BRANCHNO 鍒嗚鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歺uln
-- 鏈€鍚庝慨鏀规棩鏈?锛?2013.3.5
------------------------------------------------------------------------
BEGIN
	-- 鍙橀噺澹版槑
  	DECLARE V_DATETIME VARCHAR(8);
	--鑾峰彇钀ラ攢蹇
	DECLARE	RET_NETSPOTINFO	CURSOR WITH	RETURN FOR
		SELECT 
			PMN_UPLOADTIME,
			PMN_TITLE,
			PMN_URLOUT,
			PMN_PRODUCTURL,
			PMN_CONTENT
		FROM PB_MARKETINGNEWS
		WHERE  PMN_ENDDATE>=V_DATETIME AND PMN_VALIDDATE <= V_DATETIME AND (PMN_SCOPE ='' OR PMN_SCOPE= IN_BRANCHNO)
		ORDER BY PMN_ISTOP ASC, PMN_UPLOADTIME DESC;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	--杩斿洖缁撴灉闆?	OPEN RET_NETSPOTINFO;
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QUERY_DEL_NODE
 (
 	IN  IN_CSTNO    	VARCHAR(10),
	OUT OUT_RET_CODE	VARCHAR(5), 
	OUT OUT_DELNODE     VARCHAR(300)
 ) 
 READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 杈撳叆瀹㈡埛鍙凤紝鏌ヨ灞忚斀鑺傜偣
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_DELNODE锛氬垹闄ら」缂栧彿
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;	
		
	-- 鏍规嵁鍗″彿鏌ヨ鐢ㄦ埛淇℃伅
	SELECT PCM_DELNODE INTO OUT_DELNODE FROM PB_CUSTINFMODIFY WHERE PCM_CSTNO = IN_CSTNO;
	SET OUT_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_DEL_NODE
 (
 	IN IN_CSTNO    		VARCHAR(10),
 	IN IN_DELNODE    	VARCHAR(300),	 
	OUT OUT_RET_CODE	VARCHAR(5)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏇存柊
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿
-- IN_DELNODE锛氬垹闄よ妭鐐?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN
	DECLARE V_DATE				CHAR(14);			--褰撳墠鏃堕棿
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;	
	
	-- 鑾峰彇褰撳墠鏃ユ湡
	SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');	
	
	-- 鏌ヨ璁板綍鏄惁瀛樺湪锛屽瓨鍦ㄦ洿鏂帮紝涓嶅瓨鍦ㄦ彃鍏?	IF EXISTS(SELECT 1 FROM PB_CUSTINFMODIFY WHERE PCM_CSTNO = IN_CSTNO) THEN 
		--鏇存柊
		UPDATE PB_CUSTINFMODIFY SET PCM_DELNODE = IN_DELNODE,PCM_LASTTIME=V_DATE  WHERE PCM_CSTNO = IN_CSTNO;
	ELSE 
		--鎻掑叆
		INSERT INTO PB_CUSTINFMODIFY(PCM_CSTNO,PCM_DELNODE,PCM_LASTTIME)VALUES(IN_CSTNO,IN_DELNODE,V_DATE);
	END IF;
	
	COMMIT;
	
	SET OUT_RET_CODE = '00000';
END

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

create PROCEDURE PB_FINANCECOMPOSITE_ADD 
(
 IN IN_CSTNO VARCHAR(10)  ,  --缃戦摱瀹㈡埛鍙? IN IN_LARGEID VARCHAR(40)  ,-- 甯愬彿: 涓汉璐︽埛鐨勫崱鍙?璐锋涓搴斿悎鍚屽彿
 IN IN_SMALLID  VARCHAR(40) ,--璐︽埛鍚嶇О
 IN IN_ACCTYPE CHAR(2)       , --甯愭埛绫诲瀷
 IN IN_CURRTYPE CHAR(3)      , --甯佺
 IN IN_BALANCE  DECIMAL(15,2) , --浣欓
 IN IN_CAPITALORDEBT  CHAR(1) ,	 --璧勪骇鎴栬礋鍊?1璧勪骇 2璐熷€? IN IN_OPENBANK VARCHAR(40),--寮€鎴烽摱琛? IN IN_REMARK VARCHAR(50), --澶囨敞
 
 
 OUT PROC_RET_CODE CHARACTER(5)
)

BEGIN
	DECLARE V_LASTMODIFY VARCHAR(8);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
		
	SET V_LASTMODIFY = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	IF(NOT EXISTS(SELECT 1 FROM PB_FINANCECOMPOSITE WHERE IN_SMALLID=PFR_SMALLID))
	THEN
	INSERT INTO  PB_FINANCECOMPOSITE 
	(
	 PFR_CSTNO ,
	 PFR_LARGEID,
     PFR_SMALLID,
     PFR_ACCTYPE,
     PFR_CURRTYPE,
   	 PFR_BALANCE,
   	 PFR_CAPITALORDEBT,
   	 PFR_OPENBANK,
   	 PFR_REMARK,
   	 PFR_LASTMODIFY
 	)VALUES
 	
 	(
 	 IN_CSTNO ,
	 IN_LARGEID,
   IN_SMALLID,
   IN_ACCTYPE,
   IN_CURRTYPE,
   IN_BALANCE,
   IN_CAPITALORDEBT,
   IN_OPENBANK,
   IN_REMARK,
   V_LASTMODIFY
 	);
 	ELSE 
 	SET PROC_RET_CODE = '30044';
	RETURN;
	 
 	END IF;
 	COMMIT;
 	SET PROC_RET_CODE = '00000';
 END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FINANCECOMPOSITE_MOD 
(
IN IN_PRESMALLID  VARCHAR(40) ,--鏈慨鏀瑰墠鐨勮处鎴峰悕绉? 涓汉璐︽埛鐨勫崱鍙? 璐锋涓搴旇捶娆惧笎鍙峰簭鍙?
 IN IN_CSTNO VARCHAR(10)  ,  --缃戦摱瀹㈡埛鍙? IN IN_LARGEID VARCHAR(40)  ,-- 甯愬彿
 IN IN_SMALLID  VARCHAR(40) ,--璐︽埛鍚嶇О
 IN IN_ACCTYPE CHAR(2)       , --甯愭埛绫诲瀷
 IN IN_CURRTYPE CHAR(3)      , --甯佺
 IN IN_BALANCE  DECIMAL(15,2) , --浣欓
 IN IN_CAPITALORDEBT  CHAR(1) ,	 --璧勪骇鎴栬礋鍊?1璧勪骇 2璐熷€? IN IN_OPENBANK VARCHAR(40),  --寮€鎴烽摱琛? IN IN_REMARK VARCHAR(50),            --澶囨敞
	 
 OUT PROC_RET_CODE CHARACTER(5)
)
BEGIN
	
	DECLARE V_LASTMODIFY VARCHAR(8);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
		
SET V_LASTMODIFY = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
IF(IN_PRESMALLID<>IN_SMALLID  AND   EXISTS(SELECT PFR_SMALLID FROM PB_FINANCECOMPOSITE WHERE  IN_CSTNO=PFR_CSTNO  AND  PFR_SMALLID=IN_SMALLID))
THEN  
SET PROC_RET_CODE = '30044';
RETURN;
END IF;


	UPDATE  PB_FINANCECOMPOSITE 
	SET 
 PFR_CSTNO= IN_CSTNO  ,
 PFR_LARGEID=IN_LARGEID ,
 PFR_SMALLID= IN_SMALLID ,
 PFR_ACCTYPE= IN_ACCTYPE ,
 PFR_CURRTYPE= IN_CURRTYPE ,
 PFR_BALANCE= IN_BALANCE  ,
 PFR_CAPITALORDEBT= IN_CAPITALORDEBT ,
 PFR_OPENBANK=IN_OPENBANK,
 PFR_REMARK=IN_REMARK,
 PFR_LASTMODIFY=V_LASTMODIFY
 	 WHERE 
 	 IN_CSTNO=PFR_CSTNO AND IN_PRESMALLID=PFR_SMALLID; 
    COMMIT;
 	SET PROC_RET_CODE = '00000';
 END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FINANCECOMPOSITE_DEL 
(
 IN   IN_CSTNO    VARCHAR(10), --缃戦摱瀹㈡埛鍙? IN   IN_SMALLID     VARCHAR(40) ,  --璐︽埛鍚嶇О
 OUT PROC_RET_CODE CHARACTER(5)
)
BEGIN
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
		
	DELETE FROM  PB_FINANCECOMPOSITE 
 	 WHERE 
 	 IN_CSTNO=PFR_CSTNO AND IN_SMALLID=PFR_SMALLID;
 	
    COMMIT;
 	SET PROC_RET_CODE = '00000';
 END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FINANCECOMPOSITE_QRY
(
  IN IN_CSTNO VARCHAR(10),
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐞嗚储鐧昏绨跨鐞嗘煡璇㈠笎鎴?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?瀹㈡埛鍙?

-- 杈撳嚭鍙傛暟 :
-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?
BEGIN  
	
    DECLARE	CUR_FINANCERG0	CURSOR WITH	RETURN FOR 
   select PFR_CSTNO, PFR_LARGEID, PFR_SMALLID, PFR_ACCTYPE, PFR_CURRTYPE, 
  PFR_BALANCE, PFR_CAPITALORDEBT, PFR_OPENBANK, PFR_REMARK, PFR_ISLOAD,PFR_LASTMODIFY from PBANK.
  PB_FINANCECOMPOSITE where PFR_CSTNO=IN_CSTNO order by PFR_CSTNO,PFR_LARGEID,PFR_SMALLID;
   
    
    -- 寮傚父澶勭悊 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;

	 
    OPEN CUR_FINANCERG0;
   
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FINANCECOMPOSITE_STA
(
  IN IN_CSTNO VARCHAR(10),
  IN IN_CURRTYPE CHAR(3),
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁熻璧勪骇璐熷€?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?瀹㈡埛鍙?-- IN_CURRTYPE: 甯佺

-- 杈撳嚭鍙傛暟 :
-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?
BEGIN  
	
    DECLARE	CUR_FINANCERG0	CURSOR WITH	RETURN FOR 
   select PFR_CAPITALORDEBT,  SUM(PFR_BALANCE) from PBANK.
  PB_FINANCECOMPOSITE   where PFR_CSTNO=IN_CSTNO  AND PFR_CURRTYPE=IN_CURRTYPE GROUP BY PFR_CAPITALORDEBT  order by PFR_CAPITALORDEBT;
   
    
    -- 寮傚父澶勭悊 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;

	 
    OPEN CUR_FINANCERG0;
   
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

create PROCEDURE PB_FINANCECOMPOSITE_ADD2
(
 IN IN_CSTNO VARCHAR(10)  ,  --缃戦摱瀹㈡埛鍙? IN IN_LARGEID VARCHAR(40)  ,-- 甯愬彿: 涓汉璐︽埛鐨勫崱鍙?璐锋涓搴斿悎鍚屽彿
 IN IN_SMALLID  VARCHAR(40) ,--璐︽埛鍚嶇О
 IN IN_ACCTYPE CHAR(2)       , --甯愭埛绫诲瀷
 IN IN_CURRTYPE CHAR(3)      , --甯佺
 IN IN_BALANCE  DECIMAL(15,2) , --浣欓
 IN IN_CAPITALORDEBT  CHAR(1) ,	 --璧勪骇鎴栬礋鍊?1璧勪骇 2璐熷€? IN IN_OPENBANK VARCHAR(40),--寮€鎴烽摱琛? IN IN_REMARK VARCHAR(50), --澶囨敞
 IN IN_ISLOAD    CHAR(1),  --鏄惁瀵煎叆:0闈炲鍏?1绯荤粺瀵煎叆

 
 
 OUT PROC_RET_CODE CHARACTER(5)
)

BEGIN
	DECLARE V_LASTMODIFY VARCHAR(8);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
		
	SET V_LASTMODIFY = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	IF(NOT EXISTS(SELECT 1 FROM PB_FINANCECOMPOSITE WHERE IN_SMALLID=PFR_SMALLID AND  IN_LARGEID=PFR_LARGEID  AND IN_CSTNO=PFR_CSTNO AND PFR_ISLOAD='1'))
	THEN
	INSERT INTO  PB_FINANCECOMPOSITE 
	(
	 PFR_CSTNO ,
	 PFR_LARGEID,
     PFR_SMALLID,
     PFR_ACCTYPE,
     PFR_CURRTYPE,
   	 PFR_BALANCE,
   	 PFR_CAPITALORDEBT,
   	 PFR_OPENBANK,
   	 PFR_REMARK,
   	 PFR_ISLOAD,
   	 PFR_LASTMODIFY
 	)VALUES
 	
 	(
 	 IN_CSTNO ,
	 IN_LARGEID,
   IN_SMALLID,
   IN_ACCTYPE,
   IN_CURRTYPE,
   IN_BALANCE,
   IN_CAPITALORDEBT,
   IN_OPENBANK,
   IN_REMARK,
   IN_ISLOAD,
   V_LASTMODIFY
 	);
 	ELSEIF(EXISTS(SELECT 1 FROM PB_FINANCECOMPOSITE WHERE IN_SMALLID=PFR_SMALLID  AND  IN_LARGEID=PFR_LARGEID    AND IN_CSTNO=PFR_CSTNO  AND PFR_ISLOAD='1'))
 	THEN
 	UPDATE PB_FINANCECOMPOSITE
 	SET 
 		 PFR_ACCTYPE=IN_ACCTYPE,
     PFR_CURRTYPE=IN_CURRTYPE,
   	 PFR_BALANCE=IN_BALANCE,
   	 PFR_CAPITALORDEBT=IN_CAPITALORDEBT,
   	 PFR_OPENBANK=IN_OPENBANK,
   	 PFR_REMARK=IN_REMARK,
   	 PFR_LASTMODIFY=V_LASTMODIFY
   	 WHERE 
   	 IN_SMALLID=PFR_SMALLID  AND  IN_LARGEID=PFR_LARGEID    AND IN_CSTNO=PFR_CSTNO  AND PFR_ISLOAD='1';
 	
 	ELSE 
 	SET PROC_RET_CODE = '30044';
	RETURN;
	 
 	END IF;
 	COMMIT;
 	SET PROC_RET_CODE = '00000';
 END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECKDATE1
(
	IN IN_CSTNO VARCHAR(10),
	IN IN_LARGEID VARCHAR(40),
	OUT PROC_RET_CODE CHARACTER(5)
	
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 妫€鏌ュ崱鍌ㄨ搫璐︽埛瀵煎叆鏃堕棿 
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?瀹㈡埛鍙?-- IN_LARGEID: 鍗″彿鎴栨姌鍙?
-- 杈撳嚭鍙傛暟 :
-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
 
BEGIN 
	DECLARE V_LASTMODIFY VARCHAR(8);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	  BEGIN 
	     SET PROC_RET_CODE='95000';
	     ROLLBACK;
	  END;
	  
	SET  V_LASTMODIFY=FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	IF(EXISTS(select 1  from PB_FINANCECOMPOSITE where PFR_CSTNO=IN_CSTNO AND PFR_LARGEID=IN_LARGEID  AND PFR_LASTMODIFY=V_LASTMODIFY))
	THEN SET PROC_RET_CODE='30046';
	RETURN;
	END IF;
	  SET PROC_RET_CODE='00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECKDATE2
(
	IN IN_CSTNO VARCHAR(10),
	OUT PROC_RET_CODE CHARACTER(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 妫€鏌ュ崱鍌ㄨ搫璐︽埛瀵煎叆鏃堕棿 
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?瀹㈡埛鍙?-- 杈撳嚭鍙傛暟 :
-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
BEGIN 
	DECLARE V_LASTMODIFY VARCHAR(8);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	  BEGIN 
	     SET PROC_RET_CODE='95000';
	     ROLLBACK;
	  END;
	  
	SET  V_LASTMODIFY=FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	IF(EXISTS(select 1  from PB_FINANCECOMPOSITE where PFR_CSTNO=IN_CSTNO AND PFR_ACCTYPE='31' AND PFR_ISLOAD='1' AND PFR_LASTMODIFY=V_LASTMODIFY))
	THEN SET PROC_RET_CODE='30045';
	RETURN;
	END IF;
	  SET PROC_RET_CODE='00000';
	  
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_PRODPAR(
IN IN_PRODUCTNO           VARCHAR(15),
IN IN_BKNO                VARCHAR(6),
IN IN_FRIFLAG             CHAR(1),
OUT PROC_RET_CODE         VARCHAR(5)
 ) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ寰楀埄瀹濅骇鍝佷俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_PRODUCTNO:  浜у搧浠ｇ爜
-- IN_BKNO:       浜у搧鎵€灞炲垎琛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_PRODUCT_LST: 缁撴灉闆?-- 鏈€鍚庝慨鏀逛汉 锛?liming
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.03.09
------------------------------------------------------------------------
BEGIN
		DECLARE V_CURR_DATE VARCHAR(8);
		--鍙栧緱鍒╁疂浜у搧淇℃伅
 	DECLARE OUT_PRODUCT_LST CURSOR WITH RETURN FOR
	SELECT DISTINCT
		PDP_PRODUCTNO,
	    PDP_PRODUCTNAME,
	    PDP_TRADETYPE,
	    PDP_PRODUCTTYPE,
	    PDP_CURRTYPE,
	    PDP_CASHFLAG,
	    PDP_INVESTTERM,
	    PDP_INVESTSTARTSUM,
	    PDP_SELLSTATUS,
	    PDP_FUNDSTARTDATE,
	    PDP_FUNDENDDATE,
	    PDP_INVESTSTARTDATE,
	    PDP_INVESTENDDATE,
	    PDP_STARTDAY,
	    PDP_WORKDATE,
	    PDP_INCREASEAMT,
	    PDP_PRODUCTRISKLEVEL,
	    PDP_SELLSTARTDATE,
	    PDP_SELLENDDATE,
	    PDP_MAXRATIO,
	    PDP_MINRATIO,
	    PDP_INCOME,
	    PDP_NETFLAG,
	    PDP_DELFLAG,
	    PDP_AIMCUST,
	    PDP_TARGETOBJECT,
	    PDP_NOCUSTSUM,
	    PDP_LIMFLAG,
	    PDP_SUBSFLAG,
	    PDP_PURCHASEFLAG,
	    PDP_FEEFLAG,
	    PDP_NEWFLAG,
	    PDP_RECOMMENDFLAG,
	    PDP_HOTFLAG,
	    PDP_MANAGESHOWFLAG,
	    PDP_INVESTEXPERIENCE,
	    PPB_SELLSTATUS,
	    PPB_SELLAMT,
	    PPB_UPDATETIME,
	    PDP_CHANNELSELLFLAG,
	    PDP_CUSTGROUPSIGNFLAG,
	    PDP_CUSTOMGROUP,
	    CASE WHEN PDP_CURRTYPE = 'CNY' THEN '1' ELSE '2' END AS CURTYP,
	    PDP_ZHTLFLAG,
	    PDP_IMPAWN
	    
	FROM 
		(SELECT  
	    PPB_PRODUCTNO,
	    MAX(PPB_SELLSTATUS) AS PPB_SELLSTATUS,
	    MIN(PPB_SELLAMT) AS PPB_SELLAMT,
	    MAX(PPB_SELLAMT) AS PPB_SELLAMT_ALL,
	    MIN(PPB_KEEPAMT) AS PPB_KEEPAMT,
	    MAX(PPB_UPDATETIME) AS PPB_UPDATETIME
		FROM PB_PRO_BANKINFO
		WHERE (PPB_BKNO=IN_BKNO ||'999' OR PPB_BKNO='999999')
		GROUP BY PPB_PRODUCTNO) AS PB_PRO_BANKINFO_TMP
		INNER JOIN PB_PRODPAR ON(PDP_PRODUCTNO=PPB_PRODUCTNO 
								AND PPB_SELLAMT_ALL > 0 
								AND PPB_KEEPAMT > 0)
	WHERE 
			(
				LENGTH(PDP_PRODUCTNO)=8 
				AND PDP_SELLENDDATE >= V_CURR_DATE 
				AND PDP_BANKSHOWFLAG='0'
			) OR (
				LENGTH(PDP_PRODUCTNO)=10 
				AND PDP_CHANNELSELLFLAG='0' 
				AND PDP_NETFLAG = '1' 
				AND PDP_PRODUCTTYPE <> '005'
				AND PDP_FRIFLAG = IN_FRIFLAG
			)
		
	ORDER BY CURTYP ASC,PDP_SELLSTARTDATE DESC;

	--鍙栧崟鏀緱鍒╁疂浜у搧淇℃伅
	DECLARE	OUT_PRODUCT_LST2 CURSOR WITH RETURN FOR
		SELECT 
		PDP_PRODUCTNO,
	    PDP_PRODUCTNAME,
	    PDP_TRADETYPE,
	    PDP_PRODUCTTYPE,
	    PDP_CURRTYPE,
	    PDP_CASHFLAG,
	    PDP_INVESTTERM,
	    PDP_INVESTSTARTSUM,
	    PDP_SELLSTATUS,
	    PDP_FUNDSTARTDATE,
	    PDP_FUNDENDDATE,
	    PDP_INVESTSTARTDATE,
	    PDP_INVESTENDDATE,
	    PDP_STARTDAY,
	    PDP_WORKDATE,
	    PDP_INCREASEAMT,
	    PDP_PRODUCTRISKLEVEL,
	    PDP_SELLSTARTDATE,
	    PDP_SELLENDDATE,
	    PDP_MAXRATIO,
	    PDP_MINRATIO,
	    PDP_INCOME,
	    PDP_NETFLAG,
	    PDP_DELFLAG,
	    PDP_AIMCUST,
	    PDP_TARGETOBJECT,
	    PDP_NOCUSTSUM,
	    PDP_LIMFLAG,
	    PDP_SUBSFLAG,
	    PDP_PURCHASEFLAG,
	    PDP_FEEFLAG,
	    PDP_NEWFLAG,
	    PDP_RECOMMENDFLAG,
	    PDP_HOTFLAG,
	    PDP_MANAGESHOWFLAG,
	    PDP_INVESTEXPERIENCE,
	    PPB_SELLSTATUS,
	    PPB_SELLAMT,
	    PPB_UPDATETIME,
	    PDP_CHANNELSELLFLAG,
	    PDP_CUSTGROUPSIGNFLAG,
	    PDP_CUSTOMGROUP,
	    CASE WHEN PDP_CURRTYPE = 'CNY' THEN '1' ELSE '2' END AS CURTYP,
	    PDP_ZHTLFLAG,
	    PDP_IMPAWN
		FROM
			PB_PRODPAR,PB_PRO_BANKINFO
		WHERE  
			PDP_PRODUCTNO = IN_PRODUCTNO
			AND PDP_PRODUCTNO=PPB_PRODUCTNO
			AND (PDP_LIMFLAG<>'0' OR PPB_BKNO=IN_BKNO || '999')
			AND PDP_FRIFLAG = IN_FRIFLAG;
	
		-- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
		SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		--寰楀埄瀹濆崟鏀煡璇?		IF IN_PRODUCTNO IS NOT NULL AND IN_PRODUCTNO <> '' THEN
		
			OPEN OUT_PRODUCT_LST2;
			--鎬荤瑪鏁板彇寰?			SET PROC_RET_CODE = '00000'; 
			RETURN;
		END IF;
	--杩斿洖缁撴灉鍊?	OPEN OUT_PRODUCT_LST;
	
	SET PROC_RET_CODE = '00000'; 
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_SINGLE_PRODUCTINFO(
IN IN_FIRSTSIGN           VARCHAR(3),
IN IN_INVESTTERM          VARCHAR(4),
IN IN_BKNO                VARCHAR(6),
OUT PROC_RET_CODE         VARCHAR(5)
 ) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鍗曟敮寰楀埄瀹濅骇鍝佷俊鎭紙 鍗曟湡娆′骇鍝佸拰绛剧害鍒楄〃瀵瑰簲鍓?涓瓧姣嶇浉鍚岋級
-- 杈撳叆鍙傛暟锛?-- IN_TRANFLAG
-- IN_FIRSTSIGN:  浜у搧浠ｇ爜鍓?涓瓧姣?-- IN_INVESTTERM: 鎶曡祫鏈熼檺
-- IN_BKNO:       浜у搧鎵€灞炲垎琛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_PRODUCT_LST: 缁撴灉闆?-- 鏈€鍚庝慨鏀逛汉 锛?liming
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.03.21
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_CURR_DATE VARCHAR(8);
	--鍙栧緱鍒╁疂浜у搧鎬绘潯鏁?	DECLARE PRO_TOTALCOUNT CURSOR WITH RETURN FOR SQLSTATMENT2;
		--鍙栧崟鏀緱鍒╁疂浜у搧淇℃伅
	DECLARE	OUT_PRODUCT_LST CURSOR WITH RETURN FOR 
		SELECT 
			PDP_PRODUCTNO,
	    PDP_PRODUCTNAME,
	    PDP_TRADETYPE,
	    PDP_PRODUCTTYPE,
	    PDP_CURRTYPE,
	    PDP_CASHFLAG,
	    PDP_INVESTTERM,
	    PDP_INVESTSTARTSUM,
	    PDP_SELLSTATUS,
	    PDP_FUNDSTARTDATE,
	    PDP_FUNDENDDATE,
	    PDP_INVESTSTARTDATE,
	    PDP_INVESTENDDATE,
	    PDP_STARTDAY,
	    PDP_WORKDATE,
	    PDP_INCREASEAMT,
	    PDP_PRODUCTRISKLEVEL,
	    PDP_SELLSTARTDATE,
	    PDP_SELLENDDATE,
	    PDP_MAXRATIO,
	    PDP_MINRATIO,
	    PDP_INCOME,
	    PDP_NETFLAG,
	    PDP_DELFLAG,
	    PDP_AIMCUST,
	    PDP_TARGETOBJECT,
	    PDP_NOCUSTSUM,
	    PDP_LIMFLAG,
	    PDP_SUBSFLAG,
	    PDP_PURCHASEFLAG,
	    PDP_FEEFLAG,
	    PDP_NEWFLAG,
	    PDP_RECOMMENDFLAG,
	    PDP_HOTFLAG,
	    PDP_MANAGESHOWFLAG,
	    PDP_INVESTEXPERIENCE
		FROM PB_PRODPAR,PB_PRO_BANKINFO
		WHERE  
			PDP_PRODUCTNO LIKE IN_FIRSTSIGN || '%'
			AND PDP_PRODUCTNO=PPB_PRODUCTNO
			AND (PDP_LIMFLAG<>'0' OR PPB_BKNO= IN_BKNO || '999')
			AND V_CURR_DATE BETWEEN PDP_SELLSTARTDATE AND PDP_SELLENDDATE
			AND PPB_SELLSTATUS = '0'
			AND PDP_SELLSTATUS = '0'
			AND PPB_SELLAMT > 0
			AND PPB_KEEPAMT > 0
			AND PDP_CHANNELSELLFLAG = '0'
		ORDER BY PDP_INVESTSTARTDATE DESC  FETCH FIRST 1 ROWS ONLY;

		-- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
	SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	--杩斿洖缁撴灉鍊?	OPEN OUT_PRODUCT_LST;
	
	SET PROC_RET_CODE = '00000'; 
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_PRODUCTINFO (
IN_PRODUCTNO          VARCHAR(10),
IN_PRODUCTNAME        VARCHAR(80),
IN_TRADETYPE          CHAR(1),
IN_PRODUCTTYPE        VARCHAR(3),
IN_CURRTYPE           CHAR(3),
IN_CASHFLAG           CHAR(1),
IN_INVESTTERM         VARCHAR(4),
IN_INVESTSTARTSUM     DECIMAL(15,2),
IN_FIRSTINVESTSTARTSUM DECIMAL(15,2),
IN_SELLSTATUS         CHAR(1),
IN_FUNDSTARTDATE      VARCHAR(8),
IN_FUNDENDDATE        VARCHAR(8),
IN_INVESTSTARTDATE    VARCHAR(8),
IN_INVESTENDDATE      VARCHAR(8),
IN_STARTDAY           VARCHAR(8),
IN_WORKDATE           VARCHAR(8),
IN_INCREASEAMT        DECIMAL(15,2),
IN_PRODUCTRISKLEVEL   CHAR(2),
IN_SELLSTARTDATE      VARCHAR(8),
IN_SELLENDDATE        VARCHAR(8),
IN_MAXRATIO           DECIMAL(9,4),
IN_MINRATIO           DECIMAL(9,4),
IN_NETFLAG            CHAR(1),
IN_DELFLAG            CHAR(1),
IN_AIMCUST            VARCHAR(10),
IN_TARGETOBJECT       VARCHAR(200),
IN_NOCUSTSUM          DECIMAL(15,2),
IN_SUBSFLAG           CHAR(1),
IN_PURCHASEFLAG       CHAR(1),
IN_FEEFLAG            CHAR(1),
IN_NEWFLAG            CHAR(1),
IN_RECOMMENDFLAG      CHAR(1),
IN_HOTFLAG            CHAR(1),
IN_MANAGESHOWFLAG     CHAR(1),
IN_INVESTEXPERIENCE   CHAR(1),
IN_BANKSELLFLAG       CHAR(1),
IN_MOBILESELLFLAG     CHAR(1),
IN_INCOMETYPE         CHAR(1),
IN_SHAREDETAIL        CHAR(1),
IN_CUSTGROUPSIGNFLAG  CHAR(1),
IN_CUSTOMGROUP        VARCHAR(10),
IN_TAFLAG             VARCHAR(20),
IN_SIGNFLAG           CHAR(1),
IN_ZHTLFLAG			  CHAR(1),
IN_COFLAG             CHAR(1),
IN_COSELLAMT          DECIMAL(15,2),
IN_CYCLEDAY   		VARCHAR(3),
IN_IMPAWN 		      CHAR(1),
IN_FRIFLAG            CHAR(1),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁鐞嗚储浜у搧娑堟伅鍙戝竷鏉ユ洿鏂颁骇鍝佷俊鎭?-- 杈撳叆鍙傛暟锛?--

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?
-- 淇敼浜猴細liming
-- 淇敼鏃ユ湡 锛?2011.03.17
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;

	--濡傛灉鏄彲鍒犻櫎鐨勪骇鍝?灏嗕骇鍝佷俊鎭垹闄?	IF  IN_DELFLAG = '1' THEN
		DELETE FROM PB_PRODPAR WHERE PDP_PRODUCTNO = IN_PRODUCTNO; 
		DELETE FROM PB_PRO_BANKINFO WHERE PPB_PRODUCTNO = IN_PRODUCTNO;
		COMMIT;
		SET PROC_RET_CODE = '00000';
		SET OUT_TOA_MSG_TYPE = 'N';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0000';
		SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
		RETURN;
	END IF;
	IF EXISTS (
		SELECT 1
		FROM PB_PRODPAR 
		WHERE PDP_PRODUCTNO = IN_PRODUCTNO
	) THEN
		--鏇存柊娑堟伅鍙戝竷鐨勪骇鍝佷俊鎭?		UPDATE PB_PRODPAR
		SET 
			PDP_PRODUCTNAME=IN_PRODUCTNAME,
			PDP_TRADETYPE=IN_TRADETYPE,
			PDP_PRODUCTTYPE=IN_PRODUCTTYPE,
			PDP_CURRTYPE=IN_CURRTYPE,
			PDP_CASHFLAG=IN_CASHFLAG,
			PDP_INVESTTERM=IN_INVESTTERM,
			PDP_INVESTSTARTSUM=IN_INVESTSTARTSUM,
			PDP_FIRSTINVESTSTARTSUM=IN_FIRSTINVESTSTARTSUM,
			PDP_SELLSTATUS=IN_SELLSTATUS,
			PDP_FUNDSTARTDATE=IN_FUNDSTARTDATE,
			PDP_FUNDENDDATE=IN_FUNDENDDATE,
			PDP_INVESTSTARTDATE=IN_INVESTSTARTDATE,
			PDP_INVESTENDDATE=IN_INVESTENDDATE,
			PDP_STARTDAY=IN_STARTDAY,
			PDP_WORKDATE=IN_WORKDATE,
			PDP_INCREASEAMT=IN_INCREASEAMT,
			PDP_PRODUCTRISKLEVEL=IN_PRODUCTRISKLEVEL,
			PDP_SELLSTARTDATE=IN_SELLSTARTDATE,
			PDP_SELLENDDATE=IN_SELLENDDATE,
			PDP_MAXRATIO=IN_MAXRATIO,
			PDP_MINRATIO=IN_MINRATIO,
			PDP_NETFLAG=IN_NETFLAG,
			PDP_DELFLAG=IN_DELFLAG,
			PDP_AIMCUST=IN_AIMCUST,
			PDP_TARGETOBJECT=IN_TARGETOBJECT,
			PDP_NOCUSTSUM=IN_NOCUSTSUM,
			PDP_SUBSFLAG=IN_SUBSFLAG,
			PDP_PURCHASEFLAG=IN_PURCHASEFLAG,
			PDP_FEEFLAG=IN_FEEFLAG,
			PDP_NEWFLAG=IN_NEWFLAG,
			PDP_RECOMMENDFLAG=IN_RECOMMENDFLAG,
			PDP_HOTFLAG=IN_HOTFLAG,
			PDP_MANAGESHOWFLAG=IN_MANAGESHOWFLAG,
			PDP_INCOMETYPE=IN_INCOMETYPE,
			PDP_SHAREDETAIL=IN_SHAREDETAIL,
			PDP_CUSTGROUPSIGNFLAG=IN_CUSTGROUPSIGNFLAG,
			PDP_CUSTOMGROUP=IN_CUSTOMGROUP,
			PDP_TAFLAG=IN_TAFLAG,
			PDP_SIGNFLAG=IN_SIGNFLAG,
			PDP_COFLAG=IN_COFLAG,
			PDP_COSELLSUM=IN_COSELLAMT,
			PDP_INVESTEXPERIENCE=IN_INVESTEXPERIENCE,
			PDP_CHANNELSELLFLAG=IN_BANKSELLFLAG,
			PDP_MBANKSELLFLAG=IN_MOBILESELLFLAG,
			PDP_ZHTLFLAG=IN_ZHTLFLAG,
			PDP_CYCLEDAY=IN_CYCLEDAY,
			PDP_IMPAWN=IN_IMPAWN,
			PDP_FRIFLAG=IN_FRIFLAG            
		WHERE
		    PDP_PRODUCTNO=IN_PRODUCTNO;
	ELSE

			--灏嗘秷鎭彂甯冧俊鎭彃鍏ュ緱鍒╁疂浜у搧璐拱鍙傛暟琛?		INSERT INTO PB_PRODPAR
		(
			PDP_PRODUCTNO,
		    PDP_PRODUCTNAME,
		    PDP_TRADETYPE,
		    PDP_PRODUCTTYPE,
		    PDP_CURRTYPE,
		    PDP_CASHFLAG,
		    PDP_INVESTTERM,
		    PDP_INVESTSTARTSUM,
		    PDP_FIRSTINVESTSTARTSUM,
		    PDP_SELLSTATUS,
		    PDP_FUNDSTARTDATE,
		    PDP_FUNDENDDATE,
		    PDP_INVESTSTARTDATE,
		    PDP_INVESTENDDATE,
		    PDP_STARTDAY,
		    PDP_WORKDATE,
		    PDP_INCREASEAMT,
		    PDP_PRODUCTRISKLEVEL,
		    PDP_SELLSTARTDATE,
		    PDP_SELLENDDATE,
		    PDP_MAXRATIO,
		    PDP_MINRATIO,
		    PDP_INCOME,
		    PDP_NETFLAG,
		    PDP_DELFLAG,
		    PDP_AIMCUST,
		    PDP_TARGETOBJECT,
		    PDP_NOCUSTSUM,
		    PDP_LIMFLAG,
		    PDP_SUBSFLAG,
		    PDP_PURCHASEFLAG,
		    PDP_FEEFLAG,
		    PDP_NEWFLAG,
		    PDP_RECOMMENDFLAG,
		    PDP_HOTFLAG,
		    PDP_MANAGESHOWFLAG,
		    PDP_INVESTEXPERIENCE,
		    PDP_CHANNELSELLFLAG,
		    PDP_MBANKSELLFLAG,
		    PDP_INCOMETYPE,
		    PDP_SHAREDETAIL,
		    PDP_CUSTGROUPSIGNFLAG,
			PDP_CUSTOMGROUP,
			PDP_TAFLAG,
			PDP_SIGNFLAG,
			PDP_COFLAG,
			PDP_COSELLSUM,
			PDP_ZHTLFLAG,
			PDP_CYCLEDAY,
			PDP_IMPAWN,
			PDP_FRIFLAG
		)
		VALUES
		(
			IN_PRODUCTNO,
		    IN_PRODUCTNAME,
		    IN_TRADETYPE,
		    IN_PRODUCTTYPE,
		    IN_CURRTYPE,
		    IN_CASHFLAG,
		    IN_INVESTTERM,
		    IN_INVESTSTARTSUM,
		    IN_FIRSTINVESTSTARTSUM,
		    IN_SELLSTATUS,
		    IN_FUNDSTARTDATE,
		    IN_FUNDENDDATE,
		    IN_INVESTSTARTDATE,
		    IN_INVESTENDDATE,
		    IN_STARTDAY,
		    IN_WORKDATE,
		    IN_INCREASEAMT,
		    IN_PRODUCTRISKLEVEL,
		    IN_SELLSTARTDATE,
		    IN_SELLENDDATE,
		    IN_MAXRATIO,
		    IN_MINRATIO,
		    '',
		    IN_NETFLAG,
		    IN_DELFLAG,
		    IN_AIMCUST,
		    IN_TARGETOBJECT,
		    IN_NOCUSTSUM,
		    '',
		    IN_SUBSFLAG,
		    IN_PURCHASEFLAG,
		    IN_FEEFLAG,
		    IN_NEWFLAG,
		    IN_RECOMMENDFLAG,
		    IN_HOTFLAG,
		    IN_MANAGESHOWFLAG,
		    IN_INVESTEXPERIENCE,
		    IN_BANKSELLFLAG,
		    IN_MOBILESELLFLAG,
		    IN_INCOMETYPE,
		    IN_SHAREDETAIL,
		    IN_CUSTGROUPSIGNFLAG,
		    IN_CUSTOMGROUP,
		    IN_TAFLAG,
		    IN_SIGNFLAG,
		    IN_COFLAG,
		    IN_COSELLAMT,
		    IN_ZHTLFLAG,
		    IN_CYCLEDAY,
		    IN_IMPAWN,
		    IN_FRIFLAG
		);	
		
		
	END IF;

	COMMIT;
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_BANKINFO (
IN_PRODUCTNO            VARCHAR(10),
IN_LIMFLAG              VARCHAR(80),
IN_BRANCHNOSTR         VARCHAR(1200),
OUT PROC_RET_CODE	      VARCHAR(5),
OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
OUT OUT_TOA_MSG_AP_MMO	VARCHAR(2),
OUT OUT_TOA_MSG_CODE		VARCHAR(4),
OUT OUT_ANSINFO				  VARCHAR(50)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁鐞嗚储浜у搧鏈烘瀯閿€鍞姸鎬佷俊鎭彂甯冩洿鏂扮悊璐俊鎭?-- 杈撳叆鍙傛暟锛?--IN_PRODUCTNO      浜у搧浠ｇ爜
--IN_LIMFLAG      鏄惁鍏ㄨ閿€鍞?--IN_BRANCHNOSTR      鍏佽閿€鍞満鏋勪唬鐮佸瓧绗︿覆

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?
-- 淇敼浜猴細liming
-- 淇敼鏃ユ湡 锛?2011.03.17
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_BKNO CHAR(6);
	DECLARE V_BRANCHNOSTR VARCHAR(1200);
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;

	IF IN_LIMFLAG = '0'  THEN
	
		--娓呴櫎浠ュ墠鐞嗚储浜у搧璁板綍
		DELETE FROM PB_PRO_BANKINFO WHERE PPB_PRODUCTNO = IN_PRODUCTNO;
		
		SET V_BRANCHNOSTR = IN_BRANCHNOSTR || '#';
		
		WHILE V_BRANCHNOSTR <> '#' DO 
		
			SET V_BKNO = SUBSTR( V_BRANCHNOSTR, 1, 3) || '999';

	  	    --鏇存柊寰楀埄瀹濆彲閿€鍞垎琛屽鐓ц〃
	  	    INSERT INTO PB_PRO_BANKINFO( PPB_PRODUCTNO,PPB_BKNO,PPB_SELLSTATUS ) VALUES(IN_PRODUCTNO,V_BKNO,'0');

			SET V_BRANCHNOSTR = SUBSTR( V_BRANCHNOSTR, 4 );
		END WHILE;
	ELSEIF IN_LIMFLAG = '1'  THEN
		--娓呴櫎浠ュ墠鐞嗚储浜у搧璁板綍
		DELETE FROM PB_PRO_BANKINFO WHERE PPB_PRODUCTNO = IN_PRODUCTNO;
		INSERT INTO PB_PRO_BANKINFO( PPB_PRODUCTNO,PPB_BKNO,PPB_SELLSTATUS ) VALUES(IN_PRODUCTNO,'999999','0');
		
	END IF;
	IF EXISTS (
		SELECT 1
		FROM PB_PRODPAR
		WHERE PDP_PRODUCTNO = IN_PRODUCTNO
	) THEN
		--鏇存柊娑堟伅鍙戝竷鐨勪骇鍝佷俊鎭緱浜у搧鐘舵€?		UPDATE PB_PRODPAR SET PDP_LIMFLAG=IN_LIMFLAG WHERE PDP_PRODUCTNO=IN_PRODUCTNO;
	END IF;
	
	COMMIT;
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_PRODUCTINFO2 (
IN IN_FUNCNO             CHAR(1),        
IN IN_PRODUCTNAME        VARCHAR(80),    
IN IN_PRODUCTNO          VARCHAR(10),    
IN IN_CURRTYPE           CHAR(3),        
IN IN_INVESTSTARTSUM     DECIMAL(15,2),  
IN IN_PRODUCTRISKLEVEL   CHAR(2),        
IN IN_INVESTTERM         VARCHAR(4),     
IN IN_INCOME             VARCHAR(50),    
IN IN_SELLSTARTDATE      VARCHAR(8),     
IN IN_SELLENDDATE        VARCHAR(8),     
IN IN_SELLSTATUS         CHAR(1),        
IN IN_AIMCUST            VARCHAR(10),    
IN IN_LIMFLAG            CHAR(1),             
IN IN_CHANNEL            VARCHAR(20),  
IN IN_INVESTSTARTDATE    VARCHAR(8),
IN IN_INVESTENDDATE      VARCHAR(8),
IN IN_INCREASEAMT        DECIMAL(15,2),
IN IN_NOCUSTSUM          DECIMAL(15,2),
IN IN_INVESTEXPERIENCE   CHAR(1),

IN IN_PRODUCTTYPE        CHAR(1),
IN IN_BANKSHOWFLAG       CHAR(1),
IN IN_BRANCHNOSTR        VARCHAR(7400),
OUT PROC_RET_CODE	     VARCHAR(5),
OUT OUT_TOA_MSG_TYPE	 VARCHAR(1),
OUT OUT_TOA_MSG_AP_MMO	 VARCHAR(2),
OUT OUT_TOA_MSG_CODE	 VARCHAR(4),
OUT OUT_ANSINFO			 VARCHAR(50)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁鐞嗚储浜у搧鏈烘瀯閿€鍞姸鎬佷俊鎭彂甯冩洿鏂扮悊璐俊鎭?-- 杈撳叆鍙傛暟锛?--IN IN_FUNCNO           鎿嶄綔鍔熻兘鐮?C-鍒涘缓锛孶-鏇存柊锛孌-鍒犻櫎                              
--IN IN_PRODUCTNAME      浜у搧鍚嶇О                              
--IN IN_PRODUCTNO        浜у搧浠ｇ爜                              
--IN IN_CURRTYPE         甯佺                                  
--IN IN_INVESTSTARTSUM   璧峰敭閲戦                              
--IN IN_PRODUCTRISKLEVEL 浜у搧椋庨櫓绛夌骇                          
--IN IN_INVESTTERM       鎶曡祫鏈熼檺                              
--IN IN_INCOME           棰勬湡鏀剁泭                              
--IN IN_SELLSTARTDATE    閿€鍞紑濮嬫棩                            
--IN IN_SELLENDDATE      閿€鍞粨鏉熸棩                            
--IN IN_SELLSTATUS       鍏佽閿€鍞爣蹇?                         
--IN IN_AIMCUST          鐩爣瀹㈡埛缇?                           
--IN IN_LIMFLAG          鏄惁鍏ㄨ閿€鍞?锛嶆帶鍒讹紙鍒嗚閿€鍞級1锛嶄笉鎺?                          
--IN IN_CHANNEL          閿€鍞笭閬?
--IN IN_INVESTSTARTDATE  鎶曡祫璧锋棩                             
--IN IN_INVESTENDDATE    鎶曡祫姝㈡棩                            
--IN IN_INCREASEAMT      鍗曚綅閫掑閲戦
--IN IN_NOCUSTSUM        闈炵洰鏍囧鎴疯捣鐐归噾棰?                           
--IN IN_INVESTEXPERIENCE 鏄惁鏈夋姇璧勭粡楠?--IN IN_PRODUCTTYPE      浜у搧绫诲瀷
--IN IN_BANKSHOWFLAG     缃戦摱鏄惁鍙樉绀?--IN IN_BRANCHNOSTR      鍙攢鍞垎琛屼俊鎭?                                                               
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛?      瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯?-- OUT_TOA_MSG_TYPE	     杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	   淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	     淇℃伅鐮?-- OUT_ANSINFO锛?        杩斿洖淇℃伅

-- 淇敼浜猴細liming
-- 淇敼鏃ユ湡 锛?2011.03.18
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_BKNO CHAR(6);
	DECLARE V_BRANCHNOSTR VARCHAR(7400);
	DECLARE V_EXISTS CHAR(1);
	DECLARE V_EXISTS2 CHAR(1);
	DECLARE V_CHANNEL CHAR(1);
	DECLARE V_BANKINFO VARCHAR(37);
	DECLARE V_BKSELLSTATUS CHAR(1);

	DECLARE V_BKSELLAMT DECIMAL(15,2);
	DECLARE V_BKKEEPAMT DECIMAL(15,2);
	DECLARE V_DATETIME VARCHAR(14);
	
	DECLARE V_NEXT CHAR(1);
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END; 
	
	SET V_CHANNEL = SUBSTR(IN_CHANNEL,3,1);
	IF V_CHANNEL = '1' THEN
		SET V_CHANNEL = '0';
	ELSEIF V_CHANNEL = '0' THEN
		SET V_CHANNEL = '1';
	END IF;
	SET V_DATETIME = substr(FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss'),9,14);
	
	IF  EXISTS (
			SELECT 1
			FROM PB_PRODPAR 
			WHERE PDP_PRODUCTNO = IN_PRODUCTNO
		) THEN
			SET V_EXISTS = '1';
	ELSE
			SET V_EXISTS = '0';
			
	END IF;
	--鎿嶄綔鍔熻兘鐮?C-鍒涘缓
	IF IN_FUNCNO = 'C' THEN
		
			IF  V_EXISTS = '0' THEN
				--灏嗘秷鎭彂甯冧俊鎭彃鍏ュ緱鍒╁疂浜у搧璐拱鍙傛暟琛?				INSERT INTO PB_PRODPAR
				(
					PDP_PRODUCTNO,
					PDP_PRODUCTNAME,
					PDP_TRADETYPE,
					PDP_PRODUCTTYPE,
					PDP_CURRTYPE,
					PDP_INVESTSTARTSUM,
					PDP_PRODUCTRISKLEVEL,
					PDP_INVESTTERM,
					PDP_INCOME,
					PDP_SELLSTARTDATE,
					PDP_SELLENDDATE,
					PDP_SELLSTATUS,
					PDP_AIMCUST,
					PDP_LIMFLAG,
					PDP_CHANNELSELLFLAG,
					PDP_INVESTSTARTDATE,
					PDP_INVESTENDDATE,
					PDP_INCREASEAMT,
					PDP_NOCUSTSUM,
					PDP_INVESTEXPERIENCE,
					PDP_BANKSHOWFLAG
				)
				VALUES
				(
					IN_PRODUCTNO,
					IN_PRODUCTNAME,
					'2',
					IN_PRODUCTTYPE,
					IN_CURRTYPE,
					IN_INVESTSTARTSUM,
					IN_PRODUCTRISKLEVEL,
					IN_INVESTTERM,
					IN_INCOME,
					IN_SELLSTARTDATE,
					IN_SELLENDDATE,
					IN_SELLSTATUS,
					IN_AIMCUST,
					IN_LIMFLAG,
					V_CHANNEL,
					IN_INVESTSTARTDATE,
					IN_INVESTENDDATE,
					IN_INCREASEAMT,
					IN_NOCUSTSUM,
					IN_INVESTEXPERIENCE,
					IN_BANKSHOWFLAG
					
				);
		 END IF;
			--鏇存柊寰楀埄瀹濆彲閿€鍞垎琛屽鐓ц〃
			IF IN_LIMFLAG IS NOT NULL AND IN_LIMFLAG = '0' AND LTRIM(SUBSTR(IN_BRANCHNOSTR,1,6)) <> '000000' THEN
					
				SET V_BRANCHNOSTR = IN_BRANCHNOSTR || '#';
		
				WHILE V_BRANCHNOSTR <> '#' DO 
				
					SET V_BANKINFO = SUBSTR( V_BRANCHNOSTR, 1, 37);
					
					--鍙栧緱鍒嗚鍙?					SET V_BKNO = LTRIM(SUBSTR( V_BANKINFO, 1, 6));
					
					IF V_BKNO <> '' THEN
						--鍙栧緱鍒嗚閿€鍞姸鎬?						SET V_BKSELLSTATUS = SUBSTR( V_BANKINFO, 7, 1);
						
						--鍙栧緱閿€鍞搴?						SET V_BKSELLAMT = CAST(SUBSTR( V_BANKINFO, 8, 13) AS DECIMAL(15,2));
						
						--鍙栧緱棰勭暀棰濆害
						SET V_BKKEEPAMT = CAST(SUBSTR( V_BANKINFO, 23, 13) AS DECIMAL(15,2));
						
							--娓呴櫎浠ュ墠鐞嗚储浜у搧璁板綍
						DELETE FROM PB_PRO_BANKINFO WHERE PPB_PRODUCTNO = IN_PRODUCTNO AND PPB_BKNO = V_BKNO;
				  		--鍒犻櫎淇℃伅鎻掑埌寰楀埄瀹濆彲閿€鍞垎琛屽鐓ц〃
				  		INSERT INTO PB_PRO_BANKINFO( PPB_PRODUCTNO,PPB_BKNO,PPB_SELLSTATUS,PPB_SELLAMT,PPB_KEEPAMT ) VALUES(IN_PRODUCTNO,V_BKNO,V_BKSELLSTATUS,V_BKSELLAMT,V_BKKEEPAMT);
				  		
						SET V_BRANCHNOSTR = SUBSTR( V_BRANCHNOSTR, 38 );
					ELSE
						SET V_BRANCHNOSTR = '#';
					END IF;
				END WHILE;
					
			ELSEIF IN_LIMFLAG = '1'  OR  IN_LIMFLAG = '2'  THEN
				--娓呴櫎浠ュ墠鐞嗚储浜у搧璁板綍
				DELETE FROM PB_PRO_BANKINFO WHERE PPB_PRODUCTNO = IN_PRODUCTNO;
				INSERT INTO PB_PRO_BANKINFO( PPB_PRODUCTNO,PPB_BKNO,PPB_SELLSTATUS ) VALUES(IN_PRODUCTNO,'999999','0');
		  END IF;

	--鎿嶄綔鍔熻兘鐮?U-鏇存柊
	ELSEIF IN_FUNCNO = 'U' AND V_EXISTS = '1' THEN
	
		UPDATE PB_PRODPAR 
		SET 
		PDP_PRODUCTNAME      =CASE WHEN IN_PRODUCTNAME = '' THEN PDP_PRODUCTNAME ELSE IN_PRODUCTNAME END,
		PDP_PRODUCTTYPE      =CASE WHEN IN_PRODUCTTYPE = '' THEN PDP_PRODUCTTYPE ELSE IN_PRODUCTTYPE END,
		PDP_CURRTYPE         =CASE WHEN IN_CURRTYPE = '' THEN PDP_CURRTYPE ELSE IN_CURRTYPE END,
		PDP_INVESTSTARTSUM   =CASE WHEN IN_INVESTSTARTSUM = 0 THEN PDP_INVESTSTARTSUM ELSE IN_INVESTSTARTSUM END,
		PDP_PRODUCTRISKLEVEL =CASE WHEN IN_PRODUCTRISKLEVEL = '' THEN PDP_PRODUCTRISKLEVEL ELSE IN_PRODUCTRISKLEVEL END,
		PDP_INVESTTERM       =CASE WHEN IN_INVESTTERM = '' THEN PDP_INVESTTERM ELSE IN_INVESTTERM END,
		PDP_INCOME           =CASE WHEN IN_INCOME = '' THEN PDP_INCOME ELSE IN_INCOME END,
		PDP_SELLSTARTDATE    =CASE WHEN IN_SELLSTARTDATE = '' THEN PDP_SELLSTARTDATE ELSE IN_SELLSTARTDATE END,
		PDP_SELLENDDATE      =CASE WHEN IN_SELLENDDATE = '' THEN PDP_SELLENDDATE ELSE IN_SELLENDDATE END,
		PDP_SELLSTATUS       =CASE WHEN IN_SELLSTATUS = '' THEN PDP_SELLSTATUS ELSE IN_SELLSTATUS END,
		PDP_AIMCUST          =CASE WHEN IN_AIMCUST = '' THEN PDP_AIMCUST ELSE IN_AIMCUST END,
		PDP_LIMFLAG          =CASE WHEN IN_LIMFLAG = '' THEN PDP_LIMFLAG ELSE IN_LIMFLAG END,
		PDP_CHANNELSELLFLAG  =CASE WHEN V_CHANNEL = '' THEN PDP_CHANNELSELLFLAG ELSE V_CHANNEL END,
		PDP_INVESTSTARTDATE  =CASE WHEN IN_INVESTSTARTDATE = '' THEN PDP_INVESTSTARTDATE ELSE IN_INVESTSTARTDATE END,
		PDP_INVESTENDDATE    =CASE WHEN IN_INVESTENDDATE = '' THEN PDP_INVESTENDDATE ELSE IN_INVESTENDDATE END,
		PDP_INCREASEAMT      =CASE WHEN IN_INCREASEAMT = 0 THEN PDP_INCREASEAMT ELSE IN_INCREASEAMT END,
		PDP_NOCUSTSUM        =CASE WHEN IN_NOCUSTSUM = 0 THEN PDP_NOCUSTSUM ELSE IN_NOCUSTSUM END,
		PDP_INVESTEXPERIENCE =CASE WHEN IN_INVESTEXPERIENCE = '' THEN PDP_INVESTEXPERIENCE ELSE IN_INVESTEXPERIENCE END,
		PDP_BANKSHOWFLAG     =CASE WHEN IN_BANKSHOWFLAG = '' THEN PDP_BANKSHOWFLAG ELSE IN_BANKSHOWFLAG END
		WHERE PDP_PRODUCTNO  = IN_PRODUCTNO;
		
			--鏇存柊寰楀埄瀹濆彲閿€鍞垎琛屽鐓ц〃
		IF IN_LIMFLAG IS NOT NULL AND IN_LIMFLAG = '0' AND LTRIM(SUBSTR(IN_BRANCHNOSTR,1,6)) <> '000000' THEN

			IF  EXISTS (
				SELECT 1
				FROM PB_PRO_BANKINFO 
				WHERE PPB_PRODUCTNO = IN_PRODUCTNO AND PPB_BKNO = '999999'
			) THEN
				SET V_EXISTS2 = '1';
				--娓呴櫎鍏ㄨ閿€鍞殑鐞嗚储浜у搧璁板綍
				DELETE FROM PB_PRO_BANKINFO WHERE PPB_PRODUCTNO = IN_PRODUCTNO AND PPB_BKNO = '999999';
			ELSE
				SET V_EXISTS2 = '0';
                --鏇存柊鐞嗚储浜у搧锛屾妸閿€鍞姸鎬佺疆涓?
				--UPDATE PB_PRO_BANKINFO SET PPB_SELLSTATUS='1' WHERE PPB_PRODUCTNO = IN_PRODUCTNO;
					
			END IF;
			
			SET V_BRANCHNOSTR = IN_BRANCHNOSTR || '#';
				
			WHILE V_BRANCHNOSTR <> '#' DO 
				
				SET V_BANKINFO = SUBSTR( V_BRANCHNOSTR, 1, 37);
				--鍙栧緱鍒嗚鍙?				SET V_BKNO = LTRIM(SUBSTR( V_BANKINFO, 1, 6));
				
				IF V_BKNO <> '' THEN
					--鍙栧緱鍒嗚閿€鍞姸鎬?					SET V_BKSELLSTATUS = SUBSTR( V_BANKINFO, 7, 1);
					
					--鍙栧緱閿€鍞搴?					SET V_BKSELLAMT = CAST(SUBSTR( V_BANKINFO, 8, 13) AS DECIMAL(15,2));
					
					--鍙栧緱棰勭暀棰濆害
					SET V_BKKEEPAMT = CAST(SUBSTR( V_BANKINFO, 23, 13) AS DECIMAL(15,2));
					
					--鍒犻櫎淇℃伅鎻掑埌寰楀埄瀹濆彲閿€鍞垎琛屽鐓ц〃
					IF V_EXISTS2 = '0' THEN
						DELETE FROM PB_PRO_BANKINFO WHERE PPB_PRODUCTNO = IN_PRODUCTNO AND PPB_BKNO = V_BKNO ;
					END IF;
			  		--瑕佹洿鏂扮殑淇℃伅鎻掑埌寰楀埄瀹濆彲閿€鍞垎琛屽鐓ц〃
			  		INSERT INTO PB_PRO_BANKINFO( PPB_PRODUCTNO,PPB_BKNO,PPB_SELLSTATUS,PPB_SELLAMT,PPB_KEEPAMT,PPB_UPDATETIME ) VALUES(IN_PRODUCTNO,V_BKNO,V_BKSELLSTATUS,V_BKSELLAMT,V_BKKEEPAMT,V_DATETIME);
			  		
					SET V_BRANCHNOSTR = SUBSTR( V_BRANCHNOSTR, 38 );
				ELSE
					SET V_BRANCHNOSTR = '#';
				END IF;
				
			END WHILE;
				
		ELSEIF IN_LIMFLAG = '1' OR  IN_LIMFLAG = '2' THEN
			--娓呴櫎浠ュ墠鐞嗚储浜у搧璁板綍
			DELETE FROM PB_PRO_BANKINFO WHERE PPB_PRODUCTNO = IN_PRODUCTNO;
			INSERT INTO PB_PRO_BANKINFO( PPB_PRODUCTNO,PPB_BKNO,PPB_SELLSTATUS ) VALUES(IN_PRODUCTNO,'999999','0');
		END IF;

	--鎿嶄綔鍔熻兘鐮?D-鍒犻櫎
	ELSEIF IN_FUNCNO = 'D' THEN
		DELETE FROM PB_PRODPAR WHERE PDP_PRODUCTNO = IN_PRODUCTNO;
				--鍒犻櫎寰楀埄瀹濆彲閿€鍞垎琛屽鐓ц〃
		IF IN_LIMFLAG IS NOT NULL AND IN_LIMFLAG = '0' THEN
				
			SET V_BRANCHNOSTR = IN_BRANCHNOSTR || '#';
	
			WHILE V_BRANCHNOSTR <> '#' DO 
			
				SET V_BKNO = SUBSTR( V_BRANCHNOSTR, 1, 6);
					--娓呴櫎浠ュ墠鐞嗚储浜у搧璁板綍
				DELETE FROM PB_PRO_BANKINFO WHERE PPB_PRODUCTNO = IN_PRODUCTNO AND PPB_BKNO = V_BKNO;
				SET V_BRANCHNOSTR = SUBSTR( V_BRANCHNOSTR, 38 );
			END WHILE;
			
		ELSE
			--娓呴櫎浠ュ墠鐞嗚储浜у搧璁板綍
			DELETE FROM PB_PRO_BANKINFO WHERE PPB_PRODUCTNO = IN_PRODUCTNO;
	  END IF;
  END IF;
	
	COMMIT;
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_PRODUCT_YTL_QRY_LIST
(
IN IN_BKNO                VARCHAR(6),
OUT PROC_RET_CODE         VARCHAR(5)
) 
  READS SQL DATA 
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 寰楀埄瀹濇槗娣诲埄浜у搧鏌ヨ
-- 杈撳叆鍙傛暟锛?-- 鏃?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?-- 鍒涘缓浜猴細zhouny
------------------------------------------------------------------------
BEGIN
	
	DECLARE CUR_Q CURSOR  WITH RETURN TO CALLER FOR
		SELECT
			PDP_TRADETYPE,
			PDP_PRODUCTNO,
			PDP_PRODUCTNAME,
			PDP_PRODUCTTYPE,
			PDP_CURRTYPE,
			PDP_CASHFLAG,
			PDP_INVESTSTARTSUM,
			PDP_FIRSTINVESTSTARTSUM,
			PDP_INCREASEAMT,
			PDP_PRODUCTRISKLEVEL,
			PDP_NETFLAG,
			PDP_INVESTEXPERIENCE,
			PDP_NOCUSTSUM,
			PDP_TARGETOBJECT,
			PDP_FEEFLAG,
			PDP_CUSTGROUPSIGNFLAG,
			PDP_CUSTOMGROUP,
			PDP_TAFLAG,
			PDP_SIGNFLAG,
			PPB_SELLSTATUS
		FROM
			PB_PRO_BANKINFO
		INNER JOIN PB_PRODPAR ON(PDP_PRODUCTNO=PPB_PRODUCTNO 
								AND (PPB_BKNO=IN_BKNO ||'999' OR PPB_BKNO='999999')
								AND PPB_SELLAMT > 0 
								AND PPB_KEEPAMT > 0)
		WHERE PDP_CUSTGROUPSIGNFLAG='1' AND PDP_DELFLAG='0' AND PDP_CHANNELSELLFLAG='0';
			
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	-- 鎵撳紑娓告爣
	OPEN CUR_Q;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_PRODUCT_REPORT_LIST
 (
 	IN IN_PRODUCTNO      VARCHAR(300),
  OUT PROC_RET_CODE VARCHAR(5)
 ) 
  READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 寰楀埄瀹濅骇鍝佹姇璧勬姤鍛婃煡璇?-- 杈撳叆鍙傛暟锛欼N_PRODUCTNO
-- 浜у搧浠ｇ爜

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?-- 鍒涘缓浜猴細lihy
------------------------------------------------------------------------
BEGIN
	
	DECLARE CUR_Q CURSOR  WITH RETURN TO CALLER FOR
		SELECT PRM_PRODUCTNO,PRM_MAINTAINTIME,PRM_PROREPORT 
		
		FROM PB_REPORT_MAINTAIN WHERE 
		
		LOCATE(PRM_PRODUCTNO,IN_PRODUCTNO) > 0
		
		 ORDER BY PRM_MAINTAINTIME DESC;
			
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	-- 鎵撳紑娓告爣
	OPEN CUR_Q;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_COPRODPAR(
IN IN_BKNO                VARCHAR(6),
OUT PROC_RET_CODE         VARCHAR(5)
 ) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ閾堕摱骞冲彴閿€鍞緱鍒╁疂浜у搧淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_BKNO:       浜у搧鎵€灞炲垎琛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_PRODUCT_LST: 缁撴灉闆?-- 鏈€鍚庝慨鏀逛汉 锛?zhouny
-- 鏈€鍚庝慨鏀规棩鏈?锛?2012.07.16
------------------------------------------------------------------------
BEGIN
		DECLARE V_CURR_DATE VARCHAR(8);
		--鍙栧緱鍒╁疂浜у搧淇℃伅
 	DECLARE OUT_PRODUCT_LST CURSOR WITH RETURN FOR
	SELECT DISTINCT
		PDP_PRODUCTNO,
	    PDP_PRODUCTNAME,
	    PDP_TRADETYPE,
	    PDP_PRODUCTTYPE,
	    PDP_CURRTYPE,
	    PDP_CASHFLAG,
	    PDP_INVESTTERM,
	    PDP_INVESTSTARTSUM,
	    PDP_SELLSTATUS,
	    PDP_FUNDSTARTDATE,
	    PDP_FUNDENDDATE,
	    PDP_INVESTSTARTDATE,
	    PDP_INVESTENDDATE,
	    PDP_STARTDAY,
	    PDP_WORKDATE,
	    PDP_INCREASEAMT,
	    PDP_PRODUCTRISKLEVEL,
	    PDP_SELLSTARTDATE,
	    PDP_SELLENDDATE,
	    PDP_MAXRATIO,
	    PDP_MINRATIO,
	    PDP_INCOME,
	    PDP_NETFLAG,
	    PDP_DELFLAG,
	    PDP_AIMCUST,
	    PDP_TARGETOBJECT,
	    PDP_NOCUSTSUM,
	    PDP_LIMFLAG,
	    PDP_SUBSFLAG,
	    PDP_PURCHASEFLAG,
	    PDP_FEEFLAG,
	    PDP_NEWFLAG,
	    PDP_RECOMMENDFLAG,
	    PDP_HOTFLAG,
	    PDP_MANAGESHOWFLAG,
	    PDP_INVESTEXPERIENCE,
	    PPB_SELLSTATUS,
	    PDP_CHANNELSELLFLAG,
	    PDP_COSELLSUM,
	    CASE WHEN PDP_CURRTYPE = 'CNY' THEN '1' ELSE '2' END AS CURTYP
	    
	FROM 
		PB_PRO_BANKINFO
		INNER JOIN PB_PRODPAR ON(PDP_PRODUCTNO=PPB_PRODUCTNO 
								AND (PPB_BKNO=IN_BKNO ||'999' OR PPB_BKNO='999999')
								AND PPB_SELLSTATUS = '0'
								AND PPB_SELLAMT > 0 
								AND PPB_KEEPAMT > 0)
	WHERE 
			LENGTH(PDP_PRODUCTNO)=10 
			AND PDP_CHANNELSELLFLAG='0' 
			AND PDP_NETFLAG = '1' 
			AND PDP_PRODUCTTYPE <> '005'
			AND (PDP_SUBSFLAG = '1' OR PDP_PURCHASEFLAG = '1')
			AND PDP_COFLAG = '1'
			AND (PDP_COSELLSUM > 0 OR PDP_COSELLSUM = -1)
		
	ORDER BY CURTYP ASC,PDP_SELLSTARTDATE DESC;
	
		-- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
		SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	--杩斿洖缁撴灉鍊?	OPEN OUT_PRODUCT_LST;
	
	SET PROC_RET_CODE = '00000'; 
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_ZHTL(
IN IN_BKNO                VARCHAR(6),
OUT PROC_RET_CODE         VARCHAR(5)
 ) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鏅烘収娣诲埄浜у搧淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_PRODUCTNO:  浜у搧浠ｇ爜
-- IN_BKNO:       浜у搧鎵€灞炲垎琛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_PRODUCT_LST: 缁撴灉闆?-- author 锛?lihy
-- date 锛?2012.09.28
------------------------------------------------------------------------
BEGIN
		DECLARE V_CURR_DATE VARCHAR(8);
		--鍙栨櫤鎱ф坊鍒╀骇鍝佷俊鎭? 	DECLARE OUT_PRODUCT_LST CURSOR WITH RETURN FOR
	SELECT DISTINCT
		PDP_PRODUCTNO,
	    PDP_PRODUCTNAME,
	    PDP_TRADETYPE,
	    PDP_PRODUCTTYPE,
	    PDP_CURRTYPE,
	    PDP_CASHFLAG,
	    PDP_INVESTTERM,
	    PDP_INVESTSTARTSUM,
	    PDP_SELLSTATUS,
	    PDP_FUNDSTARTDATE,
	    PDP_FUNDENDDATE,
	    PDP_INVESTSTARTDATE,
	    PDP_INVESTENDDATE,
	    PDP_STARTDAY,
	    PDP_WORKDATE,
	    PDP_INCREASEAMT,
	    PDP_PRODUCTRISKLEVEL,
	    PDP_SELLSTARTDATE,
	    PDP_SELLENDDATE,
	    PDP_MAXRATIO,
	    PDP_MINRATIO,
	    PDP_INCOME,
	    PDP_NETFLAG,
	    PDP_DELFLAG,
	    PDP_AIMCUST,
	    PDP_TARGETOBJECT,
	    PDP_NOCUSTSUM,
	    PDP_LIMFLAG,
	    PDP_SUBSFLAG,
	    PDP_PURCHASEFLAG,
	    PDP_FEEFLAG,
	    PDP_NEWFLAG,
	    PDP_RECOMMENDFLAG,
	    PDP_HOTFLAG,
	    PDP_MANAGESHOWFLAG,
	    PDP_INVESTEXPERIENCE,
	    PPB_SELLSTATUS,
	    PDP_CHANNELSELLFLAG,
	    PDP_CUSTGROUPSIGNFLAG,
	    PDP_CUSTOMGROUP,
	    CASE WHEN PDP_CURRTYPE = 'CNY' THEN '1' ELSE '2' END AS CURTYP,
	    PDP_ZHTLFLAG,
	    PDP_CYCLEDAY
	    
	FROM 
		PB_PRO_BANKINFO
		INNER JOIN PB_PRODPAR ON(PDP_PRODUCTNO=PPB_PRODUCTNO 
								AND (PPB_BKNO=IN_BKNO ||'999' OR PPB_BKNO='999999')
								AND PPB_SELLAMT > 0 
								AND PPB_KEEPAMT > 0)
	WHERE 
			
				PDP_ZHTLFLAG = '2'
				AND PDP_PRODUCTTYPE = '005'
			
		
	ORDER BY CURTYP ASC,PDP_SELLSTARTDATE DESC;

	
	
		-- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
		SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		
	--杩斿洖缁撴灉鍊?	OPEN OUT_PRODUCT_LST;
	
	SET PROC_RET_CODE = '00000'; 
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_SELLAMT (
IN_PRODUCTNO            VARCHAR(10),
IN_BRANCHNOSTR          VARCHAR(3000),
OUT PROC_RET_CODE	      VARCHAR(5),
OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
OUT OUT_TOA_MSG_AP_MMO	VARCHAR(2),
OUT OUT_TOA_MSG_CODE		VARCHAR(4),
OUT OUT_ANSINFO				  VARCHAR(50)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁鍙戝竷鐨勭悊璐骇鍝佹満鏋勯搴︿俊鎭秷鎭洿鏂伴搴︿俊鎭?-- 杈撳叆鍙傛暟锛?--IN_PRODUCTNO      浜у搧浠ｇ爜
--IN_BRANCHNOSTR    鍚勬満鏋勯攢鍞搴﹀瓧绗︿覆

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?
-- 淇敼浜猴細zhouny
-- 淇敼鏃ユ湡 锛?2013.01.07
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_SELLAMT DECIMAL(16,2);
	DECLARE V_BKNO CHAR(6);
	DECLARE V_BRANCHNOSTR VARCHAR(3000);
	DECLARE V_POS INT;
	DECLARE V_SELLSTATUS CHAR(1);
	DECLARE V_DATETIME VARCHAR(14);
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;

  SET V_BRANCHNOSTR = IN_BRANCHNOSTR || '#';
  SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
  
	WHILE V_BRANCHNOSTR <> '#' DO 
		--鍙栧緱鍒嗚鍙?		SET V_BKNO = SUBSTR( V_BRANCHNOSTR, 1, 3) || '999';
		SET V_POS = POSSTR(V_BRANCHNOSTR,'|');
		--鍙栧緱閿€鍞搴?		SET V_SELLAMT = CAST(SUBSTR( V_BRANCHNOSTR, 4,V_POS-6 )||'.'||SUBSTR( V_BRANCHNOSTR, V_POS-3,2 ) AS DECIMAL(16,2));
		--鍙栧緱閿€鍞姸鎬?		IF EXISTS (
			SELECT 1
			FROM PB_PRO_BANKINFO
			WHERE PPB_PRODUCTNO = IN_PRODUCTNO AND PPB_BKNO = '999999'
		) THEN
			SELECT PPB_SELLSTATUS INTO V_SELLSTATUS FROM PB_PRO_BANKINFO WHERE PPB_PRODUCTNO = IN_PRODUCTNO AND PPB_BKNO = '999999';
		ELSE
			SELECT PPB_SELLSTATUS INTO V_SELLSTATUS FROM PB_PRO_BANKINFO WHERE PPB_PRODUCTNO = IN_PRODUCTNO AND PPB_BKNO = V_BKNO;
		END IF;
		
		DELETE FROM PB_PRO_BANKINFO WHERE PPB_PRODUCTNO = IN_PRODUCTNO AND PPB_BKNO = V_BKNO;
		
	  --鏇存柊寰楀埄瀹濆彲閿€鍞垎琛屽鐓ц〃
	  INSERT INTO PB_PRO_BANKINFO( PPB_PRODUCTNO,PPB_BKNO,PPB_SELLSTATUS,PPB_SELLAMT,PPB_UPDATETIME ) VALUES(IN_PRODUCTNO,V_BKNO,V_SELLSTATUS,V_SELLAMT,V_DATETIME);
		SET V_BRANCHNOSTR = SUBSTR( V_BRANCHNOSTR, V_POS+1 );
	END WHILE;
		
	
	COMMIT;
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_GET_BRANCHINFO
(
    OUT PROC_RET_CODE VARCHAR(5)
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱瀛樺偍杩囩▼

-- 杈撳叆鍙傛暟锛氭棤

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_ROUTE锛氬垎琛岃矾鐢变俊鎭粨鏋滈泦


-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.08.15
------------------------------------------------------------------------
BEGIN

    -- 鍙栧緱鍒嗚璺敱淇℃伅
	DECLARE CUR_ROUTE CURSOR WITH RETURN TO CALLER FOR
		SELECT PBR_CORENO, PBR_BRANCHNAME
		FROM PB_BRCHRUT;
	
        
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

    --鎵撳紑娓告爣
    OPEN CUR_ROUTE;
	
    SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_IMAGE_INFO_ADD
(
    IN IN_IMAGENAME      VARCHAR(20),
    IN IN_IMAGEPOS	CHAR(1),
    IN IN_PRODUCTURL	VARCHAR(300),
    IN IN_PRODUCTNAME	VARCHAR(40),
    IN IN_UPLOADTIME	VARCHAR(8),
  	IN IN_LANGUAGEVERSION	CHAR(1),
   
    OUT PROC_RET_CODE	VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 灏嗗浘鐗囦俊鎭鍏ユ暟鎹簱

-- 杈撳叆鍙傛暟锛?-- IN_IMAGENAME锛?鍥剧墖鍚嶇О
-- IN_IMAGEPOS:  鍥剧墖浣嶇疆
-- IN_PRODUCTURL锛? 閾炬帴鍦板潃
-- IN_PRODUCTNAME锛?閾炬帴椤甸潰鍚嶇О
-- IN_UPLOADTIME锛?涓婁紶鏃堕棿
-- IN_LANGUAGEVERSION锛?鐗堟湰鏍囪瘑


-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.08.29
------------------------------------------------------------------------
BEGIN


    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		

		ROLLBACK ;
	END;
		IF IN_IMAGEPOS IS NOT NULL AND IN_IMAGEPOS <>'' THEN 
			 DELETE FROM PB_IMAGEINFO 
	  	WHERE PII_IMAGEPOS = IN_IMAGEPOS AND PII_LANGUAGE=IN_LANGUAGEVERSION;                        
		END IF;
		
    IF  EXISTS 
		(
			SELECT 1 
			FROM PB_IMAGEINFO
			WHERE PII_IMAGENAME = IN_IMAGENAME AND PII_LANGUAGE=IN_LANGUAGEVERSION
		) 
	THEN
	    -- 鍒犻櫎璇ュ浘鐗囦俊鎭?	  DELETE FROM PB_IMAGEINFO 
	  WHERE PII_IMAGENAME = IN_IMAGENAME;
	
	END IF;

	    INSERT INTO PB_IMAGEINFO
		(
			PII_IMAGENAME       ,
			PII_IMAGEPOS        ,
			PII_PRODUCTURL       ,
			PII_PRODUCTNAME      ,
			PII_UPLOADTIME      ,
			PII_LANGUAGE   
		)
		VALUES
		(
			IN_IMAGENAME,
			IN_IMAGEPOS,
			IN_PRODUCTURL,
			IN_PRODUCTNAME,
			IN_UPLOADTIME,
			IN_LANGUAGEVERSION
		);
	
	COMMIT;
    
	SET PROC_RET_CODE = '00000'; 
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_IMAGE_INFO_DELETE
(
    IN IN_LANGUAGE      CHAR(1),
    IN IN_IMAGENAME      VARCHAR(20),
    OUT PROC_RET_CODE VARCHAR(5)
) 
  
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱瀛樺偍杩囩▼

-- 杈撳叆鍙傛暟:
--IN_LANGUAGE:	鐗堟湰鏍囪瘑
--IN_IMAGENAME:	鍥剧墖鍚嶇О

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?


-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.08.15
------------------------------------------------------------------------
BEGIN

    
	
        
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	DELETE FROM PB_IMAGEINFO 
	WHERE PII_LANGUAGE = IN_LANGUAGE AND PII_IMAGENAME = IN_IMAGENAME;
	

	COMMIT;

	SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_IMAGE_INFO_QUERY
(
    IN IN_BEGINPOS INTEGER, 
    IN IN_SHOWNUM INTEGER, 
    OUT PROC_RET_CODE VARCHAR(5), 
    OUT OUT_TOTALNUM INTEGER
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱瀛樺偍杩囩▼

-- 杈撳叆鍙傛暟锛氭棤

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_ROUTE锛氬浘鐗囦俊鎭粨鏋滈泦 


-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.08.15
------------------------------------------------------------------------
BEGIN

    -- 鍙栧緱鍒嗚璺敱淇℃伅
	DECLARE CUR_ROUTE CURSOR WITH RETURN TO CALLER FOR
		SELECT   PII_IMAGENAME , PII_IMAGEPOS ,PII_PRODUCTURL , PII_PRODUCTNAME , PII_UPLOADTIME , PII_LANGUAGE
		FROM   (

		SELECT   PII_IMAGENAME , PII_IMAGEPOS ,PII_PRODUCTURL , PII_PRODUCTNAME , PII_UPLOADTIME , PII_LANGUAGE,
		ROW_NUMBER()OVER(ORDER BY PII_IMAGENAME) ROW_ID
		FROM PB_IMAGEINFO

		)
		AS TMPTABLE

		WHERE  ROW_ID > IN_BEGINPOS AND

			ROW_ID<= IN_BEGINPOS + IN_SHOWNUM
		
		;
	
        
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	SELECT  COUNT(*) INTO OUT_TOTALNUM
		FROM PB_IMAGEINFO;

    --鎵撳紑娓告爣
    OPEN CUR_ROUTE;
	
    SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_IMAGE_INFO_UPDATE
(	
    IN IN_IMAGENAME      VARCHAR(20),
    IN IN_LANGUAGE      CHAR(1),
    IN IN_IMAGEPOS	CHAR(1),
    IN IN_PRODUCTNAME	VARCHAR(40),
    IN IN_PRODUCTURL	VARCHAR(300),
   
    OUT PROC_RET_CODE VARCHAR(5)
) 
  
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱瀛樺偍杩囩▼

-- 杈撳叆鍙傛暟:
--IN_IMAGENAME:	鏇存柊鍥剧墖鍚嶇О
--IN_LANGUAGE: 鐗堟湰鏍囧織 
--IN_IMAGEPOS锛氬浘鐗囨樉绀轰綅缃?--IN_PRODUCTNAME锛氫骇鍝侀摼鎺ュ悕绉?--IN_PRODUCTURL锛氫骇鍝侀摼鎺?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?


-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?008.08.20
------------------------------------------------------------------------
BEGIN       
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	UPDATE PB_IMAGEINFO SET PII_PRODUCTURL = IN_PRODUCTURL , PII_PRODUCTNAME = IN_PRODUCTNAME 
	WHERE PII_LANGUAGE = IN_LANGUAGE AND PII_IMAGENAME = IN_IMAGENAME;
	

	COMMIT;

	SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_PRODUCT_QRY_LIST
 (
  OUT PROC_RET_CODE VARCHAR(5)
 ) 
  READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 寰楀埄瀹濅骇鍝佽鏄庝功鏌ヨ
-- 杈撳叆鍙傛暟锛?-- 鏃?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?-- 鍒涘缓浜猴細pengxb
------------------------------------------------------------------------
BEGIN
	
	DECLARE CUR_Q CURSOR  WITH RETURN TO CALLER FOR
		SELECT PPG_PRODUCTNO, PPG_FIRSTTIME, PPG_LASTTIME, PPG_PROGUIDE, PPG_PROREPORT

		FROM PB_PROGUIDE;
			
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	-- 鎵撳紑娓告爣
	OPEN CUR_Q;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PRODUCT_GUIDE_MGR
 (
    IN IN_PRODUCTNO      VARCHAR(10),
    IN IN_PRODUIDE       VARCHAR(60),
    IN IN_MOBILEPRODUIDE  	VARCHAR(60),
    IN IN_UPDATE         VARCHAR(8),

    OUT PROC_RET_CODE    VARCHAR(5)  
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁存姢寰楀埄瀹濅骇鍝佽鏄庝功淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_PRODUCTNO  浜у搧浠ｇ爜
-- IN_PRODUIDE   浜у搧璇存槑涔?
-- IN_MOBILEPRODUIDE   鎵嬫満閾惰浜у搧璇存槑涔?-- IN_UPDATE     涓婁紶鏃堕棿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細pengxb
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF EXISTS( 
		SELECT 1 
		FROM PB_PROGUIDE
		WHERE 
			PPG_PRODUCTNO = IN_PRODUCTNO
	) THEN
		UPDATE PB_PROGUIDE SET PPG_LASTTIME = IN_UPDATE , PPG_PROGUIDE = IN_PRODUIDE , PPG_MOBILEPROGUIDE = IN_MOBILEPRODUIDE 
					WHERE PPG_PRODUCTNO = IN_PRODUCTNO;
	ELSE
		INSERT INTO PB_PROGUIDE
		(
			PPG_PRODUCTNO,
			PPG_FIRSTTIME,
			PPG_PROGUIDE,
			PPG_MOBILEPROGUIDE
		)
		VALUES
		(
			IN_PRODUCTNO,
			IN_UPDATE,
			IN_PRODUIDE,
			IN_MOBILEPRODUIDE
		);
	

	END IF;
    
	COMMIT;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PRODUCT_NOTE_MGR
 (
    IN IN_PRODUCTNO      VARCHAR(10),
    IN IN_PRONOTE        VARCHAR(60),
    IN IN_UPDATE         VARCHAR(8),

    OUT PROC_RET_CODE    VARCHAR(5)  
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁存姢寰楀埄瀹濅骇鍝佽剼娉ㄤ俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_PRODUCTNO  浜у搧浠ｇ爜
-- IN_PRONOTE    浜у搧鑴氭敞
-- IN_UPDATE     鏇存柊鏃堕棿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細wangwenhai.sdc
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF EXISTS( 
		SELECT 1 
		FROM PB_PROGUIDE
		WHERE 
			PPG_PRODUCTNO = IN_PRODUCTNO
	) THEN
		UPDATE PB_PROGUIDE SET PPG_LASTTIME = IN_UPDATE , PPG_PRONOTE = IN_PRONOTE 
					WHERE PPG_PRODUCTNO = IN_PRODUCTNO;
	ELSE
			SET PROC_RET_CODE = '95000';
			RETURN;
	

	END IF;
    
	COMMIT;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PRODUCT_GUIDE_DEL
 (
    IN IN_PRODUCTNO      VARCHAR(10),
  
    OUT PROC_RET_CODE    VARCHAR(5)  
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒犻櫎寰楀埄瀹濅骇鍝佽鏄庝功淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_PRODUCTNO  浜у搧浠ｇ爜
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細pengxb
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	UPDATE PB_PROGUIDE SET PPG_PROGUIDE='' WHERE PPG_PRODUCTNO = IN_PRODUCTNO;
	
	COMMIT;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_MOBILE_PRODUCT_GUIDE_DEL
 (
    IN IN_PRODUCTNO      VARCHAR(10),
  
    OUT PROC_RET_CODE    VARCHAR(5)  
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒犻櫎鎵嬫満閾惰寰楀埄瀹濅骇鍝佽鏄庝功淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_PRODUCTNO  浜у搧浠ｇ爜
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細zhouwb
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	UPDATE PB_PROGUIDE SET PPG_MOBILEPROGUIDE='' WHERE PPG_PRODUCTNO = IN_PRODUCTNO;
	
	COMMIT;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_QUERY_SUBBRANCH_FROMPBANK
(
  IN IN_BEGINPOS INTEGER, 
    IN IN_SHOWNUM INTEGER, 
    OUT PROC_RET_CODE VARCHAR(5), 
    OUT OUT_TOTALNUM INTEGER
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ寮傚湴鏀鍩庡競浠ｇ爜淇℃伅

-- 杈撳叆鍙傛暟锛?-- IN_BEGINPOS:璧峰鏍囪瘑
-- IN_SHOWNUM:鏈€澶氳繑鍥炵瑪鏁?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOTALNUM:鎬荤瑪鏁?-- 鏈€鍚庝慨鏀逛汉锛歮aonf
-- 鏈€鍚庝慨鏀规棩鏈燂細2010-04-27
------------------------------------------------------------------------

BEGIN
    -- 寮傚父澶勭悊
	DECLARE CUR_ROUTE CURSOR WITH RETURN TO CALLER FOR
		SELECT   PFS_ACCSITE , PFS_ACCNAME ,PFS_CITYCODE , PFS_CITYNAME , PFS_REM 
		FROM   (

		SELECT   PFS_ACCSITE , PFS_ACCNAME ,PFS_CITYCODE , PFS_CITYNAME , PFS_REM ,
		ROW_NUMBER()OVER(ORDER BY PFS_ACCSITE) ROW_ID
		FROM PB_FORSUBBRANCH

		)
		AS TMPTABLE

		WHERE  ROW_ID > IN_BEGINPOS AND

			ROW_ID<= IN_BEGINPOS + IN_SHOWNUM
		
		;
	
        
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	SELECT  COUNT(*) INTO OUT_TOTALNUM
		FROM PB_FORSUBBRANCH;

    --鎵撳紑娓告爣
    OPEN CUR_ROUTE;
	
    SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_SUBBRANCH_INFO_FOR_PBANK
(
  IN IN_FLAG VARCHAR(1),
  IN IN_ACCSITE VARCHAR(6),
  IN IN_ACCNAME VARCHAR(60),
  IN IN_CITYCODE VARCHAR(4),
  IN IN_CITYNAME 	VARCHAR(60),
  IN IN_REM 			VARCHAR(60),
	OUT PROC_RET_CODE VARCHAR(5),
	OUT OUT_ERRINFO VARCHAR(200)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁存姢寮傚湴鏀鍩庡競浠ｇ爜

-- 杈撳叆鍙傛暟锛?-- IN_FLAG:鎿嶄綔鏍囪瘑		1:娣诲姞锛?锛氬垹闄わ紱
-- IN_ACCSITE锛氬紑鎴风綉鐐?-- IN_ACCNAME: 寮傚湴鏀缃戠偣鍚嶇О
-- IN_CITYCODE锛氬紓鍦版敮琛屽煄甯備唬鐮?-- IN_CITYNAME: 鍩庡競鍚嶇О
-- IN_REM:  澶囨敞

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ERRINFO:杩斿洖鎻愮ず淇℃伅
-- 鏈€鍚庝慨鏀逛汉锛歮aonf
-- 鏈€鍚庝慨鏀规棩鏈燂細2010-04-27
------------------------------------------------------------------------

BEGIN
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_ERRINFO='瀛樺偍杩囩▼鎵ц寮傚父!';
		ROLLBACK ;
	END;
	
	IF IN_FLAG='1' THEN
			IF NOT EXISTS 
    		(
    			SELECT 1
    			FROM PB_FORSUBBRANCH
    			WHERE PFS_ACCSITE = IN_ACCSITE 
    		) 
    	THEN
    	    -- 鎻掑叆璁板綍
    	    INSERT INTO PB_FORSUBBRANCH
					(
						PFS_ACCSITE,
						PFS_ACCNAME,
						PFS_CITYCODE,
						PFS_CITYNAME,
						PFS_REM
					)
					VALUES
					(
						IN_ACCSITE,
						IN_ACCNAME,
						IN_CITYCODE,
						IN_CITYNAME,
						IN_REM
					);
		ELSE
			SET OUT_ERRINFO='鎿嶄綔澶辫触锛佽褰曞凡瀛樺湪锛岃鎵ц鏇存柊鎿嶄綔!';
			RETURN;
		END IF;	
	END IF;
	
	IF IN_FLAG='3' THEN
			IF NOT EXISTS 
    		(
    			SELECT 1
    			FROM PB_FORSUBBRANCH
    			WHERE PFS_ACCSITE = IN_ACCSITE 
    		) 
    	THEN
    	    SET OUT_ERRINFO='鎿嶄綔澶辫触锛佽褰曚笉瀛樺湪!';
    	    RETURN;
		ELSE
			DELETE FROM PB_FORSUBBRANCH  WHERE PFS_ACCSITE = IN_ACCSITE;
		END IF;	 
	END IF;
	
	COMMIT;
	SET PROC_RET_CODE = '00000';  
	SET OUT_ERRINFO='缁存姢寮傚湴鏀淇℃伅鎴愬姛!';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PROTOCOL_SAVE_FOR_PBANK                            

(                                                                       
	  IN IN_IMAGENAME      VARCHAR(60),  -- 瀛樺偍鍥剧墖鍚嶇О                  
	  IN IN_BANKCODE       CHAR(1),      -- 1涓汉缃戦摱 2浼佷笟缃戦摱  
	  IN IN_BSNCODE        CHAR(6),      -- 涓氬姟绉嶇被         
	  IN IN_TELLERID       CHAR(10),     -- 涓婁紶鏌滃憳ID                    
	  IN IN_TELLERNM       VARCHAR(30),  -- 涓婁紶鏌滃憳鍚嶅瓧                  
	  IN IN_EFFECTIVEDATE  CHAR(8),      -- 鐢熸晥鏃ユ湡                      
	  OUT PROC_RET_CODE VARCHAR(5)                                     
)                                                                       
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼                                                         
-- 缁存姢寮傚湴鏀鍩庡競浠ｇ爜                                                 
                                                                        
-- 杈撳叆鍙傛暟锛?                                                          
-- IN_IMAGENAME          瀛樺偍鍥剧墖鍚嶇О                                   
-- IN_BANKCODE           1涓汉缃戦摱 2浼佷笟缃戦摱                            
-- IN_TELLERID           涓婁紶鏌滃憳ID                                     
-- IN_TELLERNM           涓婁紶鏌滃憳鍚嶅瓧                                   
-- IN_EFFECTIVEDATE      鐢熸晥鏃ユ湡                                       
--                                                                      
                                                                        
-- 杈撳嚭鍙傛暟锛?                                                          
-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?                          
-- OUT_ERRINFO:杩斿洖鎻愮ず淇℃伅                                             
-- 鏈€鍚庝慨鏀逛汉锛歭an_xb                                                 
-- 鏈€鍚庝慨鏀规棩鏈燂細2010-06-23                                            
------------------------------------------------------------------------
BEGIN
	DECLARE CURR_TIME CHAR(14);
	DECLARE CURR_DATE CHAR(8);
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SET CURR_TIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	SET CURR_DATE = SUBSTR(CURR_TIME,1,8);
	
	IF IN_EFFECTIVEDATE <= CURR_DATE THEN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END IF;
	
	
	-- 鏇存柊鎵€鏈夋湭鐢熸晥鐨勫崗璁负宸叉挙閿€
	UPDATE PB_PROTOCOL SET
		PPL_STT = '1'
	WHERE
		PPL_EFFECTIVEDATE >= CURR_DATE 
		AND PPL_BSNTYPE    = IN_BSNCODE
		AND PPL_STT        = '0';

	-- 鏇存柊褰撳墠鐢熸晥鐨勫崗璁け鏁堟棩鏈熶负鏂板崗璁敓鏁堟棩鏈?	UPDATE PB_PROTOCOL SET
		PPL_DISABLEDATE = IN_EFFECTIVEDATE
	WHERE
		(PPL_DISABLEDATE   >  CURR_DATE  OR PPL_DISABLEDATE IS NULL)
		AND PPL_EFFECTIVEDATE <= CURR_DATE 
		AND PPL_BSNTYPE    = IN_BSNCODE
		AND PPL_STT        = '0';
	
	INSERT INTO PB_PROTOCOL(
		PPL_BSNTYPE,       
		PPL_STT,           
		PPL_EFFECTIVEDATE, 
		PPL_UPDATETIME,    
		PPL_TELLERID,      
		PPL_TELLERNAME,    
		PPL_CHANNEL,       
		PPL_PROTOCOLNM)   
	VALUES(
		IN_BSNCODE,
		'0',
		IN_EFFECTIVEDATE,
		CURR_TIME,
		IN_TELLERID,
		IN_TELLERNM,
		IN_BANKCODE,
		IN_IMAGENAME
	);
	
	SET PROC_RET_CODE = '00000';
	COMMIT;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_ACTIVE_PROTOCOL                             
(                                                                       
	  IN IN_BANKCODE       CHAR(1),      -- 1涓汉缃戦摱 2浼佷笟缃戦摱  
	  IN IN_BSNCODE        CHAR(6),      -- 涓氬姟绉嶇被 -- PAYSIG 鍗忚鏀粯绛剧害鏂囨湰 QRYSIG 鎺堟潈鏌ヨ鍗忚鏂囨湰        
	  OUT PROC_RET_CODE VARCHAR(5),
	  OUT OUT_FILENAME  VARCHAR(60)      -- 鍗忚鏂囨湰鍚嶇О                                    
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼                                                         
-- 缁存姢寮傚湴鏀鍩庡競浠ｇ爜                                                 
                                                                        
-- 杈撳叆鍙傛暟锛?                                                          
-- IN_BANKCODE           1涓汉缃戦摱 2浼佷笟缃戦摱                            
-- IN_BSNCODE            涓氬姟绉嶇被                                       
--                                                                      
                                                                        
-- 杈撳嚭鍙傛暟锛?                                                          
-- PROC_RET_CODE : 瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯?                          
-- OUT_FILENAME  : 鍗忚鏂囨湰鍚嶇О                                              
-- 鏈€鍚庝慨鏀逛汉锛歭an_xb                                                 
-- 鏈€鍚庝慨鏀规棩鏈燂細2010-06-23                                            
------------------------------------------------------------------------   
BEGIN
	DECLARE CURR_DATE CHAR(8);
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	SET CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	
	SELECT PPL_PROTOCOLNM 
	INTO   OUT_FILENAME
	FROM   PB_PROTOCOL
	WHERE  PPL_STT='0'
	AND    PPL_EFFECTIVEDATE <= CURR_DATE
	AND    (PPL_DISABLEDATE   > CURR_DATE
	OR     PPL_DISABLEDATE   IS NULL)
	AND    PPL_BSNTYPE = IN_BSNCODE;
	
	-- 鍒ゆ柇鏄惁娌℃湁鎵惧埌鐢熸晥鐨勫崗璁?	IF OUT_FILENAME IS NULL OR OUT_FILENAME = '' THEN
		SET PROC_RET_CODE = '30246';
		RETURN;
	END IF;
	
	SET PROC_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PROTOCOL_QUERY_FOR_PBANK
(
	IN  IN_BSNCODE    CHAR(6),
	IN  IN_STARTDATE  CHAR(8),
	IN  IN_ENDDATE    CHAR(8),
    OUT PROC_RET_CODE VARCHAR(5)
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼                                                         
-- 缁存姢寮傚湴鏀鍩庡競浠ｇ爜                                                 
                                                                        
-- 杈撳叆鍙傛暟锛?                                                          
-- IN_BSNCODE   涓氬姟绫诲瀷                                  
-- IN_STARTDATE 鐢熸晥鏃ユ湡璧?-- IN_ENDDATE   鐢熸晥鏃ユ湡姝?                                               
                                                                        
-- 杈撳嚭鍙傛暟锛?                                                          
-- PROC_RET_CODE : 瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯?                          
-- CUR_PROTOCOL  : 鍗忚缁撴灉闆?--                                           
-- 鏈€鍚庝慨鏀逛汉锛歭an_xb                                                 
-- 鏈€鍚庝慨鏀规棩鏈燂細2010-06-23                                            
------------------------------------------------------------------------   
BEGIN
	 -- 鍙栧緱鍒嗚璺敱淇℃伅
	DECLARE CUR_PROTOCOL CURSOR WITH RETURN TO CALLER FOR
		SELECT 
			PPL_BSNTYPE,       
			PPL_STT,           
			PPL_EFFECTIVEDATE,
			PPL_DISABLEDATE,
			PPL_UPDATETIME,    
			PPL_TELLERID,      
			PPL_TELLERNAME,    
			PPL_CHANNEL,       
			PPL_PROTOCOLNM
		FROM PB_PROTOCOL
		WHERE 
			(PPL_BSNTYPE = IN_BSNCODE OR IN_BSNCODE  = 'ALLTYP') 
			AND PPL_EFFECTIVEDATE >= IN_STARTDATE
			AND PPL_EFFECTIVEDATE <= IN_ENDDATE
		ORDER BY PPL_STT,PPL_BSNTYPE ASC,PPL_EFFECTIVEDATE DESC;
	
        
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END; 
	
	OPEN CUR_PROTOCOL;
	
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FUND_ECONTRACT_QRY_LIST
 (
  IN IN_TYPE				VARCHAR(2),
  
  OUT PROC_RET_CODE VARCHAR(5)
 ) 
  READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍩洪噾闆嗗悎浜у搧鐢靛瓙鍚堝悓鍒楄〃鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN_TYPE:浜у搧绫诲瀷 01 鍩洪噾鍒稿晢鐞嗚储浜у搧

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?-- 鍒涘缓浜猴細luys
------------------------------------------------------------------------
BEGIN
	
	DECLARE CUR_Q CURSOR  WITH RETURN TO CALLER FOR
	SELECT PPG_PRODUCTNO, PPG_FIRSTTIME, PPG_LASTTIME, PPG_PROGUIDE
	FROM PB_PROGUIDE
	WHERE PPG_TYPE = IN_TYPE;
			
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	-- 鎵撳紑娓告爣
	OPEN CUR_Q;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_QUERY_FUND_COLLPRD_FROMPBANK
(
  	IN IN_BEGINPOS INTEGER, 
    IN IN_SHOWNUM INTEGER, 
    OUT PROC_RET_CODE VARCHAR(5), 
    OUT OUT_TOTALNUM INTEGER
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鍩洪噾闆嗗悎鐞嗚储浜у搧

-- 杈撳叆鍙傛暟锛?-- IN_BEGINPOS:璧峰鏍囪瘑
-- IN_SHOWNUM:鏈€澶氳繑鍥炵瑪鏁?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOTALNUM:鎬荤瑪鏁?-- 鏈€鍚庝慨鏀逛汉锛歭uys
-- 鏈€鍚庝慨鏀规棩鏈燂細2010-06-23
------------------------------------------------------------------------

BEGIN
    -- 寮傚父澶勭悊
		DECLARE CUR_FUND CURSOR WITH RETURN TO CALLER FOR
		SELECT   PQS_FUNDCODE , PQS_FUNDNAME , PQS_FEETYP , PQS_COMPANY
		FROM (
			SELECT   PQS_FUNDCODE , PQS_FUNDNAME ,PQS_FEETYP , PQS_COMPANY , ROW_NUMBER()OVER(ORDER BY PQS_FUNDCODE) ROW_ID
			FROM PB_FUNDQS
			WHERE PQS_PROTYPE = '2'
		)
		AS TMPTABLE
		WHERE ROW_ID > IN_BEGINPOS 
		AND ROW_ID <= IN_BEGINPOS + IN_SHOWNUM
		;
	
        
    -- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK ;
		END;

		SELECT  COUNT(*) INTO OUT_TOTALNUM
		FROM PB_FUNDQS
		WHERE PQS_PROTYPE = '2';

    --鎵撳紑娓告爣
    OPEN CUR_FUND;
    SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_FUND_ECONTRACT_MGR
 (
    IN IN_PRODUCTNO      VARCHAR(10),
    IN IN_PRODUIDE       VARCHAR(60),
    IN IN_UPDATE         VARCHAR(8),
    IN IN_FILETYPE       VARCHAR(2),

    OUT PROC_RET_CODE    VARCHAR(5)  
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁存姢缁存姢涓汉缃戦摱鐢靛瓙鍚堝悓淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_PRODUCTNO  浜у搧浠ｇ爜
-- IN_PRODUIDE   浜у搧璇存槑涔?
-- IN_UPDATE     涓婁紶鏃堕棿
-- IN_FILETYPE   鏂囦欢绫诲瀷 01 鍩洪噾鍒稿晢鐞嗚储浜у搧鐢靛瓙鍚堝悓
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細luys 20100623
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF EXISTS( 
		SELECT 1 
		FROM PB_PROGUIDE
		WHERE 
			PPG_PRODUCTNO = IN_PRODUCTNO
			AND PPG_TYPE = IN_FILETYPE
	) THEN
		UPDATE PB_PROGUIDE SET PPG_LASTTIME = IN_UPDATE , PPG_PROGUIDE = IN_PRODUIDE
					WHERE PPG_PRODUCTNO = IN_PRODUCTNO
					AND PPG_TYPE = IN_FILETYPE;
	ELSE
		INSERT INTO PB_PROGUIDE
		(
			PPG_PRODUCTNO,
			PPG_FIRSTTIME,
			PPG_PROGUIDE,
			PPG_TYPE
		)
		VALUES
		(
			IN_PRODUCTNO,
			IN_UPDATE,
			IN_PRODUIDE,
			IN_FILETYPE
		);
	

	END IF;
    
	COMMIT;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_GOLD_GOLDTEXT_MGR
 (
    IN IN_PRODUCTNO      VARCHAR(10),
    IN IN_PRODUIDE       VARCHAR(60),
    IN IN_UPDATE         VARCHAR(8),
    IN IN_FILETYPE       VARCHAR(2),

    OUT PROC_RET_CODE    VARCHAR(5)  
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁存姢缁存姢涓汉缃戦摱鐢靛瓙鍚堝悓淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_PRODUCTNO  浜у搧浠ｇ爜
-- IN_PRODUIDE   浜у搧璇存槑涔?
-- IN_UPDATE     涓婁紶鏃堕棿
-- IN_FILETYPE   鏂囦欢绫诲瀷 01 鍩洪噾鍒稿晢鐞嗚储浜у搧鐢靛瓙鍚堝悓 03 榛勯噾鍗忚鏂囨湰
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細luys 20100623
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF EXISTS( 
		SELECT 1 
		FROM PB_PROGUIDE
		WHERE 
			PPG_PROGUIDE = IN_PRODUIDE
			AND PPG_TYPE = IN_FILETYPE
	) THEN
		UPDATE PB_PROGUIDE SET PPG_LASTTIME = IN_UPDATE , PPG_PROGUIDE = IN_PRODUIDE
					WHERE PPG_PROGUIDE = IN_PRODUIDE
					AND PPG_TYPE = IN_FILETYPE;
	ELSE
		INSERT INTO PB_PROGUIDE
		(
			PPG_PRODUCTNO,
			PPG_FIRSTTIME,
			PPG_PROGUIDE,
			PPG_TYPE
		)
		VALUES
		(
			IN_PRODUCTNO,
			IN_UPDATE,
			IN_PRODUIDE,
			IN_FILETYPE
		);
	

	END IF;
    
	COMMIT;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_FUND_PRODUCT_PB_DEL
 (
    IN IN_PRODUCTNO      VARCHAR(6),
    IN IN_FILETYPE      VARCHAR(2),
  
    OUT PROC_RET_CODE    VARCHAR(5)  
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒犻櫎涓汉缃戦摱鏁版嵁搴撲骇鍝佺數瀛愬悎鍚屼俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_PRODUCTNO  鍩洪噾浜у搧浠ｇ爜
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細luys
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	DELETE FROM PB_PROGUIDE WHERE PPG_PRODUCTNO = IN_PRODUCTNO AND PPG_TYPE = IN_FILETYPE;
	
	COMMIT;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_ERROR_REPORT_MSG
 (
    IN IN_CUSTOMERNO     VARCHAR(10),
    IN IN_FLOWNO         VARCHAR(20),
    IN IN_ERRORCODE      VARCHAR(8),
    IN IN_REPORTDATE     VARCHAR(14),
    IN IN_TRANCODE       VARCHAR(6),
    IN IN_TRANNAME       VARCHAR(60),
    IN IN_ERRORSHOW      VARCHAR(200),
    IN IN_FREQUENCY      INTEGER,
    IN IN_DETAILS        VARCHAR(200),
    
    OUT OUT_RET_CODE     VARCHAR(5)
 ) 

DYNAMIC RESULT SETS 1

  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱-淇濆瓨閿欒鐮佷俊鎭埌閿欒鐮佷俊鎭〃涓?
-- 杈撳叆鍙傛暟锛?-- IN_CUSTOMERNO: 缃戦摱瀹㈡埛鍙?-- IN_FLOWNO:     浜ゆ槗娴佹按鍙?-- IN_ERRORCODE:  閿欒鐮?-- IN_REPORTDATE: 涓婃姤鏃ユ湡
-- IN_TRANCODE:   浜ゆ槗浠ｇ爜
-- IN_TRANNAME:   浜ゆ槗鍚嶇О
-- IN_ERRORSHOW:  閿欒鐮佺炕璇?-- IN_FREQUENCY:  涓婃姤棰戞
-- IN_DETAILS:    浜ゆ槗璇︽儏

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE 锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0602涓轰繚瀛樺嚭閿?00000涓烘甯?
-- 鍒涘缓浜?锛?zhangxq
-- 鍒涘缓鏃ユ湡 锛?2010.11.23
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '30602';
		ROLLBACK ;
	END;
    
    -- 娣诲姞閿欒鐮佷俊鎭?	INSERT INTO PB_ERROR_MSG
	(
		PEM_CUSTOMERNO,
		PEM_FLOWNO,
		PEM_ERRORCODE,
		PEM_REPORTDATE,
		PEM_TRANCODE,
		PEM_TRANNAME,
		PEM_ERRORSHOW,
		PEM_FREQUENCY,
		PEM_DETAILS
	)
	VALUES
	(
		IN_CUSTOMERNO,
		IN_FLOWNO,
		IN_ERRORCODE,
		IN_REPORTDATE,
		IN_TRANCODE,
		IN_TRANNAME,
		IN_ERRORSHOW,
		IN_FREQUENCY,
		IN_DETAILS
	);
    
	COMMIT;
	
	SET OUT_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_SELL_INFO_QUERY
(
    IN IN_BEGINPOS INTEGER, 
    IN IN_SHOWNUM INTEGER, 
    IN IN_PRODUCTTYPE VARCHAR(2), 
    OUT PROC_RET_CODE VARCHAR(5), 
    OUT OUT_TOTALNUM INTEGER
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 1
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱瀛樺偍杩囩▼

-- 杈撳叆鍙傛暟锛氭棤

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_ROUTE锛氫俊鎭粨鏋滈泦 


-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?010.11.24
------------------------------------------------------------------------
BEGIN

    -- 鍙栧緱鍒嗚璺敱淇℃伅
	DECLARE CUR_ROUTE CURSOR WITH RETURN TO CALLER FOR
		SELECT   PSI_SELLNAME , PSI_SELLPOS ,PSI_CONTENT ,PSI_CLIENTVS , PSI_PRODUCTTYPE , PSI_URLOUT, PSI_PRODUCTURL , PSI_PRODUCTNAME , PSI_UPLOADTIME , PSI_VALIDDATE , PSI_ENDDATE , PSI_STATUS , PSI_LANGUAGE
		FROM   (
			SELECT   PSI_SELLNAME , PSI_SELLPOS ,PSI_CONTENT , PSI_CLIENTVS , PSI_PRODUCTTYPE , PSI_URLOUT,PSI_PRODUCTURL , PSI_PRODUCTNAME , PSI_UPLOADTIME , PSI_VALIDDATE , PSI_ENDDATE , PSI_STATUS , PSI_LANGUAGE ,
			ROW_NUMBER()OVER(ORDER BY PSI_UPLOADTIME) ROW_ID
			FROM PB_SELLINFO WHERE PSI_PRODUCTTYPE=IN_PRODUCTTYPE
		)
		AS TMPTABLE
		WHERE  ROW_ID > IN_BEGINPOS AND ROW_ID<= IN_BEGINPOS + IN_SHOWNUM
		;       
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	SELECT  COUNT(*) INTO OUT_TOTALNUM
		FROM PB_SELLINFO WHERE PSI_PRODUCTTYPE=IN_PRODUCTTYPE;
    --鎵撳紑娓告爣
    OPEN CUR_ROUTE;
    SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_SELL_INFO_INSERT
(			
			IN IN_IMAGENAME      VARCHAR(20),
			IN IN_SELLPOS      CHAR(2),
			IN IN_CONTENT      CHAR(200),
			IN IN_CLIENTVS      CHAR(2),
			IN IN_PRODUCTTYPE      CHAR(2),
			IN IN_URLOUT      CHAR(1),
			IN IN_PRODUCTURL      VARCHAR(800),
			IN IN_PRODUCTNAME      VARCHAR(40),
			IN IN_UPLOADTIME      VARCHAR(8),
			IN IN_VALIDDATE      VARCHAR(8),
			IN IN_ENDDATE      VARCHAR(8),
			IN IN_OPERATENO      VARCHAR(10),
			IN IN_LANGUAGE      CHAR(1),
			IN IN_STATUS      CHAR(2), 
    	OUT PROC_RET_CODE	VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 灏嗗浘鐗囦俊鎭鍏ユ暟鎹簱

-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.08.29
------------------------------------------------------------------------
BEGIN

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
    IF  EXISTS 
		(
			SELECT 1 
			FROM PB_SELLINFO
			WHERE PSI_SELLNAME = IN_IMAGENAME AND PSI_LANGUAGE=IN_LANGUAGE
		) 
	THEN
	    -- 鍒犻櫎璇ュ浘鐗囦俊鎭?	  DELETE FROM PB_SELLINFO 
	  WHERE PSI_SELLNAME = IN_IMAGENAME  AND PSI_LANGUAGE=IN_LANGUAGE ;
	END IF;
	    INSERT INTO PB_SELLINFO
		(
			PSI_SELLNAME ,
			PSI_SELLPOS ,
			PSI_CONTENT ,
			PSI_CLIENTVS ,
			PSI_PRODUCTTYPE ,
			PSI_URLOUT ,		
			PSI_PRODUCTURL ,
      PSI_PRODUCTNAME ,
      PSI_UPLOADTIME ,
			PSI_VALIDDATE ,
			PSI_ENDDATE ,	
			PSI_OPERATENO,		
			PSI_STATUS ,		
			PSI_LANGUAGE 
		) 
		VALUES
		( 
			IN_IMAGENAME,   
			IN_SELLPOS,     
			IN_CONTENT ,    
			IN_CLIENTVS ,   
			IN_PRODUCTTYPE ,
			IN_URLOUT ,     
			IN_PRODUCTURL , 
			IN_PRODUCTNAME ,
			IN_UPLOADTIME ,
			IN_VALIDDATE ,  
			IN_ENDDATE  ,   
			IN_OPERATENO,   
			IN_STATUS ,
			IN_LANGUAGE  			
		);
	COMMIT; 
	SET PROC_RET_CODE = '00000'; 
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_SELL_INFO_DELETE
(
    IN IN_LANGUAGE      CHAR(1),
    IN IN_IMAGENAME      VARCHAR(20),
    OUT PROC_RET_CODE VARCHAR(5)
) 
  
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱瀛樺偍杩囩▼

-- 杈撳叆鍙傛暟:
--IN_LANGUAGE:	鐗堟湰鏍囪瘑
--IN_IMAGENAME:	鍥剧墖鍚嶇О
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- @author锛歮aonf
-- 鍒涘缓鏃ユ湡锛?007.08.15
------------------------------------------------------------------------
BEGIN
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	DELETE FROM PB_SELLINFO 
	WHERE PSI_LANGUAGE = IN_LANGUAGE AND PSI_SELLNAME = IN_IMAGENAME;
	COMMIT;
	SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_QUERY_PBANK_MENU
(
	OUT PROC_RET_CODE VARCHAR(5)
) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱鏌ヨ鑿滃崟瀛樺偍杩囩▼

-- 杈撳叆鍙傛暟锛氭棤

-- 杈撳嚭鍙傛暟锛?
-- CUR_MENU:鑿滃崟缁撴灉闆?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.maonf
-- 鏈€鍚庝慨鏀规棩鏈?锛?2010.11.26
------------------------------------------------------------------------
BEGIN

	-- 鍙栧緱鑿滃崟淇℃伅
	DECLARE CUR_MENU CURSOR WITH RETURN TO CALLER FOR
		SELECT
			MDF_MENUCODE,
			MDF_NAMECN,
			MDF_NAMEEN,
			MDF_PARENTNO,
			MDF_LEVEL,
			MDF_ISLEAF,
			MDF_STT,
			MDF_SHOWSTATUS
		FROM PB_MENUDEF WHERE MDF_STT='0'
		ORDER BY MDF_MENUCODE, MDF_SEQNO;

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	--鎵撳紑娓告爣

	OPEN CUR_MENU;
    
	SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_ERROR_MSG_LIST
 (IN IN_FLOWNO VARCHAR(20),
  IN IN_ERRORCODE VARCHAR(8),
  IN IN_STARTDATE VARCHAR(8),
  IN IN_ENDDATE VARCHAR(8),
  OUT OUT_RET_CODE VARCHAR(5)
 ) 
READS SQL DATA 
DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 閿欒鎶ュ憡绠＄悊-閿欒淇℃伅鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN_FLOWNO:     浜ゆ槗娴佹按鍙?-- IN_ERRORCODE:  閿欒浠ｇ爜
-- IN_STARTDATE:  鏌ヨ鏃ユ湡璧?-- IN_ENDDATE:    鏌ヨ鏃ユ湡姝?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜,00000涓烘甯?-- OUT_ERRMSG_LST: 缁撴灉闆?
-- 鍒涘缓浜猴細liming
-- 鍒涘缓鏃ユ湡 锛?2010.11.30
------------------------------------------------------------------------
BEGIN
	
	DECLARE	OUT_ERRMSG_LST CURSOR WITH RETURN FOR
		SELECT
		    B.PEM_ERRORCODE,     -- 閿欒鐮?		    B.PEM_ERRORSHOW,     -- 閿欒鐮佺炕璇?		    B.CONT              -- 鍑洪敊娆℃暟
		FROM(SELECT A.*,ROW_NUMBER() OVER(ORDER BY A.PEM_ERRORCODE) AS ROWNUM
			FROM (SELECT 
				    	PEM_ERRORCODE,     -- 閿欒鐮?				        PEM_ERRORSHOW,     -- 閿欒鐮佺炕璇?						COUNT(*) AS CONT       --鍑洪敊娆℃暟
					FROM PB_ERROR_MSG
					WHERE  (CASE WHEN IN_FLOWNO IS NOT NULL AND IN_FLOWNO <> '' THEN PEM_FLOWNO ELSE '0' END) = (CASE WHEN IN_FLOWNO IS NOT NULL AND IN_FLOWNO <> '' THEN IN_FLOWNO ELSE '0' END)
						AND (CASE WHEN IN_ERRORCODE IS NOT NULL AND IN_ERRORCODE <> '' THEN PEM_ERRORCODE ELSE '0' END) = (CASE WHEN IN_ERRORCODE IS NOT NULL AND IN_ERRORCODE <> '' THEN IN_ERRORCODE ELSE '0' END)
						--AND PEM_REPORTDATE.substring(0,8) BETWEEN IN_STARTDATE AND IN_ENDDATE
						AND PEM_REPORTDATE>=IN_STARTDATE||'000000' AND PEM_REPORTDATE<IN_ENDDATE||'240000'
					GROUP BY PEM_ERRORCODE,PEM_ERRORSHOW
				  ORDER BY PEM_ERRORCODE,PEM_ERRORSHOW) A ) B
		WHERE B.ROWNUM <= 10
		ORDER BY B.PEM_ERRORCODE;

     -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	--杩斿洖缁撴灉鍊?	OPEN OUT_ERRMSG_LST;
	
	SET OUT_RET_CODE = '00000';
       
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_ERROR_MSG_UP
(
  IN IN_ERRORCODE VARCHAR(8),
  IN IN_ERRORSHOW VARCHAR(200),
  OUT OUT_RET_CODE VARCHAR(5)
 )
     
    RESULT SETS 1
    LANGUAGE SQL

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 閿欒鎶ュ憡绠＄悊-閿欒鐮佺炕璇戜慨鏀?-- 杈撳叆鍙傛暟锛?涓?-- IN_ERRORCODE:  閿欒浠ｇ爜
-- IN_ERRORSHOW: 閿欒鐮佺炕璇?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜,00000涓烘甯?
-- 鍒涘缓浜猴細liming
-- 鍒涘缓鏃ユ湡 锛?2010.11.30
------------------------------------------------------------------------

	BEGIN
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET OUT_RET_CODE = '95000';
			ROLLBACK;
		END;
	IF EXISTS 
		(
			SELECT 1
			FROM PB_ERROR_MSG
			WHERE PEM_ERRORCODE = IN_ERRORCODE
		)
    THEN 
		UPDATE PB_ERROR_MSG
		SET PEM_ERRORSHOW = IN_ERRORSHOW
		WHERE PEM_ERRORCODE = IN_ERRORCODE;
	ELSE
		SET OUT_RET_CODE = '95000';
	END IF;               

	IF EXISTS 
		(
			SELECT 1
			FROM PUB_ERRCODE
			WHERE ERC_ERRCODE = IN_ERRORCODE
		)
    THEN 
		UPDATE PUB_ERRCODE
		SET ERC_SHOWMSG = IN_ERRORSHOW
		WHERE ERC_ERRCODE = IN_ERRORCODE;
	END IF; 
                    
	COMMIT;	
	--杩斿洖淇℃伅                    
	SET OUT_RET_CODE = '00000';
                            
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PRODUCT_INTRO_MGR
 (
    IN IN_PRODUCTNO      VARCHAR(10),
    IN IN_PROINTRO       VARCHAR(60),
    IN IN_UPDATE         VARCHAR(8),

    OUT PROC_RET_CODE    VARCHAR(5)  
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁存姢浜у搧姒傝淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_PRODUCTNO  浜у搧浠ｇ爜
-- IN_PROINTRO   浜у搧姒傝
-- IN_UPDATE     涓婁紶鏃堕棿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細MAONF
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF EXISTS( 
		SELECT 1 
		FROM PB_PROGUIDE
		WHERE 
			PPG_PRODUCTNO = IN_PRODUCTNO
	) THEN
		UPDATE PB_PROGUIDE SET PPG_LASTTIME = IN_UPDATE , PPG_PROINTRO = IN_PROINTRO
					WHERE PPG_PRODUCTNO = IN_PRODUCTNO;
	ELSE
			SET PROC_RET_CODE = '95000';
			RETURN;

	END IF;
    
	COMMIT;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PRODUCT_QRY_LIST
 (
  OUT PROC_RET_CODE VARCHAR(5)
 ) 
  READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 寰楀埄瀹濅骇鍝佽鏄庝功鏌ヨ
-- 杈撳叆鍙傛暟锛?-- 鏃?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?-- 鍒涘缓浜猴細pengxb
------------------------------------------------------------------------
BEGIN
	
	DECLARE CUR_Q CURSOR  WITH RETURN TO CALLER FOR
		SELECT PPG_PRODUCTNO, PPG_FIRSTTIME, PPG_LASTTIME, PPG_PROGUIDE, PPG_MOBILEPROGUIDE, PPG_PROINTRO, PPG_PROREPORT,PPG_PRONOTE 

		FROM PB_PROGUIDE;
			
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	-- 鎵撳紑娓告爣
	OPEN CUR_Q;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PRODUCT_INTRO_DEL
 (
    IN IN_PRODUCTNO      VARCHAR(10),
  
    OUT PROC_RET_CODE    VARCHAR(5)  
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒犻櫎寰楀埄瀹濅骇鍝佹瑕佷俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_PRODUCTNO  浜у搧浠ｇ爜
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細MAONF
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	UPDATE PB_PROGUIDE SET PPG_PROINTRO='' WHERE PPG_PRODUCTNO = IN_PRODUCTNO;
	
	COMMIT;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PRODUCT_REPORT_MGR
 (
    IN IN_PRODUCTNO      VARCHAR(10),
    IN IN_PROREPORT      VARCHAR(60),
    IN IN_UPDATE         VARCHAR(8),

    OUT PROC_RET_CODE    VARCHAR(5)  
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缁存姢鎶曡祫鎶ュ憡淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_PRODUCTNO  浜у搧浠ｇ爜
-- IN_PROREPORT   鎶曡祫鎶ュ憡
-- IN_UPDATE     涓婁紶鏃堕棿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細huqh
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
		IF EXISTS( 
			SELECT 1 
			FROM PB_REPORT_MAINTAIN
			WHERE 
				PRM_PRODUCTNO = IN_PRODUCTNO AND PRM_MAINTAINTIME = IN_UPDATE
		) THEN
			UPDATE PB_REPORT_MAINTAIN SET PRM_PROREPORT = IN_PROREPORT 
					WHERE PRM_PRODUCTNO = IN_PRODUCTNO AND PRM_MAINTAINTIME = IN_UPDATE;
					
		ELSE
		
		INSERT INTO PB_REPORT_MAINTAIN
		(
			PRM_PRODUCTNO,
			PRM_MAINTAINTIME,
			PRM_PROREPORT
		)
		VALUES
		(
			IN_PRODUCTNO,
			IN_UPDATE,
			IN_PROREPORT
		);
    
  END IF;
	COMMIT;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PRODUCT_REPORT_DEL
 (
    IN IN_PRODUCTNO      VARCHAR(10),
    IN IN_MAINTAINTIME   VARCHAR(8),
  
    OUT PROC_RET_CODE    VARCHAR(5)  
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒犻櫎鎶曡祫鎶ュ憡淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_PRODUCTNO  浜у搧浠ｇ爜
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鍒涘缓浜猴細lihy
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	DELETE FROM PB_REPORT_MAINTAIN WHERE PRM_PRODUCTNO = IN_PRODUCTNO AND PRM_MAINTAINTIME = IN_MAINTAINTIME;
	
	COMMIT;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_NOBLE_METAL_ADD(
	IN  IN_PRODID		VARCHAR(40),
	IN  IN_PRODNAME		VARCHAR(40),
	IN  IN_IMAGENAME	VARCHAR(300),
	IN  IN_IMAGEPATH	VARCHAR(1500),
	IN  IN_STARTDATE	VARCHAR(8),
	IN  IN_ENDDATE		VARCHAR(8),
	IN  IN_LASTMODDT	VARCHAR(14),
	IN  IN_FLASHNAME	VARCHAR(60),
	IN  IN_FLASHPATH	VARCHAR(300),
	OUT PROC_RET_CODE 	VARCHAR(5)
)
	
	LANGUAGE SQL

------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍐呴儴绠＄悊-鏂板璐甸噾灞炵淮鎶?-- 杈撳叆鍙傛暟锛?
--	IN_PRODID: 浜у搧缂栧彿
--	IN_PRODNAME锛氫骇鍝佸悕绉?--	IN_IMAGENAME锛氬浘鐗囧悕绉?--	IN_IMAGEPATH锛氬浘鐗囨湰鍦颁笂浼犺矾寰?--	IN_STARTDATE锛氭湁鏁堝紑濮嬫棩鏈?--	IN_ENDDATE锛?鏈夋晥鎴鏃ユ湡
--	IN_LASTMODDT:鏈€鍚庝慨鏀规椂闂达紝鍙互涓虹┖
--	IN_FLASHNAME锛歠lash鍚嶇О
--	IN_FLASHPATH:flash璺緞 
-- 杈撳嚭鍙傛暟锛?
-- 	PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜

-- 
-- 鍒涘缓淇敼浜猴細saqrg
-- 鍒涘缓鏃ユ湡锛?011.4.26

------------------------------------------------
BEGIN
	-- 澹版槑
	DECLARE V_LASTTIME 	VARCHAR(14);

	-- 寮傚父澶勭悊 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	--蹇呰緭椤规鏌?	IF(IN_PRODID IS NULL OR IN_PRODID = '' OR
		IN_PRODNAME IS NULL OR IN_PRODNAME = '' OR
		IN_IMAGENAME IS NULL OR IN_IMAGENAME = '')
	THEN
		SET PROC_RET_CODE = '22112';
	    	RETURN;
	END IF;
	
	--妫€鏌ヤ骇鍝佺紪鐮佹槸鍚﹀凡缁忓瓨鍦?	IF EXISTS (SELECT 1 FROM PB_METAL_IMAGE WHERE PMI_PRODID = IN_PRODID ) 
	THEN
		SET PROC_RET_CODE = '10428';
		RETURN; 
	END IF;


	IF(IN_LASTMODDT IS NULL OR IN_LASTMODDT = '')
	THEN
		--寰楀埌褰撳墠鏃堕棿
		SET V_LASTTIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	ELSE
		--濡傛灉涓嶄负绌哄垯鍙栬緭鍏ラ」
		SET V_LASTTIME = IN_LASTMODDT;
	END IF;

	--鏂板璁板綍
	INSERT INTO PB_METAL_IMAGE(
		PMI_PRODID,
		PMI_PRODNAME,
		PMI_IMAGENAME,
		PMI_IMAGEPATH,
		PMI_STARTDATE,
		PMI_ENDDATE,
		PMI_LASTMODDT,
		PMI_FLASHNAME,
		PMI_FLASHPATH
	)VALUES(
		IN_PRODID,
		IN_PRODNAME,
		IN_IMAGENAME,
		IN_IMAGEPATH,
		IN_STARTDATE,
		IN_ENDDATE,
		V_LASTTIME,
		IN_FLASHNAME,
		IN_FLASHPATH
	);


	COMMIT;
	SET PROC_RET_CODE = '00000';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_NOBLE_METAL_DEL(
	IN  IN_PRODID		VARCHAR(40),
	OUT PROC_RET_CODE 	VARCHAR(5)
)
------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍐呴儴绠＄悊-鍒犻櫎璐甸噾灞炵淮鎶?-- 杈撳叆鍙傛暟锛?
--	IN_PRODID: 浜у搧缂栧彿
-- 杈撳嚭鍙傛暟锛?
-- 	PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
-- 
-- 鍒涘缓淇敼浜猴細saqrg
-- 鍒涘缓鏃ユ湡锛?011.4.26
------------------------------------------------
BEGIN
	DECLARE V_AFFECTEDROWS  INTEGER;
	-- 寮傚父澶勭悊 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	--蹇呰緭椤规鏌?	IF(IN_PRODID IS NULL OR IN_PRODID = '')
	THEN
		SET PROC_RET_CODE = '22112';
	    	RETURN;
	END IF;
	
	--妫€鏌ヤ骇鍝佺紪鐮佹槸鍚﹀瓨鍦?	IF NOT EXISTS (SELECT 1 FROM PB_METAL_IMAGE WHERE PMI_PRODID = IN_PRODID ) 
	THEN
		SET PROC_RET_CODE = '13174';
		RETURN; 
	END IF;

	--鍒犻櫎璁板綍
	DELETE FROM  
		PB_METAL_IMAGE
	WHERE 
		PMI_PRODID = IN_PRODID;

	--鍙栧垹闄よ鏁帮紝鑻?=1锛屽垯澶辫触杩斿洖
	GET DIAGNOSTICS V_AFFECTEDROWS = ROW_COUNT;
	IF V_AFFECTEDROWS != 1 THEN
		SET PROC_RET_CODE = '20006';
		RETURN;
	END IF;

	COMMIT;
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_NOBLE_METAL_MOD(
	IN  IN_PRODID		VARCHAR(40),
	IN  IN_IMAGENAME	VARCHAR(300),
	IN  IN_IMAGEPATH	VARCHAR(1500),
	IN  IN_STARTDATE	VARCHAR(8),
	IN  IN_ENDDATE		VARCHAR(8),
	IN  IN_LASTMODDT	VARCHAR(14),
	IN  IN_FLASHNAME	VARCHAR(60),
	IN  IN_FLASHPATH	VARCHAR(300),
	IN  IN_MODFLAG		VARCHAR(1),
	OUT PROC_RET_CODE 	VARCHAR(5)
)
	
	LANGUAGE SQL

------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍐呴儴绠＄悊-淇敼璐甸噾灞炵淮鎶?-- 杈撳叆鍙傛暟锛?
--	IN_PRODID: 浜у搧缂栧彿
--	IN_IMAGENAME锛氬浘鐗囧悕绉?--	IN_IMAGEPATH锛氬浘鐗囨湰鍦颁笂浼犺矾寰?--	IN_STARTDATE锛氭湁鏁堝紑濮嬫棩鏈?--	IN_ENDDATE锛?鏈夋晥鎴鏃ユ湡
--	IN_LASTMODDT :鏈€鍚庝慨鏀规椂闂达紝鍙互涓虹┖
--	IN_FLASHNAME锛歠lash鍚嶇О
--	IN_FLASHPATH: flash璺緞
--      IN_MODFLAG锛? 淇敼鏍囧織,0:鍥剧墖鍜孎LASH閮戒笉淇敼,1:淇敼鍥剧墖锛?锛氫慨鏀笷LASH,9:淇敼鍥剧墖鍜孎LASH
-- 杈撳嚭鍙傛暟锛?
-- 	PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜

-- 
-- 鍒涘缓淇敼浜猴細saqrg
-- 鍒涘缓鏃ユ湡锛?011.4.26

------------------------------------------------
BEGIN
	-- 澹版槑
	DECLARE V_LASTTIME 	VARCHAR(14);
	DECLARE V_AFFECTEDROWS  INTEGER;

	-- 寮傚父澶勭悊 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	--蹇呰緭椤规鏌?	IF(IN_PRODID IS NULL OR IN_PRODID = '' OR
		IN_MODFLAG IS NULL OR IN_MODFLAG = '')
	THEN
		SET PROC_RET_CODE = '22112';
	    	RETURN;
	END IF;
	
	--妫€鏌ヤ骇鍝佺紪鐮佹槸鍚﹀瓨鍦?	IF NOT EXISTS (SELECT 1 FROM PB_METAL_IMAGE WHERE PMI_PRODID = IN_PRODID ) 
	THEN
		SET PROC_RET_CODE = '13174';
		RETURN; 
	END IF;


	IF(IN_LASTMODDT IS NULL OR IN_LASTMODDT = '')
	THEN
		--寰楀埌褰撳墠鏃堕棿
		SET V_LASTTIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	ELSE
		--濡傛灉涓嶄负绌哄垯鍙栬緭鍏ラ」
		SET V_LASTTIME = IN_LASTMODDT;
	END IF;

	--淇敼璁板綍
	IF(IN_MODFLAG = '0') THEN
		UPDATE PB_METAL_IMAGE
		SET

			PMI_STARTDATE = IN_STARTDATE,
			PMI_ENDDATE   = IN_ENDDATE,
			PMI_LASTMODDT = V_LASTTIME

		WHERE 
			PMI_PRODID = IN_PRODID;
	ELSEIF(IN_MODFLAG = '1') THEN
		UPDATE PB_METAL_IMAGE
		SET

			PMI_IMAGENAME = IN_IMAGENAME,
			PMI_IMAGEPATH = IN_IMAGEPATH,
			PMI_STARTDATE = IN_STARTDATE,
			PMI_ENDDATE   = IN_ENDDATE,
			PMI_LASTMODDT = V_LASTTIME

		WHERE 
			PMI_PRODID = IN_PRODID;
	ELSEIF(IN_MODFLAG = '2') THEN
		UPDATE PB_METAL_IMAGE
		SET

			PMI_FLASHNAME = IN_FLASHNAME,
			PMI_FLASHPATH = IN_FLASHPATH,
			PMI_STARTDATE = IN_STARTDATE,
			PMI_ENDDATE   = IN_ENDDATE,
			PMI_LASTMODDT = V_LASTTIME

		WHERE 
			PMI_PRODID = IN_PRODID;
	ELSEIF(IN_MODFLAG = '9') THEN	
		UPDATE PB_METAL_IMAGE
		SET
			PMI_IMAGENAME = IN_IMAGENAME,
			PMI_IMAGEPATH = IN_IMAGEPATH,	
			PMI_FLASHNAME = IN_FLASHNAME,
			PMI_FLASHPATH = IN_FLASHPATH,
			PMI_STARTDATE = IN_STARTDATE,
			PMI_ENDDATE   = IN_ENDDATE,
			PMI_LASTMODDT = V_LASTTIME

		WHERE 
			PMI_PRODID = IN_PRODID;
	END IF;

	--鍙栨洿鏂拌鏁帮紝鑻?=1锛屽垯澶辫触杩斿洖
	GET DIAGNOSTICS V_AFFECTEDROWS = ROW_COUNT;
	IF V_AFFECTEDROWS != 1 THEN
		SET PROC_RET_CODE = '20006';
		RETURN;
	END IF;

	COMMIT;
	SET PROC_RET_CODE = '00000';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_NOBLE_METAL_QRY(
	OUT PROC_RET_CODE 	VARCHAR(5)
)
	
	DYNAMIC RESULT SETS 1
	LANGUAGE SQL

------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍐呴儴绠＄悊-鏌ヨ璐甸噾灞炲垪琛?-- 杈撳叆鍙傛暟锛?
--	鏃?-- 杈撳嚭鍙傛暟锛?
-- 	PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
-- 	CUR_RESULT锛氳吹閲戝睘鍒楄〃缁撴灉闆?-- 
-- 鍒涘缓淇敼浜猴細saqrg
-- 鍒涘缓鏃ユ湡锛?011.4.25

------------------------------------------------
BEGIN

	DECLARE CUR_RESULT CURSOR WITH RETURN TO CALLER FOR
	SELECT
		PMI_PRODID,
		PMI_PRODNAME,
		PMI_IMAGENAME,
		PMI_IMAGEPATH,
		PMI_STARTDATE,
		PMI_ENDDATE,
		PMI_LASTMODDT,
		PMI_FLASHNAME,
		PMI_FLASHPATH
	FROM
		PB_METAL_IMAGE
	ORDER BY
		PMI_PRODID;

	--鎵撳紑娓告爣
	OPEN CUR_RESULT;

	SET PROC_RET_CODE = '00000';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_NOBLE_METAL_QRY_BY_ID(
	IN  IN_PRODID		VARCHAR(40),
	OUT PROC_RET_CODE 	VARCHAR(5),
	OUT  OUT_PRODID		VARCHAR(40),
	OUT  OUT_PRODNAME	VARCHAR(40),
	OUT  OUT_IMAGENAME	VARCHAR(60),
	OUT  OUT_IMAGEPATH	VARCHAR(300),
	OUT  OUT_STARTDATE	VARCHAR(8),
	OUT  OUT_ENDDATE	VARCHAR(8),
	OUT  OUT_LASTMODDT	VARCHAR(14),
	OUT  OUT_FLASHNAME	VARCHAR(60),
	OUT  OUT_FLASHPATH	VARCHAR(300)
)
	
	LANGUAGE SQL

------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍐呴儴绠＄悊-鏍规嵁浜у搧缂栫爜鏌ヨ璐甸噾灞炵淮鎶?-- 杈撳叆鍙傛暟锛?
--	IN_PRODID: 浜у搧缂栧彿
-- 杈撳嚭鍙傛暟锛?
-- 	PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--	OUT_PRODID: 浜у搧缂栧彿
--	OUT_PRODNAME: 浜у搧鍚嶇О
--	OUT_IMAGENAME锛氬浘鐗囧悕绉?--	OUT_IMAGEPATH锛氬浘鐗囨湰鍦颁笂浼犺矾寰?--	OUT_STARTDATE锛氭湁鏁堝紑濮嬫棩鏈?--	OUT_ENDDATE锛?鏈夋晥鎴鏃ユ湡
--	OUT_LASTMODDT锛?鏈€鍚庝慨鏀规椂闂?--	OUT_FLASHNAME锛?FLASH鍚嶇О
--	OUT_FLASHPATH锛?FLASH璺緞
-- 
-- 鍒涘缓淇敼浜猴細saqrg
-- 鍒涘缓鏃ユ湡锛?011.4.25

------------------------------------------------
BEGIN

	--蹇呰緭椤规鏌?	IF(IN_PRODID IS NULL OR IN_PRODID = '')
	THEN
		SET PROC_RET_CODE = '22112';
	    	RETURN;
	END IF;
	
	--妫€鏌ヤ骇鍝佺紪鐮佹槸鍚﹀瓨鍦?	IF NOT EXISTS (SELECT 1 FROM PB_METAL_IMAGE WHERE PMI_PRODID = IN_PRODID ) 
	THEN
		SET PROC_RET_CODE = '13174';
		RETURN; 
	END IF;

	SELECT
		PMI_PRODID,
		PMI_PRODNAME,
		PMI_IMAGENAME,
		PMI_IMAGEPATH,
		PMI_STARTDATE,
		PMI_ENDDATE,
		PMI_LASTMODDT,
		PMI_FLASHNAME,
		PMI_FLASHPATH
	INTO
		OUT_PRODID,
		OUT_PRODNAME,
		OUT_IMAGENAME,
		OUT_IMAGEPATH,
		OUT_STARTDATE,
		OUT_ENDDATE,
		OUT_LASTMODDT,
		OUT_FLASHNAME,
		OUT_FLASHPATH
	FROM
		PB_METAL_IMAGE
	WHERE
		PMI_PRODID = IN_PRODID;

	SET PROC_RET_CODE = '00000';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PBANK_WELCOME_PAGE_INSERT(
	IN IN_PWP_PATH			VARCHAR(200),	
	IN IN_PWP_TYPE			CHAR(1),
	IN IN_PWP_ACTIVE			CHAR(1),		
	IN IN_PWP_ENDDATE			CHAR(8),	
	IN IN_PWP_ROLELIST		VARCHAR(100),		
	IN IN_PWP_REMARK			VARCHAR(100),	
	IN IN_PWP_UPLOADDATE		CHAR(8),						

	OUT OUT_RET_CODE CHARACTER(5)
)
	LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鎻掑叆涓€鏉￠椤佃褰?-- 杈撳叆鍙傛暟锛?
-- IN_PWP_PATH: -- 棣栭〉url
-- IN_PWP_TYPE: -- 棣栭〉绫诲瀷   0-缂虹渷 1-娌冨痉 2-涓€у寲
-- IN_PWP_ACTIVE: -- 鏄惁鍚敤   0鍚? 1鏄?-- IN_PWP_ENDDATE: -- 棣栭〉杩囨湡鏃堕棿
-- IN_PWP_ROLELIST: -- 閫傜敤缇や綋锛堢敤|鍒嗛殧锛?-- IN_PWP_REMARK: -- 澶囨敞璇存槑
-- IN_PWP_UPLOADDATE: -- 棣栭〉涓婁紶鏃ユ湡 

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝95000涓哄嚭閿?
-- 鏈€鍚庝慨鏀逛汉锛歲uyr
-- 鏈€鍚庝慨鏀规棩鏈?锛?2012.06.28
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET OUT_RET_CODE = '95000';
			ROLLBACK;
		END;

		INSERT INTO PB_WELCOME_PAGE
		(
			PWP_PATH,
			PWP_TYPE,
			PWP_ACTIVE,
			PWP_ENDDATE,
			PWP_ROLELIST,
			PWP_REMARK,
			PWP_UPLOADDATE
		)
		VALUES
		(
			IN_PWP_PATH,
			IN_PWP_TYPE,
			IN_PWP_ACTIVE,
			IN_PWP_ENDDATE,
			IN_PWP_ROLELIST,
			IN_PWP_REMARK,
			IN_PWP_UPLOADDATE
		);
	COMMIT;

	-- 瀛樺偍杩囩▼杩斿洖鐮?	SET OUT_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PBANK_WELCOME_PAGE_LIST(
	IN IN_PWP_TYPE			CHAR(1),
	OUT OUT_RET_CODE 	CHARACTER(5)
)
	READS SQL DATA 
    DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁type鏌ヨ鎵€鏈夐椤典俊鎭?
-- 杈撳叆鍙傛暟锛?
--IN_PWP_TYPE 棣栭〉绫诲瀷
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝95000涓哄嚭閿?
-- 鏈€鍚庝慨鏀逛汉锛歲uyr
-- 鏈€鍚庝慨鏀规棩鏈?锛?2012.06.28
------------------------------------------------------------------------
BEGIN
	 -- 鍙栧緱棣栭〉琛ㄤ俊鎭?	DECLARE CUR_PAGELIST CURSOR WITH RETURN TO CALLER FOR
		SELECT 
			PWP_PATH,
			PWP_TYPE,
			PWP_ACTIVE,
			PWP_ENDDATE,
			PWP_ROLELIST,
			PWP_REMARK,
			PWP_UPLOADDATE
		FROM PB_WELCOME_PAGE
		WHERE 
			PWP_TYPE = IN_PWP_TYPE
		ORDER BY PWP_UPLOADDATE ASC;
	
        
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END; 
	
	OPEN CUR_PAGELIST;
	
	SET OUT_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PBANK_WELCOME_PAGE_ACTIVE(
	IN IN_PWP_PATH			VARCHAR(200),
	IN IN_PWP_TYPE			CHAR(1),
	IN IN_TRANFLAG			CHAR(1),

	OUT OUT_RET_CODE CHARACTER(5)
)
	LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 婵€娲绘垨鍒犻櫎涓€鏉￠椤佃褰?-- 杈撳叆鍙傛暟锛?
-- IN_PWP_PATH: -- 棣栭〉url
-- IN_PWP_TYPE: -- 棣栭〉绫诲瀷
-- IN IN_TRANFLAG -- 浜ゆ槗鏍囧織锛?鏂板棣栭〉   1婵€娲婚椤? 2鍒犻櫎棣栭〉  3鏇存柊棣栭〉淇℃伅

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝95000涓哄嚭閿?
-- 鏈€鍚庝慨鏀逛汉锛歲uyr
-- 鏈€鍚庝慨鏀规棩鏈?锛?2012.06.28
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET OUT_RET_CODE = '95000';
			ROLLBACK;
		END;
		
		IF(IN_TRANFLAG = '1') THEN
			UPDATE PB_WELCOME_PAGE SET PWP_ACTIVE = '0' WHERE PWP_TYPE = IN_PWP_TYPE;
			UPDATE PB_WELCOME_PAGE SET PWP_ACTIVE = '1' WHERE PWP_TYPE = IN_PWP_TYPE AND PWP_PATH = IN_PWP_PATH;
		ELSEIF(IN_TRANFLAG = '2') THEN
			DELETE FROM PB_WELCOME_PAGE WHERE PWP_TYPE = IN_PWP_TYPE AND PWP_PATH = IN_PWP_PATH;
		END IF;

	COMMIT;

	-- 瀛樺偍杩囩▼杩斿洖鐮?	SET OUT_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PBANK_SINGLE_PAGE_TOGGLE(
	IN IN_PWP_PATH			VARCHAR(200),
	IN IN_PWP_ACTIVE		CHAR(1),

	OUT OUT_RET_CODE CHARACTER(5)
)
	LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 婵€娲绘垨鍙栨秷婵€娲诲崟涓椤典俊鎭?
-- 杈撳叆鍙傛暟锛?
-- IN_PWP_PATH: -- 棣栭〉url
-- IN_PWP_ACTIVE: -- 婵€娲绘爣蹇?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝95000涓哄嚭閿?
-- 鏈€鍚庝慨鏀逛汉锛歲uyr
-- 鏈€鍚庝慨鏀规棩鏈?锛?2012.06.29
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET OUT_RET_CODE = '95000';
			ROLLBACK;
		END;
		
		UPDATE PB_WELCOME_PAGE SET PWP_ACTIVE = IN_PWP_ACTIVE WHERE PWP_PATH = IN_PWP_PATH;
	COMMIT;

	-- 瀛樺偍杩囩▼杩斿洖鐮?	SET OUT_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PBANK_ACTIVED_WELCOME_PAGE_LIST(
	OUT OUT_RET_CODE 	CHARACTER(5)
)
	READS SQL DATA 
    DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鎵€鏈夊凡婵€娲婚椤典俊鎭?
-- 杈撳叆鍙傛暟锛?
-- 鏃?-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝95000涓哄嚭閿?
-- 鏈€鍚庝慨鏀逛汉锛歲uyr
-- 鏈€鍚庝慨鏀规棩鏈?锛?2012.07.11
------------------------------------------------------------------------
BEGIN
	 -- 鍙栧緱棣栭〉琛ㄤ俊鎭?	DECLARE CUR_PAGELIST CURSOR WITH RETURN TO CALLER FOR
		SELECT 
			PWP_PATH,
			PWP_TYPE,
			PWP_ACTIVE,
			PWP_ENDDATE,
			PWP_ROLELIST,
			PWP_REMARK,
			PWP_UPLOADDATE
		FROM PB_WELCOME_PAGE
		WHERE 
			PWP_ACTIVE = '1'
		ORDER BY PWP_TYPE ASC;
	
        
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END; 
	
	OPEN CUR_PAGELIST;
	
	SET OUT_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_QUERY_MARKET_NEWS
(
    IN IN_BEGINPOS INTEGER, 
    IN IN_SHOWNUM INTEGER, 
    OUT PROC_RET_CODE VARCHAR(5), 
    OUT OUT_TOTALNUM INTEGER
) 
    READS SQL DATA 
    DYNAMIC RESULT SETS 2
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱瀛樺偍杩囩▼ 钀ラ攢蹇鏌ヨ

-- 杈撳叆鍙傛暟锛?-- IN IN_BEGINPOS:璧峰浣嶇疆
-- IN IN_SHOWNUM锛氭瘡椤垫潯鏁?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_ROUTE锛氫俊鎭粨鏋滈泦 


-- @author锛歺uln
-- 鍒涘缓鏃ユ湡锛?013.3.4
------------------------------------------------------------------------
BEGIN

    -- 鏌ヨ钀ラ攢蹇
	DECLARE CUR_ROUTE CURSOR WITH RETURN TO CALLER FOR
		SELECT   PMN_TITLE , PMN_VALIDDATE ,PMN_ENDDATE ,PMN_UPLOADTIME , PMN_SCOPE , PMN_SCOPENAME , PMN_URLOUT , PMN_PRODUCTURL, PMN_CONTENT , PMN_ISTOP 
		FROM   (
			SELECT   PMN_TITLE , PMN_VALIDDATE ,PMN_ENDDATE , PMN_UPLOADTIME , PMN_SCOPE , PMN_SCOPENAME , PMN_URLOUT , PMN_PRODUCTURL, PMN_CONTENT , PMN_ISTOP ,
			ROW_NUMBER()OVER(ORDER BY PMN_UPLOADTIME DESC) ROW_ID
			FROM PB_MARKETINGNEWS 
		)
		AS TMPTABLE
		WHERE  ROW_ID > IN_BEGINPOS AND ROW_ID<= IN_BEGINPOS + IN_SHOWNUM
		;   
		
	 -- 鍙栧緱鍒嗚璺敱淇℃伅
	DECLARE CUR_ROUTE2 CURSOR WITH RETURN TO CALLER FOR
		SELECT PBR_CORENO, PBR_BRANCHNAME
		FROM PB_BRCHRUT;
		    
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	SELECT  COUNT(*) INTO OUT_TOTALNUM
		FROM PB_MARKETINGNEWS;
    --鎵撳紑娓告爣
    OPEN CUR_ROUTE;
    OPEN CUR_ROUTE2;
    SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_INSERT_MARKET_NEWS
(			
	IN IN_TITLE      	VARCHAR(100),
	IN IN_VALIDDATE    	VARCHAR(8),
	IN IN_ENDDATE      	VARCHAR(8),
	IN IN_SCOPE      	VARCHAR(3),
	IN IN_SCOPENAME    	VARCHAR(40),
	IN IN_URLOUT      	CHAR(1),
	IN IN_PRODUCTURL   	VARCHAR(800),
	IN IN_CONTENT      	VARCHAR(800),
	IN IN_ISTOP      	VARCHAR(8),
	IN IN_OPERATENO		VARCHAR(10),
	OUT PROC_RET_CODE	VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 灏嗚惀閿€蹇瀵煎叆鏁版嵁搴?
-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- @author锛歺uln
-- 鍒涘缓鏃ユ湡锛?013.3.4
------------------------------------------------------------------------
BEGIN

	DECLARE CURR_TIME CHAR(14);
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

	SET CURR_TIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	INSERT INTO PB_MARKETINGNEWS
		(
			PMN_UPLOADTIME ,
			PMN_TITLE ,
			PMN_VALIDDATE ,
			PMN_ENDDATE ,
			PMN_SCOPE ,
			PMN_SCOPENAME ,		
			PMN_URLOUT ,
      		PMN_PRODUCTURL ,
      		PMN_CONTENT ,
			PMN_ISTOP ,
			PMN_OPERATENO
		) 
		VALUES
		( 
			CURR_TIME,
			IN_TITLE,     
			IN_VALIDDATE ,
			IN_ENDDATE  , 
			IN_SCOPE    , 
			IN_SCOPENAME ,
			IN_URLOUT    ,
			IN_PRODUCTURL,
			IN_CONTENT   ,
			IN_ISTOP     ,
			IN_OPERATENO	
		);
	COMMIT; 
	SET PROC_RET_CODE = '00000'; 
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_DEL_MARKET_NEWS
(
    IN IN_UPLOADTIME     VARCHAR(14),
    OUT PROC_RET_CODE 	 VARCHAR(5)
) 
  
 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱瀛樺偍杩囩▼

-- 杈撳叆鍙傛暟:
--IN_UPLOADTIME:鏇存柊鏃堕棿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- @author锛歺uln
-- 鍒涘缓鏃ユ湡锛?013.3.4
------------------------------------------------------------------------
BEGIN
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	DELETE FROM PB_MARKETINGNEWS 
	WHERE PMN_UPLOADTIME = IN_UPLOADTIME;
	COMMIT;
	SET PROC_RET_CODE = '00000';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_NOBLE_METAL_QRY_BYIDORNAME(
	IN  IN_PRODID		VARCHAR(40),
	IN  IN_PRODNAME		VARCHAR(40),
	OUT PROC_RET_CODE 	VARCHAR(5)
)
	
	DYNAMIC RESULT SETS 1
	LANGUAGE SQL

------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍐呴儴绠＄悊-妯＄硦鏌ヨ璐甸噾灞炲垪琛?-- 杈撳叆鍙傛暟锛?
--	IN_PRODID 浜у搧ID
--	IN_PRODNAME 浜у搧鍚嶇О
-- 杈撳嚭鍙傛暟锛?
-- 	PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
-- 	CUR_RESULT锛氳吹閲戝睘鍒楄〃缁撴灉闆?
-- @author锛歭ihy
-- 鍒涘缓鏃ユ湡锛?013.4.10

------------------------------------------------
BEGIN
	
	DECLARE CUR_RESULT CURSOR WITH RETURN TO CALLER FOR
	SELECT
		PMI_PRODID,
		PMI_PRODNAME,
		PMI_IMAGENAME,
		PMI_IMAGEPATH,
		PMI_STARTDATE,
		PMI_ENDDATE,
		PMI_LASTMODDT,
		PMI_FLASHNAME,
		PMI_FLASHPATH	
	FROM
		PB_METAL_IMAGE
	WHERE (CASE WHEN IN_PRODID IS NOT NULL AND IN_PRODID <> '' THEN PMI_PRODID ELSE '0' END)
			LIKE (CASE WHEN IN_PRODID IS NOT NULL AND IN_PRODID <> '' THEN IN_PRODID  || '%' ELSE '0' END)
		AND
		  (CASE WHEN IN_PRODNAME IS NOT NULL AND IN_PRODNAME <> '' THEN PMI_PRODNAME ELSE '0' END)
			LIKE (CASE WHEN IN_PRODNAME IS NOT NULL AND IN_PRODNAME <> '' THEN '%' || IN_PRODNAME || '%' ELSE '0' END)
	ORDER BY
		PMI_PRODID;
	
	--鎵撳紑娓告爣
	OPEN CUR_RESULT;
	
	SET PROC_RET_CODE = '00000';
END

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_ANNALS_REPORT_CHECK ( 
	IN 	IN_PERSONPLAN		VARCHAR(30),
	IN 	IN_YEAR_MONTH	VARCHAR(6),
	OUT PROC_RET_CODE	VARCHAR(5)
)              
READS SQL DATA   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 浼佷笟骞撮噾-骞存姤涓嬭浇娆℃暟鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN 	IN_PERSONPLAN				VARCHAR(30)	涓汉璁″垝缂栧彿
-- IN 	IN_YEAR_MONTH			VARCHAR(6)	涓嬭浇骞存湀锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓哄勾鎶ヤ笅杞芥鏁颁笉瓒呰繃3娆★紝00001涓哄勾鎶ヤ笅杞芥鏁板凡杈惧埌3娆?-- 鍒涘缓鑰咃細ECC.gongjx
-- 鏃ユ湡 锛?2011.11.07
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_COUNT SMALLINT;
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
		
	SELECT COUNT(*) INTO V_COUNT 
	FROM PB_RETPWD 
	WHERE PRP_CARDNO = IN_PERSONPLAN AND PRP_UPTIME = IN_YEAR_MONTH AND PRP_USETYPE='7';	
	
	IF V_COUNT < 3 THEN
		SET PROC_RET_CODE = '00000'; --骞存姤涓嬭浇娆℃暟涓嶅埌3娆?	ELSE
		SET PROC_RET_CODE = '00001'; --骞存姤涓嬭浇娆℃暟宸茶揪鍒?娆?
	END IF;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE  PB_BAT_DAYOVER_TRNFLW(	
	OUT PROC_RET_CODE VARCHAR(50)
)
------------------------------------------------------------------------
-- 鎵规琛紝鎵规鏄庣粏琛ㄨ浆瀛樺巻鍙?-- 灏嗗墠澶╃殑鏄庣粏淇℃伅杞瓨鍒板巻鍙诧紝骞跺垹闄ゆ槰鏃ョ殑瀹㈡埛鏈‘璁ょ殑淇℃伅
-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- author 锛歮aonf
------------------------------------------------------------------------
BEGIN
    	--澹版槑鍙橀噺
	DECLARE V_TIME VARCHAR(8);
	DECLARE L_V_TIME VARCHAR(8);
	DECLARE IN_BATNO VARCHAR(4);
	DECLARE STT VARCHAR(1);
	DECLARE V_CUR_TIME VARCHAR(14);
	
	DECLARE V_TRANCOUNT INTEGER;
	DECLARE V_LISTCOUNT INTEGER;
	
	DECLARE V_DELETE_TIME VARCHAR(14);
	DECLARE V_START_TIME VARCHAR(14);
	DECLARE V_EXPORT_TIME VARCHAR(14);
	
	DECLARE V_BATNO VARCHAR(20);
	DECLARE V_MAX_BATNO VARCHAR(20);
	
    	--寮傚父澶勭悊
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		SET PROC_RET_CODE = '99998:鏁版嵁搴撳紓甯?;
		UPDATE PB_BATFLG 
		SET PBT_STT = '2' 
		WHERE PBT_BATNO = IN_BATNO AND PBT_TIME = V_TIME;
		COMMIT;
	END;
    
	--鎵瑰鐞嗘棩鏈烼-1
	SET V_TIME = FUNC_DATETIME_FMT((CURRENT TIMESTAMP-1 days),'yyyymmdd');
	--鎵瑰鐞嗘棩鏈烼-2
	SET L_V_TIME = FUNC_DATETIME_FMT((CURRENT TIMESTAMP-2 days),'yyyymmdd');
	
	SET V_DELETE_TIME=V_TIME||'220000';
	SET V_START_TIME=L_V_TIME||'000000';
	SET V_EXPORT_TIME=L_V_TIME||'235959';
	
    SET IN_BATNO = '0002';
    --妫€鏌ユ暟鎹鍑烘槸鍚﹀凡缁忔垚鍔熸墽琛?	SELECT 
		PBT_STT,
		PBT_TIME  
	INTO STT,V_CUR_TIME
	FROM PB_BATFLG 
	WHERE PBT_BATNO = IN_BATNO;

	IF V_TIME<>V_CUR_TIME THEN 
		SET PROC_RET_CODE='00001:鏃ョ粓绋嬪簭杩樻湭鍒濆鍖?璇峰厛鍒濆鍖?;
		RETURN;
	END IF;
	IF  STT='0' THEN 
		SET PROC_RET_CODE='00003:鏁版嵁瀵煎嚭鏈墽琛?璇峰厛鎵ц';
		RETURN;
	END IF;
	IF  STT='2' THEN 
		SET PROC_RET_CODE='00004:鏁版嵁瀵煎嚭鎵ц寮傚父';
		RETURN;
	END IF;
	
	SET IN_BATNO = '0009';
	--鍙栨壒澶勭悊鐘舵€?	SELECT 
		PBT_STT,
		PBT_TIME  
	INTO STT,V_CUR_TIME
	FROM PB_BATFLG 
	WHERE PBT_BATNO = IN_BATNO;

	IF V_TIME<>V_CUR_TIME THEN 
		SET PROC_RET_CODE='00001:鏃ョ粓绋嬪簭杩樻湭鍒濆鍖?璇峰厛鍒濆鍖?;
		RETURN;
	END IF;
	--鍒ゆ柇鎵瑰鐞嗙姸鎬?	--濡傛灉璇ユ壒澶勭悊鐘舵€佷负鍒濆鐘舵€侊紝鍒欐墽琛岋紱
	IF  STT = '1' OR STT = '2' THEN
	     SET PROC_RET_CODE='00002:璇ョ▼搴忓凡缁忔墽琛岃繃浜?涓嶅彲閲嶅鎵ц';
	     RETURN;
	END IF;

	IF NOT EXISTS(SELECT 1 FROM PB_BATTRAN WHERE PBH_RECVTRANTIM LIKE L_V_TIME||'%') THEN
		 SET PROC_RET_CODE='00007:鎵归噺杞处琛ㄥ凡娌℃湁鍓嶆棩璁板綍,浜ゆ槗鎴愬姛';
		 --淇敼鎵瑰鐞嗚〃鐘舵€?
		 UPDATE PB_BATFLG 
		 SET PBT_STT = '1'
		 WHERE PBT_BATNO = IN_BATNO AND PBT_TIME = V_TIME ;
	  	 COMMIT;		 
	     RETURN;
	END IF;	
	
	-- 鍒犻櫎鏄ㄥぉ涓鎴锋湭纭鐨勬暟鎹?	CLEAR_LOOP:
	LOOP
		
		DELETE FROM (SELECT PBL_BATNO FROM PB_BATLIST WHERE 
	         EXISTS 
	          (SELECT PBH_BATNO FROM PB_BATTRAN WHERE PBL_BATNO=PBH_BATNO AND PBH_RECVTRANTIM < V_DELETE_TIME  AND PBH_STT = '00') FETCH FIRST 50000 ROWS ONLY);
		
		GET DIAGNOSTICS V_LISTCOUNT = ROW_COUNT;
		  
		DELETE FROM 
			  (SELECT PBH_BATNO FROM PB_BATTRAN WHERE PBH_RECVTRANTIM < V_DELETE_TIME  AND PBH_STT = '00' FETCH FIRST 50000 ROWS ONLY);
		
		GET DIAGNOSTICS V_TRANCOUNT = ROW_COUNT;
		
		IF (V_LISTCOUNT=0 AND V_TRANCOUNT=0) THEN
			LEAVE CLEAR_LOOP;
		END IF;
		
		COMMIT;
	END LOOP CLEAR_LOOP;
	
	-- 鍓嶄竴鏃ユ暟鎹鍘嗗彶
	EXPORT_LOOP:
	LOOP
		
		-- 鑾峰彇鏈壒鍒犻櫎璁板綍鐨勬渶灏忔壒娆?		SELECT MIN(PBL_BATNO),MAX(PBL_BATNO) INTO  V_BATNO,V_MAX_BATNO  FROM 
         (SELECT PBL_BATNO,PBL_TRANTIM FROM PB_BATLIST WHERE PBL_TRANTIM>=V_START_TIME AND PBL_TRANTIM <= V_EXPORT_TIME 
	         			ORDER BY PBL_BATNO DESC FETCH FIRST 50000 ROWS ONLY) AS A;
	     
	     
	    IF V_BATNO IS NULL THEN
              LEAVE EXPORT_LOOP;
      	END IF;
		
		-- 灏嗚瀵煎巻鍙茬殑鎵规鏄庣粏瀵瑰簲鐨勬壒娆″鍏ュ巻鍙茶〃
		INSERT INTO PB_BATTRAN_HIS 
			(SELECT * FROM PB_BATTRAN WHERE 
				PBH_BATNO >=V_BATNO AND PBH_BATNO <=V_MAX_BATNO AND PBH_RECVTRANTIM >= V_START_TIME AND PBH_RECVTRANTIM <= V_EXPORT_TIME);
		-- 灏嗘壒娆℃槑缁嗗鍏ュ巻鍙茶〃
		INSERT INTO PB_BATLIST_HIS 
			(SELECT * FROM PB_BATLIST WHERE 
				PBL_BATNO >=V_BATNO AND PBL_BATNO <=V_MAX_BATNO AND PBL_TRANTIM >= V_START_TIME AND PBL_TRANTIM <= V_EXPORT_TIME);
				
		-- 娓呯悊褰撳墠琛?		DELETE FROM PB_BATTRAN WHERE 
				PBH_BATNO >=V_BATNO AND PBH_BATNO <=V_MAX_BATNO AND PBH_RECVTRANTIM >= V_START_TIME AND PBH_RECVTRANTIM <= V_EXPORT_TIME;
	    DELETE FROM PB_BATLIST WHERE 
	    		PBL_BATNO >=V_BATNO AND PBL_BATNO <=V_MAX_BATNO AND PBL_TRANTIM >= V_START_TIME AND PBL_TRANTIM <= V_EXPORT_TIME;
			
		COMMIT;
		
	END LOOP EXPORT_LOOP;

	
	

	--淇敼鎵瑰鐞嗚〃鐘舵€?
	UPDATE PB_BATFLG 
	SET PBT_STT = '1'
	WHERE PBT_BATNO = IN_BATNO AND PBT_TIME = V_TIME ;
	COMMIT;
    
	SET PROC_RET_CODE='00000:绋嬪簭鎵ц鎴愬姛';
    
END

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MB_UPD_USERPSW ( 

	IN IN_CSTNO		        CHAR(10),	
	IN IN_NEW_PASSWORD    VARCHAR(60),
	OUT PROC_RET_CODE     CHAR(5)
)
------------------------------------------------------------------------

-- SQL 瀛樺偍杩囩▼
-- 淇敼鎵嬫満閾惰鐧诲綍瀵嗙爜

-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氱綉閾跺鎴峰彿
-- IN_NEW_PASSWORD锛氫慨鏀圭殑瀵嗙爜

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜猴細ECC.liuming
-- 鍒涘缓鏃堕棿锛?008.10.06

-- 鏈€鍚庝慨鏀逛汉锛欵CC.wujianc
-- 鏈€鍚庝慨鏀规棩鏈?锛?2008.11.21

------------------------------------------------------------------------

BEGIN

	-- 澹版槑鍙橀噺
  DECLARE V_ROWCOUNT INT;
  DECLARE V_USERCODE CHAR(16);	
	
	-- 寮傚父澶勭悊		
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
	SET PROC_RET_CODE = '95000';  
	ROLLBACK ;
  END;	
		
	
  -- 淇敼瀵嗙爜	
  SELECT MIF_USERCODE INTO V_USERCODE 
	FROM NEW TABLE(UPDATE MB_CSTINF SET MIF_PASSWORD = IN_NEW_PASSWORD   		
   		WHERE MIF_CSTNO = IN_CSTNO AND MIF_STT = '1');
	
	GET DIAGNOSTICS V_ROWCOUNT = ROW_COUNT;
	IF V_ROWCOUNT=0 THEN
     	SET PROC_RET_CODE = '32003';  --鎵嬫満閾惰鐘舵€佷笉姝ｇ‘
     	ROLLBACK;
     	RETURN;
	END IF;		
	-- 淇敼鐧诲綍閿欒娆℃暟
	UPDATE
   		MB_LOGFAIL
   	SET
   		MLF_TIMES = 0  		
   	WHERE
		MLF_USERCODE = V_USERCODE;
		
	COMMIT;	
	SET PROC_RET_CODE = '00000';
			
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MB_QRY_DOWNCODE ( 
	IN IN_CSTNO		CHAR(10),
	OUT PROC_RET_CODE   CHAR(5),
	OUT OUT_DOWNCODE   VARCHAR(16)
)
READS SQL DATA
------------------------------------------------------------------------

-- SQL 瀛樺偍杩囩▼
-- 鎵嬫満閾惰涓嬭浇鐮佹煡璇?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氭敞鍐岀殑璐﹀彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_DOWNCODE锛氭墜鏈洪摱琛屼笅杞界爜

-- 鍒涘缓浜猴細ECC.wujianc	
-- 鍒涘缓鏃ユ湡锛?008.11.24

------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';	
	END;
	
	-- 鏌ュ嚭涓嬭浇鐮佸拰鎵嬫満鍙?		
	SELECT MDC_DOWNCODE	INTO OUT_DOWNCODE
			FROM MB_CSTINF,MB_SOFTDOWNCODE
				WHERE MIF_CSTNO = IN_CSTNO AND MIF_STT = '1' AND MIF_USERCODE = MDC_USERCODE;
	
	SET PROC_RET_CODE = '00000';
		
	-- 鍒ゆ柇鐢ㄦ埛鏄惁宸茬粡娉ㄥ唽杩囦簡
	IF OUT_DOWNCODE IS NULL OR OUT_DOWNCODE='' THEN 
		SET PROC_RET_CODE = '32003';
	END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MB_MAIN_MBANKSTATE ( 
	IN IN_CSTNO			CHAR(10),
	IN IN_CMD 			CHAR(1),	
	OUT PROC_RET_CODE   CHAR(5),
	OUT OUT_STATE     	CHAR(1)
)
------------------------------------------------------------------------

-- SQL 瀛樺偍杩囩▼
-- 鎵嬫満閾惰鐘舵€佹煡璇?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氭敞鍐岀殑璐﹀彿
-- IN_STATE锛氭墜鏈洪摱琛岀姸鎬?-- IN_CMD锛? 鍔熻兘浠ｇ爜 0-鏌ヨ 1-鏇存柊

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_STATE锛氭墜鏈洪摱琛岀姸鎬?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJIANC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2008.11.20

------------------------------------------------------------------------

BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';		
		ROLLBACK ;
	END;
	
	SET PROC_RET_CODE = '00000';
	
	IF IN_CMD='0' THEN
		-- 鏌ヨ鎵嬫満娉ㄥ唽鐘舵€?		-- 鍒ゆ柇鐢ㄦ埛鎴栨墜鏈烘槸鍚﹀凡缁忔敞鍐岃繃浜嗗苟涓旂姸鎬佹甯?		-- 鏌ヨ鎵嬫満閾惰鐘舵€?
		SELECT MIF_STT INTO OUT_STATE
			FROM MB_CSTINF WHERE MIF_CSTNO = IN_CSTNO AND MIF_STT<>'9';
		
		--鐘舵€佷笉瀵?		IF OUT_STATE<>'1' THEN
			IF OUT_STATE = '0' THEN
				SET PROC_RET_CODE = '32004';	--鏈縺娲?				RETURN;
			END IF;
			SET PROC_RET_CODE = '32003';	--鏃犳晥鐘舵€?			RETURN;
		END IF;	
	
	ELSEIF IN_CMD='1' THEN
        -- 鏇存敼鎵嬫満娉ㄥ唽鐘舵€?		SELECT MIF_STT	INTO OUT_STATE
			FROM NEW TABLE(UPDATE MB_CSTINF SET MIF_STT = '9' WHERE MIF_CSTNO = IN_CSTNO AND MIF_STT='1');		
		
		IF OUT_STATE IS NULL THEN 
			SET PROC_RET_CODE = '32003';
			ROLLBACK;
			RETURN;
		END IF;
		COMMIT;
	END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MB_INS_USER_REG ( 
	IN IN_CSTNO			CHAR(10),
	IN IN_USERCODE  	VARCHAR(16),
	IN IN_MOBILE    	CHAR(11),
	IN IN_DOWNCODE  	VARCHAR(16) ,
	IN IN_PASSWORD     	VARCHAR(60),
	IN IN_AGREEMENTVER 	VARCHAR(6),
	IN IN_PHONECARD 	VARCHAR(30),
	OUT PROC_RET_CODE   VARCHAR(5),
	OUT OUT_DOWNCODE  	VARCHAR(16),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50)
)
------------------------------------------------------------------------

-- SQL 瀛樺偍杩囩▼
-- 鎵嬫満閾惰娉ㄥ唽

-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氫釜浜虹綉閾跺鎴峰彿
-- IN_USERCODE锛氭墜鏈洪摱琛屽鎴风爜
-- IN_MOBILE锛氭墜鏈哄彿
-- IN_DOWNCODE锛氭墜鏈洪摱琛屼笅杞界爜
-- IN_PASSWORD锛氭墜鏈洪摱琛岀櫥褰曞瘑鐮?-- IN_AGREEMENTVER锛氬崗璁増鏈彿
-- IN_PHONECARD: 鍗″彿
-- IN_CARDFLAG: 鍗″彿缁戝畾鏍囪瘑 0-涓嶇粦瀹?1-缁戝畾

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_DOWNCODE锛氫笅杞界爜
-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?
-- 鍒涘缓浜猴細ECC.liuming
-- 鍒涘缓鏃ユ湡 锛?2008.10.07
-- 淇敼浜猴細ECC.wujianc
-- 鏈€鍚庝慨鏀规棩鏈燂細2009.2.6
-- 淇敼浜猴細ECC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈燂細2009.11.24
------------------------------------------------------------------------

BEGIN

	-- 澹版槑鍙橀噺
	DECLARE V_CARDNO   VARCHAR(30);
	DECLARE V_DATETIME CHAR(14);
	DECLARE V_CURDATE  CHAR(8);
	DECLARE V_ROWCOUNT INT;
	DECLARE V_CTFTYP CHAR(2);
	DECLARE V_CTFNO VARCHAR(30);
	DECLARE V_MOBILE VARCHAR(20);
	DECLARE V_USERCODE VARCHAR(16);
	DECLARE V_CUSTTYPE			VARCHAR(1);		-- 鐢ㄦ埛绫诲瀷
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK ;
	END;	
	
	-- 鑾峰彇褰撳墠鏃ユ湡
	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	SET V_CURDATE = SUBSTR(V_DATETIME,1,8);
	
	--娓呴櫎涔嬪墠鐨勬敞閿€璁板綍  浠ヤ笅浠ｇ爜娉ㄩ噴鎺夛紝鏄洜涓烘病鏈夊繀瑕佸垹闄や互涓嬫暟鎹紝20091214鏃ュ彂鐜拌闂锛屼絾杩欎簺鏁版嵁鏈潵鏄笉鍒犻櫎鐨勶紝鐢变簬CQ60905鎵嶅張鍒犻櫎鐨勶紝鐜板湪鍐嶆涓嶅垹闄ゃ€?	--DELETE FROM MB_SOFTDOWNCODE 
		--WHERE EXISTS(
			--SELECT 1 FROM MB_CSTINF 
				--WHERE (MIF_CSTNO = IN_CSTNO OR MIF_MOBILENO=IN_MOBILE) AND MIF_STT = '9' AND MIF_USERCODE=MDC_USERCODE);
		
	--DELETE FROM MB_LOGFAIL WHERE 
		--EXISTS(SELECT 1 FROM MB_CSTINF 
			--WHERE (MIF_CSTNO = IN_CSTNO OR MIF_MOBILENO=IN_MOBILE) AND MIF_STT = '9' AND MLF_USERCODE=MIF_USERCODE);

	DELETE FROM MB_CSTINF WHERE (MIF_CSTNO = IN_CSTNO OR MIF_MOBILENO=IN_MOBILE) AND MIF_STT = '9';


	--鐢ㄦ埛婵€娲绘椂锛屼笅杞界爜鍜屽鎴风爜涓虹┖
	IF EXISTS(SELECT 1 FROM MB_CSTINF WHERE MIF_STT='0' AND MIF_CSTNO=IN_CSTNO) THEN 
		SELECT MIF_USERCODE INTO V_USERCODE FROM 
			NEW TABLE(UPDATE MB_CSTINF SET MIF_STT='1',MIF_PASSWORD=IN_PASSWORD WHERE MIF_STT='0' AND MIF_CSTNO=IN_CSTNO) AS T1;
		
		GET DIAGNOSTICS V_ROWCOUNT = ROW_COUNT;
		IF V_ROWCOUNT=0 THEN
     		SET PROC_RET_CODE = '32003';  --鎵嬫満閾惰鐘舵€佷笉姝ｇ‘
     		SET OUT_TOA_MSG_TYPE = 'E';
				SET OUT_TOA_MSG_AP_MMO = 'NE';
				SET OUT_TOA_MSG_CODE = '0942';
				SET OUT_ANSINFO = '鎵嬫満鍙风瓑鏁版嵁涓嶆纭?;
     		ROLLBACK;
     		RETURN;
		END IF;	
		--鏌ヨ涓嬭浇鐮?		SELECT MDC_DOWNCODE INTO OUT_DOWNCODE 
			FROM MB_SOFTDOWNCODE WHERE MDC_USERCODE=V_USERCODE;
	ELSE
		-- 鍒ゆ柇鐢ㄦ埛鎴栨墜鏈烘槸鍚﹀凡缁忔敞鍐岃繃浜?		IF EXISTS(
			SELECT 1 FROM MB_CSTINF 
				WHERE MIF_CSTNO = IN_CSTNO AND MIF_STT <> '9'				
			)THEN		
			SET PROC_RET_CODE = '32001';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0948';
			SET OUT_ANSINFO = '璇ュ鎴峰凡鏈夋墜鏈虹绾︽墜鏈洪摱琛?;
			ROLLBACK;
			RETURN;
		END IF;
	
		IF EXISTS(	
			SELECT 1 FROM MB_CSTINF
				WHERE MIF_MOBILENO = IN_MOBILE AND MIF_STT <> '9'				
			)THEN		
			SET PROC_RET_CODE = '32002';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0941';
			SET OUT_ANSINFO = '璇ユ墜鏈哄凡缁忕绾︽墜鏈洪摱琛?;
			ROLLBACK;
			RETURN;
		END IF; 
		
		SELECT PIF_ACCNO,PIF_CTFTYP,PIF_CTFNO,PIF_MOBILE,PIF_CSTTYP INTO V_CARDNO,V_CTFTYP,V_CTFNO,V_MOBILE,V_CUSTTYPE
			FROM PB_CSTINF WHERE PIF_CSTNO = IN_CSTNO;
		
		

		IF V_CUSTTYPE = '1'THEN 
			UPDATE PB_CSTINF SET PIF_MOBILE=IN_MOBILE WHERE PIF_CSTNO = IN_CSTNO;
		END IF;
	
		--鎵嬫満鏀舵鍗″彿璁板綍缁存姢
		IF IN_PHONECARD IS NOT NULL AND IN_PHONECARD<>'' THEN 
			--鍗″彿鍚堟硶妫€鏌?			IF NOT EXISTS(
				SELECT 1 FROM PB_ACCINF 
					WHERE PAI_CSTNO=IN_CSTNO AND PAI_CARDNO=IN_PHONECARD AND PAI_HLDCTFTYP=V_CTFTYP AND PAI_HLDCTFNO=V_CTFNO) THEN
				SET PROC_RET_CODE = '32006';
				SET OUT_TOA_MSG_TYPE = 'E';
				SET OUT_TOA_MSG_AP_MMO = 'NE';
				SET OUT_TOA_MSG_CODE = '0942';
				SET OUT_ANSINFO = '鎵嬫満鍙风瓑鏁版嵁涓嶆纭?;
				ROLLBACK;
				RETURN;
			END IF;
			
			IF EXISTS(SELECT 1 FROM MB_PHONEACCT WHERE MPA_CSTNO=IN_CSTNO) THEN
				UPDATE MB_PHONEACCT SET MPA_CARDNO=IN_PHONECARD WHERE MPA_CSTNO=IN_CSTNO;
			ELSE 			
				INSERT INTO MB_PHONEACCT(MPA_CSTNO,MPA_CARDNO) VALUES(IN_CSTNO,IN_PHONECARD);
			END IF;
		END IF;
		

    	-- 鐢熸垚鐧诲綍鍒濆澶辫触璁板綍
		INSERT INTO MB_LOGFAIL( MLF_CARDNO,MLF_USERCODE,MLF_TIMES,MLF_UPDTIM)
			VALUES( V_CARDNO,IN_USERCODE, 0, V_DATETIME);
    
		-- 灏嗙敓鎴愮殑涓嬭浇鐮佽褰?		INSERT INTO MB_SOFTDOWNCODE
			(MDC_DOWNCODE,MDC_USERCODE,MDC_VALIDDATETIMES)
				VALUES( IN_DOWNCODE,IN_USERCODE,'');	

		-- 娉ㄥ唽鐢ㄦ埛
		INSERT INTO	MB_CSTINF (MIF_USERCODE, MIF_CSTLEVEL,MIF_MOBILENO,MIF_USERNAME,MIF_PASSWORD,MIF_CSTNO,             
			 MIF_CHARGEMODE,MIF_AGREEMENTVER,MIF_LGNTIMES,MIF_LASTLGNTIM,MIF_STT,MIF_OPENTYP,MIF_OPENTELLER,MIF_OPENBRANCHNO,      
		 		MIF_OPENNETNO,MIF_OPENDATE,MIF_CHGTELLER,MIF_CHGBRANCHNO,MIF_CHGNETNO,MIF_LASTCHGTIM )       
		VALUES(IN_USERCODE,'00',IN_MOBILE,'',IN_PASSWORD,IN_CSTNO,'00',IN_AGREEMENTVER,0,'','1','1','','','',                    
			 V_CURDATE,'','','','' );    

		SET OUT_DOWNCODE=IN_DOWNCODE;

	END IF;	      
	COMMIT;		
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';					
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MB_CHK_MOBILE ( 
	IN IN_MOBILE		CHAR(11),
	OUT PROC_RET_CODE   VARCHAR(5)
)
READS SQL DATA 
------------------------------------------------------------------------

-- SQL 瀛樺偍杩囩▼
-- 鎵嬫満閾惰鎵嬫満鍙锋鏌?-- 妫€鏌ヨ緭鍏ョ殑鎵嬫満鍙锋槸鍚﹀凡缁忔敞鍐岃繃浜?
-- 杈撳叆鍙傛暟锛?-- IN_MOBILE锛氭墜鏈哄彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜猴細ECC.liuming
-- 鍒涘缓鏃ユ湡 锛?2008.10.08
-- 淇敼鏃ユ湡 锛?2008.10.20

------------------------------------------------------------------------

BEGIN
 	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
		
	-- 鍒ゆ柇鐢ㄦ埛鏄惁宸茬粡娉ㄥ唽杩囦簡
	IF EXISTS(			
			SELECT 
				1
			FROM
				MB_CSTINF
			WHERE
				MIF_MOBILENO = IN_MOBILE
			AND
				MIF_STT <> '9'			
		)THEN		
			SET PROC_RET_CODE = '32002';  --鎵嬫満鍙峰凡缁忔敞鍐岃繃浜?	
		ELSE			
			SET PROC_RET_CODE = '00000';					
	END IF;
		
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MB_MAIN_PHONECARD ( 
	IN IN_CSTNO			CHAR(10),
	IN IN_PHONECARDNO	VARCHAR(30),
	IN IN_CMD			CHAR(1),
	OUT PROC_RET_CODE   VARCHAR(5),
	OUT OUT_CARDNO		VARCHAR(30)
)
------------------------------------------------------------------------

-- SQL 瀛樺偍杩囩▼
-- 鎵嬫満閾惰杞处鍗″彿缁存姢
-- 鎵嬫満閾惰杞处鍗″彿鏌ヨ銆佹洿鏂?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氫釜浜虹綉閾跺鎴峰彿
-- IN_PHONECARDNO锛氱粦瀹氬崱鍙?-- IN_CMD锛?浜ゆ槗鏍囪瘑 0-鏌ヨ杞处鍗″彿 1-鏇存柊杞处鍗″彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜猴細ECC.wujianc
-- 鍒涘缓鏃ユ湡 锛?2009.02.09

------------------------------------------------------------------------

BEGIN
 	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	SET PROC_RET_CODE = '00000';	

	-- 鍒ゆ柇 浜ゆ槗鏍囪瘑
	IF IN_CMD='0' THEN 
	-- 鏌ヨ 缁戝畾鍗″彿
		SELECT MPA_CARDNO INTO OUT_CARDNO FROM MB_PHONEACCT WHERE MPA_CSTNO=IN_CSTNO;
	ELSEIF IN_CMD='1' THEN
        --鏇存柊鎴栨坊鍔犵粦瀹氬崱鍙?		IF EXISTS(SELECT 1 FROM MB_PHONEACCT WHERE MPA_CSTNO=IN_CSTNO) THEN
			UPDATE MB_PHONEACCT SET MPA_CARDNO=IN_PHONECARDNO  WHERE MPA_CSTNO=IN_CSTNO;
		ELSE 
			INSERT INTO MB_PHONEACCT(MPA_CSTNO,MPA_CARDNO) VALUES(IN_CSTNO,IN_PHONECARDNO);
		END IF;
		SET OUT_CARDNO=IN_PHONECARDNO;
		COMMIT;
	END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MB_QRY_MBANKSTT ( 
	IN IN_CSTNO			CHAR(10),
	OUT PROC_RET_CODE   VARCHAR(5),
	OUT OUT_MBANKSTT	CHAR(1)
)
READS SQL DATA
------------------------------------------------------------------------

-- SQL 瀛樺偍杩囩▼
-- 鎵嬫満閾惰鐘舵€佹煡璇?-- 鎵嬫満閾惰鐘舵€佹煡璇?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氫釜浜虹綉閾跺鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_MBANKSTT锛?'-鑰佺敤鎴风姸鎬?0-鏈縺娲荤姸鎬?1-姝ｅ父 2-鍐荤粨 9-閿€鎴?
-- 鍒涘缓浜猴細ECC.wujianc
-- 鍒涘缓鏃ユ湡 锛?2009.02.13

------------------------------------------------------------------------

BEGIN
 	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '32007';
	END;
	
	SET PROC_RET_CODE = '00000';	

	--鍙栨墜鏈洪摱琛屾敞鍐岀姸鎬佹爣蹇?    SELECT MIF_STT INTO OUT_MBANKSTT	
		FROM MB_CSTINF WHERE MIF_CSTNO = IN_CSTNO AND MIF_STT<>'9';
    
    IF OUT_MBANKSTT IS NULL THEN
		SET OUT_MBANKSTT='';
    END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MB_QRY_RCVACC
(
	IN IN_CSTNO			CHAR(10),
	OUT PROC_RET_CODE   CHAR(5),
	OUT OUT_RCVACCT   	VARCHAR(30),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO			VARCHAR(50)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ璇ョ敤鎴锋墜鏈哄彿杞处榛樿鏀舵璐﹀彿
-- IN_CSTNO锛氱綉閾跺鎴峰彿
-- OUT_RCVACCT锛氭敹娆捐处鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜猴細SYY
-- 鍒涘缓鏃堕棿锛?011.11.04
------------------------------------------------------------------------
BEGIN
	
	--寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR NOT FOUND
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴棤姝よ褰?;
		ROLLBACK ;
	END;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK ;
	END;
	
	SELECT MPA_CARDNO
	INTO OUT_RCVACCT
	FROM MB_PHONEACCT
	WHERE MPA_CSTNO = IN_CSTNO;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_OPEN_CHANNEL_QRY ( 
	IN  IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_OPENFLAG  	CHAR(1),
	OUT OUT_MOBILE  	VARCHAR(20),
	OUT OUT_CSTTYP      CHAR(1),
	OUT OUT_CUSTNO  	VARCHAR(10),
	OUT OUT_MOBILEFLAG  CHAR(1)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗- 鏌ヨ鐢ㄦ埛鏄惁寮€閫氱綉涓婇摱琛屽拰鎵嬫満閾惰
-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	   涓诲崱鍗″彿锛?

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_OPENFLAG:寮€閫氭爣蹇楋細0:鏈紑閫?1锛氬凡寮€閫?-- OUT_MOBILE:鎵嬫満鍙风爜
-- OUT_CSTTYP:娉ㄥ唽绫诲瀷
-- OUT_CUSTNO:缃戦摱瀹㈡埛鍙?-- OUT_MOBILEFLAG锛氭墜鏈洪摱琛屾槸鍚﹀紑閫氭爣蹇?
-- 淇敼浜猴細siyy
-- 淇敼鏃ユ湡 锛?011-11-11
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	SET OUT_OPENFLAG= '0';
    SET OUT_MOBILEFLAG= '0';
	
	
	SELECT PIF_MOBILE,PIF_CSTTYP,PIF_CSTNO INTO OUT_MOBILE,OUT_CSTTYP,OUT_CUSTNO FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO FETCH FIRST 1 ROWS ONLY; 
	
	IF OUT_CUSTNO IS NOT NULL THEN
	   -- 宸茬粡寮€閫氱綉閾剁敤鎴?	   SET OUT_OPENFLAG='1';
	   
	   IF EXISTS(SELECT 1 FROM MB_CSTINF WHERE MIF_CSTNO = OUT_CUSTNO AND MIF_STT <> '9')THEN
		  -- 宸茬粡寮€閫氭墜鏈洪摱琛?		  SET OUT_MOBILEFLAG = '1';
	   END IF;
	END IF;
	
	SET PROC_RET_CODE = '00000';
END

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PBANK.PB_PAYMENT_CARD_OWN
 (IN IN_CUSTNO VARCHAR(30), 
  IN IN_CERT_TYPE VARCHAR(2), 
  IN IN_CERT_NO VARCHAR(30), 
  OUT PROC_RET_CODE VARCHAR(5)
 ) 
  READS SQL DATA 
  DYNAMIC RESULT SETS 1
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鎵€鏈夊睘浜庤瀹㈡埛鏈汉鐨勪笅鎸傚崱

-- 杈撳叆鍙傛暟锛?-- IN_CUSTNO锛氬鎴峰彿
-- IN_CERT_TYPE锛氳瘉浠?-- IN_CERT_NO锛氳瘉浠跺彿鐮?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?30901涓烘煡璇㈠け璐?
-- 鏈€鍚庝慨鏀逛汉锛氱帇娲稕
-- 鏈€鍚庝慨鏀规棩鏈燂細2006.05.31
------------------------------------------------------------------------
BEGIN
 	-- 娓告爣澹版槑
	DECLARE CUR_OWN_CARDS CURSOR WITH RETURN TO CALLER FOR
		SELECT PAI_CARDNO,PAI_CARDTYP,PAI_ALIAS
		FROM PB_ACCINF
		WHERE PAI_CSTNO=IN_CUSTNO
		AND PAI_CARDTYP IN ('0','1','2','4')
		AND PAI_HLDCTFTYP=IN_CERT_TYPE
		AND PAI_HLDCTFNO=IN_CERT_NO;
		
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '30901';
		ROLLBACK ;
	END;

	-- 璁剧疆杩斿洖鐮?	SET PROC_RET_CODE = '00000';
	
    -- 鎵撳紑娓告爣
    OPEN CUR_OWN_CARDS;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PBANK.PB_PAYMENT_CHECK_ALIAS1
 (IN IN_ALIAS VARCHAR(30), 
  OUT PROC_RET_CODE VARCHAR(5),
  OUT OUT_UNIQU VARCHAR(1)
 ) 
 READS SQL DATA 
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鏄惁瀛樺湪鐩稿悓鐨勫埆鍚?
-- 杈撳叆鍙傛暟锛?-- IN_ALIAS锛氬鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?30901涓烘煡璇㈠け璐?
-- 鏈€鍚庝慨鏀逛汉锛氱帇娲稕
-- 鏈€鍚庝慨鏀规棩鏈燂細2006.06.05
------------------------------------------------------------------------
BEGIN
	------------绗竴閮ㄥ垎锛氬紑濮嬪０鏄庡彉閲?--------
	DECLARE V_SUBALIAS VARCHAR(14);
	
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '30900';
		ROLLBACK ;
	END;
	IF (IN_ALIAS = '' OR IN_ALIAS IS NULL) THEN
		SET OUT_UNIQU = '0';
		SET PROC_RET_CODE = '00000';
		RETURN;
	END IF;
	SET OUT_UNIQU='0';
	SET	V_SUBALIAS = SUBSTR(IN_ALIAS,7,LENGTH(IN_ALIAS)-6);
	IF EXISTS(SELECT 1 FROM PB_CSTINF WHERE PIF_ALIAS=V_SUBALIAS) THEN
		SET OUT_UNIQU = '1';
	END IF;
	-- 璁剧疆杩斿洖鐮?	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GET_CUSTNO ( 
	IN IN_CARDNO				VARCHAR(30),
	OUT PROC_RET_CODE			VARCHAR(5),
	OUT OUT_CUSTNO				VARCHAR(10),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50)
)
READS SQL DATA                 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-鏍规嵁绛剧害鍗″彿鍙栧緱璇ョ敤鎴风殑缃戦摱瀹㈡埛鍙?
-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO:  鍗″彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CUSTNO : 鎵€灞炵綉閾跺鎴峰彿
-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?
-- 鏈€鍚庝慨鏀逛汉锛歐UJC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.03.27
------------------------------------------------------------------------

BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--鑾峰緱缃戦摱瀹㈡埛鍙?	SELECT PIF_CSTNO INTO OUT_CUSTNO FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO;
	
	
	IF OUT_CUSTNO IS NULL OR OUT_CUSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GET_PBANK_ALIAS ( 
	IN IN_CSTNO					VARCHAR(10),
	IN IN_CARDNO				VARCHAR(30),
	OUT PROC_RET_CODE			VARCHAR(5),
	OUT OUT_ALIAS				VARCHAR(30),
	OUT OUT_EXISTFLAG			VARCHAR(1)
)           
READS SQL DATA      
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁绛剧害鍗″彿鍙栧緱璇ョ敤鎴风殑缃戦摱鍒悕

-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO:  鍗″彿
-- IN IN_CSTNO:	  缃戦摱瀹㈡埛鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ALIAS : 缃戦摱鍒悕锛屼负绌鸿〃鏄庢棤瀵瑰簲鐨勫埆鍚?闈炵綉閾剁绾︾敤鎴?
-- OUT_EXISTFLAG: 1:瀛樺湪锛?:涓嶅瓨鍦?2:other

-- 鏈€鍚庝慨鏀逛汉锛欽aky Xie
-- 鏈€鍚庝慨鏀规棩鏈?锛?2006.06.30
------------------------------------------------------------------------

BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '30900';
		SET OUT_ALIAS = '';
		SET OUT_EXISTFLAG = '2';
		ROLLBACK;
	END;
	
	SELECT C.PIF_ALIAS INTO OUT_ALIAS
	FROM PB_CSTINF C,PB_ACCINF A
	WHERE A.PAI_CARDNO = IN_CARDNO AND A.PAI_CSTNO = IN_CSTNO AND A.PAI_CSTNO = C.PIF_CSTNO;
	
	IF (OUT_ALIAS IS NULL or OUT_ALIAS='') THEN
		SET OUT_ALIAS = '';
		SET OUT_EXISTFLAG = '0';
	ELSE
		SET OUT_ALIAS = SUBSTR(IN_CARDNO,1,6)||OUT_ALIAS;
		SET OUT_EXISTFLAG = '1';
	END IF;
	
	-- 璁剧疆杩斿洖鐮?	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_DELETE_CHILD_ACCOUNT(
	IN IN_CUSTID   	  VARCHAR(10),
	IN IN_CARDNO      VARCHAR(200),
	OUT PROC_RET_CODE VARCHAR(5)
)
    LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒犻櫎涓嬫寕甯愭埛
-- 鍒涘缓浜猴細QIANJB
-- 淇敼鏃ユ湡锛?005.09.10
-- 鏈€鍚庝慨鏀逛汉锛歭uys 2009.06.12
-- 淇敼鍘熷洜锛氬垹闄や笅鎸傚崱淇℃伅璁板叆鍗℃敞閿€琛?------------------------------------------------------------------------
BEGIN
    DECLARE V_SQL VARCHAR(300);
    DECLARE V_SQL1 VARCHAR(300);
    DECLARE V_SQL2 VARCHAR(300);
	DECLARE V_CARD VARCHAR(250);
	DECLARE V_TMP VARCHAR(210);
	DECLARE V_DATETIME VARCHAR(14);
	DECLARE V_CARD2 VARCHAR(30);
	DECLARE V_TMP2 VARCHAR(250);
	DECLARE V_POS 	INT;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;

	IF IN_CUSTID IS NULL OR IN_CARDNO IS NULL THEN
		SET PROC_RET_CODE = '96000';
		RETURN;
	END IF;
	
	SET V_TMP = UPPER(IN_CUSTID) || '|' || UPPER(IN_CARDNO);

	IF POSSTR(V_TMP,'OR') > 0 OR POSSTR(V_TMP,'--') > 0 OR POSSTR(V_TMP,'AND') > 0 THEN
		SET PROC_RET_CODE = '96000';
		RETURN;
	END IF;

    IF(LENGTH(IN_CARDNO)>0) THEN
    	--鍙栫郴缁熸椂闂?    	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
    	
    	SET V_TMP2 = IN_CARDNO || '|#';
    	
    	WHILE V_TMP2 <> '#' DO 
    		SET V_POS = POSSTR(V_TMP2,'|');
			SET V_CARD2 = SUBSTR( V_TMP2, 1, V_POS-1 );
			
	    	--娓呴櫎浠ュ墠涓嬫寕鍗″垹闄よ褰?	    	DELETE FROM PB_ACCINF_CLOSE WHERE PAIC_CSTNO = IN_CUSTID AND PAIC_CARDNO = V_CARD2;
	    	--鍒犻櫎淇℃伅鎻掑埌娉ㄩ攢琛?	    	INSERT INTO PB_ACCINF_CLOSE( 
	    				PAIC_CSTNO, PAIC_CARDNO, PAIC_ALIAS, PAIC_CARDTYP,PAIC_CARDKIND, PAIC_MSTFLAG, PAIC_RELATETIM, PAIC_HLDNAME, 
	   		 			PAIC_HLDSEX, PAIC_HLDCTFTYP, PAIC_HLDCTFNO, PAIC_FLAG, PAIC_COMMFLAG, PAIC_OFFTIM ) 
	    		(SELECT "PAI_CSTNO", "PAI_CARDNO", "PAI_ALIAS", "PAI_CARDTYP", "PAI_CARDKIND", "PAI_MSTFLAG", "PAI_RELATETIM", 
	    					"PAI_HLDNAME", "PAI_HLDSEX", "PAI_HLDCTFTYP", "PAI_HLDCTFNO", "PAI_FLAG", "PAI_COMMFLAG", V_DATETIME
	    				FROM PB_ACCINF WHERE PAI_CSTNO = IN_CUSTID AND PAI_CARDNO = V_CARD2 );
	
			SET V_TMP2 = SUBSTR( V_TMP2, V_POS+1 );
		END WHILE;
		
		SET V_CARD = REPLACE(IN_CARDNO,'|',''',''');
 		SET V_SQL = 'DELETE FROM PB_ACCINF WHERE PAI_CSTNO = ''' ||  IN_CUSTID || ''' AND PAI_CARDNO IN ( ''' ||V_CARD||''''||')';
		EXECUTE IMMEDIATE V_SQL;
		SET V_SQL1 = 'DELETE FROM PB_DFLCRD WHERE PDC_CSTNO = ''' ||  IN_CUSTID || ''' AND PDC_CARDNO IN ( ''' ||V_CARD||''''||')';
		EXECUTE IMMEDIATE V_SQL1;
        SET V_SQL2 = 'DELETE FROM PB_PERCTM WHERE PPC_CSTNO = ''' ||  IN_CUSTID || ''' AND PPC_CARDNO IN ( ''' ||V_CARD||''''||')';
		EXECUTE IMMEDIATE V_SQL2;
        COMMIT;
		SET PROC_RET_CODE = '00000';
    ELSE
	    SET PROC_RET_CODE = '30103';
    END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GET_BOUND(
	IN IN_CARDNO      VARCHAR(30),
	OUT PROC_RET_CODE VARCHAR(5),
	OUT LOW_BOUND     DECIMAL(15,2),
	OUT HIGH_BOUND    DECIMAL(15,2)
)
    READS SQL DATA 
    LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鑾峰彇杞笎闄愰
-- 鍒涘缓浜猴細QIANJB
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.09.10
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
    SELECT PCL_BTMAMT,PCL_TOPAMT 
	INTO LOW_BOUND,HIGH_BOUND 
	FROM PB_CARDLMT
	WHERE PCL_CARDNO = IN_CARDNO;
	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_MODIFY_ACCOUNT_ALIAS(
    IN IN_CUSTID   	  VARCHAR(10),
	IN IN_CARDNO      VARCHAR(30),
	IN IN_ALIAS   	  VARCHAR(30),
	OUT PROC_RET_CODE VARCHAR(5)
)
    LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鎴戠殑甯愭埛-甯愭埛鍒悕璁剧疆
-- 杈撳叆鍙傛暟锛?-- IN_CUSTID锛?	瀹㈡埛鍙?-- IN_CARDNO锛?    鍗″彿
-- IN_ALIAS锛?	鍒悕

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

-- 鏈€鍚庝慨鏀逛汉锛欵CC.QIANJB
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.08
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
    UPDATE PB_ACCINF 
	SET PAI_ALIAS = IN_ALIAS 
	WHERE PAI_CSTNO = IN_CUSTID 
	AND PAI_CARDNO = IN_CARDNO; 
	COMMIT;
	SET PROC_RET_CODE = '00000';
END
 

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_MODIFY_BOUND(
    IN IN_CUSTID     VARCHAR(10),
	IN IN_CUSTTYPE   VARCHAR(1),
	IN IN_CARDNO     VARCHAR(30),
	IN LOW_BOUND     VARCHAR(15),
	IN HIGH_BOUND    VARCHAR(15),
	OUT PROC_RET_CODE VARCHAR(5)
)
    LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鎴戠殑甯愭埛-淇敼杞笎闄愰
-- 鍒涘缓浜猴細QIANJB
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.09.10
------------------------------------------------------------------------
BEGIN
	DECLARE V_BTMAMT DECIMAL(15,2);
	DECLARE V_TOPAMT DECIMAL(15,2);
	DECLARE V_BTMAMTTMP DECIMAL(15,2);
	DECLARE V_TOPAMTTMP DECIMAL(15,2);	
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
	END;
	
    SET V_BTMAMT = DECIMAL(LOW_BOUND,15,2);
	SET V_TOPAMT = DECIMAL(HIGH_BOUND,15,2);
	SELECT PCL_BTMAMT,PCL_TOPAMT
	INTO V_BTMAMTTMP,V_TOPAMTTMP
	FROM PB_CARDLMT
	WHERE PCL_CARDNO = IN_CARDNO;
	IF (IN_CUSTTYPE = '1') THEN 
	   SET V_BTMAMT = V_BTMAMTTMP;
    END IF;
	IF (V_TOPAMT>30000.00) THEN
	    SET PROC_RET_CODE = '30101';
	    RETURN;
    ELSEIF(V_BTMAMTTMP<V_BTMAMT) THEN
		SET PROC_RET_CODE = '30212';
		RETURN;
	ELSEIF(V_TOPAMTTMP<V_TOPAMT) THEN
		SET PROC_RET_CODE = '30213';
		RETURN;	
	ELSEIF(V_TOPAMT<V_BTMAMT) THEN	
		SET PROC_RET_CODE = '30214';
		RETURN;	
    ELSE
	    UPDATE PB_CARDLMT
	    SET PCL_BTMAMT = V_BTMAMT,
	   	PCL_TOPAMT = V_TOPAMT,
		PCL_LASTCSTNO = IN_CUSTID,
        PCL_LASTTIM = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss')
		WHERE PCL_CARDNO = IN_CARDNO;
        COMMIT;
		SET PROC_RET_CODE = '00000';
	END IF;

END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SCORE_QUERY(
   IN  IN_CARDNO   	  VARCHAR(30),
   OUT PROC_RET_CODE VARCHAR(5),
   OUT WEB_SCORE DECIMAL(15,2),
   OUT MOBIL_SCORE DECIMAL(15,2)
)
    READS SQL DATA 
    LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ绉垎
-- 鍒涘缓浜猴細QIANJB
-- 鏈€鍚庝慨鏀逛汉: WUJC
-- 鏈€鍚庝慨鏀规棩鏈燂細2007.03.27
------------------------------------------------------------------------
BEGIN
	DECLARE V_SCORE DECIMAL(15,2);
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
	END;
		
	SELECT PCS_SCORE INTO V_SCORE  
		FROM PB_CRDSCR WHERE PCS_CARDNO = IN_CARDNO AND PCS_CHANNEL = '0';
	IF V_SCORE IS NULL THEN
	   SET WEB_SCORE = 0.00;
    ELSE 
	   SET WEB_SCORE = V_SCORE;
    END IF;

	SELECT PCS_SCORE INTO V_SCORE  
		FROM PB_CRDSCR WHERE PCS_CARDNO = IN_CARDNO AND PCS_CHANNEL = '1';
    IF V_SCORE IS NULL THEN 
	   SET MOBIL_SCORE = 0.00;
    ELSE
	   SET WEB_SCORE = V_SCORE;
    END IF;

    SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_USUAL_ACCOUNT_SET(
    IN IN_CUSTID   	  VARCHAR(10),
	IN IN_CARDNO      VARCHAR(30),
	IN IN_FLAG   	  VARCHAR(1),
	OUT PROC_RET_CODE VARCHAR(5)
)
    LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鎴戠殑甯愭埛-甯哥敤甯愭埛璁剧疆
-- 杈撳叆鍙傛暟锛?-- IN_CUSTID锛?	瀹㈡埛鍙?-- IN_CARDNO锛?    鍗″彿
-- IN_FLAG锛?	鏍囧織 0/1

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

-- 鏈€鍚庝慨鏀逛汉锛欵CC.QIANJB
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.08
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
    UPDATE PB_ACCINF 
	SET PAI_COMMFLAG = IN_FLAG 
	WHERE PAI_CSTNO = IN_CUSTID 
	AND PAI_CARDNO = IN_CARDNO 
	AND PAI_MSTFLAG = '0';
	COMMIT;
	SET PROC_RET_CODE = '00000';
END
 

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_MODIFY_CARD_BOTAMTLMT
(
	IN IN_CARDNO			VARCHAR(30),
	IN IN_CHANGEDAMT		DECIMAL(15,2),
	OUT OUT_RET_CODE		VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛?鍗″彿
-- IN_CHANGEDAMT锛?杞笎闄愰

-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

-- 鏈€鍚庝慨鏀逛汉 锛欵CC.Wanght
-- 鏈€鍚庝慨鏀规棩鏈?锛?2006.02.07
------------------------------------------------------------------------
BEGIN
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '10101';		--鏇存柊杞笎闄愰澶辫触
		ROLLBACK ;
		
    END; 
		UPDATE PB_CARDLMT SET PCL_BTMAMT = IN_CHANGEDAMT WHERE PCL_CARDNO = IN_CARDNO;
		COMMIT;
		SET OUT_RET_CODE = '00000';	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_USUAL_BANKACC_QUERY(
	   IN  IN_CSTNO VARCHAR(10),    -- 缃戦摱瀹㈡埛鍙?	   OUT PROC_RET_CODE VARCHAR(5) -- 瀛樺偍杩囩▼杩斿洖鐮?)
READS SQL DATA
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ璺ㄨ宸茶缃殑甯哥敤璺ㄨ璐︽埛
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO  缃戦摱瀹㈡埛鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆嗭細RET_ACCINF						 
------------------------------------------------------------------------
BEGIN
		DECLARE	RET_ACCINF	CURSOR WITH	RETURN FOR
			SELECT
				PBA_SIGNNO,
				PBA_CSTNO,
				PBA_MAINCARDNO,
				PBA_MAINNAME,
				PBA_BSNPARTYID,
				PBA_CARDNO,
				PBA_HDNAME,
				PBA_CARDTYPE,
				PBA_ALIAS,
				PBA_BANKNAME,
				PBA_BANKCODE,
				PBA_PARTYID
			FROM PB_BANKACC WHERE PBA_CSTNO=IN_CSTNO;
	
	
		-- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK ;
		END;
		
		--杩斿洖缁撴灉闆?		OPEN RET_ACCINF;
	
		SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_PAYBANK_ACCINF_ADD
(
  IN   IN_SIGNNO     VARCHAR(60),
  IN   IN_CSTNO      VARCHAR(10),
  IN   IN_MAINCARDNO VARCHAR(32),
  IN   IN_MAINNAME   VARCHAR(60),
  IN   IN_BSNPARTYID VARCHAR(12),
  IN   IN_CARDNO     VARCHAR(32),
  IN   IN_HDNAME     VARCHAR(60),
  IN   IN_CARDTYPE   CHAR(1),
  IN   IN_ALIAS      VARCHAR(30),
  IN   IN_BANKNAME   VARCHAR(60),
  IN   IN_BANKCODE   VARCHAR(12),
  IN   IN_PARTYID    VARCHAR(12),
  OUT  PROC_RET_CODE CHAR(5)
)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 璺ㄨ甯哥敤璐︽埛绠＄悊  娣诲姞璐︽埛淇℃伅

-- 杈撳叆鍙傛暟锛?-- IN_CUSTNO锛? 缃戦摱瀹㈡埛鍙?-- IN_DETAIL锛? 鍖呭惈鎵€瑕佹坊鍔犲唴瀹圭殑鏄庣粏

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

------------------------------------------------------------------------
BEGIN

	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
		
		
	INSERT INTO PB_BANKACC(
			PBA_SIGNNO,
			PBA_CSTNO,
			PBA_MAINCARDNO,
			PBA_MAINNAME,
			PBA_BSNPARTYID,
			PBA_CARDNO,
			PBA_HDNAME,
			PBA_CARDTYPE,
			PBA_ALIAS,
			PBA_BANKNAME,
			PBA_BANKCODE,
			PBA_PARTYID
	) VALUES (
			IN_SIGNNO    	,				
			IN_CSTNO     	,						
			IN_MAINCARDNO	,						
			IN_MAINNAME  	,						
			IN_BSNPARTYID	,						
			IN_CARDNO    	,						
			IN_HDNAME    	,						
			IN_CARDTYPE  	,						
			IN_ALIAS     	,						
			IN_BANKNAME  	,						
			IN_BANKCODE  	,						
			IN_PARTYID   									
	);
	
	SET PROC_RET_CODE = '00000';
	COMMIT ;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_USUAL_BANKACC_DELETE
(
   IN IN_CSTNO VARCHAR(10),
   IN IN_SIGNNO VARCHAR(500),
   OUT PROC_RET_CODE VARCHAR(5) -- 瀛樺偍杩囩▼杩斿洖鐮?)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒犻櫎鎸囧畾鐨勫父鐢ㄨ处鎴疯缃?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO  缃戦摱瀹㈡埛鍙?-- IN_SIGNNO  鍗忚鍙凤紝澶氫釜鍗忚涔嬮棿浣跨敤|闅斿紑,姣忎釜鍗忚涓庣敓鎴愭満鏋勪箣闂寸敤#鍙烽殧寮€
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN

	 	DECLARE V_SIGNNO VARCHAR(60);
		DECLARE V_TMP    VARCHAR(500);
		DECLARE V_RECORD VARCHAR(100);
		DECLARE V_POS    INT;
		DECLARE V_TIME   INT;
		DECLARE V_ORGID  VARCHAR(12);
		DECLARE V_POSSHAP INT;
	
		-- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK ;
		END;
		
		
		SET V_TMP = IN_SIGNNO;
		SET V_TIME = 5;
		
		WHILE LENGTH(V_TMP) > 0 AND V_TIME >0 DO
			SET V_POS = POSSTR(V_TMP,'|');
			IF V_POS > 0 THEN
				SET V_RECORD = SUBSTR(V_TMP,1,V_POS-1);
				SET V_TMP    = SUBSTR(V_TMP,V_POS+1);
			ELSE
				SET V_RECORD = V_TMP;
				SET V_TMP = '';
			END IF;
			
			SET V_POSSHAP = POSSTR(V_RECORD,'#');
			SET V_ORGID   = SUBSTR(V_RECORD,V_POSSHAP+1);
			SET V_SIGNNO  = SUBSTR(V_RECORD,1,V_POSSHAP-1);
			
			DELETE FROM PB_BANKACC WHERE PBA_SIGNNO = V_SIGNNO AND PBA_PARTYID=V_ORGID  AND PBA_CSTNO = IN_CSTNO;
			
			SET V_TIME = V_TIME - 1;
	  	END WHILE;
		
		COMMIT;
		
		SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_USUAL_BANKACC_MODIFY
(
   IN IN_CSTNO VARCHAR(10),
   IN IN_SIGNNO VARCHAR(60),
   IN IN_ORGID  VARCHAR(12),
   IN IN_ALIAS  VARCHAR(30),
   OUT PROC_RET_CODE VARCHAR(5) -- 瀛樺偍杩囩▼杩斿洖鐮?)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒犻櫎鎸囧畾鐨勫父鐢ㄨ处鎴疯缃?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO  缃戦摱瀹㈡埛鍙?-- IN_SIGNNO  鍗忚鍙凤紝澶氫釜鍗忚涔嬮棿浣跨敤|闅斿紑
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN

	
		-- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK ;
		END;
		
		
		UPDATE PB_BANKACC SET PBA_ALIAS = IN_ALIAS 
		WHERE PBA_SIGNNO = IN_SIGNNO AND PBA_CSTNO = IN_CSTNO AND PBA_PARTYID = IN_ORGID;
		
		COMMIT;
		
		SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_ACCSTMT_DOWNLOAD_CRL(
     IN  IN_CARDNO    VARCHAR(21),
     IN  IN_MONTH     CHAR(6),
     IN  IN_FUNC      CHAR(1),
     OUT PROC_RET_CODE VARCHAR(5)   
)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鐢靛瓙璐﹀崟涓嬭浇娆℃暟鎺у埗

-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬崱鍙?-- IN_MONTH:  鏈堜唤 yyyyMM
-- IN_FUNC:   0-妫€鏌?鍏跺畠-鏇存柊

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝30124 瓒呰繃鏈€澶т笅杞芥鏁?
-- 鏈€鍚庝慨鏀逛汉锛歭an_xb
-- 鏈€鍚庝慨鏀规棩鏈燂細2010.09.08
------------------------------------------------------------------------
BEGIN
  DECLARE V_TIMES INT;
  -- 寮傚父澶勭悊
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    SET PROC_RET_CODE = '95000';
    ROLLBACK ;
  END;
  
  -- 鑾峰彇宸蹭笅杞界殑娆℃暟
  SELECT PRP_AMOUNT 
  INTO   V_TIMES
  FROM   PB_RETPWD
  WHERE  PRP_CARDNO=IN_CARDNO AND
         PRP_USETYPE='4'      AND
         PRP_UPTIME =IN_MONTH ;
  
  -- 妫€鏌ユ槸鍚﹁秴杩囨渶澶т笅杞芥鏁?  IF IN_FUNC = '0' THEN
     -- 濡傛灉涓嬭浇娆℃暟灏忎簬2鍏佽涓嬭浇
     IF V_TIMES IS NULL OR V_TIMES<2 THEN
        SET PROC_RET_CODE ='00000';
        RETURN;
     ELSE
        SET PROC_RET_CODE ='30124';
        RETURN;
     END IF;
  ELSE
     IF V_TIMES IS NULL THEN
      INSERT INTO PB_RETPWD(
         PRP_CARDNO,
         PRP_USETYPE,
         PRP_UPTIME,
         PRP_AMOUNT
      )VALUES(
         IN_CARDNO,
         '4',
         IN_MONTH,
         1
      );
     ELSE
      UPDATE PB_RETPWD
      SET    PRP_AMOUNT = V_TIMES+1
      WHERE  PRP_CARDNO=IN_CARDNO AND
             PRP_USETYPE='4'      AND
             PRP_UPTIME =IN_MONTH ;
     END IF;
     COMMIT;
  END IF;
  
  SET PROC_RET_CODE ='00000';
  RETURN;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_CUST_COMMACCINF
(
	IN IN_CSTNO				VARCHAR(10),
	IN IN_CARDNO            VARCHAR(30),
	IN IN_TYPE				CHAR(1),
	IN IN_CARDTYPE			CHAR(1),
	IN IN_CARDKIND			CHAR(1),
	IN IN_ALIAS				VARCHAR(30),
	IN IN_HOLDNAME			VARCHAR(30),
	IN IN_HLDCTFTYP			CHAR(2),
	IN IN_HLDCTFNO			VARCHAR(30),
	IN IN_FLAG				CHAR(1),
	IN IN_ACCTYPE			VARCHAR(2),
	OUT OUT_RET_CODE		VARCHAR(5)
)
-------------------------------------------

-------------------------------------------
BEGIN
	DECLARE V_TIME VARCHAR(14);
	DECLARE V_COMMFLAG CHAR(1);
	DECLARE V_UPDATEFLAG CHAR(1);

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
    END;
    
    
    IF IN_TYPE = '0' THEN
    	SET V_TIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
    	
    	INSERT INTO PB_COMMACCINF (PCAI_CSTNO,PCAI_CARDNO,PCAI_RELATETIM,PCAI_BANKFLAG,PCAI_BANKNAME,PCAI_BANKCODE,PCAI_ALIAS,PCAI_CARDTYP,PCAI_CARDKIND,PCAI_HLDNAME,PCAI_HLDCTFTYP,PCAI_HLDCTFNO,PCAI_FLAG,PCAI_COMMONFLAG,PCAI_ACCTYPE) 
		                    VALUES(IN_CSTNO,IN_CARDNO,V_TIME,'0','','',IN_ALIAS,IN_CARDTYPE,IN_CARDKIND,IN_HOLDNAME,IN_HLDCTFTYP,IN_HLDCTFNO,IN_FLAG,'0',IN_ACCTYPE);
    	UPDATE PB_FAMLIY_ACC SET PFA_QRYSTT = '1',PFA_HLDNAME=IN_HOLDNAME,PFA_ALIAS=IN_ALIAS WHERE PFA_CSTNO = IN_CSTNO AND PFA_ACCNO =IN_CARDNO;
	ELSEIF IN_TYPE = '2' THEN
		SELECT PCAI_COMMONFLAG INTO V_COMMFLAG FROM PB_COMMACCINF WHERE PCAI_CSTNO = IN_CSTNO AND PCAI_CARDNO = IN_CARDNO;
		IF V_COMMFLAG = '0' THEN
			SET V_UPDATEFLAG = '1';
		ELSE
			SET V_UPDATEFLAG = '0';
		END IF;
		UPDATE PB_COMMACCINF SET PCAI_COMMONFLAG = V_UPDATEFLAG WHERE PCAI_CSTNO = IN_CSTNO AND PCAI_CARDNO = IN_CARDNO;
	ELSEIF IN_TYPE = '1' THEN
		DELETE FROM PB_COMMACCINF WHERE PCAI_CSTNO = IN_CSTNO AND PCAI_CARDNO = IN_CARDNO;	
		UPDATE PB_FAMLIY_ACC SET PFA_QRYSTT = '0' WHERE PFA_CSTNO = IN_CSTNO AND PFA_ACCNO =IN_CARDNO;	
	ELSE
		UPDATE PB_COMMACCINF SET PCAI_ALIAS = IN_ALIAS WHERE PCAI_CSTNO = IN_CSTNO AND PCAI_CARDNO = IN_CARDNO;
	END IF;
	
	COMMIT;
	SET OUT_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_COMMACC_INFO_UPDATE(
    IN IN_CUSTID   	  VARCHAR(10),
	IN IN_CARDNO      VARCHAR(30),
	IN IN_FLAG   	  VARCHAR(1),
	OUT PROC_RET_CODE VARCHAR(5)
)
    LANGUAGE SQL
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 棣栭〉-甯哥敤甯愭埛璁剧疆
-- 杈撳叆鍙傛暟锛?-- IN_CUSTID锛?	瀹㈡埛鍙?-- IN_CARDNO锛?    鍗″彿
-- IN_FLAG锛?	鏍囧織 0/1    0娣诲姞 1鍙栨秷

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
	IF IN_FLAG = '0' THEN
		UPDATE PB_ACCINF SET PAI_COMMFLAG = '1' WHERE PAI_CSTNO = IN_CUSTID AND PAI_CARDNO = IN_CARDNO  AND PAI_MSTFLAG = '0';
		UPDATE PB_COMMACCINF SET PCAI_COMMONFLAG = '1' WHERE PCAI_CSTNO = IN_CUSTID AND PCAI_CARDNO = IN_CARDNO;
	ELSE
		UPDATE PB_ACCINF SET PAI_COMMFLAG = '0' WHERE PAI_CSTNO = IN_CUSTID AND PAI_CARDNO = IN_CARDNO  AND PAI_MSTFLAG = '0';
		UPDATE PB_COMMACCINF SET PCAI_COMMONFLAG = '0' WHERE PCAI_CSTNO = IN_CUSTID AND PCAI_CARDNO = IN_CARDNO;
	END IF;
    
	COMMIT;
	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_BILL_LIST_RECORD(
     IN  IN_CARDNO    VARCHAR(21),
     IN  IN_MONTH     CHAR(6),
     IN  IN_FUNC      CHAR(1),
     OUT PROC_RET_CODE VARCHAR(5)   
)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 瀵硅处鍗曚笅杞芥鏁版帶鍒?-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬崱鍙?-- IN_MONTH:  鏈堜唤 yyyyMM
-- IN_FUNC:   0-妫€鏌?鍏跺畠-鏇存柊

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝30124 瓒呰繃鏈€澶т笅杞芥鏁?
-- 鍒涘缓浜猴細huqh
-- 鍒涘缓鏃ユ湡锛?011.03.16
------------------------------------------------------------------------
BEGIN
  DECLARE V_TIMES INT;
  -- 寮傚父澶勭悊
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    SET PROC_RET_CODE = '95000';
    ROLLBACK ;
  END;
  
  -- 鑾峰彇宸蹭笅杞界殑娆℃暟
  SELECT PRP_AMOUNT 
  INTO   V_TIMES
  FROM   PB_RETPWD
  WHERE  PRP_CARDNO=IN_CARDNO AND
         PRP_USETYPE='5'      AND
         PRP_UPTIME =IN_MONTH ;
  
  -- 妫€鏌ユ槸鍚﹁秴杩囨渶澶т笅杞芥鏁?  IF IN_FUNC = '0' THEN
     -- 濡傛灉涓嬭浇娆℃暟灏忎簬3鍏佽涓嬭浇
     IF V_TIMES IS NULL OR V_TIMES<3 THEN
        SET PROC_RET_CODE ='00000';
        RETURN;
     ELSE
        SET PROC_RET_CODE ='00001';
        RETURN;
     END IF;
  ELSE
     IF V_TIMES IS NULL THEN
      INSERT INTO PB_RETPWD(
         PRP_CARDNO,
         PRP_USETYPE,
         PRP_UPTIME,
         PRP_AMOUNT
      )VALUES(
         IN_CARDNO,
         '5',
         IN_MONTH,
         1
      );
     ELSE
      UPDATE PB_RETPWD
      SET    PRP_AMOUNT = V_TIMES+1
      WHERE  PRP_CARDNO=IN_CARDNO AND
             PRP_USETYPE='5'      AND
             PRP_UPTIME =IN_MONTH ;
     END IF;
     COMMIT;
  END IF;
  
  SET PROC_RET_CODE ='00000';
  RETURN;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_ADD_OTOCARD_TO_MAINCARD (
	IN IN_CARDNO        VARCHAR(30),
	IN IN_CUSTNO		VARCHAR(10),
	IN IN_CUSTNAME		VARCHAR(30),
	IN IN_CUSTSEX		CHAR(1),
	IN IN_CTFTYPE		VARCHAR(2),
	IN IN_CTFNO			VARCHAR(30),
	IN IN_ALIAS			VARCHAR(30),
	IN IN_TELLERNO		VARCHAR(10),
	IN IN_BANKNO		VARCHAR(6),	
	IN IN_NODENO		VARCHAR(6),
	OUT PROC_RET_CODE	VARCHAR(5)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 灏嗘矁寰峰崱涓嬫寕鍒扮綉閾朵富鍗′笅
-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO   娌冨痉鍗″彿
-- IN IN_CUSTNO   涓诲崱缃戦摱瀹㈡埛鍙?-- IN IN_CUSTNAME	 瀹㈡埛濮撳悕锛?-- IN IN_CTFTYPE	 璇佷欢绫诲瀷锛?-- IN IN_CTFNO		 璇佷欢鍙风爜锛?-- IN IN_TELLERNO	 寮€鎴锋煖鍛樺彿       
-- IN IN_BANKNO		 鍒嗚鍙?-- IN IN_NODENO		 缃戠偣鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME VARCHAR(14);
	DECLARE V_CUSTTYPE VARCHAR(1);
	DECLARE V_CUSTNO VARCHAR(10);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
    SELECT PIF_CSTNO,PIF_CSTTYP INTO V_CUSTNO,V_CUSTTYPE
		FROM PB_CSTINF WHERE PIF_CSTNO = IN_CUSTNO;
	IF V_CUSTTYPE IS NULL OR V_CUSTNO=''	THEN
		SET PROC_RET_CODE = '95000';
		RETURN;		
	END IF;

	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	--鍒ゆ柇鍏宠仈鍏崇郴鏄惁宸茬粡瀛樺湪
	IF EXISTS (
		SELECT 1
		FROM PB_ACCINF 
		WHERE PAI_CSTNO = IN_CUSTNO AND PAI_CARDNO=IN_CARDNO
	) THEN
		SET PROC_RET_CODE = '00001';
		RETURN;		
	END IF;
	
	--灏嗕俊鎭彃鍏ヤ釜浜哄鎴锋敞鍐屽崱鍒楄〃
	INSERT INTO PB_ACCINF
	(
		PAI_CSTNO,
		PAI_CARDNO,
		PAI_ALIAS,
		PAI_CARDTYP,
		PAI_CARDKIND,
		PAI_MSTFLAG,
		PAI_RELATETIM,
		PAI_HLDNAME,
		PAI_HLDSEX,
		PAI_HLDCTFTYP,
		PAI_HLDCTFNO,
		PAI_FLAG,
		PAI_COMMFLAG,
		PAI_CHGTELLER,
		PAI_CHGBRANCHNO,
		PAI_CHGNETNO,
		PAI_LASTCHGTIM,
		PAI_EACCFLAG
	)
	VALUES
	(
		IN_CUSTNO,
		IN_CARDNO,
		IN_ALIAS,
		'0',
		'0',
		'0',
		V_DATETIME,
		IN_CUSTNAME,
		IN_CUSTSEX,
		IN_CTFTYPE,
		IN_CTFNO,
		'0',
		'0',
		IN_TELLERNO,
		IN_BANKNO,
		IN_NODENO,
		V_DATETIME,
		'5'
	);
	
	--鑻ユ敞鍐屽崱棰濆害淇℃伅涓嶅瓨鍦ㄥ垯灏嗕俊鎭彃鍏ユ敞鍐屽崱棰濆害琛紝鑻ュ瓨鍦ㄥ垯淇濈暀鍘熷厛鏁版嵁
	IF NOT EXISTS (SELECT 1 FROM PB_CARDLMT WHERE PCL_CARDNO = IN_CARDNO
	)THEN
		--濡傛灉涓诲崱鐢ㄦ埛鏄瘉涔︾敤鎴凤紝涓婇檺涓轰竴鐧句竾锛屼笅闄愪负0
		IF V_CUSTTYPE = '1' THEN
			INSERT INTO PB_CARDLMT
			(
				PCL_CARDNO,
				PCL_BTMAMT,
				PCL_TOPAMT,
				PCL_LASTTIM
			)
			VALUES
			(
				IN_CARDNO,
				DECIMAL('0',15,2),
				DECIMAL('1000000',15,2),
				V_DATETIME
			);
		--濡傛灉涓诲崱鐢ㄦ埛鏄敞鍐岀敤鎴凤紝涓嬮檺涓?锛屼笂闄愪负浜斾竾
		ELSE 
			INSERT INTO PB_CARDLMT
			(
				PCL_CARDNO,
				PCL_BTMAMT,
				PCL_TOPAMT,
				PCL_LASTTIM
			)
			VALUES
			(
				IN_CARDNO,
				DECIMAL('0',15,2),
				DECIMAL('50000',15,2),
				V_DATETIME
			);
		END IF;
	END IF;
	
	COMMIT;	
	
	SET PROC_RET_CODE='00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FETCH_CITY_INFO
(	
  IN IN_PRVNO CHAR(3),	
	IN IN_LANGUAGE CHAR(5),
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ浜よ鐪佺骇鍒嗚涓嬬殑鎵€鏈夊煄甯備俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_PRVNO: 鐪佺洿杈栧競琛屽彿
-- IN_LANGUAGE: 璇█
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_PVICODE锛氱渷鐩磋緰甯備唬鐮?-- 缁撴灉闆嗭細CUR_CITYINFO 
-- 鏈€鍚庝慨鏀逛汉锛歭iming
------------------------------------------------------------------------
BEGIN
	--鑾峰彇鎸囧畾鐪併€佺洿杈栧競鐨勫煄甯?	DECLARE	CUR_CITYINFO CURSOR WITH	RETURN FOR
		SELECT
			CIT_CITYCODE,
			CASE WHEN IN_LANGUAGE='en_US' THEN CIT_CITYNAMEEN ELSE CIT_CITYNAME END CASE
	  FROM  
			PB_CITYINFO
	  WHERE
	    CIT_PVICODE = IN_PRVNO
	    AND EXISTS(SELECT 1 FROM PB_BRCHRUT,PB_ORG_BANKINFO WHERE PBR_CORENO  || '999' = POB_ORG_BK AND PBR_CITYCODE=CIT_CITYCODE)
		ORDER BY CIT_CITYCODE ASC;


	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	--杩斿洖缁撴灉闆?	OPEN CUR_CITYINFO;
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FETCH_NETSPOT_INFO
 ( 
  IN IN_CITYNO CHAR(4) ,
  OUT PROC_RET_CODE CHAR(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ閾惰鍩庡競鏀涓嬬殑鎵€鏈夌綉鐐逛俊鎭?-- 杈撳叆鍙傛暟锛?--IN_CITYNO锛氬煄甯傚彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_BANKNO锛氶摱琛屽彿
--OUT_CITYNO锛氬煄甯傚彿
--OUT_PRVNO锛氱渷鍙?-- 缁撴灉闆嗭細RET_NETSPOTINFO

-- 鏈€鍚庝慨鏀逛汉锛歭iming
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.8.5 
------------------------------------------------------------------------
BEGIN
	--鑾峰彇缃戠偣淇℃伅
	DECLARE	RET_NETSPOTINFO	CURSOR WITH	RETURN FOR
	SELECT
		POB_DEPTNO,
		POB_ORG_NAME
	FROM
	 PB_BRCHRUT,
	 PB_ORG_BANKINFO,
	 PB_CITYINFO 
 WHERE
  PBR_CITYCODE = CIT_CITYCODE
  AND PBR_CORENO || '999' = POB_ORG_BK
  AND PBR_CITYCODE = IN_CITYNO;

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	--杩斿洖缁撴灉闆?	OPEN RET_NETSPOTINFO;
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FETCH_CITYANDNETSPOTS_INFO
 ( 
  IN IN_BANKNO CHAR(3) ,
	IN IN_LANGUAGE CHAR(5),
	OUT PROC_RET_CODE CHAR(5),
	OUT OUT_PVICODE CHAR(3),
	OUT OUT_PRVNAME VARCHAR(30),
	OUT OUT_CITYCODE CHAR(4),
	OUT OUT_CITYNAME VARCHAR(60)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁鍒嗚鍙锋煡璇㈡墍灞炵渷鍜屽垎琛屽悕绉板強閾惰鍩庡競鏀涓嬬殑鎵€鏈夌綉鐐逛俊鎭?-- 杈撳叆鍙傛暟锛?--IN_BANKNO锛氬垎琛屽彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_PRVNO锛氱渷鍙?--OUT_PRVNAME锛氱渷鍚?--OUT_CITYNO锛氬煄甯傚彿
--OUT_CITYNAME锛氬垎琛屽悕绉?
-- 缁撴灉闆嗭細RET_NETSPOTINFO

-- 鏈€鍚庝慨鏀逛汉锛歭iming
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.8.5 
------------------------------------------------------------------------
BEGIN
	--鏍规嵁鍒嗚鍙疯幏鍙栫綉鐐逛俊鎭?	DECLARE	RET_NETSPOTINFO	CURSOR WITH	RETURN FOR
	SELECT
		POB_DEPTNO,
		POB_ORG_NAME
	FROM
	 PB_ORG_BANKINFO 
 WHERE
   POB_ORG_BK = IN_BANKNO || '999';

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
		--鑾峰彇鐪併€佺洿杈栧競鐨勫悕绉?	SELECT 
		PVI_PVICODE,
		COALESCE(CASE WHEN IN_LANGUAGE='en_US' THEN PVI_PVINAMEEN ELSE PVI_PVINAME END,''),
		CIT_CITYCODE,
		CIT_CITYNAME
		INTO OUT_PVICODE,OUT_PRVNAME,OUT_CITYCODE,OUT_CITYNAME
	FROM
	  PB_PROVINCEINFO,
	  PB_CITYINFO,
	  PB_BRCHRUT
	WHERE
	  PVI_PVICODE=CIT_PVICODE
	  AND CIT_CITYCODE = PBR_CITYCODE
	  AND PBR_CORENO = IN_BANKNO
	  AND PVI_STT='0' FETCH FIRST 1 ROWS ONLY;

	
	--杩斿洖缁撴灉闆?	OPEN RET_NETSPOTINFO;
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FETCH_PROVINCEANDCITY_INFO
( 
	IN IN_BANKNO CHAR(6),
	OUT PROC_RET_CODE CHAR(5),
	OUT OUT_PRVNO CHAR(3),
	OUT OUT_CITYNO CHAR(4)
)
READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁缃戠偣鍙锋煡璇㈢渷鍙峰拰鍩庡競鍙?-- 杈撳叆鍙傛暟锛?--IN_BANKNO锛氱綉鐐瑰彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_PRVNO锛氱渷鍙?--OUT_CITYNO锛氬煄甯傚彿

-- 鏈€鍚庝慨鏀逛汉锛歍angzhixin
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.11.11
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	--鑾峰彇鍩庡競鍙?	SELECT PBR_CITYCODE, CIT_PVICODE 
	INTO OUT_CITYNO, OUT_PRVNO 
	FROM PB_ORG_BANKINFO, PB_BRCHRUT, PB_CITYINFO 
	WHERE POB_DEPTNO = IN_BANKNO AND POB_ORG_BK = PBR_CORENO || '999' AND PBR_CITYCODE = CIT_CITYCODE;
	
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GETACCOUNTSEQ ( 
	IN  IN_CSTNO VARCHAR(10),
	OUT PROC_RET_CODE VARCHAR(5)
)
READS SQL DATA 
RESULT SETS	2  
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍙栧緱璐﹀彿鎺掑簭
-- 杈撳叆鍙傛暟锛氬鎴峰彿

-- 杈撳嚭鍙傛暟锛?

-- 鏈€鍚庝慨鏀逛汉锛歭ihy.sdc
-- 鏈€鍚庝慨鏀规棩鏈?锛?2012.12.03
------------------------------------------------------------------------
BEGIN
  
	
	DECLARE GET_ACCOUNT CURSOR WITH RETURN TO CALLER FOR
		SELECT PCO_CARDNO,PCO_CARDTYPE,PCO_SEQ FROM PB_CARDSEQ 
		WHERE 
		PCO_CSTNO = IN_CSTNO AND	(PCO_CARDTYPE = '0' OR PCO_CARDTYPE = '1' )
		ORDER BY PCO_SEQ;
		
	DECLARE GET_CREDIT CURSOR WITH RETURN TO CALLER FOR
		SELECT PCO_CARDNO,PCO_CARDTYPE,PCO_SEQ FROM PB_CARDSEQ 
		WHERE 
		PCO_CSTNO = IN_CSTNO AND	(PCO_CARDTYPE = '2' OR PCO_CARDTYPE = '4')
		ORDER BY PCO_SEQ;
	  -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	 --鎵撳紑娓告爣
  OPEN GET_ACCOUNT;
  OPEN GET_CREDIT;

  SET PROC_RET_CODE = '00000';
END

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_LOGON_CHECKVIP (
	IN IN_CSTNO                 VARCHAR(10),
	IN IN_CORENO				VARCHAR(13),
	OUT PROC_RET_CODE 			CHAR(5),
	OUT OUT_VIPFLAG           	CHAR(1),
	OUT OUT_USERROLE            VARCHAR(2),
	OUT OUT_VIPCARDNO          	VARCHAR(30),
	OUT OUT_CUSTLEVEL          	VARCHAR(2)
) 
READS SQL DATA 
------------------------------------------------------------------------
-- 妫€娴嬫矁寰峰鎴蜂俊鎭瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO锛氬鎴峰彿
-- IN_CORENO:鏍稿績瀹㈡埛鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?0026璇ュ鎴峰彿涓嶅瓨鍦?-- OUT_VIPFLAG锛氭槸鍚︽矁寰峰鎴?1锛氬惁 0锛氭槸
-- OUT_USERROLE锛氱敤鎴疯鑹诧紝20锛氳瘉涔︽矁寰峰鎴?21锛氭墜鏈烘敞鍐屾矁寰峰鎴?-- OUT_CUSTLEVEL 娌冨痉瀹㈡埛绾у埆
-- 淇敼浜猴細ECC.maonf
-- 淇敼鏃ユ湡锛?009.04.14
-- 淇敼鍐呭锛氬鍔犺緭鍏ユ牳蹇冨鎴峰彿瀛楁锛岄€氳繃鏍稿績瀹㈡埛鍙峰垽瀹氭槸鍚︿负娌冨痉鎴栫悊璐㈠鎴?------------------------------------------------------------------------
BEGIN

	-- 瀹氫箟鍙橀噺
	DECLARE V_FLAG				VARCHAR(1);			-- 鐢ㄦ埛娌冨痉鏍囧織
	DECLARE V_CUSTTYPE			VARCHAR(30);		-- 鐢ㄦ埛绫诲瀷
	DECLARE V_PRUNO				VARCHAR(8);			-- 鐞嗚储浜у搧鍙?	DECLARE W_CARDNO			VARCHAR(30);		-- 娌冨痉鍗″彿
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_USERROLE = '00';		--杩斿洖涓€涓笉鑳藉瓨鍦ㄧ殑瑙掕壊
		SET OUT_VIPFLAG = '1';			--闈炴矁寰峰鎴锋垨鐘舵€佷笉瀵?		ROLLBACK ;
	END;
	
	-- 鑾峰彇瀹㈡埛淇℃伅-------------------------------------------
	SELECT
		PIF_CSTTYP
	INTO
		V_CUSTTYPE
	FROM PB_CSTINF
	WHERE 
		PIF_CSTNO = IN_CSTNO;
	
	-- 鍒ゆ柇瀹㈡埛瀛樺湪鎬?------------------------------------------
	IF (V_CUSTTYPE IS NULL) OR (V_CUSTTYPE='') THEN	
		SET PROC_RET_CODE = '30026';
		RETURN;
	END IF;
	
	-- 閫氳繃鏍稿績瀹㈡埛鍙峰垽瀹氬鎴锋槸鍚﹀睘浜庢矁寰峰鎴?------------------------------------------
	SELECT 
		PWI_CARDNO,PWI_STATE,PWI_PRDNO, PWI_CUSTLEVEL
	INTO 
		W_CARDNO,V_FLAG,V_PRUNO,OUT_CUSTLEVEL
	FROM PB_WODEINF
	WHERE
		PWI_CORENO = IN_CORENO AND PWI_STATE='0'  FETCH FIRST 1 ROWS ONLY;
	IF (V_FLAG IS NULL) OR (V_FLAG='') THEN	
		SET PROC_RET_CODE = '00000';
		SET OUT_USERROLE = '00';		--杩斿洖涓€涓笉鑳藉瓨鍦ㄧ殑瑙掕壊
		SET OUT_VIPFLAG = '1';			--闈炴矁寰峰鎴锋垨鐘舵€佷笉瀵?		RETURN;
	END IF;	
			IF V_CUSTTYPE = '0'THEN
				IF V_PRUNO = '08040600' THEN
					-- 璇ョ敤鎴蜂负鐞嗚储娉ㄥ唽鐢ㄦ埛
	    			SET OUT_USERROLE = '23';
					ELSE
	    			-- 璇ョ敤鎴蜂负娌冨痉娉ㄥ唽鐢ㄦ埛
	    			SET OUT_USERROLE = '21';
	    		END IF;
			ELSE IF V_CUSTTYPE = '1' THEN
				IF V_PRUNO = '08040600' THEN
					-- 璇ョ敤鎴蜂负鐞嗚储璇佷功鐢ㄦ埛
	    			SET OUT_USERROLE = '22';
				ELSE
			    	-- 璇ョ敤鎴蜂负娌冨痉璇佷功鐢ㄦ埛
					SET OUT_USERROLE = '20';
				END IF;
			END IF;
			END IF;
			SET PROC_RET_CODE = '00000';
			SET OUT_VIPFLAG = V_FLAG;		--娌冨痉瀹㈡埛
			SET OUT_VIPCARDNO = W_CARDNO;		--娌冨痉鍗?END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_COMM_LOGON_CHECKVIP (
	IN IN_CUSTNO            VARCHAR(13),
	OUT PROC_RET_CODE 		CHAR(5),
	OUT OUT_VIPFLAG         CHAR(1),
	OUT OUT_USERROLE        VARCHAR(2)
	
) 
READS SQL DATA 
------------------------------------------------------------------------
-- 妫€娴嬫矁寰峰鎴蜂俊鎭瓨鍌ㄨ繃绋?-- 杈撳叆鍙傛暟锛?-- IN_CUSTNO锛氭牳蹇冨鎴峰彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_VIPFLAG锛氭槸鍚︽矁寰峰鎴?0锛氭槸 1锛氬惁
-- OUT_USERROLE锛氱敤鎴疯鑹诧紝20锛氭矁寰峰鎴? 22:鐞嗚储鐢ㄦ埛 

-- 鏈€鍚庝慨鏀逛汉锛欵CC.MAONF
-- 鏈€鍚庝慨鏀规棩鏈燂細2009.03.12
------------------------------------------------------------------------
BEGIN

	-- 瀹氫箟鍙橀噺
	DECLARE V_FLAG				VARCHAR(1);			-- 鐢ㄦ埛娌冨痉鏍囧織
	DECLARE V_PRUNO				VARCHAR(8);			-- 鐞嗚储浜у搧鍙?			
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_USERROLE = '00';		--杩斿洖涓€涓笉鑳藉瓨鍦ㄧ殑瑙掕壊
		SET OUT_VIPFLAG = '1';			--闈炴矁寰峰鎴锋垨鐘舵€佷笉瀵?		ROLLBACK ;
	END;
	
	SELECT 
		PWI_STATE,PWI_PRDNO 
	INTO 
		V_FLAG,V_PRUNO
	FROM PB_WODEINF
	WHERE
		PWI_CORENO = IN_CUSTNO AND PWI_STATE='0' FETCH FIRST 1 ROWS ONLY;
	IF (V_FLAG IS NULL) OR (V_FLAG='') THEN	
		SET OUT_USERROLE = '00';		--杩斿洖涓€涓笉鑳藉瓨鍦ㄧ殑瑙掕壊
		SET OUT_VIPFLAG = '1';			--闈炴矁寰峰鎴锋垨鐘舵€佷笉瀵?		SET PROC_RET_CODE = '00000';
		RETURN;
	END IF;
				IF V_PRUNO = '08040600' THEN
					-- 璇ョ敤鎴蜂负鐞嗚储鐢ㄦ埛
	    			SET OUT_USERROLE = '22';
	    			SET OUT_VIPFLAG = '0';	
					ELSE
	    			-- 璇ョ敤鎴蜂负娌冨痉鐢ㄦ埛
	    			SET OUT_USERROLE = '20';
	    			SET OUT_VIPFLAG = '0';	
	    		END IF;	
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_SET_VIP ( 
	IN 	IN_TRANTYPE		VARCHAR(1),
	IN 	IN_CARDNO		VARCHAR(30),
	IN 	IN_CUSTLEVEL	VARCHAR(2),
	IN 	IN_PROID		VARCHAR(8),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CUSTNO		VARCHAR(10),
	OUT OUT_ALIAS		VARCHAR(30),
	OUT OUT_CUSTTYPE	VARCHAR(1),
	OUT OUT_CTFTYPE		VARCHAR(2),
	OUT OUT_CTFNO		VARCHAR(30),
	OUT OUT_MOBILE		VARCHAR(20),
	OUT OUT_CARDNO		VARCHAR(30)
)                
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-鐢ㄦ埛淇℃伅鏌ヨ
-- 杈撳叆鍙傛暟锛?--IN 	IN_TRANTYPE		VARCHAR(1)	浜ゆ槗绫诲瀷
--IN 	IN_CARDNO		VARCHAR(30)	鍗″彿
--IN 	IN_CUSTLEVEL	VARCHAR(2)	娌冨痉瀹㈡埛绛夌骇
--IN 	IN_PROID		VARCHAR(8)	娌冨痉浜у搧鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNO锛氱綉閾跺鎴峰彿
-- OUT_ALIAS	鍒悕
-- OUT_CUSTTYPE	瀹㈡埛绫诲瀷
-- OUT_CTFTYPE	璇佷欢绫诲瀷
-- OUT_CTFNO	璇佷欢鍙风爜	
-- OUT_MOBILE	鎵嬫満	
-- OUT_CARDNO	杩斿洖涓诲崱鍙?-- 鏈€鍚庝慨鏀逛汉锛欵CC.songwb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.03.27
------------------------------------------------------------------------
BEGIN
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	---鏍规嵁浜ゆ槗绫诲瀷瀵规矁寰峰鎴锋爣蹇椾綔淇敼
	IF(IN_TRANTYPE='0') THEN
			IF NOT EXISTS (
				SELECT 1 
				FROM PB_WODEINF 
				WHERE PWI_CARDNO = IN_CARDNO
			) THEN
				INSERT INTO PB_WODEINF(PWI_CARDNO,PWI_STATE)VALUES(IN_CARDNO,'0');
			ELSE
				UPDATE PB_WODEINF SET PWI_STATE='0' WHERE PWI_CARDNO = IN_CARDNO;
			END IF;		
	ELSE IF(IN_TRANTYPE='2') THEN
		UPDATE PB_WODEINF SET PWI_STATE='1',PWI_PRDNO=IN_PROID WHERE PWI_CARDNO = IN_CARDNO;
	ELSE IF(IN_TRANTYPE='1') THEN
		UPDATE PB_WODEINF SET PWI_PRDNO=IN_PROID  WHERE	PWI_CARDNO = IN_CARDNO;
	END IF;
	END IF;
	END IF;
	COMMIT;
	--鏌ヨ淇℃伅
	SELECT 
		PIF_CSTNO,                                          
		PIF_ALIAS,                                  
		PIF_CSTTYP,         
		PIF_CTFTYP,               
		PIF_CTFNO,                   
		PIF_MOBILE,                      
		PIF_ACCNO	     
	INTO
		OUT_CUSTNO,                                         
		OUT_ALIAS,                                  
		OUT_CUSTTYPE,         
		OUT_CTFTYPE,               
		OUT_CTFNO,
		OUT_MOBILE,                   
		OUT_CARDNO                                     
	FROM PB_CSTINF
	WHERE PIF_ACCNO = IN_CARDNO;
		
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_QUERY_CUST_INFO_VIP ( 
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CUSTNO		VARCHAR(10),
	OUT OUT_AREANO		VARCHAR(3),
	OUT OUT_ALIAS		VARCHAR(30),
	OUT OUT_CUSTNAME	VARCHAR(30),
	OUT OUT_CUSTSEX		VARCHAR(1),
	OUT OUT_CUSTTYPE	VARCHAR(1),
	OUT OUT_CTFTYPE		VARCHAR(2),
	OUT OUT_CTFNO		VARCHAR(30),
	OUT OUT_MOBILE		VARCHAR(20),
	OUT OUT_PHONE		VARCHAR(20),
	OUT OUT_EMAIL		VARCHAR(60),
	OUT OUT_ADDRESS		VARCHAR(60),
	OUT OUT_ZIPCODE		VARCHAR(6),
	OUT OUT_CUSTSTT		VARCHAR(1),
	OUT OUT_TOPAMT		DECIMAL(15,2),
	OUT OUT_BOTTOMAMT	DECIMAL(15,2),
	OUT OUT_OPENDATE	VARCHAR(8),
	OUT OUT_OPENNODENO	VARCHAR(6),
	OUT OUT_OPENBANKNO	VARCHAR(6),
	OUT OUT_OPENTELLERNO	VARCHAR(10),
	OUT OUT_LASTLOGIP	VARCHAR(20),
	OUT OUT_VIPFLAG		VARCHAR(1)
) 
READS SQL DATA                
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-鐢ㄦ埛淇℃伅鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	     涓诲崱鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNO锛氱綉閾跺鎴峰彿
-- OUT_AREANO	鍦板尯鍙?
-- OUT_ALIAS	鍒悕
-- OUT_CUSTNAME	濮撳悕
-- OUT_CUSTSEX	鎬у埆
-- OUT_CUSTTYPE	瀹㈡埛绫诲瀷
-- OUT_CTFTYPE	璇佷欢绫诲瀷
-- OUT_CTFNO	璇佷欢鍙风爜	
-- OUT_MOBILE	鎵嬫満	
-- OUT_PHONE	鑱旂郴鐢佃瘽
-- OUT_EMAIL	鐢靛瓙閭欢		
-- OUT_ADDRESS	鍦板潃
-- OUT_ZIPCODE	閭紪
-- OUT_CUSTSTT	鐘舵€?-- OUT_TOPAMT	閲戦涓婇檺	
-- OUT_BOTTOMAMT	閲戦涓嬮檺
-- OUT_OPENDATE		寮€鎴锋棩鏈?-- OUT_OPENNODENO	寮€鎴风綉鐐瑰彿
-- OUT_OPENBANKNO	寮€鎴峰垎琛屽彿
-- OUT_OPENTELLERNO	寮€鎴锋煖鍛?-- OUT OUT_LASTLOGIP	鏈€鍚庢垚鍔熺櫥褰昳p
-- OUT OUT_LASTLOGIP	娌冨痉瀹㈡埛鏍囧織 0鍚?1鏄?-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.03.27
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	--鏌ヨ淇℃伅
	SELECT 
		PIF_CSTNO,                         
		PIF_AREACODE,                 
		PIF_ALIAS,                   
		PIF_NAMECN,               
		PIF_SEX,                
		PIF_CSTTYP,         
		PIF_CTFTYP,               
		PIF_CTFNO,                   
		PIF_MOBILE,                      
		PIF_PHONE,                   
		PIF_EMAIL,                   
		PIF_ADDRESS,                      
		PIF_ZIPCODE,                     
		PIF_STT,                                           
		PIF_OPENDATE,              
		PIF_OPENNETNO,                
		PIF_OPENBRANCHNO,                 
		PIF_OPENTELLER,                
		PIF_LASTLGNIP    
	INTO
		OUT_CUSTNO,                         
		OUT_AREANO,                 
		OUT_ALIAS,                   
		OUT_CUSTNAME,               
		OUT_CUSTSEX,                
		OUT_CUSTTYPE,         
		OUT_CTFTYPE,               
		OUT_CTFNO,                   
		OUT_MOBILE,                      
		OUT_PHONE,                   
		OUT_EMAIL,                   
		OUT_ADDRESS,                      
		OUT_ZIPCODE,                     
		OUT_CUSTSTT,                                           
		OUT_OPENDATE,              
		OUT_OPENNODENO,                
		OUT_OPENBANKNO,                 
		OUT_OPENTELLERNO,                
		OUT_LASTLOGIP  
	FROM PB_CSTINF
	WHERE PIF_ACCNO = IN_CARDNO;
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF (OUT_CUSTNO IS NULL) OR (OUT_CUSTNO='') THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱鏈绾︾綉閾?;
		RETURN;		
	END IF;
	SELECT PWI_STATE INTO OUT_VIPFLAG FROM PB_WODEINF WHERE PWI_CARDNO = IN_CARDNO;	
	
	SELECT 
		PCL_BTMAMT,
		PCL_TOPAMT
	INTO
		OUT_BOTTOMAMT,
		OUT_TOPAMT
	FROM PB_CARDLMT
	WHERE PCL_CARDNO = IN_CARDNO;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GET_WODE_CARDLIST
 (
  IN 	IN_CARDNO		VARCHAR(30),
  OUT 	OUT_RET_CODE 	VARCHAR(5)
 ) 
READS SQL DATA 
DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鎵€鏈夋矁寰峰叧鑱旇处鎴?-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?5000涓烘煡璇㈠嚭閿?00000涓烘甯?-- OUT_CARD_LST: 缁撴灉闆?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.SunZhen
-- 鏈€鍚庝慨鏀规棩鏈?锛?2006.08.09
------------------------------------------------------------------------
BEGIN
	
	DECLARE OUT_CARD_LST CURSOR WITH RETURN FOR
		SELECT
			PAW_SUBACC,
			PAW_RELTYPE,
			PAW_STATE
		FROM
			PB_WODE_ACCINF
		WHERE	PAW_WODECARD=IN_CARDNO
		AND		PAW_STATE='0';
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK ;
	END;
	--杩斿洖缁撴灉鍊?	OPEN OUT_CARD_LST;
	
	SET OUT_RET_CODE = '00000';
       
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_DEL_WODE_REL_CARD
 (
  IN 	IN_CARDNO		VARCHAR(30),
  OUT 	OUT_RET_CODE 	VARCHAR(5)
 ) 

  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍒犻櫎娌冨痉鍏宠仈璐︽埛
-- 杈撳叆鍙傛暟锛?-- IN_CARD 娌冨痉鍗″彿
-- 杈撳嚭鍙傛暟锛?-- OUT_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?5000涓烘煡璇㈠嚭閿?00000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉 锛?ECC.Wujc
-- 鏈€鍚庝慨鏀规棩鏈?锛?2006.08.24
------------------------------------------------------------------------
BEGIN
	-- 澹版槑鍙橀噺
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET OUT_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	UPDATE PB_WODE_ACCINF SET PAW_STATE = '1' WHERE PAW_SUBACC = IN_CARDNO;
	COMMIT;
	--杩斿洖缁撴灉鍊?	SET OUT_RET_CODE = '00000';
       
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_WODE_SET_VIP ( 
	IN 	IN_CARDNO		VARCHAR(30),
	IN 	IN_CORENO		VARCHAR(13),
	IN 	IN_FLAG			VARCHAR(1),
	OUT PROC_RET_CODE	VARCHAR(5)
)                
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-璁剧疆娌冨痉瀹㈡埛鏍囧織
-- 杈撳叆鍙傛暟锛?-- IN 	IN_CARDNO				VARCHAR(30)	鍗″彿
-- IN 	IN_CORENO				VARCHAR(13)	鏍稿績瀹㈡埛鍙?-- IN 	IN_CUSTIN_FLAGLEVEL		VARCHAR(1)	娌冨痉瀹㈡埛鏍囧織
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 鏈€鍚庝慨鏀逛汉锛欵CC.Sunzhen
-- 鏈€鍚庝慨鏀规棩鏈?锛?2006.08.14
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
		
	IF NOT EXISTS (
		SELECT 1 
		FROM PB_WODEINF 
		WHERE PWI_CARDNO = IN_CARDNO
	) THEN
		INSERT INTO PB_WODEINF(PWI_CORENO,PWI_CARDNO,PWI_STATE)VALUES(IN_CORENO,IN_CARDNO,IN_FLAG);
	ELSE
		UPDATE PB_WODEINF SET PWI_STATE=IN_FLAG WHERE PWI_CARDNO = IN_CARDNO;
	END IF;
	COMMIT;		
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_WODE_MONTH_LIST_CHECK ( 
	IN 	IN_CARDNO		VARCHAR(30),
	IN 	IN_YEAR_MONTH	VARCHAR(6),
	OUT PROC_RET_CODE	VARCHAR(5)
)              
READS SQL DATA   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-鏈堢粨鍗曚笅杞芥帶鍒剁浉搴旀煡璇?-- 杈撳叆鍙傛暟锛?-- IN 	IN_CARDNO				VARCHAR(30)	鍗″彿
-- IN 	IN_YEAR_MONTH			VARCHAR(6)	娌冨痉瀹㈡埛鏍囧織
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘湀缁撳崟涓嬭浇娆℃暟涓嶈秴杩?娆★紝00001涓烘湀缁撳崟涓嬭浇娆℃暟宸茶揪鍒?娆?-- 鏈€鍚庝慨鏀逛汉锛欵CC.Wujc
-- 鏈€鍚庝慨鏀规棩鏈?锛?2006.08.28
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_COUNT SMALLINT;
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
		
	SELECT COUNT(*) INTO V_COUNT 
	FROM PB_RETPWD 
	WHERE PRP_CARDNO = IN_CARDNO AND PRP_UPTIME = IN_YEAR_MONTH AND PRP_USETYPE='2';	
	
	IF V_COUNT < 3 THEN
		SET PROC_RET_CODE = '00000'; --鏈堢粨鍗曚笅杞芥鏁颁笉瓒呰繃3娆?	ELSE
		SET PROC_RET_CODE = '00001'; --鏈堢粨鍗曚笅杞芥鏁板凡杈惧埌3娆?
	END IF;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_LOAN_QUERYVIPCARDS (
	IN  IN_CORENO				    VARCHAR(13),
	OUT PROC_RET_CODE 			CHAR(5)
) 
READS SQL DATA
DYNAMIC RESULT SETS 1 
------------------------------------------------------------------------
-- 鏌ヨ瀹㈡埛鐨勬墍鏈夋矁寰峰崱瀛樺偍杩囩▼

-- 杈撳叆鍙傛暟锛?-- IN_CORENO:鏍稿績瀹㈡埛鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆嗭細VIP_QUERYCARDS
-- 鍒涘缓浜猴細ECC.gongjx
-- 鍒涘缓鏃ユ湡锛?00.11.21
------------------------------------------------------------------------

BEGIN             
    DECLARE	VIP_QUERYCARDS	CURSOR WITH	RETURN FOR 
    	SELECT PWI_CARDNO FROM PB_WODEINF WHERE PWI_CORENO = IN_CORENO AND PWI_STATE='0' AND PWI_PRDNO<>'08040600';
   	-- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
		END;
		--杩斿洖缁撴灉闆?    OPEN VIP_QUERYCARDS; 
		SET PROC_RET_CODE = '00000';
END
DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_QUERY_ENTRUST_FLOWNO
 (
   IN  IN_FINAREA   VARCHAR(20),
   OUT PROC_RET_CODE VARCHAR(5), 
   OUT OUT_FLOWNO VARCHAR(20)
 ) 
 
 READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓绘満浜ゆ槗-鐢熸垚缃戦摱浜ゆ槗娴佹按鍙?-- 杈撳叆鍙傛暟锛?-- IN_FINAREA  鐞嗚储甯堝湴鍖?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_FLOWNO锛氬湴鍖鸿闂鏁?-- author :chenyz
-- date : 2012.08.18

------------------------------------------------------------------------
BEGIN

    --澹版槑鍙橀噺
	DECLARE V_TRAN_FLOWNO BIGINT;

  	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
    
	--鐢熸垚鍦板尯璁块棶璁板綍鍙? 
    --2900涓婃捣  1000鍖椾含甯? 5210姝︽眽
    IF  IN_FINAREA='2900' THEN
	SET V_TRAN_FLOWNO = NEXTVAL FOR PB_ENTRUST_FIN_KEY1;
	ELSEIF  IN_FINAREA='1000' THEN 
	SET V_TRAN_FLOWNO = NEXTVAL FOR PB_ENTRUST_FIN_KEY2;
	ELSEIF  IN_FINAREA='5210' THEN 
	SET V_TRAN_FLOWNO = NEXTVAL FOR PB_ENTRUST_FIN_KEY3;
	END IF;
    
	SET OUT_FLOWNO = CHAR(V_TRAN_FLOWNO);
    SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_JILU_CREDIT_REPAY
(
    IN IN_CARDNO VARCHAR(30),
	OUT PROC_RET_CODE VARCHAR(5)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 淇＄敤鍗¤褰曞瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬崱鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------

BEGIN
	-- 鍙橀噺澹版槑
    DECLARE V_DATETIME VARCHAR(14);
    
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');

	IF EXISTS 
		(
			SELECT 1 FROM PB_RETPWD WHERE PRP_CARDNO = IN_CARDNO AND PRP_USETYPE = '1'
		)
		THEN 
	 	UPDATE PB_RETPWD  SET PRP_UPTIME = V_DATETIME WHERE PRP_CARDNO = IN_CARDNO AND PRP_USETYPE = '1';
	
	ELSE
		INSERT INTO PB_RETPWD(PRP_CARDNO,PRP_USETYPE,PRP_UPTIME) VALUES (IN_CARDNO,'1',V_DATETIME);  
	END IF;	 
	 COMMIT;
	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECK_CREDIT_REPAY
(
    IN IN_CARDNO VARCHAR(30),
    OUT PROC_RET_CODE VARCHAR(5)
) 
READS SQL DATA 
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鍗￠噸缃煡璇㈠瘑鐮佹娴嬪瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬崱鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯革紝30501涓鸿鍗″凡缁忚繕杩囨锛屼笉鑳介噸澶嶆搷浣?-- NOWTIME 浜ゆ槗褰撳墠鏃堕棿 T_DATATIME 鏁版嵁搴撻噷宸茬粡璁板綍浜嗙殑鏃堕棿锛孎ORNTTIME鏁版嵁搴撳彇鍑虹殑鏃堕棿鍓嶅叓浣?------------------------------------------------------------------------

BEGIN
    -- 寮傚父澶勭悊
    DECLARE NOWTIME VARCHAR(14);
    DECLARE T_DATATIME VARCHAR(14);
    DECLARE FRONTTIME VARCHAR(14);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SELECT PRP_UPTIME INTO T_DATATIME FROM PB_RETPWD WHERE PRP_CARDNO=IN_CARDNO AND PRP_USETYPE='1';
	
	IF T_DATATIME IS NULL OR T_DATATIME='' THEN
		SET PROC_RET_CODE = '00000';
		RETURN;
	ELSE
		SET NOWTIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		SET FRONTTIME = LEFT(T_DATATIME,8);	
	    IF FRONTTIME = NOWTIME
        THEN
          	SET PROC_RET_CODE = '30501'; 
           	RETURN;
       	END IF;
	END IF;
	SET PROC_RET_CODE = '00000';		
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_JILU_CREDIT_RMB
(
    IN IN_CARDNO VARCHAR(30),
		OUT PROC_RET_CODE VARCHAR(5),
		OUT OUT_AMOUNT INT
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 淇＄敤鍗¤喘姹囨鏁拌褰曞瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬崱鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_AMOUNT锛氬綋鏃ヨ喘姹囪繕娆炬鏁?------------------------------------------------------------------------

BEGIN
	-- 鍙橀噺澹版槑
		
    DECLARE NOWTIME VARCHAR(14);
    DECLARE T_DATATIME VARCHAR(14);
    DECLARE FRONTTIME VARCHAR(14);
    DECLARE V_DATETIME VARCHAR(14);
    DECLARE V_COUNT SMALLINT;
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');

	IF EXISTS 
		(
			SELECT 1 FROM PB_RETPWD WHERE PRP_CARDNO = IN_CARDNO AND PRP_USETYPE = '3'
		)
	THEN		
		SELECT PRP_UPTIME INTO T_DATATIME FROM PB_RETPWD WHERE PRP_CARDNO=IN_CARDNO AND PRP_USETYPE='3';
	
		IF T_DATATIME IS NULL OR T_DATATIME='' THEN
			UPDATE PB_RETPWD SET PRP_UPTIME = V_DATETIME , PRP_AMOUNT = 1 WHERE PRP_CARDNO = IN_CARDNO AND PRP_USETYPE = '3';
			SET OUT_AMOUNT = 1;
		ELSE
			SET NOWTIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
			SET FRONTTIME = LEFT(T_DATATIME,8);	
	    	IF FRONTTIME = NOWTIME THEN
	    			UPDATE PB_RETPWD SET PRP_UPTIME = V_DATETIME , PRP_AMOUNT = PRP_AMOUNT+1 WHERE PRP_CARDNO = IN_CARDNO AND PRP_USETYPE = '3';	    			
	    			SELECT PRP_AMOUNT INTO V_COUNT FROM PB_RETPWD WHERE PRP_CARDNO = IN_CARDNO AND PRP_USETYPE = '3';
	    			SET OUT_AMOUNT = V_COUNT;
				ELSE
						UPDATE PB_RETPWD SET PRP_UPTIME = V_DATETIME , PRP_AMOUNT = 1 WHERE PRP_CARDNO = IN_CARDNO AND PRP_USETYPE = '3';
						SET OUT_AMOUNT = 1;
      	END IF;
		END IF;	
	ELSE
		INSERT INTO PB_RETPWD(PRP_CARDNO,PRP_USETYPE,PRP_UPTIME,PRP_AMOUNT) VALUES (IN_CARDNO,'3',V_DATETIME,1);
		SET OUT_AMOUNT = 1;
	END IF;	 
	COMMIT;
	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECK_CREDIT_RMB
(
    IN IN_CARDNO VARCHAR(30),
    OUT PROC_RET_CODE VARCHAR(5)
) 
READS SQL DATA 
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 淇＄敤鍗¤喘姹囨鏁版娴嬪瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氬崱鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘湀缁撳崟涓嬭浇娆℃暟涓嶈秴杩?娆★紝00003涓烘湀缁撳崟涓嬭浇娆℃暟宸茶揪鍒?娆?-- NOWTIME 浜ゆ槗褰撳墠鏃堕棿 T_DATATIME 鏁版嵁搴撻噷宸茬粡璁板綍浜嗙殑鏃堕棿锛孎ORNTTIME鏁版嵁搴撳彇鍑虹殑鏃堕棿鍓嶅叓浣?------------------------------------------------------------------------

BEGIN
    -- 寮傚父澶勭悊
    DECLARE NOWTIME VARCHAR(14);
    DECLARE T_DATATIME VARCHAR(14);
    DECLARE FRONTTIME VARCHAR(14);
    DECLARE V_COUNT SMALLINT;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SELECT PRP_UPTIME INTO T_DATATIME FROM PB_RETPWD WHERE PRP_CARDNO=IN_CARDNO AND PRP_USETYPE='3';
	
	IF T_DATATIME IS NULL OR T_DATATIME='' THEN
		SET PROC_RET_CODE = '00000';
		RETURN;
	ELSE
		SET NOWTIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		SET FRONTTIME = LEFT(T_DATATIME,8);	
	    IF FRONTTIME = NOWTIME THEN
	    			SELECT PRP_AMOUNT INTO V_COUNT FROM PB_RETPWD WHERE PRP_CARDNO=IN_CARDNO AND PRP_USETYPE='3';
	    			IF V_COUNT < 3 THEN
							SET PROC_RET_CODE = '00000'; --褰撴棩璐眹杩樻娆℃暟涓嶈秴杩?娆?						ELSE
							SET PROC_RET_CODE = '30502'; --褰撴棩璐眹杩樻娆℃暟宸茶揪鍒?娆?
						END IF;          	
           	RETURN;
      END IF;
	END IF;
	SET PROC_RET_CODE = '00000';		
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_AIRLINECOM_QUERY
(
	IN IN_SEQNO CHAR(10),
	OUT PROC_RETCODE CHAR(5)
)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鑸┖鍏徃鏌ヨ

-- 杈撳叆鍙傛暟锛?-- IN_SEQNO锛氳埅绌哄叕鍙哥紪鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RETCODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?95000涓哄紓甯?

-- 鏈€鍚庝慨鏀逛汉锛歽ao_zhang
-- 鏈€鍚庝慨鏀规棩鏈燂細2008.05.30
------------------------------------------------------------------------
READS SQL DATA 
RESULT SETS 1 
BEGIN
	DECLARE	CUR_LIST CURSOR WITH	RETURN FOR 
		SELECT PALC_SEQNO,PALC_NAME,PALC_RATE,PALC_URL,PALC_TELE FROM PB_AIRLINECOM 
			WHERE ((IN_SEQNO IS NULL OR IN_SEQNO='') OR PALC_SEQNO=IN_SEQNO) WITH UR;
	
	--寮傚父澹版槑 
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN 
		SET PROC_RETCODE='95000';
	END;
	
	OPEN CUR_LIST;
	SET PROC_RETCODE='00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CREDIT_FETCH_CITY_INFO
(	
  	IN IN_PRVNO CHAR(3),	
		IN IN_LANGUAGE CHAR(5),
  	OUT PROC_RET_CODE CHARACTER(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鐪佷笅鎵€鏈夊煄甯備俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_PRVNO: 鐪佺洿杈栧競浠ｇ爜鍙?-- IN_LANGUAGE: 璇█
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆嗭細CUR_CITYINFO 
-- 鏈€鍚庝慨鏀逛汉锛欵CC.XUWEI
-- 鏈€鍚庝慨鏀规棩鏈?锛?2009.02.25
------------------------------------------------------------------------
BEGIN
	 DECLARE V_PVICODE CHAR(3);
	--鑾峰彇鎸囧畾鐪併€佺洿杈栧競鐨勫煄甯?	DECLARE	CUR_CITYINFO CURSOR WITH RETURN FOR
		SELECT CIT_CITYCODE,
		CASE 
		WHEN IN_LANGUAGE='en_US' THEN CIT_CITYNAMEEN 
		ELSE CIT_CITYNAME END CASE 
		FROM  
			PB_CITYINFO WHERE CIT_PVICODE = IN_PRVNO 
					ORDER BY CIT_CITYCODE ASC;


	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	--杩斿洖缁撴灉闆?	OPEN CUR_CITYINFO;
	SET PROC_RET_CODE = '00000';
	
END
DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PBANK.IM_USERSIGN_QUERY
 (IN IN_CARDNO VARCHAR(30), 
  OUT PROC_RETCODE CHARACTER(5), 
  OUT OUT_TOA_MSG_TYPE VARCHAR(1), 
  OUT OUT_TOA_MSG_AP_MMO VARCHAR(2), 
  OUT OUT_TOA_MSG_CODE VARCHAR(4), 
  OUT OUT_ANSINFO VARCHAR(50), 
  OUT OUT_CSTNO CHARACTER(10), 
  OUT OUT_CSTTYP CHARACTER(1), 
  OUT OUT_STT CHARACTER(1), 
  OUT OUT_MOBILE VARCHAR(20), 
  OUT OUT_NAMECN VARCHAR(30), 
  OUT OUT_SEX CHARACTER(1), 
  OUT OUT_CTFTYP CHARACTER(2), 
  OUT OUT_CTFNO VARCHAR(30), 
  OUT OUT_CERST CHARACTER(1), 
  OUT OUT_CERTIME CHARACTER(2), 
  OUT OUT_VALIDTIME CHARACTER(14), 
  OUT OUT_OPENDATE CHARACTER(8), 
  OUT OUT_OPENNETNO CHARACTER(6), 
  OUT OUT_OPENBRANCHNO CHARACTER(6), 
  OUT OUT_LASTCHGTIM CHARACTER(14), 
  OUT OUT_CHGNETNO CHARACTER(6), 
  OUT OUT_CHGBRANCHNO VARCHAR(40), 
  OUT OUT_LASTLGNIP VARCHAR(20), 
  OUT OUT_LASTLGNTIM VARCHAR(14),
  OUT OUT_STTFLAG CHAR(1),
  OUT OUT_COMCOREID VARCHAR(13),
  OUT OUT_COMNAME VARCHAR(30),
  OUT OUT_COMCTFTYP VARCHAR(4),
  OUT OUT_COMCTFNO VARCHAR(30),
  OUT OUT_COMSTT CHAR(1),
  OUT OUT_COMLASTLGNTIM VARCHAR(14),
  OUT OUT_COMLASTLGNIP VARCHAR(20),
  OUT OUT_COMOPENDATE VARCHAR(8),
  OUT OUT_OPENTYP CHAR(1)
  
  
 ) 
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缃戦摱绛剧害鐢ㄦ埛淇℃伅鏌ヨ

-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氱绾︿富鍗″彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RETCODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?95000涓哄紓甯?31001涓烘棤姝ょ绾︿俊鎭?-- OUT_TOA_MSG_TYPE  杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO 淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE  淇℃伅鐮?-- OUT_ANSINFO  杩斿洖淇℃伅
-- OUT_CSTNO    锛氱绾︾敤鎴峰鎴峰彿
-- OUT_CSTTYP   :绛剧害鐢ㄦ埛绫诲瀷          
-- OUT_STT      :鐢ㄦ埛鐘舵€?       
-- OUT_MOBILE   :绛剧害鎵嬫満鍙?    
-- OUT_NAMECN   :涓枃鍚?   
-- OUT_SEX      :鎬у埆       
-- OUT_CTFTYP   :璇佷欢绫诲瀷        
-- OUT_CTFNO    :璇佷欢鍙风爜     
-- OUT_CERST    :璇佷功鐘舵€?      
-- OUT_CERTIME  :璇佷功鏈夋晥鏈?      
-- OUT_VALIDTIME :璇佷功鐢熸晥鏃堕棿     
-- OUT_OPENDATE :寮€鎴锋棩鏈?     
-- OUT_OPENNETNO 锛氬紑鎴风綉鐐瑰彿    
-- OUT_OPENBRANCHNO :寮€鎴峰垎琛屽彿	  
-- OUT_LASTCHGTIM :鏈€鍚庝慨鏀规椂闂?  
-- OUT_CHGNETNO :鏈€鍚庝慨鏀圭綉鐐瑰彿    
-- OUT_CHGBRANCHNO :鏈€鍚庝慨鏀瑰垎琛屽彿 
-- OUT_LASTLGNIP :鏈€鍚庣櫥褰旾P  
-- OUT_LASTLGNTIM :鏈€鍚庣櫥褰曟椂闂?  
-- OUT_STTFLAG :绛剧害,娉ㄩ攢鏍囪瘑  0:绛剧害  1:娉ㄩ攢
-- OUT_COMCOREID :鏍稿績瀹㈡埛鍙?-- OUT_COMNAME :瀹㈡埛濮撳悕
-- OUT_COMCTFTYP :璇佷欢绫诲瀷
-- OUT_COMCTFNO :璇佷欢鍙风爜
-- OUT_COMSTT :鐘舵€?-- OUT_COMLASTLGNTIM :涓婃鐧诲綍鏃堕棿锛堟垚鍔燂級
-- OUT_COMLASTLGNIP :涓婃鐧诲綍IP
-- OUT_COMOPENDATE :娉ㄥ唽鏃ユ湡
-- OUT_OPENTYP :娉ㄥ唽鏂瑰紡

-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈燂細2007.8.24

-- 鏈€鍚庝慨鏀逛汉锛欵CC.kongda
-- 鏈€鍚庝慨鏀规棩鏈燂細2008.7.11

-- 鏈€鍚庝慨鏀逛汉锛欵CC.gongjx
-- 鏈€鍚庝慨鏀规棩鏈燂細20110304

-- 鏈€鍚庝慨鏀逛汉锛歝henzh.sdc
-- 鏈€鍚庝慨鏀规棩鏈燂細20130506


------------------------------------------------------------------------
READS SQL DATA 
BEGIN

	DECLARE V_MONTHS SMALLINT;
	DECLARE V_STTFLAG CHAR(1);

	

	--寮傚父澹版槑 

	DECLARE EXIT HANDLER FOR SQLEXCEPTION 

	BEGIN 

		SET PROC_RETCODE='95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;

	END;

	SET V_STTFLAG = '9';

	--鑾峰彇绛剧害鐢ㄦ埛淇℃伅

	SELECT PIF_CSTNO,PIF_CSTTYP,PIF_STT,PIF_MOBILE,PIF_NAMECN,PIF_SEX,PIF_CTFTYP,

		PIF_CTFNO,PIF_OPENDATE,PIF_OPENNETNO,PIF_OPENBRANCHNO,PIF_LASTCHGTIM,PIF_CHGNETNO,PIF_CHGBRANCHNO,

			PIF_LASTLGNIP,PIF_LASTLGNTIM,PIF_OPENTYP INTO OUT_CSTNO,OUT_CSTTYP,OUT_STT,OUT_MOBILE,OUT_NAMECN,OUT_SEX,

				OUT_CTFTYP,OUT_CTFNO,OUT_OPENDATE,OUT_OPENNETNO,OUT_OPENBRANCHNO,OUT_LASTCHGTIM,OUT_CHGNETNO,OUT_CHGBRANCHNO,OUT_LASTLGNIP,

					OUT_LASTLGNTIM,OUT_OPENTYP FROM PB_CSTINF WHERE PIF_ACCNO=IN_CARDNO ORDER BY PIF_LASTCHGTIM DESC FETCH FIRST 1 ROWS ONLY;

	

	IF OUT_CSTNO IS NULL OR OUT_CSTNO='' THEN 

	--鑾峰彇绛剧害娉ㄩ攢鐢ㄦ埛淇℃伅

		SELECT PIFC_CSTNO,PIFC_CSTTYP,PIFC_STT,PIFC_MOBILE,PIFC_NAMECN,PIFC_SEX,PIFC_CTFTYP,

			PIFC_CTFNO,PIFC_OPENDATE,PIFC_OPENNETNO,PIFC_OPENBRANCHNO,PIFC_OFFCHGTIM,PIFC_OFFNETNO,PIFC_OFFBRANCHNO,

				PIFC_LASTLGNIP,PIFC_LASTLGNTIM,PIFC_OPENTYP INTO OUT_CSTNO,OUT_CSTTYP,OUT_STT,OUT_MOBILE,OUT_NAMECN,OUT_SEX,

					OUT_CTFTYP,OUT_CTFNO,OUT_OPENDATE,OUT_OPENNETNO,OUT_OPENBRANCHNO,OUT_LASTCHGTIM,OUT_CHGNETNO,OUT_CHGBRANCHNO,OUT_LASTLGNIP,

						OUT_LASTLGNTIM,OUT_OPENTYP FROM PB_CSTINF_CLOSE WHERE PIFC_ACCNO=IN_CARDNO ORDER BY PIFC_OFFCHGTIM DESC FETCH FIRST 1 ROWS ONLY;
	ELSE 
		--'0'琛ㄧず绛剧害
		SET V_STTFLAG = '0';
	END IF;	
	
	--鑾峰彇鏅€氱敤鎴峰湪缃戜笂閾惰绛剧害淇℃伅
	
	SELECT PCIF_COREID,PCIF_NAME,PCIF_CTFTYP,PCIF_CTFNO,PCIF_STT,PCIF_LASTLGNTIM,PCIF_LASTLGNIP,PCIF_OPENDATE INTO OUT_COMCOREID,OUT_COMNAME,

		OUT_COMCTFTYP,OUT_COMCTFNO,OUT_COMSTT,OUT_COMLASTLGNTIM,OUT_COMLASTLGNIP,OUT_COMOPENDATE

			FROM PB_COMMCSTINF WHERE PCIF_ACCNO=IN_CARDNO ORDER BY PCIF_LASTLGNTIM DESC FETCH FIRST 1 ROWS ONLY;



	--鎵句笉鍒扮绾︾敤鎴蜂俊鎭?
	IF OUT_CSTNO IS NULL OR OUT_CSTNO='' THEN 

		IF OUT_COMCOREID IS NULL OR OUT_COMCOREID='' THEN 

			SET OUT_CSTNO='';
			SET OUT_COMCOREID='';
			SET PROC_RETCODE='31001';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0841';
			SET OUT_ANSINFO = '涓婇€佸崱鍙蜂笉瀛樺湪缃戦摱绛剧害淇℃伅';
			RETURN;	
		END IF;
		
	ELSE 
		--'1'琛ㄧず娉ㄩ攢
		IF V_STTFLAG='9' THEN 
			SET V_STTFLAG = '1';
		END IF;
	END IF;


	--鑾峰彇绛剧害鐢ㄦ埛鐨勮瘉涔︿俊鎭?
	IF OUT_CSTTYP='1' THEN	

		SELECT POC_CERST,POC_CERTIME,POC_VALIDTIME INTO OUT_CERST,OUT_CERTIME,OUT_VALIDTIME 

			FROM IM_PERSONCSTOPRCRT WHERE POC_CSTNO=OUT_CSTNO;		

	END IF;	


	SET PROC_RETCODE='00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	SET OUT_STTFLAG = V_STTFLAG;

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_CARDASSO_QUERY
(
	IN  IN_CARDNO    VARCHAR(30),
	IN  IN_QUERYTYPE CHAR(1),
	IN  IN_SHOWNUM SMALLINT,
	IN  IN_BEGINPOS SMALLINT,
	OUT PROC_RETCODE CHAR(5),
	OUT OUT_TOTALNUM SMALLINT
)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 缃戦摱鍏宠仈鎯呭喌鏌ヨ

-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氱绾︿富鍗″彿
-- IN_QUERYTYPE: 鏌ヨ绫诲瀷,0-涓嬫寕鍗℃煡涓诲崱 1-涓诲崱鏌ヤ笅鎸傚崱
-- IN_SHOWNUM: 鐢ㄤ簬缈婚〉鐨勬瘡椤佃褰曟暟
-- IN_BEGINPOS: 鐢ㄤ簬缈婚〉鐨勮捣濮嬭褰?
-- 杈撳嚭鍙傛暟锛?-- PROC_RETCODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?95000涓哄紓甯?31002涓轰紶鍏ュ弬鏁板嚭閿?-- OUT_TOTALNUM: 鐢ㄤ簬缈婚〉鐨勬€昏褰曟暟

-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈燂細2007.8.24
------------------------------------------------------------------------
READS SQL DATA 
RESULT SETS 1 
BEGIN
	DECLARE V_START SMALLINT;
	DECLARE V_END SMALLINT;
	DECLARE V_CSTNO CHAR(10);
	DECLARE V_TMP VARCHAR(40);
	
	DECLARE V_SQL VARCHAR(1000);
	
	DECLARE	CUR_LIST CURSOR WITH	RETURN FOR SQLSTATMENT;
	--寮傚父澹版槑 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN 
		SET PROC_RETCODE='95000';
	END;

	IF IN_CARDNO IS NULL OR IN_QUERYTYPE IS NULL THEN
		SET PROC_RETCODE = '96000';
		RETURN;
	END IF;
	
	SET V_TMP = UPPER(IN_CARDNO) || '|' || UPPER(IN_QUERYTYPE);

	IF POSSTR(V_TMP,'OR') > 0 OR POSSTR(V_TMP,'--') > 0 OR POSSTR(V_TMP,'AND') > 0 THEN
		SET PROC_RETCODE = '96000';
		RETURN;
	END IF;
	SET V_START=IN_BEGINPOS;
	SET V_END=IN_BEGINPOS+IN_SHOWNUM-1;
	
	--鏍规嵁鏌ヨ鍔熻兘绫诲瀷鏌ヨ婊¤冻鏉′欢鐨勮褰曟暟
	IF IN_QUERYTYPE='0' THEN 
		--涓嬫寕鍗℃煡涓诲崱
		--缁熻涓诲崱璁板綍鏁?		SELECT COUNT(DISTINCT PAI_CSTNO) INTO OUT_TOTALNUM FROM PB_ACCINF WHERE PAI_CARDNO=IN_CARDNO AND PAI_MSTFLAG='0';
		--娓告爣SQL 涓€寮犲崱鏈€澶氳涓や釜浜轰笅鎸?鏃犻』鍒嗛〉
		SET V_SQL='SELECT PAI_CARDNO,PAI_CARDTYP,PAI_HLDNAME,PAI_RELATETIM FROM (SELECT DISTINCT PAI_CSTNO  FROM PB_ACCINF WHERE PAI_CARDNO='''||IN_CARDNO||
			''') AS A(CSTNO),PB_ACCINF WHERE A.CSTNO=PAI_CSTNO AND PAI_CARDNO<>'''||IN_CARDNO||''' AND PAI_MSTFLAG='''||'1'||'''';
	ELSEIF IN_QUERYTYPE='1' THEN 
		--涓诲崱鏌ヤ笅鎸傚崱
		--鑾峰彇涓诲崱鐨勫鎴峰彿
		SELECT PIF_CSTNO INTO V_CSTNO FROM PB_CSTINF WHERE PIF_ACCNO=IN_CARDNO;
		--缁熻涓嬫寕鍗¤褰曟暟
		SELECT COUNT(1) INTO OUT_TOTALNUM FROM PB_ACCINF WHERE PAI_CSTNO=V_CSTNO AND PAI_MSTFLAG='0';
		--娓告爣SQL
		SET V_SQL='SELECT CARDNO,CARDTYP,HLDNAME,RELATETIM FROM TABLE(SELECT PAI_CARDNO,PAI_CARDTYP,PAI_HLDNAME,PAI_RELATETIM,ROWNUMBER() OVER(ORDER BY PAI_RELATETIM DESC) AS ROWID FROM PB_ACCINF WHERE PAI_CSTNO='''||V_CSTNO||''' AND '||
			'PAI_MSTFLAG='''||'0'||''')AS B(CARDNO,CARDTYP,HLDNAME,RELATETIM,ROWID) WHERE ROWID>='||CHAR(V_START)||' AND ROWID<='||CHAR(V_END);
	ELSE 
	    SET PROC_RETCODE='31002';
	    RETURN;	 
	END IF;
	
	IF OUT_TOTALNUM=0 THEN 
		--娌℃湁婊¤冻鏉′欢鐨勮褰曟椂,杩斿洖绌烘父鏍?		SET V_SQL='SELECT PAI_CARDNO,PAI_CARDTYP,PAI_HLDNAME,PAI_RELATETIM FROM PB_ACCINF WHERE 1=2';
	END IF;
	
	PREPARE SQLSTATMENT FROM V_SQL;			
	
	OPEN CUR_LIST;

	SET PROC_RETCODE='00000';
END

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PERSONCERTERRMAN_DEL (
	IN IN_CSTNO VARCHAR(10),
	OUT PROC_RET_CODE CHARACTER(5)
)

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼锛堜釜浜猴級
-- 鍒犻櫎
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO: 涓汉瀹㈡埛鍙?

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歠anjf
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.06.10

------------------------------------------------------------------------
BEGIN


	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
		--鍒犻櫎璁板綍
		DELETE FROM IM_PERSONCERTERRMAN
		WHERE PEM_CSTNO = IN_CSTNO; 
		    
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PERSONCERTERRMAN_QUERY (
	IN IN_CSTNO VARCHAR(10),
	OUT PROC_RET_CODE CHARACTER(5)
)
    READS SQL DATA 
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼锛堜釜浜猴級
-- 浼犲叆涓汉瀹㈡埛鍙凤紝鏌ヨceterrcor琛?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO: 涓汉瀹㈡埛鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_Q锛氱粨鏋滈泦

-- 
-- 鏈€鍚庝慨鏀逛汉锛歠anjf
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.06.10
------------------------------------------------------------------------
BEGIN
    
	DECLARE CUR_Q CURSOR  WITH RETURN TO CALLER FOR
		SELECT PEM_CSTNO,PEM_ERRTIM,PEM_OPTTYP,PEM_ERRMSG,PEM_DN
		FROM IM_PERSONCERTERRMAN
		WHERE PEM_CSTNO = IN_CSTNO;
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	-- 鎵撳紑娓告爣
	OPEN CUR_Q;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PERSONCERTERRMAN_UPDATE (
	IN IN_CSTNO VARCHAR(10),
	IN IN_ERRTIM VARCHAR(14),
	IN IN_OPTTYP CHARACTER(1),
	IN IN_ERRMSG VARCHAR(400),	
	IN IN_DN VARCHAR(255),
	IN IN_FLG VARCHAR(1),
	OUT PROC_RET_CODE CHARACTER(5)
)

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼锛堜釜浜猴級
-- 娣诲姞銆佹洿鏂?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO: 涓汉瀹㈡埛鍙?-- IN_DISTRICTNO: 鍖哄彿
-- IN_ERRTIM: 鏃堕棿
-- IN_OPTTYP: 绫诲瀷
-- IN_ERRMSG: 閿欒淇℃伅
-- IN_DN: DN
-- IN_FLG: (0涓烘坊鍔狅紝1涓烘洿鏂?

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

-- 鏈€鍚庝慨鏀逛汉锛歠anjf
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.06.10

------------------------------------------------------------------------
BEGIN


	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF IN_FLG = '0' THEN
		--鍒犻櫎璁板綍
		DELETE FROM IM_PERSONCERTERRMAN
		WHERE PEM_CSTNO = IN_CSTNO; 
		--娣诲姞璁板綍
		INSERT INTO IM_PERSONCERTERRMAN 
		(
			PEM_CSTNO,
			PEM_ERRTIM,
			PEM_OPTTYP,
			PEM_ERRMSG,
			PEM_DN
		)
		VALUES
		(
			IN_CSTNO,
			IN_ERRTIM,
			IN_OPTTYP,
			IN_ERRMSG,	
			IN_DN
		);

	ELSEIF IN_FLG = '1' THEN

		UPDATE IM_PERSONCERTERRMAN 
		SET PEM_ERRTIM = IN_ERRTIM,PEM_OPTTYP = IN_OPTTYP,PEM_ERRMSG = IN_ERRMSG,PEM_DN = IN_DN
		WHERE PEM_CSTNO = IN_CSTNO;

	ELSE
		SET PROC_RET_CODE = '10001';
		RETURN;
	END IF;
		    
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PERSONCSTOPRCRT_DEL (
	IN IN_CUSTOMERNO VARCHAR(10),
	OUT PROC_RET_CODE CHARACTER(5)
)

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼锛堜釜浜猴級
-- 鍒犻櫎
-- 杈撳叆鍙傛暟锛?-- IN_CUSTOMERNO: 涓汉瀹㈡埛鍙?

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歠anjf
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.06.10

------------------------------------------------------------------------
BEGIN


	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
		--鍒犻櫎璁板綍
		DELETE FROM IM_PERSONCSTOPRCRT
		WHERE POC_CSTNO = IN_CUSTOMERNO;
		    
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PERSONCSTOPRCRT_QUERY2CODE (
	IN IN_CUSTOMERNO VARCHAR(10),	
	IN IN_CONFERNO VARCHAR(16),
	OUT PROC_RET_CODE CHARACTER(5)
)
    READS SQL DATA 
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼锛堜釜浜猴級
-- 浼犲叆涓汉瀹㈡埛鍙峰拰鍗忚鍙锋煡璇M_PERSONCSTOPRCRT琛ㄤ腑鐨勫弬鑰冨彿鍜屾巿鏉冪爜
-- 杈撳叆鍙傛暟锛?-- IN_CUSTOMERNO: 涓汉瀹㈡埛鍙?-- IN_CONFERNO: 涓汉鍗忚鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_Q锛氱粨鏋滈泦

-- 鏈€鍚庝慨鏀逛汉锛歺iaoyan
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.10.10

------------------------------------------------------------------------
BEGIN
    
	DECLARE CUR_Q CURSOR  WITH RETURN TO CALLER FOR
		SELECT POC_REFNO,POC_AUTHNO
		FROM IM_PERSONCSTOPRCRT
		WHERE POC_CSTNO = IN_CUSTOMERNO
		AND POC_CONFERNO = IN_CONFERNO;
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	-- 鎵撳紑娓告爣
	OPEN CUR_Q;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PERSONCSTOPRCRT_QUERY (
	IN IN_CUSTOMERNO VARCHAR(10),	
	OUT PROC_RET_CODE CHARACTER(5)
)
    READS SQL DATA 
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼锛堜釜浜猴級
-- 浼犲叆涓汉瀹㈡埛鍙锋煡璇M_PERSONCSTOPRCRT琛?-- 杈撳叆鍙傛暟锛?-- IN_CUSTOMERNO: 涓汉瀹㈡埛鍙?

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_Q锛氱粨鏋滈泦

-- 鏈€鍚庝慨鏀逛汉锛歠anjf
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.06.10

------------------------------------------------------------------------
BEGIN
    
	DECLARE CUR_Q CURSOR  WITH RETURN TO CALLER FOR
		SELECT POC_CSTNO,POC_DISTRICTNO,POC_CERST,POC_REFNO,POC_AUTHNO,POC_VALIDTIME,
		POC_CERTIME,POC_PRINO,POC_RECST,POC_PRTIM,POC_NPASS,
		POC_ERRNO,POC_CATYPE,POC_USERTYPE,POC_CONFERNO,POC_CONFCOUNT
		FROM IM_PERSONCSTOPRCRT
		WHERE POC_CSTNO = IN_CUSTOMERNO;
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	-- 鎵撳紑娓告爣
	OPEN CUR_Q;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE IM_PERSONCSTOPRCRT_UPDATE (
	IN IN_CUSTOMERNO VARCHAR(10),
	IN IN_DISTRICTNO VARCHAR(3),
	IN IN_CERTSTATUS CHARACTER(1),
	IN IN_REFERENCENO VARCHAR(30),
	IN IN_AUTHNO VARCHAR(30),	
	IN IN_VALLDTIME VARCHAR(14),
	IN IN_CERTTIME CHARACTER(2),
	IN IN_IFPRINTFLAG CHARACTER(1),
	IN IN_IFREPRINTFLAG VARCHAR(2),	
	IN IN_PRINTTIMES SMALLINT,
	IN IN_NPASS CHARACTER(50),
	IN IN_ERRNO CHARACTER(6),
	IN IN_CERTTYP CHARACTER(1),
	IN IN_USERTYPE CHARACTER(1),	
	IN IN_CONFERNO VARCHAR(16),
	IN IN_CONFCOUNT SMALLINT,
	IN IN_FLG VARCHAR(1),	
	OUT PROC_RET_CODE CHARACTER(5)
)

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼锛堜釜浜猴級
-- 娣诲姞銆佹洿鏂?-- 杈撳叆鍙傛暟锛?-- IN_CUSTOMERNO: 涓汉瀹㈡埛鍙?-- IN_DISTRICTNO: 鍖哄彿
-- IN_CERTSTATUS: 璇佷功鐘舵€?-- IN_REFERENCENO: 鍙傝€冨彿
-- IN_AUTHNO: 鎺堟潈鐮?-- IN_VALLDTIME: 璇佷功鐢熸晥鏈?-- IN_CERTTIME: 璇佷功鏈夋晥鏈?-- IN_IFPRINTFLAG: 鏄惁鎵撳嵃鏍囧織
-- IN_IFREPRINTFLAG: 璇佷功鏄惁鐢宠閲嶆墦
-- IN_PRINTTIMES: 鎵撳嵃娆℃暟
-- IN_PASS: 鏈€氳繃瀹℃牳鍘熷洜
-- IN_ERRNO: 閿欒浠ｇ爜
-- IN_CERTTYP: 璇佷功绫诲瀷鏍囪
-- IN_USERTYPE: 鐢ㄦ埛绫诲瀷鏍囪
-- IN_CONFERNO: 鍗忚鍙?-- IN_CONFCOUNT: 鍗忚鍙蜂娇鐢ㄦ鏁?-- IN_FLG: (0涓烘坊鍔狅紝1涓烘洿鏂?

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

-- 鏈€鍚庝慨鏀逛汉锛歠anjf
-- 鏈€鍚庝慨鏀规棩鏈燂細2005.06.10

------------------------------------------------------------------------
BEGIN
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	IF IN_FLG = '0' THEN
		--娣诲姞璁板綍
		INSERT INTO IM_PERSONCSTOPRCRT 
		(
			POC_CSTNO,
			POC_DISTRICTNO,
			POC_CERST,
			POC_REFNO,
			POC_AUTHNO,	
			POC_VALIDTIME,
			POC_CERTIME,
			POC_PRINO,
			POC_RECST,	
			POC_PRTIM,
			POC_NPASS,
			POC_ERRNO,
			POC_CATYPE,
			POC_USERTYPE,
			POC_CONFERNO,
			POC_CONFCOUNT  
		)
		VALUES
		(
			IN_CUSTOMERNO,
			IN_DISTRICTNO,
			IN_CERTSTATUS,
			IN_REFERENCENO,
			IN_AUTHNO,	
			IN_VALLDTIME,
			IN_CERTTIME,
			IN_IFPRINTFLAG,
			IN_IFREPRINTFLAG,	
			IN_PRINTTIMES,
			IN_NPASS,
			IN_ERRNO,
			IN_CERTTYP,
			IN_USERTYPE,
			IN_CONFERNO,
			IN_CONFCOUNT		
		);

	ELSEIF IN_FLG = '1' THEN

		UPDATE IM_PERSONCSTOPRCRT 
		SET POC_DISTRICTNO = IN_DISTRICTNO,POC_CERST = IN_CERTSTATUS,POC_REFNO = IN_REFERENCENO,POC_AUTHNO = IN_AUTHNO,POC_VALIDTIME = IN_VALLDTIME,
		POC_CERTIME = IN_CERTTIME,POC_PRINO = IN_IFPRINTFLAG,POC_RECST = IN_IFREPRINTFLAG,POC_PRTIM = IN_PRINTTIMES,
		POC_NPASS = IN_NPASS,POC_ERRNO = IN_ERRNO,POC_CATYPE = IN_CERTTYP,POC_USERTYPE = IN_USERTYPE,POC_CONFERNO = IN_CONFERNO,POC_CONFCOUNT = IN_CONFCOUNT
		WHERE POC_CSTNO = IN_CUSTOMERNO;

	ELSE
		SET PROC_RET_CODE = '10001';
		RETURN;
	END IF;
		    
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	
END

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_BAT_TRANFOLW_INSERT_INFO
(
    IN_TRNFLW          VARCHAR(20) ,   -- 浜ゆ槗娴佹按鍙?    IN_BATNO 					 VARCHAR(20) ,   -- 鎵规鍙?    IN_TRANTYP 				 CHAR(1)		 ,   -- 浜ゆ槗绫诲瀷0锛氬疄鏃?1锛氶潪瀹炴椂
    IN_CSTNO  				 VARCHAR(30) ,   -- 瀹㈡埛鍙? 		IN_TRANCODE  			 VARCHAR(6),     -- 浜ゆ槗浠ｇ爜
    IN_CHANNEL 				 CHAR(1),  			 -- 娓犻亾鏍囧織
   	IN_ACCTIM 				 VARCHAR(8),     -- 鏍稿績浼氳鏃ユ湡
    IN_PAYBRA 				 VARCHAR(6),     -- 浠樻鏂规満鏋勪唬鐮?    IN_PAYCARDNO			 VARCHAR(30),    -- 浠樻鏂瑰崱鍙?    IN_PAYNAME 				 VARCHAR(60),    -- 浠樻鏂规埛鍚?    IN_PAYCRYTYP 			 VARCHAR(3),     -- 浠樻鏂瑰竵绉嶏紙鍗栧嚭甯佺锛?    IN_PAYAMT          VARCHAR(20),    -- 浠樻鏂归噾棰濓紙鍗栧嚭閲戦锛?    IN_CASHFLAG  			 CHAR(1),        -- 閽炴眹鏍囧織
    IN_RCVBRA  				 VARCHAR(6),     -- 鏀舵鏂规満鏋勪唬鐮?    IN_RCVCARDNO  		 VARCHAR(30),    -- 鏀舵鏂瑰崱鍙?    IN_RCVNAME  			 VARCHAR(60),    -- 鏀舵鏂规埛鍚?    IN_RCVCRYTYP 			 VARCHAR(3),     -- 鏀舵鏂瑰竵绉嶏紙涔板叆甯佺锛?    IN_RCVAMT   			 VARCHAR(20),    -- 鏀舵鏂归噾棰濓紙涔板叆閲戦锛?    IN_TOOPENBANK   	 VARCHAR(60),    -- 鏀舵浜哄紑鎴烽摱琛?    IN_OPPCITY   			 VARCHAR(60),    -- 鏀舵浜哄紑鎴峰煄甯?    IN_OPPAREA   			 VARCHAR(60),    -- 鏀舵浜哄紑鎴峰湴鍖?    IN_OPPNETSPOT   	 VARCHAR(60),    -- 鏀舵浜哄紑鎴风綉鐐?    IN_TRANFEE   			 VARCHAR(20),    -- 杞处鎵嬬画璐?     
    IN_LOGTYP          CHAR(1),        -- 鐧婚檰鏂瑰紡
    IN_REMARK       	 VARCHAR(100),	 -- 闄勮█
    IN_STT             CHAR(2),        -- 鍗曠瑪娴佹按鐘舵€?    IN_BSTT            CHAR(2),        -- 鎵规鐘舵€?    IN_REASONCODE      VARCHAR(30),    -- 澶辫触鍘熷洜鐮?    IN_REASON          VARCHAR(200),   -- 澶辫触鍘熷洜
    IN IN_TOTALNUM 		 INTEGER,
    IN IN_SUCCNUM 		 INTEGER,
    IN IN_FAILNUM 		 INTEGER,
    IN IN_TOTALSUM 		 VARCHAR(20),
    OUT PROC_RET_CODE  VARCHAR(5),
    OUT OUT_BATNO      VARCHAR(20)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏇存柊鎵归噺娴佹按鍒版祦姘磋〃


-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_BATNO:鎵规鍙?

-- author:maonf

------------------------------------------------------------------------
BEGIN
  -- 鍙橀噺澹版槑
  DECLARE V_DATE				VARCHAR(14);			-- 褰撳墠鏃堕棿
  DECLARE V_BATSEQ			VARCHAR(6);			-- 鎵规鍙峰悗6浣嶇殑搴忓垪鏁? 	DECLARE I_BATSEQ			BIGINT;			  -- 鎵规鍙? 	DECLARE BATNO					VARCHAR(20);				-- 鎵规鍙? 
	
	  -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	-- 鑾峰彇褰撳墠鏃ユ湡
	SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmddhhmiss');
	--鑻ユ壒娆″彿涓嶅瓨鍦紝鍒欓噸鏂扮敓鎴?	IF IN_BATNO IS NULL OR IN_BATNO='' THEN	
			SELECT NEXTVAL FOR PB_BAT_SYSNO
			INTO I_BATSEQ
			FROM SYSIBM.SYSDUMMY1;
			SET V_BATSEQ = CHAR( I_BATSEQ );
			SET BATNO=SUBSTR(V_DATE,1,8) || 'WB' || V_BATSEQ;
			--鑻ユ壒娆″彿涓嶅瓨鍦紝鍒欐墽琛屾彃鍏ユ搷浣?		
	ELSE
			SET BATNO=IN_BATNO;
	END	IF;	
	
		IF NOT EXISTS (
  			SELECT 1 FROM PB_BATTRAN WHERE PBH_BATNO=BATNO AND PBH_CARDNO=IN_PAYCARDNO
  		)THEN
	  	INSERT INTO PB_BATTRAN(
				PBH_BATNO,PBH_CARDNO,PBH_TRANTYP,PBH_CHANNEL,PBH_RECVTRANTIM , 
				PBH_SENDTRANTIM,PBH_TOTALNUM,PBH_SUCCNUM,PBH_FAILNUM,PBH_TOTALSUM,PBH_STT         
			)VALUES(
  			BATNO,IN_PAYCARDNO, 
  			CASE WHEN IN_TRANTYP='0' THEN '00'
    		ELSE '01' 
    		END,
    		IN_CHANNEL,V_DATE,' ', IN_TOTALNUM ,
    		CASE WHEN IN_SUCCNUM IS NULL THEN 0
				ELSE IN_SUCCNUM END, 
				CASE WHEN IN_FAILNUM IS NULL THEN 0
			ELSE IN_FAILNUM END,
  			CASE WHEN IN_PAYAMT='' THEN 0
				ELSE DECIMAL(IN_TOTALSUM,15,2)
				END,IN_BSTT);
			END IF;	
   
 INSERT INTO PB_BATLIST(  
    PBL_TRNFLW,  
    PBL_BATNO ,   
    PBL_TRANTYP,   
    PBL_CSTNO,  				
 		PBL_TRANCODE,        
    PBL_CHANNEL,  
    PBL_TRANTIM,           
   	PBL_TRADETIM,          
   	PBL_ACCTIM,           
    PBL_PAYBRA,           
    PBL_PAYCARDNO,         
    PBL_PAYNAME ,          
    PBL_PAYCRYTYP,        
    PBL_PAYAMT,            
    PBL_CASHFLAG,        
    PBL_RCVBRA,          
    PBL_RCVCARDNO,       
    PBL_RCVNAME,         
    PBL_RCVCRYTYP,        
    PBL_RCVAMT,  
    PBL_RCVOPENBANK,
		PBL_RCVOPENCITY,
		PBL_RCVOPENAREA,
		PBL_RCVOPENBRANCH,
    PBL_TRANFEE,     
    PBL_LOGTYP, 
    PBL_PAYSUM,	 
    PBL_PAYNUM,
    PBL_REMARK,		 
    PBL_STT,        
    PBL_REASONCODE,    
    PBL_REASON,
    PBL_REM)
    VALUES
        (IN_TRNFLW, BATNO, 
        CASE WHEN IN_TRANTYP='0' THEN '00'
        	ELSE '01' 
        END,
        IN_CSTNO,IN_TRANCODE,IN_CHANNEL,V_DATE,' ',
        CASE
					WHEN IN_ACCTIM='' OR IN_ACCTIM IS NULL  THEN  ' '
				ELSE IN_ACCTIM
				END
        ,IN_PAYBRA, IN_PAYCARDNO,IN_PAYNAME, IN_PAYCRYTYP, 
        CASE
					WHEN IN_PAYAMT='' THEN 0
				ELSE DECIMAL(IN_PAYAMT,15,2)
				END,
				IN_CASHFLAG,IN_RCVBRA,IN_RCVCARDNO, IN_RCVNAME, IN_RCVCRYTYP, 
        CASE
					WHEN IN_RCVAMT='' THEN 0
				ELSE DECIMAL(IN_RCVAMT,15,2)
				END,
				 CASE
					WHEN IN_TOOPENBANK='' THEN ' '
				ELSE IN_TOOPENBANK
				END ,  	
				CASE
					WHEN IN_OPPCITY='' THEN ' '
				ELSE IN_OPPCITY
				END , 			
				CASE
					WHEN IN_OPPAREA='' THEN ' '
				ELSE IN_OPPAREA
				END , 			
				CASE
					WHEN IN_OPPNETSPOT='' THEN ' '
				ELSE IN_OPPNETSPOT
				END , 	
				CASE
			  WHEN IN_TRANFEE='' OR IN_TRANFEE IS NULL THEN 0
				ELSE DECIMAL(IN_TRANFEE,15,2)
				END,
				IN_LOGTYP,0,0,CASE
			  WHEN IN_REMARK='' THEN ' '
				ELSE IN_REMARK
				END,IN_STT,CASE
			  WHEN IN_REASONCODE='' THEN ' '
				ELSE IN_REASONCODE
				END,CASE
			  WHEN IN_REASON='' OR IN_REASON IS NULL THEN ' '
				ELSE IN_REASON
				END,
				' '
	);
	COMMIT;
  SET PROC_RET_CODE = '00000';     
	SET OUT_BATNO = BATNO;   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECK_SAME_BAT_TRANSFER
(
   
    IN_PAYCARDNO			 VARCHAR(30),    -- 浠樻鏂瑰崱鍙?    IN IN_TOTALNUM 		 INTEGER,
    IN IN_TOTALSUM 		 VARCHAR(20),
    OUT PROC_RET_CODE  VARCHAR(5),
    OUT OUT_SAMEBAT      CHAR(1)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 妫€鏌ユ槸鍚︽彁浜ょ浉鍚屾€婚噾棰濄€佺浉鍚屾€荤瑪鏁扮殑鎵归噺浠樻


-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_SAMEBAT: 

-- author:maonf

------------------------------------------------------------------------
BEGIN
  -- 鍙橀噺澹版槑
  DECLARE V_DATE				VARCHAR(14);			-- 褰撳墠鏃堕棿
 
	
	  -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		
	END;
	-- 鑾峰彇褰撳墠鏃ユ湡
	SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmdd');
	
IF NOT EXISTS (
  			SELECT 1 FROM PB_BATTRAN WHERE  PBH_CARDNO=IN_PAYCARDNO AND PBH_TOTALNUM = IN_TOTALNUM AND PBH_TOTALSUM=DECIMAL(IN_TOTALSUM,15,2) AND SUBSTR(PBH_RECVTRANTIM,1,8)= V_DATE AND PBH_STT <> '00'
  )THEN
			SET OUT_SAMEBAT='0'	;
	ELSE
			SET OUT_SAMEBAT='1'	;		
	END IF;	
   
  SET PROC_RET_CODE = '00000';     
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QUERY_BAT_TRANSFER_LIST
(
   
    IN_BATNO			 VARCHAR(20),    -- 鎵规鍙?    IN_CARDNO			 VARCHAR(30),    -- 鍗″彿
    IN_CSTNO  		 VARCHAR(30),   -- 瀹㈡埛鍙?    IN  IN_BEGINPOS 	INTEGER, 
    IN  IN_SHOWNUM 		INTEGER, 
    OUT PROC_RET_CODE  VARCHAR(5),
    OUT OUT_TOTALNUM INTEGER
)
 		READS SQL DATA 
    DYNAMIC RESULT SETS 1 
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁鎵规鍙锋煡璇㈡壒閲忚浆璐︽槑缁?-- IN_CSTNO锛氫粠SESSION涓鍙栵紝闃叉瀹㈡埛鎭舵剰淇敼鎵规鍙疯繘琛屾煡璇?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 

-- author:maonf

------------------------------------------------------------------------
BEGIN
  -- 鍙橀噺澹版槑
 		DECLARE CUR_BATTRAN_INFO CURSOR  WITH RETURN TO CALLER FOR
		SELECT 
			PBL_TRNFLW,  
	    PBL_BATNO ,   
	    PBL_TRANTYP,    				
	 		PBL_TRANCODE,         
	    PBL_TRANTIM,           
	   	PBL_TRADETIM,          
	   	PBL_ACCTIM,                     
	    PBL_PAYCARDNO,         
	    PBL_PAYNAME ,   
	    PBL_PAYCRYTYP,               
	    PBL_PAYAMT,          
	    PBL_CASHFLAG,                
	    PBL_RCVCARDNO,       
	    PBL_RCVNAME,
	    PBL_RCVOPENBANK,
		  PBL_RCVOPENCITY,
		  PBL_RCVOPENAREA,
		  PBL_RCVOPENBRANCH,                 
	    PBL_TRANFEE,     
	    PBL_REMARK,		 
	    PBL_STT,        
	    PBL_REASONCODE,    
	    PBL_REASON
     	FROM (
     	SELECT 
			PBL_TRNFLW,  
	    PBL_BATNO ,   
	    PBL_TRANTYP,    				
	 		PBL_TRANCODE,         
	    PBL_TRANTIM,           
	   	PBL_TRADETIM,          
	   	PBL_ACCTIM,                     
	    PBL_PAYCARDNO,         
	    PBL_PAYNAME ,
	    PBL_PAYCRYTYP,                  
	    PBL_PAYAMT,  
	    PBL_CASHFLAG,                      
	    PBL_RCVCARDNO,       
	    PBL_RCVNAME,
	    PBL_RCVOPENBANK,
		  PBL_RCVOPENCITY,
		  PBL_RCVOPENAREA,
		  PBL_RCVOPENBRANCH,                 
	    PBL_TRANFEE,     
	    PBL_REMARK,		 
	    PBL_STT,        
	    PBL_REASONCODE,    
	    PBL_REASON,
	    ROW_NUMBER()OVER(ORDER BY PBL_TRANTIM  ASC) ROW_ID
     	FROM PB_BATLIST WHERE PBL_BATNO = IN_BATNO AND PBL_PAYCARDNO=IN_CARDNO AND PBL_CSTNO=IN_CSTNO ORDER BY PBL_TRANTIM ASC
     	) AS TMPTABLE
     	WHERE 
     	(ROW_ID > IN_BEGINPOS AND

			ROW_ID<= IN_BEGINPOS + IN_SHOWNUM);
     	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		
	END;
	
	SELECT  COUNT(PBL_TRNFLW)
     INTO OUT_TOTALNUM
     FROM PB_BATLIST
     WHERE PBL_BATNO = IN_BATNO AND PBL_PAYCARDNO=IN_CARDNO AND PBL_CSTNO=IN_CSTNO ;
	
	OPEN CUR_BATTRAN_INFO;
  SET PROC_RET_CODE = '00000';     
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QUERY_BAT_TRANSFER_INFO
(
   
    IN 	IN_CARDNO			 VARCHAR(30),    -- 鍗″彿
    IN  IN_BEGINPOS 	INTEGER, 
    IN  IN_SHOWNUM 		INTEGER, 
    OUT PROC_RET_CODE  VARCHAR(5),
    OUT OUT_TOTALNUM INTEGER
)
 		READS SQL DATA 
    DYNAMIC RESULT SETS 1 
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏍规嵁鍗″彿鏌ヨ鎵归噺杞处淇℃伅
-- IN_CARDNO:鍗″彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- author:maonf

------------------------------------------------------------------------
BEGIN
  -- 鍙橀噺澹版槑
 		DECLARE CUR_BATTRAN_INFO CURSOR  WITH RETURN TO CALLER FOR
		SELECT 
			 PBH_BATNO ,          
       PBH_CARDNO  ,        
       PBH_TRANTYP ,        
       PBH_CHANNEL  ,       
       PBH_RECVTRANTIM ,     
       PBH_TOTALNUM   ,     
       PBH_SUCCNUM  ,       
       PBH_FAILNUM  ,       
       PBH_TOTALSUM  ,      
       PBH_STT
     	FROM (
     	SELECT 
			PBH_BATNO ,          
       PBH_CARDNO  ,        
       PBH_TRANTYP ,        
       PBH_CHANNEL  ,       
       PBH_RECVTRANTIM ,     
       PBH_TOTALNUM   ,     
       PBH_SUCCNUM  ,       
       PBH_FAILNUM  ,       
       PBH_TOTALSUM  ,      
       PBH_STT,
	    ROW_NUMBER()OVER(ORDER BY PBH_RECVTRANTIM  DESC) ROW_ID
     	FROM PB_BATTRAN WHERE PBH_CARDNO=IN_CARDNO AND PBH_STT <> '00' ORDER BY PBH_RECVTRANTIM DESC
     	) AS TMPTABLE
     	WHERE 
     	(ROW_ID > IN_BEGINPOS AND

			ROW_ID<= IN_BEGINPOS + IN_SHOWNUM);
     	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		
	END;
	
	SELECT  COUNT(PBH_BATNO)
     INTO OUT_TOTALNUM
     FROM PB_BATTRAN
     WHERE PBH_CARDNO=IN_CARDNO AND PBH_STT <> '00';
	OPEN CUR_BATTRAN_INFO;
  SET PROC_RET_CODE = '00000';     
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_DELETE_BAT_TRANSFER_FAIL
(
   
    IN_BATNO			 VARCHAR(20),    -- 鎵规鍙?    IN_CARDNO			 VARCHAR(30),    -- 浠樻鏂瑰崱鍙?    IN_BATSTT  		 VARCHAR(30),    -- 鎵规鐘舵€?    OUT PROC_RET_CODE  VARCHAR(5)
)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 褰曞叆鏁版嵁鍙戦€侀敊璇悗锛屽皢宸插綍鍏ョ殑鏁版嵁娓呴櫎
-- 

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

-- author:maonf

------------------------------------------------------------------------
BEGIN
  -- 鍙橀噺澹版槑
     	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	

   DELETE FROM PB_BATLIST
     WHERE PBL_BATNO = IN_BATNO AND PBL_PAYCARDNO=IN_CARDNO ;
   DELETE FROM PB_BATTRAN
     WHERE  PBH_CARDNO=IN_CARDNO AND PBH_BATNO = IN_BATNO  ; 
	COMMIT;
  SET PROC_RET_CODE = '00000';     
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_BAT_TRANFOLW_UPDATE_INFO
(
   
    IN_BATNO			 VARCHAR(20),    -- 鎵规鍙?    IN_CARDNO			 VARCHAR(30),    -- 浠樻鏂瑰崱鍙?    IN_BATSTT  		 VARCHAR(30),    -- 鎵规鐘舵€?    OUT PROC_RET_CODE  VARCHAR(5)
)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 淇敼鎵规娴佹按鐘舵€?-- 

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?

-- author:maonf

------------------------------------------------------------------------
BEGIN
  -- 鍙橀噺澹版槑
     	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
  UPDATE PB_BATTRAN SET PBH_STT=IN_BATSTT
     WHERE  PBH_CARDNO=IN_CARDNO AND PBH_BATNO = IN_BATNO  ; 
	COMMIT;
  SET PROC_RET_CODE = '00000';     
END

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_ADD_CSTRELACC_INFO
 (
  IN IN_CSTNO VARCHAR(10), 
  IN IN_ACCNO VARCHAR(30), 
  IN IN_ALIAS VARCHAR(60), 
  IN IN_NAME VARCHAR(60), 
  IN IN_CITY VARCHAR(30), 
  IN IN_MOBILE VARCHAR(20), 
  IN IN_TYPE CHARACTER(1), 
  IN IN_OPENBANK VARCHAR(60), 
  IN IN_OPENAREA VARCHAR(60), 
  IN IN_OPENNETSPOT VARCHAR(60), 
  IN IN_GROUPID VARCHAR(8),
  IN IN_PAYCARDNO VARCHAR(30),
  IN IN_PARTY  VARCHAR(60),
  IN IN_PARTYID CHAR(12),
  IN IN_REMARK  VARCHAR(100),
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏀舵浜虹櫥璁扮翱绠＄悊-娣诲姞鏀舵浜?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?瀹㈡埛鍙?-- IN_ACCNO 锛?鏀舵浜鸿处鍙?-- IN_ALIAS 锛?璐︽埛鍒悕
-- IN_NAME  锛?鏀舵浜烘埛鍚?-- IN_CITY  锛?鏀舵浜哄紑鎴峰煄甯?-- IN_MOBILE锛?鏀舵浜烘墜鏈哄彿

-- IN_TYPE锛?        鏀舵浜虹被鍨?-- IN_OPENBANK锛?鏀舵浜哄紑鎴疯
-- IN_OPENAREA锛?鏀舵浜哄湴鍖?-- IN_OPENCITY锛? 	鏀舵浜哄煄甯?-- IN_OPENNETSPOT锛?鏀舵浜哄紑鎴风綉鐐?
-- IN_GROUPID锛?        鏀舵浜哄垎缁処D
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歭iming
-- 鏈€鍚庝慨鏀规棩鏈?锛?2010.12.21
------------------------------------------------------------------------
BEGIN

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	
	
	IF (NOT EXISTS(SELECT 1 FROM PB_CSTRELACC WHERE PRA_CSTNO = IN_CSTNO AND PRA_ACCNO = IN_ACCNO)) THEN
		
		INSERT INTO PB_CSTRELACC
		(
			PRA_CSTNO,
			PRA_ACCNO,
			PRA_ALIAS,
			PRA_NAME,
			PRA_FLAG,
			PRA_CITY,
			PRA_MOBILE,
            PRA_OPENBANK,
            PRA_AREA,
            PRA_NETSPOT,
			PRA_GROUPID,
			PRA_PAYCARDNO,
		    PRA_PARTY,
		    PRA_PARTYID,
		    PRA_REMARK,
		    PRA_KEYTRAN
		)
		VALUES
		(
			IN_CSTNO ,
			IN_ACCNO ,
			IN_ALIAS ,
			IN_NAME  ,
			IN_TYPE  ,
			IN_CITY  ,
			IN_MOBILE,
            IN_OPENBANK,
            IN_OPENAREA,
            IN_OPENNETSPOT,
			IN_GROUPID,
			IN_PAYCARDNO,
			IN_PARTY,
			IN_PARTYID,
			IN_REMARK,
			'0'
		);
	ELSE 
		UPDATE PB_CSTRELACC 
			SET
				PRA_NAME     = CASE WHEN IN_TYPE = '2' THEN PRA_NAME ELSE IN_NAME END,
				PRA_MOBILE   = IN_MOBILE,
				PRA_FLAG     = CASE WHEN IN_TYPE = '6' AND PRA_FLAG <> '6' THEN PRA_FLAG ELSE IN_TYPE END,
				PRA_OPENBANK = CASE WHEN IN_TYPE = '3' OR IN_TYPE = '7' OR PRA_FLAG = '6' THEN IN_OPENBANK ELSE PRA_OPENBANK END,
				PRA_AREA     = CASE WHEN IN_TYPE = '3' OR IN_TYPE = '7' OR PRA_FLAG = '6'  THEN IN_OPENAREA ELSE PRA_AREA END,
				PRA_CITY     = CASE WHEN IN_TYPE = '3' OR IN_TYPE = '7' OR PRA_FLAG = '6'  THEN IN_CITY ELSE PRA_CITY END,
				PRA_NETSPOT  = CASE WHEN IN_TYPE = '3' OR IN_TYPE = '7' OR PRA_FLAG = '6'  THEN IN_OPENNETSPOT ELSE PRA_NETSPOT END,
				PRA_PAYCARDNO  = CASE WHEN IN_PAYCARDNO <> '' THEN IN_PAYCARDNO ELSE PRA_PAYCARDNO END,
				PRA_PARTY    = CASE WHEN IN_TYPE = '4' THEN IN_PARTY ELSE PRA_PARTY END,
				PRA_PARTYID  = CASE WHEN IN_TYPE = '4' THEN IN_PARTYID ELSE PRA_PARTYID END,
				PRA_KEYTRAN  = CASE WHEN PRA_KEYTRAN = '0' THEN '0' ELSE '2' END,
				PRA_REMARK   = CASE WHEN IN_REMARK IS NULL THEN PRA_REMARK ELSE IN_REMARK END
			WHERE PRA_CSTNO = IN_CSTNO AND PRA_ACCNO = IN_ACCNO;
	END IF;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_DEL_CSTRELACC_INFO ( 
	IN IN_CSTNO   	VARCHAR(10),
	IN IN_ACCNO    	CLOB,
	OUT PROC_RET_CODE CHARACTER(5)
)   

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏀舵浜虹櫥璁扮翱绠＄悊-鍒犻櫎鏀舵浜?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?瀹㈡埛鍙?-- IN_ACCNO锛?鏀舵浜鸿处鍙?澶氫釜璐﹀彿涓棿浠?鍒嗗壊

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.songwb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.03.27
------------------------------------------------------------------------
BEGIN
	-- 澹版槑鍙橀噺
	DECLARE V_TEMP CLOB ;
	DECLARE V_POS  INT;
	DECLARE V_ACC  VARCHAR(30);
	-- 澹版槑寮傚父
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	SET V_TEMP = IN_ACCNO;
	SET V_POS = POSSTR(V_TEMP,'#');
	
	WHILE V_POS > 0 DO
		SET V_ACC  = SUBSTR( V_TEMP, 1, V_POS-1 );
		SET V_TEMP = SUBSTR( V_TEMP, V_POS+1 );
		SET V_POS = POSSTR(V_TEMP,'#');
		
		DELETE FROM PB_CSTRELACC WHERE PRA_CSTNO = IN_CSTNO AND PRA_ACCNO = V_ACC;
	END WHILE;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_MOD_CARDLMT_INFO ( 
	IN IN_CARDNO   	  VARCHAR(30),
	IN IN_BOTTOMAMT   VARCHAR(15),
	IN IN_TOPAMT   	  VARCHAR(15),
	IN IN_LASTCSTNO   VARCHAR(10),
	IN IN_LASTTIM     VARCHAR(14),
	OUT PROC_RET_CODE CHARACTER(5)
)   

------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 杞笎闄愰淇敼-淇敼杞笎闄愰
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛?	鍗″彿
-- IN_BOTTOMAMT锛?涓嬮檺
-- IN_TOPAMT锛?	涓婇檺
-- IN_LASTCSTNO锛?鏈€鍚庝慨鏀瑰鎴峰彿
-- IN_LASTTIM锛?	鏈€鍚庝慨鏀规椂闂?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.03.28
------------------------------------------------------------------------
BEGIN
	
	-- 澹版槑鍙橀噺
	DECLARE V_BOTTOMAMT DECIMAL(15,2);
	DECLARE V_TOPAMT DECIMAL(15,2);
	DECLARE V_BOTTOMAMT_IN DECIMAL(15,2);
	DECLARE V_TOPAMT_IN DECIMAL(15,2);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
	
	SET V_BOTTOMAMT_IN = DECIMAL(IN_BOTTOMAMT,15,2);
	SET V_TOPAMT_IN = DECIMAL(IN_TOPAMT,15,2);

	SELECT PCL_BTMAMT,PCL_TOPAMT INTO V_BOTTOMAMT,V_TOPAMT			
	FROM PB_CARDLMT 
	WHERE PCL_CARDNO = IN_CARDNO; 
	
	IF (V_BOTTOMAMT IS NULL) OR (V_TOPAMT IS NULL)THEN
		SET PROC_RET_CODE = '30211';
		RETURN;
	ELSEIF(V_BOTTOMAMT < V_BOTTOMAMT_IN) THEN
		SET PROC_RET_CODE = '30212';
		RETURN;
	ELSEIF(V_TOPAMT < V_TOPAMT_IN) THEN
		SET PROC_RET_CODE = '30213';
		RETURN;	
	ELSEIF(V_BOTTOMAMT_IN>V_TOPAMT_IN) THEN	
		SET PROC_RET_CODE = '30214';
		RETURN;	
	ELSE
		UPDATE PB_CARDLMT
		SET
			PCL_BTMAMT = V_BOTTOMAMT_IN,
			PCL_TOPAMT = V_TOPAMT_IN,
			PCL_LASTCSTNO = IN_LASTCSTNO,
			PCL_LASTTIM = IN_LASTTIM
		WHERE PCL_CARDNO = IN_CARDNO;	
	END IF; 
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';

END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_MOD_CSTRELACC_INFO
 (IN IN_CSTNO VARCHAR(10), 
  IN IN_ACCNO VARCHAR(30), 
  IN IN_ALIAS VARCHAR(60), 
  IN IN_NAME VARCHAR(60), 
  IN IN_CITY VARCHAR(30), 
  IN IN_MOBILE VARCHAR(20), 
  IN IN_OLDACCNO VARCHAR(30), 
  IN IN_TYPE CHARACTER(1), 
  IN IN_OPENBANK VARCHAR(60), 
  IN IN_OPENAREA VARCHAR(60), 
  IN IN_OPENNETSPOT VARCHAR(60),
  IN IN_GROUPID VARCHAR(8), 
  OUT PROC_RET_CODE CHARACTER(5)
 ) 

  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏀舵浜虹櫥璁扮翱绠＄悊-淇敼鏀舵浜?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?瀹㈡埛鍙?-- IN_ACCNO锛?鏀舵浜鸿处鍙?-- IN_ALIAS 锛?璐︽埛鍒悕
-- IN_NAME锛?鏀舵浜烘埛鍚?-- IN_CITY锛?鏀舵浜哄紑鎴峰煄甯?-- IN_MOBILE锛?鏀舵浜烘墜鏈哄彿

-- IN_TYPE锛?        鏀舵浜虹被鍨?-- IN_OPENBANK锛?鏀舵浜哄紑鎴疯
-- IN_OPENAREA锛?鏀舵浜哄湴鍖?-- IN_OPENCITY锛? 	鏀舵浜哄煄甯?-- IN_OPENNETSPOT锛?鏀舵浜哄紑鎴风綉鐐?-- IN_GROUPID锛?        鏀舵浜哄垎缁処D
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.wansong
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.06.18 
------------------------------------------------------------------------
BEGIN
	
	-- 澹版槑鍙橀噺
	DECLARE V_CSTNO VARCHAR(10);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
	SELECT PRA_CSTNO INTO V_CSTNO FROM PB_CSTRELACC WHERE PRA_CSTNO = IN_CSTNO AND PRA_ACCNO = IN_ACCNO;
	IF IN_ACCNO = IN_OLDACCNO THEN
		IF V_CSTNO IS NOT NULL THEN
			UPDATE PB_CSTRELACC
			SET
					PRA_CSTNO = IN_CSTNO,
					PRA_ACCNO = IN_ACCNO,
					PRA_ALIAS = IN_ALIAS,
					PRA_NAME = IN_NAME,
					PRA_FLAG = IN_TYPE,
					PRA_CITY = IN_CITY,
					PRA_MOBILE = IN_MOBILE,
                                        PRA_OPENBANK = IN_OPENBANK,
                                        PRA_AREA = IN_OPENAREA,
                                        PRA_NETSPOT = IN_OPENNETSPOT,
					PRA_GROUPID = IN_GROUPID
			WHERE PRA_CSTNO = IN_CSTNO AND PRA_ACCNO = IN_OLDACCNO;
		
		ELSE 
			SET PROC_RET_CODE = '30209';
			RETURN;
		END IF;
	ELSE
		IF V_CSTNO IS NULL OR V_CSTNO ='' THEN 
			UPDATE PB_CSTRELACC
			SET
					PRA_CSTNO = IN_CSTNO,
					PRA_ACCNO = IN_ACCNO,
					PRA_ALIAS = IN_ALIAS,
					PRA_NAME = IN_NAME,
					PRA_FLAG = IN_TYPE,
					PRA_CITY = IN_CITY,
					PRA_MOBILE = IN_MOBILE,
                                        PRA_OPENBANK = IN_OPENBANK,
                                        PRA_AREA = IN_OPENAREA,
                                        PRA_NETSPOT = IN_OPENNETSPOT,
					PRA_GROUPID = IN_GROUPID
			WHERE PRA_CSTNO = IN_CSTNO AND PRA_ACCNO = IN_OLDACCNO;
		
		ELSE 
			SET PROC_RET_CODE = '30207';
			RETURN;
		END IF;
	END IF;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_QUERY_CARDLMT_INFO(
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	CHARACTER(5),
	OUT OUT_BOTTOMAMT	DECIMAL(15,2),
	OUT OUT_TOPAMT		DECIMAL(15,2)  
)
READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 杞笎闄愰淇敼-鏌ヨ杞笎闄愰
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO 锛?鍗″彿
-- OUT_BOTTOMAMT 锛?棰濆害涓嬮檺
-- OUT_TOPAMT 锛?棰濆害涓婇檺

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhanggq
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.08
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
	SELECT
		PCL_BTMAMT,
		PCL_TOPAMT 
	INTO
		OUT_BOTTOMAMT,
		OUT_TOPAMT			
	FROM PB_CARDLMT 
	WHERE 
		PCL_CARDNO = IN_CARDNO;
			
	IF (OUT_BOTTOMAMT IS NULL) OR (OUT_TOPAMT IS NULL)THEN
		SET PROC_RET_CODE = '30211';
		RETURN;
	END IF;
	
	SET PROC_RET_CODE = '00000';
    
END

 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_QUERY_CSTRELACC_INFO
(
  IN IN_CSTNO CHARACTER(10), 
  IN IN_GROUPID CHARACTER(8), 
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 2
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏀舵浜虹櫥璁扮翱绠＄悊鏌ヨ鏀舵浜?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?瀹㈡埛鍙?-- IN_GROUPID 锛?鍒嗙粍鍙?0-甯哥敤 1-鍏ㄩ儴

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?------------------------------------------------------------------------
-- 淇敼浜猴細maonf
-- 淇敼鏃ユ湡锛?008.12.18
-- 淇敼鍘熷洜锛氱敱浜庝汉琛岃仈琛岃鍙疯〃涓殑鏁版嵁鏈夊彲鑳藉彂鐢熷彉鍔紝閫犳垚鍜屼釜浜烘敹娆句汉鍚嶅唽琛ㄨ繘琛?--鍏宠仈鐨勬椂鍊欙紝涓汉鏀舵浜哄悕鍐岃〃鐨勪竴浜涙暟鎹棤娉曟煡鍑恒€?-- 淇敼鍐呭锛氫娇鐢ㄥ乏澶栬繛鎺ワ紝浣夸釜浜烘敹娆句汉鍚嶅唽琛ㄦ棤娉曟煡鍑虹殑鏁版嵁涔熸樉绀猴紝骞跺湪椤甸潰涓婃彁绀?--瀹㈡埛杩欎簺鏁版嵁淇℃伅宸插彉鏇?------------------------------------------------------------------------
-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2008.11.5
------------------------------------------------------------------------
BEGIN
	DECLARE V_GROUPID VARCHAR(8);
	DECLARE V_GROUPNAME VARCHAR(60); 
	
    DECLARE	CUR_CSTRELACC	CURSOR WITH	RETURN FOR 
       -- 鍗″崱銆佸崱浼併€佽秴绾х綉閾跺揩閫熸眹娆?
		SELECT  PRA_ACCNO, PRA_NAME, PRA_ALIAS, PRA_CITY, PRA_MOBILE, PRA_FLAG, PRA_OPENBANK, PRA_AREA, PRA_NETSPOT,
				'','','','',V_GROUPID,V_GROUPNAME,PRA_PARTY,PRA_PARTYID
		FROM 
			    PB_CSTRELACC 
	    WHERE
	            PRA_CSTNO=IN_CSTNO AND 
			    (PRA_FLAG='0'   OR PRA_FLAG ='1' ) AND 
			    (IN_GROUPID='1' OR PRA_GROUPID=IN_GROUPID)
	   -- 浜鸿澶у皬棰?	   UNION ALL
	    SELECT  PRA_ACCNO, PRA_NAME, PRA_ALIAS, PRA_CITY, PRA_MOBILE, PRA_FLAG, PRA_OPENBANK, PRA_AREA, PRA_NETSPOT,
	            PBN_BANKTYPE,CIT_PVICODE,CIT_CITYCODE,PBN_BANKNO,V_GROUPID,V_GROUPNAME,PRA_PARTY,PRA_PARTYID
	    FROM 
			    PB_CSTRELACC 
		LEFT OUTER JOIN 
		        PB_PMSBANKNO
		ON  
		        PBN_LONGNAME = PRA_NETSPOT
		LEFT OUTER JOIN
		        PB_CITYINFO
		ON
		        PBN_CITYCODE = CIT_CITYCODE
	    WHERE
	            PRA_CSTNO=IN_CSTNO AND (PRA_FLAG='3' OR PRA_FLAG='2' OR  PRA_FLAG='4') AND
			    (IN_GROUPID='1' OR PRA_GROUPID=IN_GROUPID)
 		-- 浜鸿浜屼唬鏀粯
	   UNION ALL	    
       	SELECT  PRA_ACCNO, PRA_NAME, PRA_ALIAS, PRA_CITY, PRA_MOBILE, PRA_FLAG, PRA_OPENBANK, PRA_AREA, PRA_NETSPOT,
	            PSD_BANKCODE,CIT_PVICODE,CIT_CITYCODE,PSD_BANKNO,V_GROUPID,V_GROUPNAME,PRA_PARTY,PRA_PARTYID
	    FROM 
			    PB_CSTRELACC 
		LEFT OUTER JOIN
			    PB_PSDBANKNO
		ON
		        PSD_BANKNAME = PRA_NETSPOT
		LEFT OUTER JOIN
		        PB_CITYINFO
		ON
		        PSD_CITYCODE = CIT_CITYCODE
	    WHERE
	            PRA_CSTNO=IN_CSTNO AND  PRA_FLAG='7' AND 
			    (IN_GROUPID='1' OR PRA_GROUPID=IN_GROUPID)	   -- 骞夸笢璺ㄨ閫?	   UNION ALL	    
		SELECT  PRA_ACCNO, PRA_NAME, PRA_ALIAS, PRA_CITY, PRA_MOBILE, PRA_FLAG, PRA_OPENBANK, PRA_AREA, PRA_NETSPOT,
	            PEFT_BANKTYPE,CIT_PVICODE,CIT_CITYCODE,PEFT_BANKNO,V_GROUPID,V_GROUPNAME,PRA_PARTY,PRA_PARTYID
	    FROM 
			    PB_CSTRELACC 
		LEFT OUTER JOIN
			    PB_EFTBANKNO
		ON
		        PEFT_LONGNAME = PRA_NETSPOT
		LEFT OUTER JOIN
		        PB_CITYINFO
		ON
		        PEFT_CITYCODE = CIT_CITYCODE
	    WHERE
	            PRA_CSTNO=IN_CSTNO AND  PRA_FLAG='6' AND 
			    (IN_GROUPID='1' OR PRA_GROUPID=IN_GROUPID)    
    ;
	
	DECLARE CUR_CSTACCNAME CURSOR WITH RETURN FOR
	SELECT DISTINCT PRA_NAME
	FROM PB_CSTRELACC WHERE PRA_CSTNO=IN_CSTNO AND (IN_GROUPID='1'  OR PRA_GROUPID=IN_GROUPID) AND PRA_NAME IS NOT NULL AND PRA_NAME <> '';
    
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	IF IN_GROUPID='1' THEN
		SET V_GROUPID='';
		SET V_GROUPNAME='';
	ELSE
		SELECT COALESCE(PRG_GROUPID,''),COALESCE(PRG_GROUPNAME,'') 
		INTO V_GROUPID,V_GROUPNAME
		FROM PB_CSTRELACCGRP WHERE PRG_GROUPID=IN_GROUPID AND PRG_CSTNO=IN_CSTNO FETCH FIRST 1 ROWS ONLY;
	END IF;

	--杩斿洖缁撴灉闆?    OPEN CUR_CSTRELACC; 
    OPEN CUR_CSTACCNAME; 

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_UPDATE_TRNFLW ( 
	IN IN_ACCDATE			VARCHAR(8),
	IN IN_HSTFLWNO			VARCHAR(20),
	
	OUT PROC_RET_CODE		CHARACTER(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO			VARCHAR(50)
)   
------------------------------------------------------------------------
-- 璇ュ瓨鍌ㄨ繃绋嬩负鑰?.0瀛樺偍杩囩▼锛岀幇宸蹭笉鐢?-- SQL 瀛樺偍杩囩▼
-- 鍗″崱杞笎-浜ゆ崲骞冲彴鏌ヨ瘉鍚庢洿鏂版祦姘磋〃鐘舵€?-- 杈撳叆鍙傛暟锛?-- IN IN_ACCDATE	浼氳鏃ユ湡
-- IN IN_HSTFLWNO	浜ゆ崲骞冲彴娴佹按鍙?


-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?

-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhanggq
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.11.02
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--鏇存柊浜ゆ槗娴佹按鐨勭姸鎬?	UPDATE PB_TRNFLW SET PTF_STT = '00' WHERE PTF_HSTFLWNO = IN_HSTFLWNO AND PTF_ACCDATE = IN_ACCDATE;
	
		
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_CARDINF_QUERY ( 
	IN IN_CARDNO  VARCHAR(30),
	
	OUT PROC_RET_CODE         CHARACTER(5),
	OUT OUT_CARD_BRANCHNAME   VARCHAR(100),
	OUT OUT_CARD_CARDNAME     VARCHAR(50),
	OUT OUT_CARD_TYPE         CHAR(1)
)
 READS SQL DATA 
 LANGUAGE SQL
------------------------------------------------------------------------
--璺ㄨ杞处鍗℃湁鏁堟€ф煡璇?---- 杈撳叆鍙傛暟:
------ IN_CARDNO  杩涜鏌ヨ鐨勫崱鍙?

---- 杈撳嚭鍙傛暟:
------ PROC_RET_CODE 瀛樺偍杩囩▼杩斿洖鐮?00000涓烘甯?95000鏁版嵁搴撳紓甯?30804璇ュ崱涓嶆敮鎸佽法琛岃浆璐?
------ OUT_CARD_BRANCHNAME 鍗℃墍灞炲垎琛屽悕绉?
------ OUT_CARD_CARDNAME   鍗″悕绉?
------ OUT_CARD_TYPY       鍗＄被鍨?:鍊熻鍗?:鍑嗚捶璁板崱2:淇＄敤鍗?璐疯鍗?3:鍌ㄨ搫鍗?
-- Michael Wang
-- 2006-12-14
------------------------------------------------------------------------
BEGIN
	-- 澹版槑鍙橀噺
	DECLARE V_CARDFLAG VARCHAR(21);	
	DECLARE V_COUNTER  INTEGER;
	DECLARE V_CARDLENGTH  INTEGER;
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION   
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
    	END;
        
    	SET V_COUNTER = 19;
	SET V_CARDLENGTH = LENGTH(IN_CARDNO);
	SET V_CARDFLAG = SUBSTR(IN_CARDNO,1,V_COUNTER);
	WHILE V_COUNTER>2 DO
	SELECT PTCI_BRANCHNAME,PTCI_CARDNAME,PTCI_CARDTYP 
	INTO OUT_CARD_BRANCHNAME,OUT_CARD_CARDNAME,OUT_CARD_TYPE 
	FROM PB_TRANCRDINF 
	WHERE PTCI_BRANCHCRDFLG = V_CARDFLAG AND PTCI_ACCLENGTH = CAST(V_CARDLENGTH AS CHAR(2));
	IF ((OUT_CARD_BRANCHNAME IS NOT NULL) AND (OUT_CARD_BRANCHNAME!='')) THEN
		SET V_COUNTER = 2;
	ELSE
		SET V_COUNTER = V_COUNTER - 1;
		SET V_CARDFLAG = SUBSTR(IN_CARDNO,1,V_COUNTER);
		SET OUT_CARD_BRANCHNAME = '';
	END IF;
	END WHILE;
	
	IF(OUT_CARD_BRANCHNAME = '')
	THEN 
		SET PROC_RET_CODE = '30804';
		RETURN;	
	ELSE
		SET PROC_RET_CODE = '00000';
	END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_SELECT_CSTRELACC_INFO
 (IN IN_CSTNO VARCHAR(10), 
  IN IN_TYPE CHARACTER(1), 
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏀舵浜虹櫥璁扮翱绠＄悊鏌ヨ鏀舵浜?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?瀹㈡埛鍙?-- IN_TYPE 锛?鏀舵浜虹被鍒?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.wansong
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.06.11 
------------------------------------------------------------------------
BEGIN             

                DECLARE	RET_SINGLEORDER	CURSOR WITH	RETURN FOR
		SELECT
			PRA_ACCNO   ,
			PRA_NAME   ,
			PRA_ALIAS ,
			PRA_CITY  ,      	
			PRA_MOBILE,
			PRA_FLAG,
                        PRA_AREA,
                        PRA_OPENBANK,
                        PRA_NETSPOT
		FROM PB_CSTRELACC
		WHERE PRA_CSTNO = IN_CSTNO AND PRA_FLAG <> '3'
		ORDER BY PRA_ACCNO;
                
                DECLARE	RET_SINGLEORDER1	CURSOR WITH	RETURN FOR
		SELECT
			PRA_ACCNO   ,
			PRA_NAME   ,
			PRA_ALIAS ,
			PRA_CITY  ,      	
			PRA_MOBILE,
			PRA_FLAG,
                        PRA_OPENBANK,
                        PRA_AREA,
                        PRA_NETSPOT,
                        P1.PBN_BANKTYPE, 
			P2.CIT_PVICODE,  
			P2.CIT_CITYCODE, 
			P1.PBN_BANKNO
		FROM PB_CSTRELACC AS P0, PB_PMSBANKNO AS P1,PB_CITYINFO AS P2
		WHERE P0.PRA_CSTNO = IN_CSTNO  AND  P1.PBN_LONGNAME = P0.PRA_NETSPOT 
 		AND P0.PRA_FLAG = IN_TYPE AND P1.PBN_CITYCODE = P2.CIT_CITYCODE
		ORDER BY PRA_ACCNO;

		DECLARE	RET_SINGLEORDER2	CURSOR WITH	RETURN FOR
                 SELECT
			PRA_ACCNO   ,
			PRA_NAME   ,
			PRA_ALIAS ,
			PRA_CITY  ,      	
			PRA_MOBILE,
			PRA_FLAG,
                        PRA_AREA,
                        PRA_OPENBANK,
                        PRA_NETSPOT
		FROM PB_CSTRELACC
		WHERE PRA_CSTNO = IN_CSTNO AND PRA_FLAG <> '3'

                UNION

                SELECT
			PRA_ACCNO   ,
			PRA_NAME   ,
			PRA_ALIAS ,
			PRA_CITY  ,      	
			PRA_MOBILE,
			PRA_FLAG,
                        PRA_AREA,
                        PRA_OPENBANK,
                        PRA_NETSPOT
		FROM PB_CSTRELACC AS P0, PB_PMSBANKNO AS P1,PB_CITYINFO AS P2
		WHERE P0.PRA_CSTNO = IN_CSTNO  AND  P1.PBN_LONGNAME = P0.PRA_NETSPOT 
 		AND P0.PRA_FLAG = '3' AND P1.PBN_CITYCODE = P2.CIT_CITYCODE
                ORDER BY PRA_ACCNO;

                -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
             
	--杩斿洖缁撴灉闆?                IF( IN_TYPE = '3' ) THEN
                OPEN RET_SINGLEORDER1;
		ELSEIF(IN_TYPE = '9') THEN
                OPEN RET_SINGLEORDER2; 
                ELSE
                OPEN RET_SINGLEORDER; 
                END IF;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_FETCH_CITY_INFO
(	
	IN IN_BANKNO CHAR(3),
  IN IN_PRVNO CHAR(3),	
	IN IN_LANGUAGE CHAR(5),
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ閾惰鐪佺骇鍒嗚涓嬬殑鎵€鏈夊煄甯備俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_BANKNO锛氶摱琛屽彿
-- IN_PRVNO: 鐪佺洿杈栧競琛屽彿
-- IN_LANGUAGE: 璇█
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_PVICODE锛氱渷鐩磋緰甯備唬鐮?-- 缁撴灉闆嗭細CUR_CITYINFO 
-- 鏈€鍚庝慨鏀逛汉锛欵CC.maonf
-- 淇敼鍐呭锛氬幓鎺夐€氳繃鐪佷腑鏂囩殑鍒ゆ柇锛屾敼涓洪€氳繃鐪佸彿鏉ュ垽鏂?-- 鏈€鍚庝慨鏀规棩鏈?锛?2009.09.01 
------------------------------------------------------------------------
BEGIN
	--鑾峰彇鎸囧畾鐪併€佺洿杈栧競鐨勫煄甯?	DECLARE	CUR_CITYINFO CURSOR WITH	RETURN FOR
		SELECT CIT_CITYCODE,CASE WHEN IN_LANGUAGE='en_US' THEN CIT_CITYNAMEEN ELSE CIT_CITYNAME END CASE FROM  
			PB_CITYINFO WHERE CIT_PVICODE = IN_PRVNO AND 
				EXISTS(SELECT 1 FROM PB_PMSBANKNO WHERE PBN_BANKTYPE = IN_BANKNO AND PBN_CITYCODE=CIT_CITYCODE)
					ORDER BY CIT_CITYCODE ASC;


	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	--杩斿洖缁撴灉闆?	OPEN CUR_CITYINFO;
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_FETCH_NETSPOT_INFO
 (IN IN_BANKNO CHAR(3), 
  IN IN_CITYNO CHAR(4), 
  IN IN_PRVNO  CHAR(3), 
  OUT PROC_RET_CODE CHAR(5),
  OUT OUT_BANKNO CHAR(3), 
  OUT OUT_CITYNO CHAR(4), 
  OUT OUT_PRVNO CHAR(3)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ閾惰鍩庡競鏀涓嬬殑鎵€鏈夌綉鐐逛俊鎭?-- 杈撳叆鍙傛暟锛?--IN_BANKNO锛氶摱琛屽彿
--IN_CITYNO锛氬煄甯傚彿
--IN_PRVNO锛氱渷鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_BANKNO锛氶摱琛屽彿
--OUT_CITYNO锛氬煄甯傚彿
--OUT_PRVNO锛氱渷鍙?-- 缁撴灉闆嗭細RET_NETSPOTINFO

-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2008.11.3 
------------------------------------------------------------------------
BEGIN
	--鑾峰彇缃戠偣淇℃伅
	DECLARE	RET_NETSPOTINFO	CURSOR WITH	RETURN FOR
	SELECT PBN_BANKNO,PBN_LONGNAME
        FROM PB_PMSBANKNO 
            WHERE PBN_BANKTYPE = IN_BANKNO   AND  PBN_CITYCODE = IN_CITYNO;

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	--杩斿洖缁撴灉闆?	OPEN RET_NETSPOTINFO;
    SET OUT_BANKNO = IN_BANKNO;
    SET OUT_CITYNO = IN_CITYNO;
    SET OUT_PRVNO = IN_PRVNO;
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_FETCH_BANK_INFO
 (OUT PROC_RET_CODE CHARACTER(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ閾惰淇℃伅
-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆嗭細RET_BANKINFO

-- 鏈€鍚庝慨鏀逛汉锛欵CC.wansong
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.06.04
------------------------------------------------------------------------
BEGIN

	DECLARE	RET_BANKINFO	CURSOR WITH	RETURN FOR
		SELECT
			BNK_BANKTYPE   ,
			BNK_AREANAME   ,
			BNK_AREANAMEEN			
		FROM PB_BANKINFO WHERE BNK_BANKTYPE <> '301'
		ORDER BY BNK_BANKTYPE ASC;


	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	--杩斿洖缁撴灉闆?	OPEN RET_BANKINFO;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_FETCH_PRVCITY_INFO
 (IN IN_BANKNO VARCHAR(3), 
  OUT PROC_RET_CODE CHARACTER(5), 
  OUT OUT_BANKNO VARCHAR(3)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ閾惰淇℃伅
-- 杈撳叆鍙傛暟锛?--IN_BANKNO锛氶摱琛屽彿
-- 杈撳嚭鍙傛暟锛?--OUT_BANKNO锛氶摱琛屽彿
-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆嗭細RET_PRVCITYINFO

-- 鏈€鍚庝慨鏀逛汉锛欵CC.wansong
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.06.06 
------------------------------------------------------------------------
BEGIN

	DECLARE	RET_PRVCITYINFO	CURSOR WITH	RETURN FOR
	SELECT P1.PVI_PVICODE, P1.PVI_PVINAME,P1.PVI_PVINAMEEN, P2.CIT_CITYCODE, P2.CIT_CITYNAME,P2.CIT_CITYNAMEEN FROM  
PB_PROVINCEINFO AS P1, PB_CITYINFO AS P2 
	WHERE P1.PVI_STT='0' AND P1.PVI_PVICODE = P2.CIT_PVICODE AND P2.CIT_CITYCODE IN (SELECT DISTINCT 
(P4.PBN_CITYCODE) FROM (SELECT PBN_CITYCODE FROM PB_PMSBANKNO WHERE PBN_BANKTYPE = IN_BANKNO) AS P4)
	ORDER BY P1.PVI_PVICODE,P2.CIT_CITYCODE ASC;


	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	--杩斿洖缁撴灉闆?	OPEN RET_PRVCITYINFO;
    SET OUT_BANKNO = IN_BANKNO;
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FETCH_PRVBRANCHNO
 (IN IN_SUBBRANCHNO CHARACTER(3), 
  OUT PROC_RET_CODE CHARACTER(5), 
  OUT OUT_BRANCHNO CHARACTER(3)
 )
	READS SQL DATA
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱--璺ㄨ姹囨--鐢变笅绾у垎琛屽彿鏌ヨ鐪佺骇鍒嗚鍙?-- 杈撳叆鍙傛暟锛?--IN_SUBBRANCHNO         ---涓嬬骇鍒嗚鍙?
-- 杈撳嚭鍙傛暟锛?--OUT_BRANCHNO             ---鐪佺骇鍒嗚鍙?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.wansong
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.07.27
--------------------------------------------------------------------------
BEGIN
                -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;

               SELECT     PBR_PRVCORENO
               INTO       OUT_BRANCHNO	
               FROM       PB_BRCHRUT   
               WHERE     PBR_CORENO = IN_SUBBRANCHNO;

               SET PROC_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_ADD_CSTRELACC_GROUP
 (IN IN_CSTNO VARCHAR(10), 
  IN IN_GROUPID VARCHAR(8), 
  IN IN_GROUPNAME VARCHAR(60), 
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏀舵浜虹櫥璁扮翱绠＄悊-娣诲姞鏀舵浜?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?                瀹㈡埛鍙?-- IN_GROUPID锛?                鏀舵浜哄垎缁処D
-- IN_GROUPNAME 锛?鏀舵浜哄垎缁勫悕绉?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.wansong
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.08.30
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
	IF (NOT EXISTS(SELECT 1 FROM PB_CSTRELACCGRP WHERE PRG_CSTNO = IN_CSTNO AND PRG_GROUPNAME = IN_GROUPNAME)) THEN
		INSERT INTO PB_CSTRELACCGRP
		(
			PRG_CSTNO,
			PRG_GROUPID,
			PRG_GROUPNAME
		)
		VALUES
		(
			IN_CSTNO ,
			IN_GROUPID ,
			IN_GROUPNAME
		);
	ELSE 
		SET PROC_RET_CODE = '30230';
		RETURN;
	END IF;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_DEL_CSTRELACC_GROUP
 (IN IN_CSTNO VARCHAR(10), 
  IN IN_GROUPID VARCHAR(8), 
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏀舵浜虹櫥璁扮翱绠＄悊-鍒犻櫎鏀舵浜哄垎缁?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?瀹㈡埛鍙?-- IN_GROUPID锛?鏀舵浜哄垎缁処D

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.wansong
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.08.30
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
	-- 澹版槑鍙橀噺
	IF (EXISTS(SELECT 1 FROM PB_CSTRELACCGRP WHERE PRG_CSTNO = IN_CSTNO AND PRG_GROUPID = IN_GROUPID)) THEN
                                DELETE FROM PB_CSTRELACC WHERE PRA_CSTNO = IN_CSTNO AND PRA_GROUPID = IN_GROUPID;
		DELETE FROM PB_CSTRELACCGRP WHERE PRG_CSTNO = IN_CSTNO AND PRG_GROUPID = IN_GROUPID;
	ELSE 
		SET PROC_RET_CODE = '30231';
		RETURN;
	END IF;

	COMMIT;
	
	SET PROC_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_MOD_CSTRELACC_GROUP
 (IN IN_CSTNO VARCHAR(10), 
  IN IN_GROUPID VARCHAR(8), 
  IN IN_GROUPNAME VARCHAR(60), 
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏀舵浜虹櫥璁扮翱绠＄悊-淇敼鏀舵浜哄垎缁勫悕绉?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO 锛?                瀹㈡埛鍙?-- IN_GROUPID锛?                鏀舵浜哄垎缁処D
-- IN_GROUPNAME 锛?鏀舵浜哄垎缁勫悕绉?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.wansong
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.08.30 
------------------------------------------------------------------------
BEGIN
	
	-- 澹版槑鍙橀噺
	DECLARE V_CSTNO VARCHAR(10);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK;
		END;
	SELECT PRG_CSTNO INTO V_CSTNO FROM PB_CSTRELACCGRP WHERE PRG_CSTNO = IN_CSTNO AND PRG_GROUPID = IN_GROUPID;

		IF V_CSTNO IS NOT NULL AND V_CSTNO <>'' THEN 
			
                                UPDATE     PB_CSTRELACCGRP
		SET             PRG_GROUPNAME = IN_GROUPNAME
		WHERE      PRG_CSTNO = IN_CSTNO AND PRG_GROUPID = IN_GROUPID;
		
		ELSE 
			SET PROC_RET_CODE = '30231';
			RETURN;
		END IF;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_QRY_CSTRELACC_GROUP
 (IN IN_CSTNO VARCHAR(10), 
  OUT PROC_RET_CODE CHARACTER(5)
 ) 
  READS SQL DATA
  DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鍒嗙粍鍒楄〃
-- 杈撳叆鍙傛暟锛?--IN_CSTNO锛氬鎴峰彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆嗭細RET_GROUPLIST

-- 鏈€鍚庝慨鏀逛汉锛欵CC.wansong
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.08.30
------------------------------------------------------------------------
BEGIN

	DECLARE	RET_GROUPLIST  	CURSOR WITH	RETURN FOR
	SELECT 
                            PRG_GROUPID,
                            PRG_GROUPNAME
	FROM                    PB_CSTRELACCGRP
	WHERE
                           PRG_CSTNO = IN_CSTNO
	ORDER BY  PRG_GROUPID  ASC;


	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	--杩斿洖缁撴灉闆?	OPEN RET_GROUPLIST;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_QUERY_TRANFLOW_TODAY
 (IN IN_CARDNO VARCHAR(30), 
  IN IN_TYPE CHARACTER(1), 
  IN IN_PAGEID SMALLINT, 
  IN IN_PAGENUM SMALLINT, 
  OUT PROC_RET_CODE CHARACTER(5), 
  OUT OUT_TOTAL INTEGER
 ) 
  DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 浠婃棩缃戜笂杞笎鏄庣粏鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO 锛?	鍗″彿
-- IN_TYPE :   鏌ヨ绫诲瀷 0鍏ㄩ儴 1杞嚭 2杞叆
-- IN_PAGEID : 鏌ヨ椤电爜 
-- IN_PAGENUM : 鏌ヨ鐨勬瘡椤佃褰曟暟

 
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 婊¤冻鏉′欢鐨勮褰曟暟
-- 缁撴灉闆?-- 鏌ヨ浠婃棩鐨勭綉閾惰浆璐︽祦姘?-- 鍒涘缓鏃ユ湡 锛?2007.12.11
-- 鍒涘缓浜猴細ECC.WUJC 
-- 淇敼鏃ユ湡 锛?2009.08.17
-- 淇敼浜猴細ECC.pengxb 
-- 淇敼鍘熷洜锛氬鍔犵姸鎬?4锛屾爣璁颁负瀹㈡埛鎵嬪伐鏌ヨ璺ㄨ姹囨鐘舵€佷负鎴愬姛鐨勪氦鏄?-- 淇敼浜猴細maonf
-- 淇敼鏃ユ湡锛?010.02.02
-- 淇敼鍘熷洜锛氫粖鏃ヨ浆璐︽槑缁嗘敼涓烘煡璇㈣繎2鏃ユ槑缁嗘煡璇?
------------------------------------------------------------------------
BEGIN
	DECLARE V_SQL 	VARCHAR(1200);
	DECLARE V_CURR_DATE  CHAR(8);
	DECLARE V_BEFORE_DATE  CHAR(8);
	DECLARE V_FLAG SMALLINT;
	DECLARE V_STARTREC INT;
	DECLARE V_ENDREC INT;
	DECLARE V_BAT_DATE  CHAR(8);
	DECLARE V_DAYOVER_FLAG CHARACTER(1);
	DECLARE V_DAYOVER_SUCC SMALLINT;	
	DECLARE V_TRNCNT INT;
	DECLARE V_TRNNUM INT;
	DECLARE V_TMP VARCHAR(40);
	
	--澹版槑鐢ㄤ簬瀛樻斁褰撴棩娴佹按琛≒B_TRNFLW婊¤冻鏉′欢鐨勪富閿〃
	DECLARE GLOBAL TEMPORARY TABLE SESSION.TRNFLW_TEMP
    (TMP_TRNFLW    VARCHAR(20))
    WITH REPLACE 
    NOT LOGGED;
    
	P2:BEGIN 
	DECLARE	RET_SINGLEORDER2 CURSOR WITH RETURN FOR SQLSTATMENT;
	
	--杩斿洖婊¤冻鏉′欢鐨勬暟鎹〉
	DECLARE	RET_SINGLEORDER1 CURSOR WITH RETURN FOR 
	   (SELECT PTF_TRANTIM ,PTF_PAYCARDNO ,PTF_RCVCARDNO ,PTF_RCVNAME,PTF_PAYCRYTYP ,PTF_PAYAMT ,PTF_REMARK ,PTF_TRNFLW ,
			  PTF_TRANKIND,PTF_RCVOPENBANK,PTF_RCVOPENCITY,	PTF_RCVOPENAREA ,PTF_RCVOPENBRANCH ,PTF_TRANFEE ,PTF_STT ,PTF_ACCDATE ,PTF_CASHFLAG,PTF_TRANCODE
				   FROM PB_TRNFLW WHERE EXISTS(SELECT 1 FROM SESSION.TRNFLW_TEMP WHERE TMP_TRNFLW=PTF_TRNFLW)) 
		ORDER BY PTF_TRANTIM DESC FOR READ ONLY WITH UR;
		
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;


	IF IN_CARDNO IS NULL OR IN_TYPE IS NULL THEN
		SET PROC_RET_CODE = '96000';
		RETURN;
	END IF;
	
	SET V_TMP = UPPER(IN_CARDNO) || '|' || UPPER(IN_TYPE);

	IF POSSTR(V_TMP,'OR') > 0 OR POSSTR(V_TMP,'--') > 0 OR POSSTR(V_TMP,'AND') > 0 THEN
		SET PROC_RET_CODE = '96000';
		RETURN;
	END IF;
		
	SET V_STARTREC=(IN_PAGEID-1)*IN_PAGENUM+1;
	SET V_ENDREC=(IN_PAGEID)*IN_PAGENUM;
	
	SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	SET V_BEFORE_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP - 1 DAY,'yyyymmdd');
		
	SELECT PBT_STT,PBT_TIME INTO V_DAYOVER_FLAG,V_BAT_DATE  
		FROM PB_BATFLG WHERE PBT_BATNO = '0005' WITH UR;
	IF(IN_PAGENUM=1)THEN
	  --杩斿洖鎵€鏈変粖鏃ヨ浆璐﹁褰曪紝涓嶈繘琛屽垎椤?		SET V_FLAG=7;
	ELSE
		--鏌ヨ浠婃棩杞处
		SET V_FLAG=1;
	END IF;
	
		
	--鏁版嵁鍊掑巻鍙叉湭鎴愬姛鎵ц璁剧疆
	SET V_DAYOVER_SUCC=1;
	IF (V_DAYOVER_FLAG <> '1' OR V_BAT_DATE<>V_BEFORE_DATE) THEN
		SET V_DAYOVER_SUCC=0;
	END IF;
	
	IF IN_PAGEID<=0 OR IN_PAGENUM<=0 THEN 
		SET V_FLAG=5;
	END IF;	
	
	IF (V_FLAG=1) THEN 
	--鏌ヨ浠婃棩杞处 鍙煡璇㈡祦鏄撴祦姘磋〃
		SELECT COUNT(1) INTO V_TRNCNT FROM PB_TRNFLW 
			WHERE ((IN_TYPE<>'2' AND PTF_PAYCARDNO=IN_CARDNO) OR (IN_TYPE<>'1' AND PTF_RCVCARDNO=IN_CARDNO)) AND
				(((PTF_TRANCODE='pb0201' OR PTF_TRANCODE='pb0202' OR PTF_TRANCODE ='pb0211' OR PTF_TRANCODE ='pb0212' OR PTF_TRANCODE ='pb0209' OR PTF_TRANCODE ='pb0222' OR PTF_TRANCODE ='pb0223' OR PTF_TRANCODE ='pb0217' OR PTF_TRANCODE ='pb0219' OR PTF_TRANCODE='MB0201' OR PTF_TRANCODE ='MB0211' OR PTF_TRANCODE ='MB0212' OR PTF_TRANCODE = 'MB0230') AND ( PTF_STT = '00' OR PTF_STT = '01' )) OR ((PTF_TRANCODE ='pb0211' OR PTF_TRANCODE ='pb0217' OR PTF_TRANCODE ='pb0219' OR PTF_TRANCODE ='MB0211')AND (PTF_STT ='02' OR PTF_STT='04')) OR ((PTF_TRANCODE='pb0201' OR PTF_TRANCODE ='MB0201' OR PTF_TRANCODE = 'MB0230') AND PTF_STT='03')) AND 
				   (V_DAYOVER_SUCC=1 OR (PTF_TRANTIM>=V_BEFORE_DATE||'000000' AND PTF_TRANTIM<V_CURR_DATE||'240000')) WITH UR;
		
		SET OUT_TOTAL=V_TRNCNT;
		
		--璧峰璁板綍鍙疯秴杩囧綋鏃ユ祦姘磋〃婊¤冻鏉′欢鐨勮褰曟€绘暟
		IF V_STARTREC<=V_TRNCNT THEN
		    SET V_TRNNUM=IN_PAGENUM;
		    --褰撴棩娴佹按琛ㄦ弧瓒宠褰曚笉瓒充竴椤垫椂锛岃绠楁祦姘磋〃婊¤冻鏉′欢鐨勮褰曟暟
		    IF V_TRNCNT<V_ENDREC THEN
		    	SET V_TRNNUM=IN_PAGENUM-(V_ENDREC-V_TRNCNT);
		    END IF;
	    	--鎶婃弧瓒虫潯浠剁殑涓婚敭鎻掑叆鍒颁复鏃惰〃
			IF V_TRNNUM>0 THEN
				SET V_SQL=
			  		'INSERT INTO SESSION.TRNFLW_TEMP' 
			  		||'   SELECT PTF_TRNFLW FROM ' 
					||'	 (SELECT PTF_TRNFLW,PTF_TRANTIM FROM PB_TRNFLW WHERE (('''||IN_TYPE||'''<>''2'' AND PTF_PAYCARDNO='''||IN_CARDNO||''') OR '
					||'	 ('''||IN_TYPE||'''<>''1'' AND PTF_RCVCARDNO='''||IN_CARDNO||''')) AND (((PTF_TRANCODE=''pb0201'' OR PTF_TRANCODE=''pb0202'' OR PTF_TRANCODE =''pb0211'' OR PTF_TRANCODE =''pb0212'' OR PTF_TRANCODE =''pb0209'' OR PTF_TRANCODE =''pb0222'' OR PTF_TRANCODE =''pb0223'' OR PTF_TRANCODE =''pb0217'' OR PTF_TRANCODE =''pb0219''  OR PTF_TRANCODE =''MB0201''  OR PTF_TRANCODE =''MB0211''  OR PTF_TRANCODE =''MB0212''  OR PTF_TRANCODE =''MB0230'') AND ( PTF_STT = ''00'' OR PTF_STT = ''01'')) OR ((PTF_TRANCODE =''pb0211'' OR PTF_TRANCODE =''pb0217''  OR PTF_TRANCODE =''pb0219'' OR PTF_TRANCODE =''MB0211'') AND (PTF_STT =''02'' OR PTF_STT=''04''))  OR ((PTF_TRANCODE=''pb0201'' OR PTF_TRANCODE=''MB0230'' OR PTF_TRANCODE=''MB0201'') AND PTF_STT = ''03''))'
					||'  AND ('||RTRIM(CHAR(V_DAYOVER_SUCC))||'=1 OR (PTF_TRANTIM>='''||V_BEFORE_DATE||'000000'' AND PTF_TRANTIM<'''||V_CURR_DATE||'240000'')) ORDER BY PTF_TRANTIM DESC,PTF_TRNFLW DESC FETCH FIRST '|| CHAR(V_ENDREC)||' ROWS ONLY'
					||'	 ) AS TAB1 ORDER BY PTF_TRANTIM,PTF_TRNFLW FETCH FIRST '|| CHAR(V_TRNNUM)||' ROWS ONLY WITH UR';
					EXECUTE IMMEDIATE V_SQL;
			END IF;
		END IF;				 
	ELSEIF (V_FLAG=7) THEN 
	--鏌ヨ浠婃棩缃戦摱杞处鎵€鏈夎浆甯愪俊鎭?		SET V_SQL = 'SELECT PTF_TRANTIM ,PTF_PAYCARDNO ,PTF_RCVCARDNO ,PTF_RCVNAME , PTF_PAYCRYTYP ,PTF_PAYAMT ,PTF_REMARK ,PTF_TRNFLW ,PTF_TRANKIND ,PTF_RCVOPENBANK ,PTF_RCVOPENCITY ,PTF_RCVOPENAREA ,PTF_RCVOPENBRANCH ,PTF_TRANFEE ,PTF_STT ,PTF_ACCDATE ,PTF_CASHFLAG,PTF_TRANCODE'
		 ||' FROM PB_TRNFLW'
		 ||' WHERE ((''2''<>'''||IN_TYPE||''' AND PTF_PAYCARDNO = '''||IN_CARDNO||''') OR (''1''<>'''||IN_TYPE||''' AND PTF_RCVCARDNO ='''||IN_CARDNO||''')) AND ('||RTRIM(CHAR(V_DAYOVER_SUCC))||'=1 OR (PTF_TRANTIM >= '''||V_BEFORE_DATE||'000000'' AND PTF_TRANTIM <= '''||V_CURR_DATE||'240000'')) AND (((PTF_TRANCODE=''pb0201'' OR PTF_TRANCODE=''pb0202'' OR PTF_TRANCODE =''pb0211'' OR PTF_TRANCODE =''pb0212'' OR PTF_TRANCODE =''pb0209'' OR PTF_TRANCODE =''pb0222'' OR PTF_TRANCODE =''pb0223'' OR PTF_TRANCODE =''pb0217'' OR PTF_TRANCODE =''pb0219'' OR PTF_TRANCODE =''MB0230'' OR PTF_TRANCODE =''MB0201'' OR PTF_TRANCODE =''MB0211'' OR PTF_TRANCODE =''MB0212'') AND (PTF_STT = ''00'' OR PTF_STT = ''01'' )) OR ((PTF_TRANCODE =''pb0211'' OR PTF_TRANCODE =''pb0217'' OR PTF_TRANCODE =''pb0219'' OR PTF_TRANCODE =''MB0211'') AND (PTF_STT =''02'' OR PTF_STT=''04'')) OR ((PTF_TRANCODE =''pb0201'' OR PTF_TRANCODE =''MB0201'' OR PTF_TRANCODE =''MB0230'') AND PTF_STT =''03''))'
		 ||' ORDER BY PTF_TRANTIM DESC FOR READ ONLY WITH UR';
	ELSEIF (V_FLAG=5) THEN
	--鏌ヨ鏃ユ湡瓒呰繃鐜板疄鏃ユ湡 杩斿洖绌烘父鏍?		 SET V_SQL = 'SELECT PTF_TRANTIM ,PTF_PAYCARDNO ,PTF_RCVCARDNO ,PTF_RCVNAME , PTF_PAYCRYTYP ,PTF_PAYAMT ,PTF_REMARK ,PTF_TRNFLW ,PTF_TRANKIND ,PTF_RCVOPENBANK ,PTF_RCVOPENCITY ,PTF_RCVOPENAREA ,PTF_RCVOPENBRANCH ,PTF_TRANFEE ,PTF_STT ,PTF_ACCDATE,PTF_CASHFLAG ,PTF_TRANCODE'
		 ||' FROM PB_TRNFLW'
		 ||' WHERE 1=0 WITH UR';
	END IF;
	
	--杩斿洖缁撴灉闆?	IF V_FLAG=5 OR V_FLAG=7 THEN 					
		PREPARE SQLSTATMENT FROM V_SQL;
		OPEN RET_SINGLEORDER2;
	ELSE
	    OPEN RET_SINGLEORDER1;
	END IF;
	
	SET PROC_RET_CODE = '00000';
	
	END P2;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_QUERY_TRANFLOW_TODAY2
 (IN IN_CARDNO VARCHAR(30), 
  IN IN_TYPE CHARACTER(1), 
  IN IN_PAGEID SMALLINT, 
  IN IN_PAGENUM SMALLINT, 
  IN IN_RECACCNO VARCHAR(30), 
  IN IN_RECACCNAME VARCHAR(60),
  OUT PROC_RET_CODE CHARACTER(5), 
  OUT OUT_TOTAL INTEGER
 ) 
  DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 浠婃棩缃戜笂杞笎鏄庣粏鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO 锛?	鍗″彿
-- IN_TYPE :   鏌ヨ绫诲瀷 0鍏ㄩ儴 1杞嚭 2杞叆
-- IN_PAGEID : 鏌ヨ椤电爜 
-- IN_PAGENUM : 鏌ヨ鐨勬瘡椤佃褰曟暟
-- IN_RECACCNO : 鏌ヨ鐨勬敹娆句汉甯愬彿
-- IN_RECACCNAME : 鏌ヨ鐨勬敹娆句汉濮撳悕
 
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 婊¤冻鏉′欢鐨勮褰曟暟
-- 缁撴灉闆?-- 鏌ヨ浠婃棩鐨勭綉閾惰浆璐︽祦姘?-- 鍒涘缓鏃ユ湡 锛?2007.12.11
-- 鍒涘缓浜猴細ECC.WUJC 
-- 淇敼鏃ユ湡 锛?2009.08.17
-- 淇敼浜猴細ECC.pengxb 
-- 淇敼鍘熷洜锛氬鍔犵姸鎬?4锛屾爣璁颁负瀹㈡埛鎵嬪伐鏌ヨ璺ㄨ姹囨鐘舵€佷负鎴愬姛鐨勪氦鏄?-- 淇敼浜猴細maonf
-- 淇敼鏃ユ湡锛?010.02.02
-- 淇敼鍘熷洜锛氫粖鏃ヨ浆璐︽槑缁嗘敼涓烘煡璇㈣繎2鏃ユ槑缁嗘煡璇?-- 淇敼浜猴細gongjx
-- 淇敼鏃ユ湡锛?011.01.25
-- 淇敼鍘熷洜锛氬鍔犻珮绾ф煡璇㈡潯浠?
------------------------------------------------------------------------
BEGIN
	DECLARE V_SQL 	VARCHAR(1600);
	DECLARE V_CURR_DATE  CHAR(8);
	DECLARE V_BEFORE_DATE  CHAR(8);
	DECLARE V_FLAG SMALLINT;
	DECLARE V_STARTREC INT;
	DECLARE V_ENDREC INT;
	DECLARE V_BAT_DATE  CHAR(8);
	DECLARE V_DAYOVER_FLAG CHARACTER(1);
	DECLARE V_DAYOVER_SUCC SMALLINT;	
	DECLARE V_TRNCNT INT;
	DECLARE V_TRNNUM INT;
	DECLARE V_TMP VARCHAR(40);
	
	--澹版槑鐢ㄤ簬瀛樻斁褰撴棩娴佹按琛≒B_TRNFLW婊¤冻鏉′欢鐨勪富閿〃
	DECLARE GLOBAL TEMPORARY TABLE SESSION.TRNFLW_TEMP
    (TMP_TRNFLW    VARCHAR(20))
    WITH REPLACE 
    NOT LOGGED;
    
	P2:BEGIN 
	DECLARE	RET_SINGLEORDER2 CURSOR WITH RETURN FOR SQLSTATMENT;
	
	--杩斿洖婊¤冻鏉′欢鐨勬暟鎹〉
	DECLARE	RET_SINGLEORDER1 CURSOR WITH RETURN FOR 
	   (SELECT PTF_TRANTIM ,PTF_PAYCARDNO ,PTF_RCVCARDNO ,PTF_RCVNAME,PTF_PAYCRYTYP ,PTF_PAYAMT ,PTF_REMARK ,PTF_TRNFLW ,
			  PTF_TRANKIND,PTF_RCVOPENBANK,PTF_RCVOPENCITY,	PTF_RCVOPENAREA ,PTF_RCVOPENBRANCH ,PTF_TRANFEE ,PTF_STT ,PTF_ACCDATE ,PTF_CASHFLAG,PTF_TRANCODE
				   FROM PB_TRNFLW WHERE EXISTS(SELECT 1 FROM SESSION.TRNFLW_TEMP WHERE TMP_TRNFLW=PTF_TRNFLW)) 
		ORDER BY PTF_TRANTIM DESC FOR READ ONLY WITH UR;
		
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;


	IF IN_CARDNO IS NULL OR IN_TYPE IS NULL THEN
		SET PROC_RET_CODE = '96000';
		RETURN;
	END IF;
	
	SET V_TMP = UPPER(IN_CARDNO) || '|' || UPPER(IN_TYPE);

	IF POSSTR(V_TMP,'OR') > 0 OR POSSTR(V_TMP,'--') > 0 OR POSSTR(V_TMP,'AND') > 0 THEN
		SET PROC_RET_CODE = '96000';
		RETURN;
	END IF;
		
	SET V_STARTREC=(IN_PAGEID-1)*IN_PAGENUM+1;
	SET V_ENDREC=(IN_PAGEID)*IN_PAGENUM;
	
	SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	SET V_BEFORE_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP - 1 DAY,'yyyymmdd');
		
	SELECT PBT_STT,PBT_TIME INTO V_DAYOVER_FLAG,V_BAT_DATE  
		FROM PB_BATFLG WHERE PBT_BATNO = '0005' WITH UR;
	IF(IN_PAGENUM=1)THEN
	  --杩斿洖鎵€鏈変粖鏃ヨ浆璐﹁褰曪紝涓嶈繘琛屽垎椤?		SET V_FLAG=7;
	ELSE
		--鏌ヨ浠婃棩杞处
		SET V_FLAG=1;
	END IF;
	
		
	--鏁版嵁鍊掑巻鍙叉湭鎴愬姛鎵ц璁剧疆
	SET V_DAYOVER_SUCC=1;
	IF (V_DAYOVER_FLAG <> '1' OR V_BAT_DATE<>V_BEFORE_DATE) THEN
		SET V_DAYOVER_SUCC=0;
	END IF;
	
	IF IN_PAGEID<=0 OR IN_PAGENUM<=0 THEN 
		SET V_FLAG=5;
	END IF;	
	
	IF (V_FLAG=1) THEN 
	--鏌ヨ浠婃棩杞处 鍙煡璇㈡祦鏄撴祦姘磋〃
		IF IN_RECACCNO IS NOT NULL AND IN_RECACCNAME IS NOT NULL AND IN_RECACCNO<>'' AND IN_RECACCNAME<>'' THEN 
			SELECT COUNT(1) INTO V_TRNCNT FROM PB_TRNFLW 
				WHERE ((IN_TYPE<>'2' AND PTF_PAYCARDNO=IN_CARDNO AND PTF_RCVCARDNO=IN_RECACCNO AND PTF_RCVNAME=IN_RECACCNAME) OR (IN_TYPE<>'1' AND PTF_RCVCARDNO=IN_CARDNO AND PTF_PAYCARDNO=IN_RECACCNO)) AND
					(((PTF_TRANCODE='pb0201' OR PTF_TRANCODE='pb0202' OR PTF_TRANCODE ='pb0211' OR PTF_TRANCODE ='pb0212' OR PTF_TRANCODE ='pb0209' OR PTF_TRANCODE ='pb0222' OR PTF_TRANCODE ='pb0223' OR PTF_TRANCODE ='pb0217' OR PTF_TRANCODE ='pb0219' OR PTF_TRANCODE='pb1903' OR PTF_TRANCODE='MB0201' OR PTF_TRANCODE ='MB0211' OR PTF_TRANCODE ='MB0212' OR PTF_TRANCODE='MB0213' OR PTF_TRANCODE = 'MB0230') AND ( PTF_STT = '00' OR PTF_STT = '01' )) OR ((PTF_TRANCODE ='pb0211' OR PTF_TRANCODE ='pb0217' OR PTF_TRANCODE ='pb0219' OR PTF_TRANCODE='pb1903' OR PTF_TRANCODE ='MB0211' OR PTF_TRANCODE='MB0213')AND (PTF_STT ='02' OR PTF_STT='04')) OR ((PTF_TRANCODE='pb0201' OR PTF_TRANCODE ='MB0201' OR PTF_TRANCODE = 'MB0230') AND PTF_STT='03')) AND 
					   (V_DAYOVER_SUCC=1 OR (PTF_TRANTIM>=V_BEFORE_DATE||'000000' AND PTF_TRANTIM<V_CURR_DATE||'240000')) WITH UR;
		ELSE 		   
			SELECT COUNT(1) INTO V_TRNCNT FROM PB_TRNFLW 
				WHERE ((IN_TYPE<>'2' AND PTF_PAYCARDNO=IN_CARDNO) OR (IN_TYPE<>'1' AND PTF_RCVCARDNO=IN_CARDNO)) AND
					(((PTF_TRANCODE='pb0201' OR PTF_TRANCODE='pb0202' OR PTF_TRANCODE ='pb0211' OR PTF_TRANCODE ='pb0212' OR PTF_TRANCODE ='pb0209' OR PTF_TRANCODE ='pb0222' OR PTF_TRANCODE ='pb0223' OR PTF_TRANCODE ='pb0217' OR PTF_TRANCODE ='pb0219' OR PTF_TRANCODE='pb1903' OR PTF_TRANCODE='MB0201' OR PTF_TRANCODE ='MB0211' OR PTF_TRANCODE ='MB0212' OR PTF_TRANCODE='MB0213' OR PTF_TRANCODE = 'MB0230') AND ( PTF_STT = '00' OR PTF_STT = '01' )) OR ((PTF_TRANCODE ='pb0211' OR PTF_TRANCODE ='pb0217' OR PTF_TRANCODE ='pb0219' OR PTF_TRANCODE='pb1903' OR PTF_TRANCODE ='MB0211' OR PTF_TRANCODE='MB0213')AND (PTF_STT ='02' OR PTF_STT='04')) OR ((PTF_TRANCODE='pb0201' OR PTF_TRANCODE ='MB0201' OR PTF_TRANCODE = 'MB0230') AND PTF_STT='03')) AND 
					   (V_DAYOVER_SUCC=1 OR (PTF_TRANTIM>=V_BEFORE_DATE||'000000' AND PTF_TRANTIM<V_CURR_DATE||'240000')) WITH UR;
		END IF;
		SET OUT_TOTAL=V_TRNCNT;
		
		--璧峰璁板綍鍙疯秴杩囧綋鏃ユ祦姘磋〃婊¤冻鏉′欢鐨勮褰曟€绘暟
		IF V_STARTREC<=V_TRNCNT THEN
		    SET V_TRNNUM=IN_PAGENUM;
		    --褰撴棩娴佹按琛ㄦ弧瓒宠褰曚笉瓒充竴椤垫椂锛岃绠楁祦姘磋〃婊¤冻鏉′欢鐨勮褰曟暟
		    IF V_TRNCNT<V_ENDREC THEN
		    	SET V_TRNNUM=IN_PAGENUM-(V_ENDREC-V_TRNCNT);
		    END IF;
	    	--鎶婃弧瓒虫潯浠剁殑涓婚敭鎻掑叆鍒颁复鏃惰〃
			IF V_TRNNUM>0 THEN
				IF IN_RECACCNO IS NOT NULL AND IN_RECACCNAME IS NOT NULL AND IN_RECACCNO<>'' AND IN_RECACCNAME<>'' THEN 
				SET V_SQL=
			  		'INSERT INTO SESSION.TRNFLW_TEMP' 
			  		||'   SELECT PTF_TRNFLW FROM ' 
					||'	 (SELECT PTF_TRNFLW,PTF_TRANTIM FROM PB_TRNFLW WHERE (('''||IN_TYPE||'''<>''2'' AND PTF_PAYCARDNO='''||IN_CARDNO||''' AND PTF_RCVCARDNO='''||IN_RECACCNO||''' AND PTF_RCVNAME='''||IN_RECACCNAME||''') OR '
					||'	 ('''||IN_TYPE||'''<>''1'' AND PTF_RCVCARDNO='''||IN_CARDNO||''' AND PTF_PAYCARDNO='''||IN_RECACCNO||''')) AND (((PTF_TRANCODE=''pb0201'' OR PTF_TRANCODE=''pb0202'' OR PTF_TRANCODE =''pb0211'' OR PTF_TRANCODE =''pb0212'' OR PTF_TRANCODE =''pb0209'' OR PTF_TRANCODE =''pb0222'' OR PTF_TRANCODE =''pb0223'' OR PTF_TRANCODE =''pb0217'' OR PTF_TRANCODE =''pb0219'' OR PTF_TRANCODE =''pb1903''  OR PTF_TRANCODE =''MB0201''  OR PTF_TRANCODE =''MB0211''  OR PTF_TRANCODE =''MB0212'' OR PTF_TRANCODE=''MB0213''  OR PTF_TRANCODE =''MB0230'') AND ( PTF_STT = ''00'' OR PTF_STT = ''01'')) OR ((PTF_TRANCODE =''pb0211'' OR PTF_TRANCODE =''pb0217''  OR PTF_TRANCODE =''pb0219'' OR PTF_TRANCODE =''pb1903'' OR PTF_TRANCODE =''MB0211'' OR PTF_TRANCODE=''MB0213'') AND (PTF_STT =''02'' OR PTF_STT=''04''))  OR ((PTF_TRANCODE=''pb0201'' OR PTF_TRANCODE=''MB0230'' OR PTF_TRANCODE=''MB0201'') AND PTF_STT = ''03''))'
					||'  AND ('||RTRIM(CHAR(V_DAYOVER_SUCC))||'=1 OR (PTF_TRANTIM>='''||V_BEFORE_DATE||'000000'' AND PTF_TRANTIM<'''||V_CURR_DATE||'240000'')) ORDER BY PTF_TRANTIM DESC,PTF_TRNFLW DESC FETCH FIRST '|| CHAR(V_ENDREC)||' ROWS ONLY'
					||'	 ) AS TAB1 ORDER BY PTF_TRANTIM,PTF_TRNFLW FETCH FIRST '|| CHAR(V_TRNNUM)||' ROWS ONLY WITH UR';
				ELSE 
				SET V_SQL=
			  		'INSERT INTO SESSION.TRNFLW_TEMP' 
			  		||'   SELECT PTF_TRNFLW FROM ' 
					||'	 (SELECT PTF_TRNFLW,PTF_TRANTIM FROM PB_TRNFLW WHERE (('''||IN_TYPE||'''<>''2'' AND PTF_PAYCARDNO='''||IN_CARDNO||''') OR '
					||'	 ('''||IN_TYPE||'''<>''1'' AND PTF_RCVCARDNO='''||IN_CARDNO||''')) AND (((PTF_TRANCODE=''pb0201'' OR PTF_TRANCODE=''pb0202'' OR PTF_TRANCODE =''pb0211'' OR PTF_TRANCODE =''pb0212'' OR PTF_TRANCODE =''pb0209'' OR PTF_TRANCODE =''pb0222'' OR PTF_TRANCODE =''pb0223'' OR PTF_TRANCODE =''pb0217'' OR PTF_TRANCODE =''pb0219'' OR PTF_TRANCODE =''pb1903''  OR PTF_TRANCODE =''MB0201''  OR PTF_TRANCODE =''MB0211''  OR PTF_TRANCODE =''MB0212'' OR PTF_TRANCODE=''MB0213''  OR PTF_TRANCODE =''MB0230'') AND ( PTF_STT = ''00'' OR PTF_STT = ''01'')) OR ((PTF_TRANCODE =''pb0211'' OR PTF_TRANCODE =''pb0217''  OR PTF_TRANCODE =''pb0219'' OR PTF_TRANCODE =''pb1903'' OR PTF_TRANCODE =''MB0211'' OR PTF_TRANCODE=''MB0213'') AND (PTF_STT =''02'' OR PTF_STT=''04''))  OR ((PTF_TRANCODE=''pb0201'' OR PTF_TRANCODE=''MB0230'' OR PTF_TRANCODE=''MB0201'') AND PTF_STT = ''03''))'
					||'  AND ('||RTRIM(CHAR(V_DAYOVER_SUCC))||'=1 OR (PTF_TRANTIM>='''||V_BEFORE_DATE||'000000'' AND PTF_TRANTIM<'''||V_CURR_DATE||'240000'')) ORDER BY PTF_TRANTIM DESC,PTF_TRNFLW DESC FETCH FIRST '|| CHAR(V_ENDREC)||' ROWS ONLY'
					||'	 ) AS TAB1 ORDER BY PTF_TRANTIM,PTF_TRNFLW FETCH FIRST '|| CHAR(V_TRNNUM)||' ROWS ONLY WITH UR';
				END IF;
				EXECUTE IMMEDIATE V_SQL;
			END IF;
		END IF;				 
	ELSEIF (V_FLAG=7) THEN 
	--鏌ヨ浠婃棩缃戦摱杞处鎵€鏈夎浆甯愪俊鎭?		IF IN_RECACCNO IS NOT NULL AND IN_RECACCNAME IS NOT NULL AND IN_RECACCNO<>'' AND IN_RECACCNAME<>'' THEN 
			SET V_SQL = 'SELECT PTF_TRANTIM ,PTF_PAYCARDNO ,PTF_RCVCARDNO ,PTF_RCVNAME , PTF_PAYCRYTYP ,PTF_PAYAMT ,PTF_REMARK ,PTF_TRNFLW ,PTF_TRANKIND ,PTF_RCVOPENBANK ,PTF_RCVOPENCITY ,PTF_RCVOPENAREA ,PTF_RCVOPENBRANCH ,PTF_TRANFEE ,PTF_STT ,PTF_ACCDATE ,PTF_CASHFLAG,PTF_TRANCODE'
			 ||' FROM PB_TRNFLW'
			 ||' WHERE ((''2''<>'''||IN_TYPE||''' AND PTF_PAYCARDNO = '''||IN_CARDNO||''' AND PTF_RCVCARDNO='''||IN_RECACCNO||''' AND PTF_RCVNAME='''||IN_RECACCNAME||''') OR (''1''<>'''||IN_TYPE||''' AND PTF_RCVCARDNO ='''||IN_CARDNO||''' AND PTF_PAYCARDNO='''||IN_RECACCNO||''')) AND ('||RTRIM(CHAR(V_DAYOVER_SUCC))||'=1 OR (PTF_TRANTIM >= '''||V_BEFORE_DATE||'000000'' AND PTF_TRANTIM <= '''||V_CURR_DATE||'240000'')) AND (((PTF_TRANCODE=''pb0201'' OR PTF_TRANCODE=''pb0202'' OR PTF_TRANCODE =''pb0211'' OR PTF_TRANCODE =''pb0212'' OR PTF_TRANCODE =''pb0209'' OR PTF_TRANCODE =''pb0222'' OR PTF_TRANCODE =''pb0223'' OR PTF_TRANCODE =''pb0217'' OR PTF_TRANCODE =''pb0219'' OR PTF_TRANCODE =''pb1903'' OR PTF_TRANCODE =''MB0230'' OR PTF_TRANCODE =''MB0201'' OR PTF_TRANCODE =''MB0211'' OR PTF_TRANCODE =''MB0212''  OR PTF_TRANCODE=''MB0213'') AND (PTF_STT = ''00'' OR PTF_STT = ''01'' )) OR ((PTF_TRANCODE =''pb0211'' OR PTF_TRANCODE =''pb0217'' OR PTF_TRANCODE =''pb0219'' OR PTF_TRANCODE =''pb1903'' OR PTF_TRANCODE =''MB0211''  OR PTF_TRANCODE=''MB0213'') AND (PTF_STT =''02'' OR PTF_STT=''04'')) OR ((PTF_TRANCODE =''pb0201'' OR PTF_TRANCODE =''MB0201'' OR PTF_TRANCODE =''MB0230'') AND PTF_STT =''03''))'
			 ||' ORDER BY PTF_TRANTIM DESC FOR READ ONLY WITH UR';
		ELSE 
			SET V_SQL = 'SELECT PTF_TRANTIM ,PTF_PAYCARDNO ,PTF_RCVCARDNO ,PTF_RCVNAME , PTF_PAYCRYTYP ,PTF_PAYAMT ,PTF_REMARK ,PTF_TRNFLW ,PTF_TRANKIND ,PTF_RCVOPENBANK ,PTF_RCVOPENCITY ,PTF_RCVOPENAREA ,PTF_RCVOPENBRANCH ,PTF_TRANFEE ,PTF_STT ,PTF_ACCDATE ,PTF_CASHFLAG,PTF_TRANCODE'
			 ||' FROM PB_TRNFLW'
			 ||' WHERE ((''2''<>'''||IN_TYPE||''' AND PTF_PAYCARDNO = '''||IN_CARDNO||''') OR (''1''<>'''||IN_TYPE||''' AND PTF_RCVCARDNO ='''||IN_CARDNO||''')) AND ('||RTRIM(CHAR(V_DAYOVER_SUCC))||'=1 OR (PTF_TRANTIM >= '''||V_BEFORE_DATE||'000000'' AND PTF_TRANTIM <= '''||V_CURR_DATE||'240000'')) AND (((PTF_TRANCODE=''pb0201'' OR PTF_TRANCODE=''pb0202'' OR PTF_TRANCODE =''pb0211'' OR PTF_TRANCODE =''pb0212'' OR PTF_TRANCODE =''pb0209'' OR PTF_TRANCODE =''pb0222'' OR PTF_TRANCODE =''pb0223'' OR PTF_TRANCODE =''pb0217'' OR PTF_TRANCODE =''pb0219'' OR PTF_TRANCODE =''pb1903'' OR PTF_TRANCODE =''MB0230'' OR PTF_TRANCODE =''MB0201'' OR PTF_TRANCODE =''MB0211'' OR PTF_TRANCODE =''MB0212'' OR PTF_TRANCODE=''MB0213'') AND (PTF_STT = ''00'' OR PTF_STT = ''01'' )) OR ((PTF_TRANCODE =''pb0211'' OR PTF_TRANCODE =''pb0217'' OR PTF_TRANCODE =''pb0219'' OR PTF_TRANCODE =''pb1903'' OR PTF_TRANCODE =''MB0211''  OR PTF_TRANCODE=''MB0213'') AND (PTF_STT =''02'' OR PTF_STT=''04'')) OR ((PTF_TRANCODE =''pb0201'' OR PTF_TRANCODE =''MB0201'' OR PTF_TRANCODE =''MB0230'') AND PTF_STT =''03''))'
			 ||' ORDER BY PTF_TRANTIM DESC FOR READ ONLY WITH UR';
		END IF;
	ELSEIF (V_FLAG=5) THEN
	--鏌ヨ鏃ユ湡瓒呰繃鐜板疄鏃ユ湡 杩斿洖绌烘父鏍?		 SET V_SQL = 'SELECT PTF_TRANTIM ,PTF_PAYCARDNO ,PTF_RCVCARDNO ,PTF_RCVNAME , PTF_PAYCRYTYP ,PTF_PAYAMT ,PTF_REMARK ,PTF_TRNFLW ,PTF_TRANKIND ,PTF_RCVOPENBANK ,PTF_RCVOPENCITY ,PTF_RCVOPENAREA ,PTF_RCVOPENBRANCH ,PTF_TRANFEE ,PTF_STT ,PTF_ACCDATE,PTF_CASHFLAG ,PTF_TRANCODE'
		 ||' FROM PB_TRNFLW'
		 ||' WHERE 1=0 WITH UR';
	END IF;
	
	--杩斿洖缁撴灉闆?	IF V_FLAG=5 OR V_FLAG=7 THEN 					
		PREPARE SQLSTATMENT FROM V_SQL;
		OPEN RET_SINGLEORDER2;
	ELSE
	    OPEN RET_SINGLEORDER1;
	END IF;
	
	SET PROC_RET_CODE = '00000';
	
	END P2;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_FETCH_CITYANDNETSPOTS_INFO
(	
	IN IN_BANKNO CHAR(3),
  	IN IN_PRVNO CHAR(3),	
	IN IN_CITYNO CHAR(4),
	IN IN_LANGUAGE CHAR(5),
  	OUT PROC_RET_CODE CHAR(5), 
  	OUT OUT_PRVNAME VARCHAR(30)
 ) 
	READS SQL DATA 
	RESULT SETS 2
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ閾惰鐪佺骇鍒嗚鐨勫煄甯傛敮琛屽拰缃戠偣淇℃伅淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_BANKNO锛氶摱琛屽彿
-- 杈撳嚭鍙傛暟锛?--OUT_BANKNO锛氶摱琛屽彿
-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆嗭細CUR_CITYINFO  CUR_NETSPOTINFO

-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2008.11.3 
------------------------------------------------------------------------
BEGIN
	
	--鑾峰彇鎸囧畾鐪併€佺洿杈栧競鐨勫煄甯?	DECLARE	CUR_CITYINFO CURSOR WITH	RETURN FOR
		SELECT CIT_CITYCODE,CASE WHEN IN_LANGUAGE='en_US' THEN CIT_CITYNAMEEN ELSE CIT_CITYNAME END CASE FROM  
			PB_CITYINFO WHERE CIT_PVICODE = IN_PRVNO AND 
				EXISTS(SELECT 1 FROM PB_PMSBANKNO WHERE PBN_BANKTYPE = IN_BANKNO AND PBN_CITYCODE=CIT_CITYCODE)
					ORDER BY CIT_CITYCODE ASC;

	--鑾峰彇缃戠偣淇℃伅
	DECLARE	CUR_NETSPOTINFO	CURSOR WITH	RETURN FOR
		SELECT PBN_BANKNO,PBN_LONGNAME
        	FROM PB_PMSBANKNO 
            	WHERE PBN_BANKTYPE = IN_BANKNO   AND  PBN_CITYCODE = IN_CITYNO;


	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	--鑾峰彇鐪併€佺洿杈栧競鐨勫悕绉?	SELECT COALESCE(CASE WHEN IN_LANGUAGE='en_US' THEN PVI_PVINAMEEN ELSE PVI_PVINAME END,'') INTO OUT_PRVNAME 
		FROM PB_PROVINCEINFO 
			WHERE PVI_PVICODE=IN_PRVNO AND PVI_STT='0' FETCH FIRST 1 ROWS ONLY;

	--杩斿洖缁撴灉闆?	OPEN CUR_CITYINFO;
	OPEN CUR_NETSPOTINFO;
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_INFO_REVIEW
(	
	IN IN_FLWNO CHAR(20),
  	OUT PROC_RET_CODE CHAR(5), 
  	OUT OUT_REMARK VARCHAR(100),
	OUT OUT_POUNDAGE DECIMAL(15,2),
	OUT OUT_PAYFEEFLAG CHAR(1),
	OUT OUT_DEALDATE CHAR(14),
	OUT OUT_TOACCNAME VARCHAR(30),
	OUT OUT_ACCNAME VARCHAR(30),
	OUT OUT_TOCARDNO VARCHAR(30),
	OUT OUT_CARDNO VARCHAR(30),
	OUT OUT_TOOPENBANK VARCHAR(30),
	OUT OUT_CURRCODE CHAR(3),
	OUT OUT_TRANSUM  DECIMAL(15,2),
	OUT OUT_TRANKIND VARCHAR(1)
 ) 
	READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ杞处鐨勭數瀛愬洖鎵т俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_FLWNO锛氳浆璐︽祦姘村彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_REMARK            闄勮█	
-- OUT_POUNDAGE          鎵嬬画璐?
-- OUT_PAYFEEFLAG        鎵嬬画璐规敮浠樻柟寮?-- OUT_DEALDATE          杞处鏃堕棿	
-- OUT_TOACCNAME         杞叆鎴峰悕	
-- OUT_ACCNAME           杞嚭鎴峰悕	
-- OUT_TOCARDNO          杞叆璐﹀彿	
-- OUT_CARDNO            杞嚭璐﹀彿	
-- OUT_TOOPENBANK        杞嚭閾惰鍚嶇О  
-- OUT_CURRCODE          甯佺 	
-- OUT_TRANSUM           杞处閲戦

-- 鍒涘缓浜猴細ECC.WUJC
-- 鍒涘缓鏃ユ湡 锛?2009.04.15 
-- 淇敼浜? lan_xb.sdc
-- 淇敼鏃ユ湡锛?012-09-07
-- 淇敼鍘熷洜:鍘婚櫎鏌ヨ鍘嗗彶琛紝鍙湁杩戜袱鏃ョ綉閾惰浆璐︽棩蹇楁煡璇㈡墦鍗板巻鍙插簱浼氳皟鐢ㄨ繖涓瓨鍌ㄨ繃绋?------------------------------------------------------------------------
BEGIN
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	SELECT PTF_REMARK,PTF_TRANFEE,PTF_CASHFLAG,PTF_TRANTIM,PTF_RCVNAME,PTF_RCVCARDNO,PTF_PAYCARDNO,PTF_RCVOPENBANK,PTF_PAYCRYTYP,PTF_PAYAMT,PTF_TRANKIND 
		INTO OUT_REMARK,OUT_POUNDAGE,OUT_PAYFEEFLAG,OUT_DEALDATE,OUT_TOACCNAME,OUT_TOCARDNO,OUT_CARDNO,OUT_TOOPENBANK,OUT_CURRCODE,OUT_TRANSUM,OUT_TRANKIND
			FROM PB_TRNFLW WHERE PTF_TRNFLW=IN_FLWNO;
	
	IF OUT_CARDNO IS NOT NULL THEN
		SELECT PAI_HLDNAME INTO OUT_ACCNAME FROM PB_ACCINF WHERE PAI_CARDNO=OUT_CARDNO FETCH FIRST 1 ROWS ONLY;
	END IF;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_INFO_REVIEW_ACCNAME
(	
	IN IN_CARDNO CHAR(30),
  OUT PROC_RET_CODE CHAR(5), 	
	OUT OUT_ACCNAME VARCHAR(30)
 ) 
	READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ杞处鐨勭數瀛愬洖鎵т俊鎭?-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氳浆鍑鸿处鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ACCNAME           杞嚭鎴峰悕	

-- 鍒涘缓浜猴細ECC.MAONF
-- 鍒涘缓鏃ユ湡 锛?2010.03.15 
------------------------------------------------------------------------
BEGIN
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
		SELECT PAI_HLDNAME INTO OUT_ACCNAME FROM PB_ACCINF WHERE PAI_CARDNO=IN_CARDNO FETCH FIRST 1 ROWS ONLY;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_FETCH_CITYNO_INFO
(	
	IN IN_BANKNO VARCHAR(12),
  	OUT PROC_RET_CODE CHAR(5), 
  	OUT OUT_CITYCODE VARCHAR(4)
 ) 
	READS SQL DATA 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鍩庡競浠ｇ爜
-- 杈撳叆鍙傛暟锛?-- IN_BANKNO锛氫汉琛屽彿
-- 杈撳嚭鍙傛暟锛?--OUT_CITYCODE锛氬煄甯備唬鐮?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2009.08.13 
------------------------------------------------------------------------
BEGIN
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;

	SELECT PBN_CITYCODE INTO OUT_CITYCODE
       FROM PB_PMSBANKNO 
            WHERE PBN_BANKNO = IN_BANKNO;
            	
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_SUCC_TRNFLW
(	
		IN IN_TRANFLW VARCHAR(20),
  	OUT PROC_RET_CODE CHAR(5)
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏇存柊璺ㄨ姹囨杞处鐘舵€?-- 杈撳叆鍙傛暟锛?-- IN_TRANFLW锛氭祦姘村彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2009.08.17 
------------------------------------------------------------------------
BEGIN
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	UPDATE PB_TRNFLW SET PTF_STT = '04' WHERE PTF_TRNFLW = IN_TRANFLW;
	
  COMMIT;
            	
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QUERY_TRANFLW_NORESULT
(	
  OUT PROC_RET_CODE CHAR(5)
 ) 
	READS SQL DATA 
    DYNAMIC RESULT SETS 1 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ杞处娴佹按鏈喅鐘舵€佺殑璁板綍
-- 杈撳叆鍙傛暟锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 

-- 鍒涘缓浜猴細ECC.MAONF
-- 鍒涘缓鏃ユ湡 锛?2010.03.17 
------------------------------------------------------------------------
BEGIN
		DECLARE ENDTIME  CHAR(14);
		DECLARE BEGINTIME  CHAR(8);
    DECLARE CUR_TRANFLWINFO CURSOR WITH RETURN TO CALLER FOR
        SELECT 	PTF_RCVCARDNO,PTF_TRNFLW,PTF_TRANKIND,PTF_TRANTIM,PTF_RCVOPENAREA,PTF_PAYCARDNO,PTF_ACCDATE,PTF_PAYAMT,PTF_CHANNEL
        FROM PB_TRNFLW
        WHERE (PTF_STT ='02' OR  PTF_STT='00') AND (PTF_TRANKIND='3' OR PTF_TRANKIND='7')AND (PTF_TRANTIM>BEGINTIME||'000000' AND PTF_TRANTIM<ENDTIME) ORDER BY PTF_TRANTIM ASC FETCH FIRST 2000 ROWS  ONLY; 
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	SET BEGINTIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP - 1 DAY,'yyyymmdd');
	SET ENDTIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	OPEN CUR_TRANFLWINFO;

  SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QUERY_TRANFLW_TIMERSIGN
(	

  OUT PROC_RET_CODE CHAR(5), 	
	OUT OUT_BALFLG VARCHAR(1)
 ) 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鏇存柊杞处娴佹壒澶勭悊鏃堕棿鎴筹紝鑻ヤ负褰撳墠鏃堕棿鍒欐嫆缁濇壒澶勭悊锛屽惁鍒欐洿鏂版椂闂存埑骞惰繘琛屾壒澶勭悊鎿嶄綔
-- 杈撳叆鍙傛暟锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_BALFLG     鏄惁杩涜鎵瑰鐞嗘爣璇嗭細1涓洪渶瑕佽繘琛屾壒澶勭悊锛?涓烘嫆缁濇壒澶勭悊;	

-- 鍒涘缓浜猴細ECC.MAONF
-- 鍒涘缓鏃ユ湡 锛?2010.03.15 
------------------------------------------------------------------------
BEGIN
	DECLARE V_CURR_DATE  CHAR(14);
	DECLARE V_BAT_DATE  CHAR(14);
	DECLARE V_CURR_HOUR  CHAR(12);
	DECLARE V_BAT_HOUR  CHAR(12);
	DECLARE V_ROWCOUNT INTEGER;								-- SQL褰卞搷璁板綍鏁?	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_BALFLG='0';
	END;
	SET OUT_BALFLG='0';
	SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP  - 30 MINUTES,'yyyymmddhhmiss');
	SET V_CURR_HOUR=SUBSTR(V_CURR_DATE,1,12);	
	SELECT PBT_TIME INTO V_BAT_DATE FROM PB_BATFLG WHERE PBT_BATNO = '1001';
  SET V_BAT_HOUR=SUBSTR(V_BAT_DATE,1,12);
  
  IF (V_BAT_HOUR<V_CURR_HOUR) THEN
			UPDATE PB_BATFLG SET PBT_TIME=V_CURR_DATE WHERE PBT_BATNO = '1001' ;
			GET DIAGNOSTICS V_ROWCOUNT = ROW_COUNT;
			  IF V_ROWCOUNT=0 THEN
			       SET OUT_BALFLG = '0';		 
				ELSE	 	 
					COMMIT;
					SET OUT_BALFLG='1';
				END IF ;
	END IF;
  
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FOREIGN_CITY_SUBBRANCH_INFO
(
  IN IN_ACCSITE VARCHAR(6),
	OUT PROC_RET_CODE VARCHAR(5),
	OUT OUT_CITYCODE VARCHAR(4),
	OUT OUT_SUBBRANCH VARCHAR(1)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ寮傚湴鏀鍩庡競浠ｇ爜

-- 杈撳叆鍙傛暟锛?-- IN_ACCSITE锛氬紑鎴风綉鐐?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CITYCODE:	寮傚湴鏀鍩庡競浠ｇ爜
-- OUT_SUBBRANCH:寮傚湴鏀鏍囪瘑,濡備负1:鍒欎负寮傚湴鏀;0:闈炲紓鍦版敮琛?-- 鏈€鍚庝慨鏀逛汉锛歮aonf
-- 鏈€鍚庝慨鏀规棩鏈燂細2010-04-27
------------------------------------------------------------------------

BEGIN
    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_SUBBRANCH='0';
		ROLLBACK ;
	END;
	
	SELECT PFS_CITYCODE
	INTO OUT_CITYCODE
	FROM PB_FORSUBBRANCH
    WHERE PFS_ACCSITE = IN_ACCSITE ;
	
	IF OUT_CITYCODE IS NULL 
	THEN
		SET PROC_RET_CODE = '00000';
		SET OUT_SUBBRANCH='0';
	ELSE
		SET PROC_RET_CODE = '00000';   
		SET OUT_SUBBRANCH='1';
	END IF;
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FETCHE_BANK_PARTY_INFO
(
   IN   IN_BSNTYPE    CHAR(1),
   OUT  PROC_RET_CODE CHAR(5)
)
READS SQL DATA
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鏀寔璺ㄨ娓呯畻绯荤粺鎺ュ叆閾惰
-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆嗭細RET_PARTYINFO
------------------------------------------------------------------------
BEGIN
		DECLARE V_CURRDATE   CHAR(8);
		DECLARE	RET_BANKINFO CURSOR WITH	RETURN FOR
			SELECT
				BNK_AREANAME,
				BNK_BANKTYPE
			FROM PB_BANKINFO 
			WHERE EXISTS (
				SELECT 1 FROM PB_PARTYINF
				WHERE PTI_BANKCODE = BNK_BANKTYPE
				FETCH FIRST 1 ROWS ONLY
			)
			ORDER BY BNK_BANKTYPE ASC;
	
	
		-- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK ;
		END;
		
		SET V_CURRDATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		
		--杩斿洖缁撴灉闆?		OPEN RET_BANKINFO;
	
		SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FETCHE_PY_PARTY_INFO
(
   IN   IN_BANKNO CHAR(3),
   OUT  PROC_RET_CODE CHAR(5)
)
READS SQL DATA
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ璺ㄨ娓呯畻绯荤粺鎺ュ叆鏈烘瀯
-- 杈撳叆鍙傛暟锛?-- IN_BANKNO  琛屽埆浠ｇ爜锛屽鏋滀负绌?'鍒欒〃绀烘煡璇㈠叏閮?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆嗭細RET_PARTYINFO
------------------------------------------------------------------------
BEGIN
		DECLARE V_CURR_DATE CHAR(8);
		DECLARE	RET_BANKINFO	CURSOR WITH	RETURN FOR
			SELECT
				PTI_PARTYID,
				PTI_PARTYNAME,
				PTI_BANKCODE,
				PTI_SETTAGENTID
			FROM PB_PARTYINF
			WHERE 
				PTI_BANKCODE = IN_BANKNO
			ORDER BY PTI_BANKCODE ASC;
	
	
		-- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK ;
		END;
		
		SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		
		--杩斿洖缁撴灉闆?		OPEN RET_BANKINFO;
	
		SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECK_TRANSFER_DUPLICATE
(
   IN  IN_CARDNO     VARCHAR(30),
   IN  IN_TOCARDNO   VARCHAR(30),
   IN  IN_PAYAMT     VARCHAR(15),
   OUT PROC_RET_CODE VARCHAR(5)
)
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 妫€鏌ユ眹娆捐褰曟槸鍚﹂噸澶?

-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛? 杞嚭鍗″彿
-- IN_TOCARDNO锛氳浆鍏ュ崱鍙?-- IN_PAYAMT锛? 杞嚭閲戦

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 淇敼浜猴細lan_xb

------------------------------------------------------------------------
BEGIN
	DECLARE V_DATE  CHAR(8);
	DECLARE V_START CHAR(14);
	DECLARE V_END   CHAR(14);
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP, 'yyyymmdd');
	SET V_START = V_DATE || '000000';
	SET V_END   = V_DATE || '235959';
	
	IF EXISTS (
	   SELECT 1 FROM PB_TRNFLW
	   WHERE 
	   PTF_TRANTIM >= V_START AND PTF_TRANTIM <= V_END
	   AND PTF_PAYCARDNO = IN_CARDNO
	   AND PTF_RCVCARDNO = IN_TOCARDNO
	   AND PTF_PAYAMT    = DECIMAL(IN_PAYAMT,15,2)
	   AND PTF_STT <> '01' FETCH FIRST 1 ROWS ONLY
	) THEN
	    SET PROC_RET_CODE = '95000';
	ELSE
		SET PROC_RET_CODE = '00000';
	END IF;
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FETCHE_PY_CLSBRANCH_INFO
(
   IN   IN_BANKNO CHAR(3),
   IN   IN_PAYBRANCH CHAR(12),
   OUT  PROC_RET_CODE CHAR(5),
   OUT  OUT_PAYBRANCH CHAR(12),
   OUT  OUT_CLSBRANCH CHAR(12),
   OUT  OUT_BRANCHNAME VARCHAR(60)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ璺ㄨ娓呯畻绯荤粺鎺ュ叆鏈烘瀯
-- 杈撳叆鍙傛暟锛?-- IN_BANKNO  琛屽埆浠ｇ爜
-- IN_PAYBRANCH 璺ㄨ鏀粯鍙備笌鏈烘瀯鍙?  褰撹鍒负'301'浜ら€氶摱琛屾椂锛屾瀛楁鍙兘涓哄垎琛屽彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_PAYBRANCH 璺ㄨ鏀粯鍙備笌鏈烘瀯鍒嗚鍙?-- OUT_CLSBRANCH 娓呯畻琛屽彿
-- 缁撴灉闆嗭細RET_PARTYINFO
------------------------------------------------------------------------
BEGIN
		DECLARE V_CURR_DATE CHAR(8);
		-- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			ROLLBACK ;
		END;
		SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		-- 浜ら€氶摱琛屾椂 闇€瑕佸垎鍒幏鍙栧紑鎴峰垎琛屽拰娓呯畻鍒嗚
		IF IN_BANKNO = '301' THEN
		   SELECT 
		   		  PTI_PARTYID,PTI_SETTAGENTID,PTI_PARTYNAME
		   INTO
		   	   	  OUT_PAYBRANCH,OUT_CLSBRANCH,OUT_BRANCHNAME
		   FROM PB_PARTYINF
		   WHERE 
		   PTI_BANKCODE='301' 
		   ORDER BY PTI_EFFECTIVEDATE DESC
		   FETCH FIRST 1 ROWS ONLY;
		-- 鍏跺畠閾惰鏃舵牴鎹鍒拰鍙備笌鏈烘瀯鍙疯幏鍙?		ELSE
		  SELECT 
		   		  PTI_PARTYID,PTI_SETTAGENTID,PTI_PARTYNAME
		   INTO
		   	   	  OUT_PAYBRANCH,OUT_CLSBRANCH,OUT_BRANCHNAME
		   FROM PB_PARTYINF
		   WHERE  
		   PTI_BANKCODE = IN_BANKNO
		   AND PTI_PARTYID  = IN_PAYBRANCH
		   ORDER BY PTI_EFFECTIVEDATE DESC
		   FETCH FIRST 1 ROWS ONLY;
		END IF;
		
		
		IF OUT_PAYBRANCH IS NULL OR OUT_CLSBRANCH IS NULL THEN
		   SET PROC_RET_CODE ='30245';
		   RETURN;
		END IF;
	
		SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_ONTIME_TRANS_BANKINF
 (OUT PROC_RET_CODE CHARACTER(5)
 ) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ閾惰淇℃伅
-- 杈撳叆鍙傛暟锛?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆嗭細RET_BANKINFO

-- 鏈€鍚庝慨鏀逛汉锛歭an_xb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.06.04
------------------------------------------------------------------------
BEGIN
	DECLARE V_CURR_DATE CHAR(8);
	DECLARE	RET_BANKINFO CURSOR WITH	RETURN FOR
		SELECT DISTINCT
			BNK_BANKTYPE   ,
			BNK_AREANAME   ,
			BNK_AREANAMEEN ,
			PTI_BANKCODE   ,
			BNK_INDEX	   ,
			PEFT_BANKTYPE
		FROM 
			PB_BANKINFO 
		LEFT OUTER JOIN 
			PB_PARTYINF
		ON
		  	PTI_BANKCODE=BNK_BANKTYPE 
		LEFT OUTER JOIN
			PB_EFTBANKNO
		ON
			BNK_BANKTYPE = PEFT_BANKTYPE
		WHERE 
			BNK_BANKTYPE <> '301'
		ORDER BY BNK_BANKTYPE ASC;


	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	--杩斿洖缁撴灉闆?	OPEN RET_BANKINFO;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_BSNORIGPARTY_QUERY
(
	IN  IN_BSNORGID VARCHAR(15),
	OUT PROC_RET_CODE CHARACTER(5),
	OUT OUT_ORGNAME  VARCHAR(60),
	OUT OUT_PARTYTYPE CHAR(4)
) 
READS SQL DATA 
 ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ閾惰淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_BSNORIGPARTY 涓氬姟鍙戣捣鏈烘瀯

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE 锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ORGNAME   锛氫笟鍔″彂璧锋満鏋勫悕绉?
-- 鏈€鍚庝慨鏀逛汉锛歭an_xb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.06.04
------------------------------------------------------------------------
BEGIN
	DECLARE V_CURRDATE   CHAR(8);
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	-- 濡傛灉涓氬姟鍙戣捣鏈烘瀯闀垮害涓?5浣嶅垯鏄湰琛屽晢鎴?	IF LENGTH(IN_BSNORGID) = 15 THEN
		SELECT PMI_NAMECN
		INTO   OUT_ORGNAME
		FROM   PB_MERINF
		WHERE  PMI_MERCHNO = IN_BSNORGID
		AND PMI_MERCHSTATUS = '0' ;
		
		SET OUT_PARTYTYPE = '0000';
	-- 鏌ヨ浜鸿鎺ュ叆鏈烘瀯琛?	ELSE
		SET V_CURRDATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		SELECT PTI_PARTYNAME,
			   PTI_PARTYTYPE
		INTO   OUT_ORGNAME,
			   OUT_PARTYTYPE
		FROM   PB_PARTYINF
		WHERE  PTI_PARTYID = IN_BSNORGID
		ORDER BY PTI_EFFECTIVEDATE DESC
		FETCH FIRST 1 ROWS ONLY;
	END IF;
	
	IF OUT_PARTYTYPE IS NULL THEN
	   SET PROC_RET_CODE ='30245';
	   RETURN;
	END IF;
	
	SET PROC_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QUERY_FIRM_INFO(
	OUT PROC_RET_CODE CHAR(5)
)
READS SQL DATA
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ浜よ鍟嗘埛淇℃伅
-- 杈撳叆鍙傛暟锛氭棤
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN

	DECLARE	RET_FIRMLIST  CURSOR WITH RETURN FOR
	SELECT PMI_MERCHNO, PMI_MERCHSTATUS, PMI_NAMECN, PMI_NAMEEN, 
    PMI_WEBSITENAME, PMI_WEBSITECODE, PMI_ACCNO, PMI_ACCNAME, 
    PMI_ACCBRANCHID, PMI_MERLEVEL FROM PB_MERINF
	WHERE PMI_MERCHSTATUS = '0' ORDER BY PMI_MERCHNO;
    
	--寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	--杩斿洖缁撴灉闆?	OPEN RET_FIRMLIST;

	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FETCH_BSNPARTY_INFO(
	IN  IN_BSNTYPE    CHAR(1),
	OUT PROC_RET_CODE CHAR(5),
    OUT OUT_FILENAME  VARCHAR(60)
)
DYNAMIC RESULT SETS 2
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鏀粯鍙戣捣鏈烘瀯淇℃伅銆?-- 杈撳叆鍙傛暟锛?-- IN_BSNTYPE 鐩墠鍙拡瀵?1銆佸崗璁敮浠樼绾?鏌ヨ鏀粯鍙戣捣鏈烘瀯锛堥噾铻嶆満鏋勫拰闈為噾铻嶆満鏋勶級銆佹敹娆句汉鍙敤鏈烘瀯锛堥噾铻嶆満鏋勶級
--                     5銆佹巿鏉冩煡璇㈢绾?鏌ヨ浜哄紑鎴疯鍒紙閲戣瀺鏈烘瀯锛夋煡璇汉鍙敤鎺ュ叆鏈烘瀯锛堥噾铻嶆満鏋勫拰闈為噾铻嶆満鏋勶級
--            璇ユ帶鍒剁洰鍓嶅幓闄?-- 涓氬姟鏈烘瀯
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?------------------------------------------------------------------------
BEGIN
	DECLARE V_BSNTYPE CHAR(6);   -- 鍗忚鏂囨湰绫诲瀷
	DECLARE V_PARTYTYPE CHAR(1); -- 鏀粯鏈烘瀯涓氬姟绫诲瀷
	DECLARE V_CURRDATE   CHAR(8);
	
	-- 鏀寔瀵瑰簲涓氬姟鏈烘瀯鍙?	DECLARE	RET_FIRMLIST  CURSOR WITH RETURN FOR
		SELECT PTI_PARTYID,PTI_PARTYNAME,PTI_PARTYTYPE
		FROM   PB_PARTYINF;		
			
    -- 鏀寔瀵瑰簲涓氬姟閾惰淇℃伅
	
	DECLARE	RET_BANKINFO CURSOR WITH	RETURN FOR
		SELECT
			BNK_AREANAME,
			BNK_BANKTYPE
		FROM PB_BANKINFO 
		WHERE EXISTS (
			SELECT 1 FROM PB_PARTYINF
			WHERE PTI_BANKCODE = BNK_BANKTYPE
		)
		ORDER BY BNK_BANKTYPE ASC;
	
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SET V_CURRDATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	
	
	--杩斿洖缁撴灉闆?鏀寔瀵瑰簲涓氬姟鏈烘瀯鍙?	OPEN RET_FIRMLIST;
	
	--鏌ヨ瀵瑰崗璁俊鎭?	IF IN_BSNTYPE = '1' THEN
		SET V_PARTYTYPE = '3';
	ELSE
		SET V_PARTYTYPE = IN_BSNTYPE;
	END IF;
	
	--杩斿洖缁撴灉闆?鏀寔瀵瑰簲涓氬姟閾惰淇℃伅
	OPEN RET_BANKINFO;
	
	--杞崲涓哄搴旂殑鍗忚鏂囨湰绫诲瀷
	IF IN_BSNTYPE = '1' THEN
		SET V_BSNTYPE = 'PAYSIG';
	ELSE
		SET V_BSNTYPE = 'QRYSIG';
	END IF;
	
	CALL PB_QRY_ACTIVE_PROTOCOL('1',V_BSNTYPE,PROC_RET_CODE,OUT_FILENAME);

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QUERY_REALTIME_TRANFLW_NORESULT
(	
  OUT PROC_RET_CODE CHAR(5)
 ) 
	READS SQL DATA 
    DYNAMIC RESULT SETS 1 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ杞处娴佹按鏈喅鐘舵€佺殑璁板綍
-- 杈撳叆鍙傛暟锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 

-- 鍒涘缓浜猴細ECC.MAONF
-- 鍒涘缓鏃ユ湡 锛?2010.06.28 
------------------------------------------------------------------------
BEGIN
		DECLARE ENDTIME  CHAR(14);
		DECLARE BEGINTIME  CHAR(8);
    DECLARE CUR_TRANFLWINFO CURSOR WITH RETURN TO CALLER FOR
        SELECT 	PTF_TRNFLW , PTF_PAYCARDNO ,PTF_CHANNEL,PTF_RCVCARDNO,PTF_TRANKIND
        FROM PB_TRNFLW
        WHERE (PTF_STT ='02' OR  PTF_STT='00') AND (PTF_TRANKIND='4' OR PTF_TRANKIND='5') AND (PTF_TRANTIM>BEGINTIME||'000000' AND PTF_TRANTIM<ENDTIME) ORDER BY PTF_TRANTIM ASC FETCH FIRST 2000 ROWS  ONLY; 
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	SET BEGINTIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP - 1 DAY,'yyyymmdd');
	SET ENDTIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	OPEN CUR_TRANFLWINFO;

  SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QUERY_EFT_TRANFLW_NORESULT
(	
  OUT PROC_RET_CODE CHAR(5)
 ) 
	READS SQL DATA 
    DYNAMIC RESULT SETS 1 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ骞夸笢蹇眹閫氳浆璐︽祦姘存湭鍐崇姸鎬佺殑璁板綍
-- 杈撳叆鍙傛暟锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 

-- 鍒涘缓浜猴細ECC.lan_xb
-- 鍒涘缓鏃ユ湡 锛?2012-01-13
------------------------------------------------------------------------
BEGIN
	DECLARE ENDTIME    CHAR(14);
	DECLARE BEGINTIME  CHAR(8);
	
    DECLARE CUR_TRANFLWINFO CURSOR WITH RETURN TO CALLER FOR
        SELECT 	
        	PTF_RCVCARDNO,PTF_TRNFLW,PTF_TRANKIND,PTF_TRANTIM,PTF_RCVOPENAREA,PTF_PAYCARDNO,PTF_ACCDATE,PTF_PAYAMT,PTF_CHANNEL
        FROM 
        	PB_TRNFLW
        WHERE 
        	(PTF_STT ='02' OR PTF_STT ='00')    AND 
        	PTF_TRANKIND='6' AND 
        	(PTF_TRANTIM>BEGINTIME AND PTF_TRANTIM<ENDTIME) 
        ORDER BY 
        	PTF_TRANTIM ASC FETCH FIRST 500 ROWS  ONLY
    ; 
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	SET BEGINTIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP - 1 DAY,'yyyymmdd') || '000000';
	SET ENDTIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	OPEN CUR_TRANFLWINFO;

  SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_KEYTRAN_DATA_QUERY
(
	IN  IN_TRANKIND        CHAR(1),
	IN  IN_NETSPOT         VARCHAR(100),
	IN  IN_PARTY           VARCHAR(60),
	IN  IN_PARTYID         CHAR(12),
	OUT PROC_RET_CODE      CHAR(5),
	OUT OUT_BANKNO         VARCHAR(3),
	OUT OUT_AREANO         CHAR(3),
	OUT OUT_CITYNO         CHAR(4),
	OUT OUT_NETSPOTNO      VARCHAR(12),
	OUT OUT_RCVPARTYID     VARCHAR(12)
)
BEGIN
	DECLARE V_NORMAL_BANK CHAR(3);
	DECLARE V_ONTIME_BANK CHAR(3);
	DECLARE V_CURR_DATE CHAR(8);
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	-- 琛屽唴/閾惰仈杞处 涓嶉渶瑕佹煡璇㈡暟鎹?	IF (IN_NETSPOT IS NOT NULL AND IN_NETSPOT <> '') OR
		IN_TRANKIND = '3' OR IN_TRANKIND='7' THEN
		-- 鏍规嵁缃戠偣鍚嶇О鏌ヨ
		SELECT 
			PBN_BANKTYPE,
			CIT_PVICODE,
			PBN_CITYCODE,
			PBN_BANKNO
		INTO
			V_NORMAL_BANK,
			OUT_AREANO,
			OUT_CITYNO,
			OUT_NETSPOTNO
		FROM 
			PB_PMSBANKNO,PB_CITYINFO
		WHERE
			CIT_CITYCODE = PBN_CITYCODE AND
			PBN_LONGNAME = IN_NETSPOT
		FETCH FIRST 1 ROWS ONLY;
		
		-- 濡傛灉榛樿涓€鑸眹娆撅紝涓旀煡璇笉鍒扮綉鐐逛俊鎭紝鍒欐姤閿?		IF (OUT_NETSPOTNO IS NULL OR OUT_NETSPOTNO = '') AND (IN_TRANKIND = '3' OR IN_TRANKIND = '7') THEN
			SET PROC_RET_CODE = '96004';
			RETURN;
		END IF;
	END IF;
		
	-- 蹇€熸眹娆?	IF (IN_PARTY IS NOT NULL AND IN_PARTY <> '') OR 
		(IN_PARTYID IS NOT NULL AND IN_PARTYID <> '') OR
		  IN_TRANKIND = '4'  THEN
		SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		-- 鏌ヨ鎺ュ叆鏈烘瀯鐩稿叧淇℃伅
		SELECT 
			PTI_BANKCODE,
			PTI_PARTYID
		INTO
			V_ONTIME_BANK,
			OUT_RCVPARTYID
		FROM 
			PB_PARTYINF
		WHERE 
			PTI_PARTYID = IN_PARTYID AND
			PTI_PARTYNAME =  IN_PARTY
		ORDER BY PTI_EFFECTIVEDATE DESC
		FETCH FIRST 1 ROWS ONLY;
		
		IF (OUT_RCVPARTYID IS NULL OR OUT_RCVPARTYID = '') AND IN_TRANKIND = '4' THEN
			SET PROC_RET_CODE = '96004';
			RETURN;
		END IF;
	END IF;
	
	IF IN_TRANKIND = '3' OR IN_TRANKIND = '7' THEN
		SET OUT_BANKNO = V_NORMAL_BANK;
	ELSEIF IN_TRANKIND = '4' THEN
		SET OUT_BANKNO = V_ONTIME_BANK;
	END IF;
	
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_PAYMENT_DATA_QUERY
(
	IN  IN_TRANKIND        CHAR(1),
	IN  IN_NETSPOT         VARCHAR(100),
	IN  IN_PARTY           VARCHAR(60),
	IN  IN_PARTYID         CHAR(12),
	OUT PROC_RET_CODE      CHAR(5),
	OUT OUT_BANKNO         VARCHAR(3),
	OUT OUT_AREANO         CHAR(3),
	OUT OUT_CITYNO         CHAR(4),
	OUT OUT_NETSPOTNO      VARCHAR(12),
	OUT OUT_RCVPARTYID     VARCHAR(12)
)
BEGIN
	DECLARE V_NORMAL_BANK CHAR(3);
	DECLARE V_ONTIME_BANK CHAR(3);
	DECLARE V_CURR_DATE CHAR(8);
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	-- 琛屽唴/閾惰仈杞处 涓嶉渶瑕佹煡璇㈡暟鎹?	IF (IN_NETSPOT IS NOT NULL AND IN_NETSPOT <> '') OR
		IN_TRANKIND = '3' OR IN_TRANKIND='7' THEN
		-- 鏍规嵁缃戠偣鍚嶇О鏌ヨ
		SELECT 
			PSD_BANKCODE,
			CIT_PVICODE,
			PSD_CITYCODE,
			PSD_BANKNO
		INTO
			V_NORMAL_BANK,
			OUT_AREANO,
			OUT_CITYNO,
			OUT_NETSPOTNO
		FROM 
			PB_PSDBANKNO,PB_CITYINFO
		WHERE
			CIT_CITYCODE = PSD_CITYCODE AND
			PSD_BANKNAME = IN_NETSPOT
		FETCH FIRST 1 ROWS ONLY;
		
		-- 濡傛灉榛樿涓€鑸眹娆撅紝涓旀煡璇笉鍒扮綉鐐逛俊鎭紝鍒欐姤閿?		IF (OUT_NETSPOTNO IS NULL OR OUT_NETSPOTNO = '') AND (IN_TRANKIND = '3' OR IN_TRANKIND='7')THEN
			SET PROC_RET_CODE = '96004';
			RETURN;
		END IF;
	END IF;
		
	-- 蹇€熸眹娆?	IF (IN_PARTY IS NOT NULL AND IN_PARTY <> '') OR 
		(IN_PARTYID IS NOT NULL AND IN_PARTYID <> '') OR
		  IN_TRANKIND = '4'  THEN
		SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		-- 鏌ヨ鎺ュ叆鏈烘瀯鐩稿叧淇℃伅
		SELECT 
			PTI_BANKCODE,
			PTI_PARTYID
		INTO
			V_ONTIME_BANK,
			OUT_RCVPARTYID
		FROM 
			PB_PARTYINF
		WHERE 
			PTI_STATE='00'	AND
			PTI_EFFECTIVEDATE <= V_CURR_DATE	AND
			PTI_PARTYID = IN_PARTYID AND
			PTI_PARTYNAME =  IN_PARTY
		ORDER BY PTI_EFFECTIVEDATE DESC
		FETCH FIRST 1 ROWS ONLY;
		
		IF (OUT_RCVPARTYID IS NULL OR OUT_RCVPARTYID = '') AND IN_TRANKIND = '4' THEN
			SET PROC_RET_CODE = '96004';
			RETURN;
		END IF;
	END IF;
	
	IF IN_TRANKIND = '3' OR IN_TRANKIND = '7' THEN
		SET OUT_BANKNO = V_NORMAL_BANK;
	ELSEIF IN_TRANKIND = '4' THEN
		SET OUT_BANKNO = V_ONTIME_BANK;
	END IF;
	
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_KEYTRAN_DATA_SAVE
(
  IN  IN_CSTNO          VARCHAR(30),
  IN  IN_RCVCARDNO      VARCHAR(30),
  IN  IN_PAYCARDNO      VARCHAR(30),
  IN  IN_TRANKIND       CHAR(1),
  IN  IN_RCVNAME        VARCHAR(60),
  IN  IN_RCVBANK        VARCHAR(100),
  IN  IN_RCVAREA        VARCHAR(60),
  IN  IN_RCVCITY        VARCHAR(60),
  IN  IN_RCVBRANCH      VARCHAR(100),
  IN  IN_RCVPARTY       VARCHAR(60),
  IN  IN_RCVPARTYID     VARCHAR(12),
  IN  IN_MOBILE         CHAR(11),
  IN  IN_KEYTRAN        CHAR(1),
  IN  IN_REMARK         VARCHAR(100),
  OUT PROC_RET_CODE     CHAR(5),
  OUT UPDATE_FLAG       CHAR(1)
)
BEGIN
  DECLARE V_NOW_DATE CHAR(8);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	SET V_NOW_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	
	IF (NOT EXISTS(SELECT 1 FROM PB_CSTRELACC WHERE PRA_CSTNO = IN_CSTNO AND PRA_ACCNO = IN_RCVCARDNO)) THEN
		
		INSERT INTO PB_CSTRELACC
		(
			PRA_CSTNO,
			PRA_ACCNO,
			PRA_NAME,
			PRA_FLAG,
			PRA_CITY,
			PRA_MOBILE,
            PRA_OPENBANK,
            PRA_AREA,
            PRA_NETSPOT,
			PRA_GROUPID,
			PRA_PAYCARDNO,
		    PRA_PARTY,
		    PRA_PARTYID,
		    PRA_REMARK,
		    PRA_MODIFYDATE,
		    PRA_COUNT,
		    PRA_KEYTRAN
		)
		VALUES
		(
			IN_CSTNO ,
			IN_RCVCARDNO ,
			IN_RCVNAME  ,
			IN_TRANKIND  ,
			IN_RCVCITY  ,
			IN_MOBILE,
            IN_RCVBANK,
            IN_RCVAREA,
            IN_RCVBRANCH,
			'0',
			IN_PAYCARDNO,
			IN_RCVPARTY,
			IN_RCVPARTYID,
			IN_REMARK,
			V_NOW_DATE,
			1,
			IN_KEYTRAN
		);
		
		SET UPDATE_FLAG='0';
	ELSE 
		UPDATE PB_CSTRELACC 
			SET
				PRA_NAME     = CASE WHEN IN_TRANKIND = '2' THEN PRA_NAME ELSE IN_RCVNAME END,
				PRA_MOBILE   = IN_MOBILE,
				PRA_FLAG     = CASE WHEN IN_TRANKIND = '6' AND PRA_FLAG <> '6' THEN PRA_FLAG ELSE IN_TRANKIND END,
				PRA_OPENBANK = CASE WHEN IN_TRANKIND = '3' OR IN_TRANKIND = '7' OR PRA_FLAG = '6' THEN IN_RCVBANK ELSE PRA_OPENBANK END,
				PRA_AREA     = CASE WHEN IN_TRANKIND = '3' OR IN_TRANKIND = '7' OR PRA_FLAG = '6' THEN IN_RCVAREA ELSE PRA_AREA END,
				PRA_CITY     = CASE WHEN IN_TRANKIND = '3' OR IN_TRANKIND = '7' OR PRA_FLAG = '6' THEN IN_RCVCITY ELSE PRA_CITY END,
				PRA_NETSPOT  = CASE WHEN IN_TRANKIND = '3' OR IN_TRANKIND = '7' OR PRA_FLAG = '6' THEN IN_RCVBRANCH ELSE PRA_NETSPOT END,
				PRA_PAYCARDNO  = CASE WHEN IN_PAYCARDNO <> '' THEN IN_PAYCARDNO ELSE PRA_PAYCARDNO END,
				PRA_PARTY    = CASE WHEN IN_TRANKIND = '4' THEN IN_RCVPARTY ELSE PRA_PARTY END,
				PRA_PARTYID  = CASE WHEN IN_TRANKIND = '4' THEN IN_RCVPARTYID ELSE PRA_PARTYID END,
				PRA_REMARK   = IN_REMARK,
				PRA_MODIFYDATE = V_NOW_DATE,
				PRA_COUNT   =  CASE WHEN PRA_COUNT > 200 THEN 200 ELSE PRA_COUNT+1 END,
				PRA_KEYTRAN  =  CASE WHEN PRA_KEYTRAN = IN_KEYTRAN THEN IN_KEYTRAN ELSE '2' END
			WHERE 
				PRA_CSTNO  = IN_CSTNO AND 
				PRA_ACCNO = IN_RCVCARDNO;
		SET UPDATE_FLAG='1';
	END IF;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_KEYTRAN_RCVQRY
(
	IN   IN_CUSTOMERID  VARCHAR(30),
	IN   IN_KEYTRAN     CHAR(1),
	IN   IN_GROUPID     VARCHAR(8),
	IN   IN_NAME        VARCHAR(60),
	IN   IN_PAGENO      INT,
	OUT  PROC_RET_CODE  CHAR(5),
	OUT  OUT_TOTALPAGE  INT
)
	READS SQL DATA 
    DYNAMIC RESULT SETS 3 
BEGIN
	DECLARE V_PAGESIZE INT;
	DECLARE V_TOTALSIZE INT;
	DECLARE V_BEFORE_DATE CHAR(8);

	DECLARE CUR_RESULT CURSOR WITH RETURN TO CALLER FOR
	SELECT * FROM(
		SELECT 
			TMP.PRA_ACCNO,
			TMP.PRA_NAME,
			TMP.PRA_FLAG,
			TMP.PRA_OPENBANK,
			TMP.PRA_AREA,
			TMP.PRA_CITY,
			TMP.PRA_NETSPOT,
			TMP.PRA_PARTY,
		    TMP.PRA_PARTYID,
			TMP.PRA_MOBILE,
		    TMP.PRA_REMARK,
		    TMP.PRA_PAYCARDNO,
		    TMP.PRA_GROUPID,
		    TMP.PRA_ALIAS,
			TMP.PRA_COUNT,
			ROW_NUMBER()OVER(ORDER BY TMP.PRA_COUNT DESC) AS ROW_ID
		FROM (
			SELECT
				PRA_ACCNO,
				PRA_NAME,
				PRA_FLAG,
				PRA_OPENBANK,
				PRA_AREA,
				PRA_CITY,
				PRA_NETSPOT,
				PRA_PARTY,
			    PRA_PARTYID,
				PRA_MOBILE,
			    PRA_REMARK,
			    PRA_PAYCARDNO,
			    PRA_GROUPID,
			    PRA_ALIAS,
			    CASE WHEN PRA_MODIFYDATE > V_BEFORE_DATE THEN PRA_COUNT ELSE 0 END AS PRA_COUNT
		    FROM 
		       PB_CSTRELACC
		    WHERE 
		       PRA_CSTNO = IN_CUSTOMERID AND
		       PRA_FLAG IN ('0','1','2','3','4','7') AND 
		       (PRA_FLAG <> '0' OR (PRA_FLAG = '0' AND LENGTH(PRA_ACCNO) <> 21))
		       AND ((IN_GROUPID IS NULL OR IN_GROUPID = '') OR PRA_GROUPID = IN_GROUPID)
		       AND ((IN_KEYTRAN <> '1') OR (PRA_KEYTRAN = '1' OR PRA_KEYTRAN = '2'))
	  ) AS TMP WHERE
	  	((IN_NAME IS NULL OR IN_NAME = '' ) OR PRA_NAME LIKE IN_NAME||'%')
    ) AS T1 WHERE
    	ROW_ID > (IN_PAGENO-1) * V_PAGESIZE AND
    	ROW_ID <= IN_PAGENO * V_PAGESIZE;
    	
    -- 鏌ヨ鏀舵浜哄垎缁?
	DECLARE CUR_GROUP CURSOR WITH RETURN TO CALLER FOR 
	SELECT 
		PRG_GROUPID,
		PRG_GROUPNAME
	FROM PB_CSTRELACCGRP
	WHERE PRG_CSTNO = IN_CUSTOMERID;
	
	-- 鏌ヨ鎵€鏈夋埛鍚?	DECLARE CUR_NAME CURSOR WITH RETURN TO CALLER FOR
	SELECT DISTINCT
		PRA_NAME,
		PRA_COUNT
    FROM 
       PB_CSTRELACC
    WHERE 
    	PRA_CSTNO = IN_CUSTOMERID
    ORDER BY PRA_COUNT DESC
    FETCH FIRST 50 ROWS ONLY;
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	SET V_PAGESIZE = 20;
	
	-- 缁熻鐢ㄤ簬宸叉坊鍔犵殑鏀舵浜鸿褰?	-- SELECT COUNT(1) INTO OUT_ALLCOUNT FROM PB_CSTRELACC WHERE PRA_CSTNO = IN_CUSTOMERID AND (PRA_KEYTRAN = '1' OR PRA_KEYTRAN = '2');
	
	SELECT COUNT(1) INTO V_TOTALSIZE FROM PB_CSTRELACC WHERE PRA_CSTNO = IN_CUSTOMERID AND
				PRA_FLAG  IN ('0','1','2','3','4','7') AND 
		       (PRA_FLAG <> '0' OR (PRA_FLAG = '0' AND LENGTH(PRA_ACCNO) <> 21))
		       AND ((IN_GROUPID IS NULL OR IN_GROUPID = '') OR PRA_GROUPID = IN_GROUPID)
		       AND ((IN_KEYTRAN <> '1') OR (PRA_KEYTRAN = '1' OR PRA_KEYTRAN = '2'))
		       AND ((IN_NAME IS NULL OR IN_NAME = '' ) OR PRA_NAME LIKE IN_NAME||'%');
	
	SET OUT_TOTALPAGE = (V_TOTALSIZE+V_PAGESIZE-1)/V_PAGESIZE;
	
	SET V_BEFORE_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP - 6 MONTH,'yyyymmdd');
	
	OPEN CUR_RESULT;
	
	OPEN CUR_GROUP;
	
	OPEN CUR_NAME;

  	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANSFER_ADD_CSTRELACC_BAT(
  IN  IN_CSTNO      VARCHAR(10), 
  IN  IN_BATSTR     CLOB,
  OUT PROC_RET_CODE CHARACTER(5),
  OUT OUT_RESULT    VARCHAR(50)
 ) 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏀舵浜虹櫥璁扮翱绠＄悊-鎵归噺娣诲姞鏀舵浜?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO  锛?瀹㈡埛鍙?-- IN_BATSTR :  鎵归噺娣诲姞瀛楃涓?姣忔潯璁板綍浠?鍒嗗壊锛屾瘡涓瓧娈电敤|鍒嗗壊
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歭an_xb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2010.12.21
------------------------------------------------------------------------
BEGIN
	DECLARE V_ACCNO VARCHAR(30); 
	DECLARE V_ALIAS VARCHAR(60); 
	DECLARE V_NAME VARCHAR(60); 
	DECLARE V_CITY VARCHAR(30); 
	DECLARE V_MOBILE VARCHAR(20); 
	DECLARE V_TYPE CHARACTER(1); 
	DECLARE V_OPENBANK VARCHAR(60); 
	DECLARE V_OPENAREA VARCHAR(60); 
	DECLARE V_OPENNETSPOT VARCHAR(60); 
	DECLARE V_GROUPID VARCHAR(8);
	
	DECLARE V_TMP    CLOB;
	DECLARE V_RECORD VARCHAR(600);
	DECLARE V_POS    INT;
	DECLARE V_LENGTH INT;
	DECLARE V_RESULT CHAR(1);
	
	
	-- 寮傚父澶勭悊
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN
		SET V_RESULT = '3';
	END;
	
	SET V_TMP = IN_BATSTR || '#';
	SET V_POS = POSSTR(V_TMP,'#');
	SET OUT_RESULT = '';
	
	WHILE V_POS > 0 DO
		
		SET V_RESULT = '0';
		SET V_RECORD = SUBSTR(V_TMP,1,V_POS-1);
		SET V_LENGTH = LENGTH(V_TMP);
		IF V_LENGTH > V_POS THEN
			SET V_TMP    = SUBSTR(V_TMP,V_POS+1);
		ELSE 
			SET V_TMP    = '';
		END IF;
		
		-- 鍒嗙粍
		SET V_POS    = POSSTR(V_RECORD,'|');
		SET V_GROUPID= SUBSTR(V_RECORD,1,V_POS-1);
		SET V_RECORD = SUBSTR(V_RECORD,V_POS+1);
		-- 鏀舵浜虹被鍨?		SET V_POS    = POSSTR(V_RECORD,'|');
		SET V_TYPE   = SUBSTR(V_RECORD,1,V_POS-1);
		SET V_RECORD = SUBSTR(V_RECORD,V_POS+1);
		-- 鍗″彿
		SET V_POS    = POSSTR(V_RECORD,'|');
		SET V_ACCNO  = SUBSTR(V_RECORD,1,V_POS-1);
		SET V_RECORD = SUBSTR(V_RECORD,V_POS+1);
		-- 鎴峰悕
		SET V_POS    = POSSTR(V_RECORD,'|');
		SET V_NAME  = SUBSTR(V_RECORD,1,V_POS-1);
		SET V_RECORD = SUBSTR(V_RECORD,V_POS+1);
		-- 鍦板尯
		SET V_POS    = POSSTR(V_RECORD,'|');
		SET V_OPENAREA  = SUBSTR(V_RECORD,1,V_POS-1);
		SET V_RECORD = SUBSTR(V_RECORD,V_POS+1);
		-- 鍩庡競
		SET V_POS    = POSSTR(V_RECORD,'|');
		SET V_CITY  = SUBSTR(V_RECORD,1,V_POS-1);
		SET V_RECORD = SUBSTR(V_RECORD,V_POS+1);
		-- 寮€鎴烽摱琛?		SET V_POS    = POSSTR(V_RECORD,'|');
		SET V_OPENBANK  = SUBSTR(V_RECORD,1,V_POS-1);
		SET V_RECORD = SUBSTR(V_RECORD,V_POS+1);
		-- 寮€鎴风綉鐐?		SET V_POS    = POSSTR(V_RECORD,'|');
		SET V_OPENNETSPOT  = SUBSTR(V_RECORD,1,V_POS-1);
		SET V_RECORD = SUBSTR(V_RECORD,V_POS+1);
		-- 鎵嬫満
		SET V_POS    = POSSTR(V_RECORD,'|');
		SET V_MOBILE  = SUBSTR(V_RECORD,1,V_POS-1);
		SET V_RECORD = SUBSTR(V_RECORD,V_POS+1);
		-- 鍒悕
		SET V_ALIAS  = V_RECORD;
		
		SET V_POS = POSSTR(V_TMP,'#');
		
		IF V_RESULT = '0' THEN
			IF (NOT EXISTS(SELECT 1 FROM PB_CSTRELACC WHERE PRA_CSTNO = IN_CSTNO AND PRA_ACCNO = V_ACCNO)) THEN
				SET V_RESULT = '1';
				INSERT INTO PB_CSTRELACC
				(
					PRA_CSTNO,
					PRA_ACCNO,
					PRA_ALIAS,
					PRA_NAME,
					PRA_FLAG,
					PRA_CITY,
					PRA_MOBILE,
		            PRA_OPENBANK,
		            PRA_AREA,
		            PRA_NETSPOT,
					PRA_GROUPID,
				    PRA_KEYTRAN
				)
				VALUES
				(
					IN_CSTNO ,
					V_ACCNO ,
					V_ALIAS ,
					V_NAME  ,
					V_TYPE  ,
					V_CITY  ,
					V_MOBILE,
		            V_OPENBANK,
		            V_OPENAREA,
		            V_OPENNETSPOT,
					V_GROUPID,
					'0'
				);
			ELSE 
				SET V_RESULT = '2';
				UPDATE PB_CSTRELACC 
					SET
						PRA_ALIAS    = V_ALIAS,
						PRA_NAME     = V_NAME,
						PRA_MOBILE   = V_MOBILE,
						PRA_FLAG     = V_TYPE,
						PRA_OPENBANK = V_OPENBANK,
						PRA_AREA     = V_OPENAREA,
						PRA_CITY     = V_CITY,
						PRA_NETSPOT  = V_OPENNETSPOT,
						PRA_GROUPID  = V_GROUPID,
						PRA_KEYTRAN  = CASE WHEN PRA_KEYTRAN = '0' THEN '0' ELSE '2' END
					WHERE PRA_CSTNO = IN_CSTNO AND PRA_ACCNO = V_ACCNO;
			END IF;
		END IF;
		
		SET OUT_RESULT = OUT_RESULT || V_RESULT;
	END WHILE;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_KEYTRAN_DATA_DEL(
	  IN  IN_CSTNO      VARCHAR(10), 
	  IN  IN_BATSTR     CLOB,
	  OUT PROC_RET_CODE CHARACTER(5),
	  OUT OUT_COUNT    INT
)
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏀舵浜虹櫥璁扮翱绠＄悊-鎵归噺娣诲姞鏀舵浜?-- 杈撳叆鍙傛暟锛?-- IN_CSTNO  锛?瀹㈡埛鍙?-- IN_BATSTR :  瑕佸垹闄ょ殑璐﹀彿闆嗗悎
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_COUNT :  鍒犻櫎鏀舵浜轰釜鏁?
-- 鏈€鍚庝慨鏀逛汉锛歭an_xb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.05.13
------------------------------------------------------------------------
BEGIN
	DECLARE V_ACCNO VARCHAR(30); 
	DECLARE V_TMP    CLOB;
	DECLARE V_POS    INT;
	DECLARE V_LENGTH INT;
	DECLARE V_KEYTRAN CHAR(1);
	DECLARE V_RESULT CHAR(1);
	
	
	-- 寮傚父澶勭悊
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN
		SET V_RESULT = '3';
	END;
	
	SET V_TMP     =  IN_BATSTR ;
	SET V_POS     =  POSSTR(V_TMP,'|');
	SET OUT_COUNT =  0;
	
	WHILE V_POS > 0 DO
		
		SET V_RESULT  = '0';
		SET V_ACCNO   = SUBSTR(V_TMP,1,V_POS-1);
		SET V_LENGTH  = LENGTH(V_TMP);
		IF V_LENGTH > V_POS THEN
			SET V_TMP = SUBSTR(V_TMP,V_POS+1);
		ELSE 
			SET V_TMP = '';
		END IF;
		
		SET V_POS = POSSTR(V_TMP,'|');
		
		IF V_RESULT = '0' THEN
			
			SELECT PRA_KEYTRAN INTO V_KEYTRAN FROM PB_CSTRELACC WHERE PRA_CSTNO = IN_CSTNO AND PRA_ACCNO = V_ACCNO;
			
			IF V_KEYTRAN = '1' THEN
				DELETE FROM PB_CSTRELACC WHERE PRA_CSTNO = IN_CSTNO AND PRA_ACCNO = V_ACCNO;
				SET OUT_COUNT = OUT_COUNT + 1;
			ELSEIF V_KEYTRAN = '2' THEN
				UPDATE PB_CSTRELACC SET PRA_KEYTRAN = '0' WHERE PRA_CSTNO = IN_CSTNO AND PRA_ACCNO = V_ACCNO;
				SET OUT_COUNT = OUT_COUNT + 1;
			END IF;
		
		END IF;
	END WHILE;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_EXISTS_KEYTRAN(
  IN  IN_CSTNO          VARCHAR(30),
  IN  IN_CARDNO         VARCHAR(30),
  IN  IN_PAYCARDNO      VARCHAR(30),
  IN  IN_TRANKIND       CHAR(1),
  IN  IN_RCVNAME        VARCHAR(60),
  IN  IN_RCVBANK        VARCHAR(100),
  IN  IN_RCVAREA        VARCHAR(60),
  IN  IN_RCVBRANCH      VARCHAR(100),
  IN  IN_RCVPARTY       VARCHAR(60),
  IN  IN_RCVPARTYID     VARCHAR(12),
  IN  IN_MOBILE         CHAR(11),
  IN  IN_REMARK         VARCHAR(100),
  OUT PROC_RET_CODE     CHAR(5),
  OUT OUT_MODEFIED      CHAR(1)
)
BEGIN
	DECLARE V_PAYCARDNO      VARCHAR(30);
    DECLARE V_TRANKIND       CHAR(1);
    DECLARE V_RCVNAME        VARCHAR(60);
    DECLARE V_RCVBANK        VARCHAR(60);
    DECLARE V_RCVAREA        VARCHAR(60);
    DECLARE V_RCVBRANCH      VARCHAR(60);
    DECLARE V_RCVPARTY       VARCHAR(60);
    DECLARE V_RCVPARTYID     VARCHAR(12);
    DECLARE V_MOBILE         CHAR(11);
    DECLARE V_REMARK         VARCHAR(100);
    DECLARE V_COUNT          INT;
    DECLARE V_NOWDATE        CHAR(8);
    DECLARE V_KEYTRAN        CHAR(1);
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	SELECT 
		PRA_PAYCARDNO,PRA_FLAG,PRA_NAME,PRA_OPENBANK,PRA_AREA,PRA_NETSPOT,PRA_PARTY,PRA_PARTYID,PRA_MOBILE,PRA_REMARK,PRA_COUNT,PRA_KEYTRAN
	INTO 
		V_PAYCARDNO,V_TRANKIND,V_RCVNAME,V_RCVBANK,V_RCVAREA,V_RCVBRANCH,V_RCVPARTY,V_RCVPARTYID,V_MOBILE,V_REMARK,V_COUNT,V_KEYTRAN
	FROM PB_CSTRELACC WHERE PRA_CSTNO=IN_CSTNO AND PRA_ACCNO=IN_CARDNO
	FETCH FIRST 1 ROWS ONLY;
	
	IF V_TRANKIND IS NULL OR (V_KEYTRAN <> '1' AND V_KEYTRAN <> '2') THEN
		SET OUT_MODEFIED = '0';
	ELSEIF 
		IN_TRANKIND <> V_TRANKIND OR
		(IN_TRANKIND <> '2' AND IN_RCVNAME<>V_RCVNAME) OR 
		(IN_TRANKIND = '3' AND (IN_RCVBANK <> V_RCVBANK OR IN_RCVAREA <> V_RCVAREA OR IN_RCVBRANCH <> V_RCVBRANCH ))OR 
		(IN_TRANKIND = '4' AND (IN_RCVPARTY <> V_RCVPARTY OR IN_RCVPARTYID <> V_RCVPARTYID)) OR
		IN_MOBILE <> V_MOBILE OR IN_REMARK <> V_REMARK THEN
		SET OUT_MODEFIED = '1';
	ELSE
		SET OUT_MODEFIED = '2';
	END IF;
	
	IF (OUT_MODEFIED = '1' OR OUT_MODEFIED = '2') THEN
		SET V_NOWDATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		
		IF V_COUNT >500 THEN
			SET V_COUNT = 500;
		ELSE
			SET V_COUNT = V_COUNT+1;
		END IF;
		
		
		UPDATE PB_CSTRELACC SET PRA_PAYCARDNO = V_PAYCARDNO ,PRA_MODIFYDATE = V_NOWDATE,PRA_COUNT = V_COUNT
		WHERE PRA_CSTNO=IN_CSTNO AND PRA_ACCNO=IN_CARDNO;
		
		COMMIT;
	END IF;
	
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANFLOW_CHECK(
	IN IN_TRNFLW	    VARCHAR(20) ,
	IN IN_CSTNO	        VARCHAR(30) ,
	IN IN_DEALDATE	    CHAR(14),     
  	IN IN_PAYCARDNO	    VARCHAR(30),
  	IN IN_RCVCARDNO  	VARCHAR(30),  
  	IN IN_RCVNAME	    VARCHAR(60),  
  	IN IN_TRANKIND	    CHAR(1),    
  	IN IN_TRANAMT	    DECIMAL(15,2),
  	IN IN_TRANFEE	    DECIMAL(15,2),
  	IN IN_ACCDATE	    CHAR(8),
  	IN IN_STT           CHAR(2),   
  	OUT PROC_RET_CODE   CHAR(5)
)
BEGIN
	DECLARE V_CHKDATE CHAR(8);
	
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	-- 濡傛灉涓嶆槸鏈€缁堢姸鎬侊紝涓嶈鍏ユ煡璇佽〃
	IF IN_STT<>'01' AND IN_STT<>'04' THEN
		SET PROC_RET_CODE = '95000';
		RETURN;
	END IF;
	
	SET V_CHKDATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	
	IF EXISTS (SELECT 1 FROM PB_TRNFLW_CHECK WHERE PTC_TRNFLW = IN_TRNFLW) THEN
		UPDATE 
			PB_TRNFLW_CHECK 
		SET 
			PTC_STT     = IN_STT,
			PTC_CHKDATE = V_CHKDATE 
		WHERE
			PTC_TRNFLW  = IN_TRNFLW;
	ELSE 
	
		INSERT INTO PB_TRNFLW_CHECK(
			PTC_TRNFLW	,
			PTC_CSTNO	,
			PTC_DEALDATE,	
			PTC_PAYCARDNO,
			PTC_RCVCARDNO,
			PTC_RCVNAME	,
			PTC_TRANKIND,	
			PTC_TRANAMT	,
			PTC_TRANFEE	,
			PTC_STT	,
			PTC_ACCDATE	,
			PTC_CHKDATE	
		)VALUES(
			IN_TRNFLW	 ,
			IN_CSTNO	 ,
			IN_DEALDATE	 ,
			IN_PAYCARDNO  ,
			IN_RCVCARDNO  ,
			IN_RCVNAME	 ,
			IN_TRANKIND	 ,
			IN_TRANAMT	 ,
			IN_TRANFEE	 ,
			IN_STT	     ,
			IN_ACCDATE	 ,
			V_CHKDATE	 
		);
	
	END IF;
	
	SET PROC_RET_CODE = '00000';
	
	COMMIT;
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRANFLOW_CACHE_QUERY(
	IN  IN_TRNFLW	    VARCHAR(20) ,
	OUT PROC_RET_CODE   CHAR(5),
	OUT OUT_STT         VARCHAR(2)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 浠庢煡璇佽〃涓垽鏂祦姘存槸鍚︽垚鍔?-- 杈撳叆鍙傛暟锛?-- IN_TRNFLW  锛?杞处娴佹按鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_STT :  杞处鐘舵€?
-- 鏈€鍚庝慨鏀逛汉锛歭an_xb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.12.20
------------------------------------------------------------------------
BEGIN
	DECLARE V_TRANKIND CHAR(1);
	DECLARE V_STT   CHAR(2);
	DECLARE V_CHKDATE CHAR(8);
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	
	SET V_CHKDATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	
	SELECT
		PTC_STT,PTC_TRANKIND
	INTO
		V_STT,V_TRANKIND
	FROM 
		PB_TRNFLW_CHECK 
	WHERE 
		PTC_TRNFLW = IN_TRNFLW;
	
	IF V_STT='04' THEN
		-- 涓€鑸眹娆撅紝鎴愬姛鐘舵€佷负 4
		IF V_TRANKIND = '3' OR V_TRANKIND = '6' OR V_TRANKIND = '7' THEN
			SET OUT_STT='4';
		-- 蹇€熸眹娆撅紝鎴愬姛鐘舵€佷负 1
		ELSEIF V_TRANKIND = '4' OR V_TRANKIND='5' THEN
			SET OUT_STT='1';
		ELSE 
			SET PROC_RET_CODE = '95000';
			RETURN;
		END IF;
		-- 鏇存柊鏌ヨ瘉鏃堕棿
		UPDATE 
			PB_TRNFLW_CHECK 
		SET 
			PTC_CHKDATE = V_CHKDATE 
		WHERE
			PTC_TRNFLW  = IN_TRNFLW;
		
		SET PROC_RET_CODE = '00000';
	ELSE
		SET PROC_RET_CODE = '95000';
	END IF;
	
	COMMIT;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_FETCHE_EFT_INFO
(	
	IN IN_BANKNO CHAR(3),
    OUT PROC_RET_CODE CHARACTER(5)
) 
	READS SQL DATA 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨEFT鎺ュ叆鏈烘瀯
-- 杈撳叆鍙傛暟锛?-- IN_BANKNO锛氶摱琛屽彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_PVICODE锛氱渷鐩磋緰甯備唬鐮?-- 缁撴灉闆嗭細CUR_CITYINFO 
-- 鏈€鍚庝慨鏀逛汉锛欵CC.lan_xb
------------------------------------------------------------------------
BEGIN
	--鑾峰彇鎸囧畾鐪併€佺洿杈栧競鐨勫煄甯?	DECLARE	CUR_CITYINFO CURSOR WITH RETURN FOR
		SELECT 
			PEFT_BANKNO,
			PEFT_LONGNAME,
			PEFT_CITYCODE,
			PEFT_CITYNAME,
			PEFT_SHORTNAME
		FROM  
			PB_EFTBANKNO
		WHERE
		    PEFT_BANKTYPE = IN_BANKNO
	;


	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	--杩斿洖缁撴灉闆?	OPEN CUR_CITYINFO;
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_SYS_QRY_ISREGISTER
(
	IN IN_CARDNO VARCHAR(30),
	OUT PROC_RET_CODE VARCHAR(5),
	OUT OUT_FLAG CHAR(1)
)
---------------------------------------------
--IN_CARDNO  杈撳叆鍙傛暟锛氬崱鍙?--PROC_RET_CODE 杈撳嚭鍙傛暟锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜
--OUT_FLAG   0锛氫笉鏄煭淇″瘑鐮佺敤鎴锋垨璇佷功鐢ㄦ埛 1锛氭槸鐭俊瀵嗙爜鐢ㄦ埛鎴栬瘉涔︾敤鎴?---------------------------------------------
BEGIN
	DECLARE V_CSTNO         VARCHAR(20);
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	SELECT PIF_CSTNO INTO V_CSTNO FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO;
	IF V_CSTNO IS NULL OR V_CSTNO ='' THEN
		SET OUT_FLAG = '0';
	ELSE
		SET OUT_FLAG = '1';
	END IF;
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_PAYMENT_FETCH_CITYANDNETSPOTS_INFO
(	
	IN IN_BANKNO      CHAR(3),
  	IN IN_PRVNO       VARCHAR(3),	
	IN IN_CITYNO      VARCHAR(4),
	IN IN_LANGUAGE    CHAR(5),
  	OUT PROC_RET_CODE CHAR(5)
 ) 
	READS SQL DATA 
	RESULT SETS 2
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ閾惰鐪佺骇鍒嗚鐨勫煄甯傛敮琛屽拰缃戠偣淇℃伅淇℃伅
-- 杈撳叆鍙傛暟锛?-- IN_BANKNO锛氶摱琛屽彿
-- IN_PRVNO: 鐪佺紪鍙?-- IN_CITYNO锛氬煄甯傜紪鍙?-- IN_LANGUAGE锛氳绉?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- 缁撴灉闆嗭細CUR_CITYINFO  CUR_NETSPOTINFO

-- 鏈€鍚庝慨鏀逛汉锛欵CC.LAN_XB
-- 鏈€鍚庝慨鏀规棩鏈?锛?2012-03-05
------------------------------------------------------------------------
BEGIN
	
	-- 鑾峰彇鎸囧畾鐪併€佺洿杈栧競鐨勫煄甯?	DECLARE	CUR_CITYINFO CURSOR WITH	RETURN FOR
		SELECT CIT_CITYCODE,CASE WHEN IN_LANGUAGE='en_US' THEN CIT_CITYNAMEEN ELSE CIT_CITYNAME END CASE FROM  
			PB_CITYINFO WHERE CIT_PVICODE = IN_PRVNO AND 
				EXISTS(SELECT 1 FROM PB_PSDBANKNO WHERE PSD_BANKCODE = IN_BANKNO AND PSD_CITYCODE=CIT_CITYCODE)
					ORDER BY CIT_CITYCODE ASC;

	-- 鑾峰彇缃戠偣淇℃伅
	DECLARE	CUR_NETSPOTINFO	CURSOR WITH	RETURN FOR
		SELECT PSD_BANKNO,PSD_BANKNAME
        	FROM PB_PSDBANKNO 
            	WHERE PSD_BANKCODE = IN_BANKNO   AND  PSD_CITYCODE = IN_CITYNO;

	-- 杩斿洖绌虹粨鏋滈泦
	DECLARE	CUR_EMPTY CURSOR WITH	RETURN FOR
	   SELECT CIT_CITYCODE,CIT_CITYNAME FROM PB_CITYINFO WHERE 1=2 FETCH FIRST 1 ROWS ONLY;

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	--杩斿洖缁撴灉闆?	
	IF IN_PRVNO IS NOT NULL AND LENGTH(IN_PRVNO) = 3 THEN
		OPEN CUR_CITYINFO;
	ELSE
	    OPEN CUR_EMPTY;
	END IF;
	
	IF IN_CITYNO IS NOT NULL AND LENGTH(IN_CITYNO) = 4 THEN
		OPEN CUR_NETSPOTINFO;
	ELSE
	    OPEN CUR_EMPTY;
	END IF;
	
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_PAYMENT_FETCH_CITYNO_INFO
(	
	IN IN_BANKNO VARCHAR(12),
  	OUT PROC_RET_CODE CHAR(5), 
  	OUT OUT_CITYCODE VARCHAR(4)
 ) 
	READS SQL DATA 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鍩庡競浠ｇ爜
-- 杈撳叆鍙傛暟锛?-- IN_BANKNO锛氫簩浠ｆ敮浠樺弬涓庢満鏋勫彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CITYCODE锛氬煄甯備唬鐮?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.lan_xb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2012-03-05
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;

	SELECT PSD_CITYCODE INTO OUT_CITYCODE
       FROM PB_PSDBANKNO 
            WHERE PSD_BANKNO = IN_BANKNO;
            	
	SET PROC_RET_CODE = '00000';
	
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRYREMIT_TEMPLATE_ADD
 (
	IN      PF_TEMPLATEID		VARCHAR(50),
	IN	PF_TEMPLATENAME		VARCHAR(50),
	IN	PF_CTFNO		VARCHAR(50),
	IN	PF_REMITTYPE		VARCHAR(1),      
	IN	PF_CRYTYPE		VARCHAR(3),     
	IN	PF_TRANAMT		VARCHAR(15),		 
	IN	PF_PAYACC		VARCHAR(50),   
	IN	PF_PAYADDRESS		VARCHAR(146),   
	IN	PF_PHONE		VARCHAR(15),    
	IN	PF_RCVNAME		VARCHAR(10),    
	IN	PF_RCVADDRESS		VARCHAR(146), 
	IN	PF_RCVTYPE		VARCHAR(20),
	IN	PF_RCVACC		VARCHAR(34),    
	IN	PF_RCVAGENT	        VARCHAR(146), 
	IN	PF_RCVOPENACNO		VARCHAR(34),    
	IN	PF_RCVSWIFT1		VARCHAR(11),  
	IN	PF_RCVBRANCH		VARCHAR(146),   
	IN	PF_COUNTRYNAMECODE	VARCHAR(3),  
	IN	PF_REM			VARCHAR(220),  
	IN	PF_FEETYPE		VARCHAR(1),    
	IN	PF_ISALLSUM		VARCHAR(2),    
	IN	PF_PAYACCCRY		VARCHAR(3),    
	IN	PF_SUBACC		VARCHAR(50),    
	IN	PF_TRADECODE		VARCHAR(6),    
	IN	PF_BUZREM		VARCHAR(50),    
	IN      PF_MAXCOUNT             INTEGER, 
 
        OUT PROC_RET_CODE CHARACTER(5),
	OUT OPFLAG CHARACTER(1)
 ) 
  
BEGIN

DECLARE V_NO VARCHAR(50) ;

DECLARE V_CUSTNO_SEQ INTEGER ;

DECLARE V_TEMPLATEID VARCHAR(50);

DECLARE V_COUNT INTEGER;


SELECT KJHK_TEMPLATEID INTO V_TEMPLATEID FROM PB_QRYREMIT_TEMPLATE WHERE KJHK_CTFNO = PF_CTFNO AND KJHK_TEMPLATENAME = PF_TEMPLATENAME;

IF EXISTS (SELECT KJHK_TEMPLATENAME FROM PB_QRYREMIT_TEMPLATE WHERE KJHK_CTFNO = PF_CTFNO AND KJHK_TEMPLATENAME = PF_TEMPLATENAME ) THEN 
    
    UPDATE PB_QRYREMIT_TEMPLATE  SET

	KJHK_TEMPLATENAME    = PF_TEMPLATENAME,
	KJHK_CTFNO	    = PF_CTFNO,
	KJHK_REMITTYPE       = PF_REMITTYPE,
	KJHK_CRYTYPE	    = PF_CRYTYPE,   
	KJHK_TRANAMT	    = PF_TRANAMT,		 
	KJHK_PAYACC	    = PF_PAYACC,
	KJHK_PAYADDRESS	    = PF_PAYADDRESS,
	KJHK_PHONE	    = PF_PHONE,
	KJHK_RCVNAME	    = PF_RCVNAME,
	KJHK_RCVADDRESS	    = PF_RCVADDRESS,
	KJHK_RCVTYPE	    = PF_RCVTYPE,
	KJHK_RCVACC	    = PF_RCVACC,
	KJHK_RCVAGENT	    = PF_RCVAGENT,
	KJHK_RCVOPENACNO	    = PF_RCVOPENACNO,
	KJHK_RCVSWIFT1	    = PF_RCVSWIFT1,
	KJHK_RCVBRANCH	    = PF_RCVBRANCH,
	KJHK_COUNTRYNAMECODE = PF_COUNTRYNAMECODE,
	KJHK_REM		    = PF_REM,
	KJHK_FEETYPE	    = PF_FEETYPE,
	KJHK_ISALLSUM	    = PF_ISALLSUM,
	KJHK_PAYACCCRY	    = PF_PAYACCCRY,
	KJHK_SUBACC	    = PF_SUBACC,
	KJHK_TRADECODE	    = PF_TRADECODE,  
	KJHK_BUZREM	    = PF_BUZREM

    WHERE KJHK_TEMPLATEID = V_TEMPLATEID;
    SET OPFLAG = '2';   

ELSE

    SELECT NEXTVAL FOR PB_TEMPLATEID INTO V_CUSTNO_SEQ FROM SYSIBM.SYSDUMMY1;

    SET V_NO = LEFT(CHAR(DECIMAL(V_CUSTNO_SEQ,10)),10);

    SELECT COUNT(1) INTO V_COUNT FROM PB_QRYREMIT_TEMPLATE WHERE KJHK_CTFNO = PF_CTFNO ;
   

    IF V_COUNT >= PF_MAXCOUNT THEN 

    	--鍒ゆ柇妯＄増鏄惁瓒呰繃10涓?
	    SET PROC_RET_CODE = '00000';

            SET OPFLAG='3';

	    RETURN;
	  
    END IF;

    INSERT INTO PB_QRYREMIT_TEMPLATE																							

    (   
        KJHK_TEMPLATEID	,
	KJHK_TEMPLATENAME,
	KJHK_CTFNO	,
	KJHK_REMITTYPE	,      
	KJHK_CRYTYPE	,     
	KJHK_TRANAMT	,		 
	KJHK_PAYACC	,   
	KJHK_PAYADDRESS	,   
	KJHK_PHONE	,    
	KJHK_RCVNAME	,    
	KJHK_RCVADDRESS	, 
	KJHK_RCVTYPE    ,
	KJHK_RCVACC	,    
	KJHK_RCVAGENT	, 
	KJHK_RCVOPENACNO	,    
	KJHK_RCVSWIFT1	,  
	KJHK_RCVBRANCH	,   
	KJHK_COUNTRYNAMECODE ,  
	KJHK_REM		,  
	KJHK_FEETYPE	,    
	KJHK_ISALLSUM	,    
	KJHK_PAYACCCRY	,    
	KJHK_SUBACC	,    
	KJHK_TRADECODE	,    
	KJHK_BUZREM	    
    )																							

    VALUES																							

    (  
        V_NO,
	PF_TEMPLATENAME	,	
	PF_CTFNO	,	
	PF_REMITTYPE	,	
	PF_CRYTYPE	,	
	PF_TRANAMT	,	
	PF_PAYACC	,	
	PF_PAYADDRESS	,	
	PF_PHONE	,	
	PF_RCVNAME	,	
	PF_RCVADDRESS	,
	PF_RCVTYPE	,
	PF_RCVACC	,	
	PF_RCVAGENT	,        
	PF_RCVOPENACNO	,	
	PF_RCVSWIFT1	,	
	PF_RCVBRANCH	,	
	PF_COUNTRYNAMECODE,	
	PF_REM		,	
	PF_FEETYPE	,	
	PF_ISALLSUM	,	
	PF_PAYACCCRY	,	
	PF_SUBACC	,	
	PF_TRADECODE	,	
	PF_BUZREM		
     );  
     
     SET OPFLAG = '1';   
END IF;

SET PROC_RET_CODE = '00000';

COMMIT;

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRYREMIT_TEMPLATE_LIST(
IN	IN_CSTNO	CHARACTER(20) ,  
OUT     PROC_RET_CODE   CHARACTER(5) 
)
RESULT SETS 1
   
BEGIN
	DECLARE	RET_CURSOR	CURSOR WITH	RETURN FOR
	SELECT
		KJHK_TEMPLATEID	,
		KJHK_TEMPLATENAME,
		KJHK_CTFNO	,
		KJHK_REMITTYPE	,      
		KJHK_CRYTYPE	,     
		KJHK_TRANAMT	,		 
		KJHK_PAYACC	,   
		KJHK_PAYADDRESS	,   
		KJHK_PHONE	,    
		KJHK_RCVNAME	,    
		KJHK_RCVADDRESS	,
		KJHK_RCVTYPE    ,
		KJHK_RCVACC	,    
		KJHK_RCVAGENT	, 
		KJHK_RCVOPENACNO	,    
		KJHK_RCVSWIFT1	,  
		KJHK_RCVBRANCH	,   
		KJHK_COUNTRYNAMECODE ,  
		KJHK_REM		,  
		KJHK_FEETYPE	,    
		KJHK_ISALLSUM	,    
		KJHK_PAYACCCRY	,    
		KJHK_SUBACC	,    
		KJHK_TRADECODE	,    
		KJHK_BUZREM	    
	FROM PB_QRYREMIT_TEMPLATE t WHERE 
		 KJHK_CTFNO = IN_CSTNO 	 
	ORDER BY KJHK_TEMPLATEID;
	
	OPEN RET_CURSOR;
	
	SET PROC_RET_CODE = '00000';
	RETURN;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRYREMIT_TEMPLATE_DELETE
 (
  IN PF_TEMPLATEID     VARCHAR(50), 
  OUT PROC_RET_CODE    CHARACTER(5)  
 ) 

BEGIN

   DELETE  FROM PB_QRYREMIT_TEMPLATE WHERE KJHK_TEMPLATEID = PF_TEMPLATEID;																																												

COMMIT;

SET PROC_RET_CODE = '00000';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_TRNFLW_STT_QUERY
(
	IN IN_FLOWNO 		VARCHAR(20),
	OUT PROC_RET_CODE 	CHAR(5)
)
READS SQL DATA 
DYNAMIC RESULT SETS 1
BEGIN
	DECLARE	CUR_TRANINFO CURSOR WITH	RETURN FOR
	SELECT 
		PTF_ACCDATE,
		PTF_TRANTIM,
		PTF_PAYBRA       ,-- 浠樻鏂规満鏋勪唬鐮?	    PTF_PAYCARDNO    ,-- 浠樻鏂瑰崱鍙?	    PTF_PAYAMT       ,-- 杞垬閲戦
	    PTF_CASHFLAG     ,-- 鎵嬬画璐规敮浠樻柟寮?	    PTF_RCVBRA       ,-- 鏀舵鏂规満鏋勪唬鐮?	    PTF_RCVCARDNO    ,-- 鏀舵鏂瑰崱鍙?	    PTF_RCVNAME      ,-- 鏀舵鏂规埛鍚?	    PTF_REMARK       ,-- 闄勮█
	    PTF_STT          ,-- 鐘舵€?	    PTF_TRANKIND     ,-- 杞处绉嶇被
	    PTF_RCVOPENBANK  ,-- 鏀舵浜哄紑鎴烽摱琛?	    PTF_RCVOPENCITY  ,-- 鏀舵浜哄紑鎴峰煄甯?	    PTF_RCVOPENAREA  ,-- 鏀舵浜哄紑鎴峰湴鍖?	    PTF_RCVOPENBRANCH,-- 鏀舵浜哄紑鎴风綉鐐?	    PTF_TRANFEE       -- 杞处鎵嬬画璐?	FROM 
		PB_TRNFLW 
	WHERE 
		PTF_TRNFLW=IN_FLOWNO;
		
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	OPEN CUR_TRANINFO;
		
	SET PROC_RET_CODE = '00000';
END
DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_GET_MOBILE_NUM (
	IN CARDNO VARCHAR(30),
	OUT PROC_RET_CODE CHARACTER(5),
    OUT OUT_MOBILE VARCHAR(30)
	
) 
READS SQL DATA 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼锛堟煡璇㈡墜鏈哄彿鐮侊級
-- 鏍规嵁涓诲崱鍙疯幏寰楁墜鏈哄彿鐮?-- 杈撳叆鍙傛暟锛?-- CARDNO: 


-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_MOBILE锛氭墜鏈哄彿鐮?
-- 鏈€鍚庝慨鏀逛汉锛歨uangsong
-- 鏈€鍚庝慨鏀规棩鏈燂細2006.06.10

------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	SELECT PIF_MOBILE INTO OUT_MOBILE FROM PB_CSTINF WHERE PIF_ACCNO=CARDNO;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_ADD_APPACC_CORE ( 
	IN IN_TELLERNO		VARCHAR(10),
	IN IN_BANKNO		VARCHAR(6),
	IN IN_NODENO		VARCHAR(6),
	IN IN_CARDNO		VARCHAR(30),
	IN IN_APPDCARDNO	VARCHAR(30),
	IN IN_APPDCARDTYPE  VARCHAR(1),    
	IN IN_APPDCTFTYPE   VARCHAR(2),  
	IN IN_APPDCTFNO     VARCHAR(30),  
	IN IN_APPDCARDNAME  VARCHAR(30), 
	IN IN_APPDCARDSEX   VARCHAR(1), 
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CUSTNAME	VARCHAR(30),
	OUT OUT_CUSTSEX		VARCHAR(1),
	OUT OUT_CUSTSTT		VARCHAR(1)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛鍏宠仈甯愭埛娣诲姞
-- 杈撳叆鍙傛暟锛?-- IN_TELLERNO		鏌滃憳鍙?   
-- IN_BANKNO		鍒嗚鍙?-- IN_NODENO		缃戠偣鍙?-- IN_CARDNO		涓诲崱鍙? 
-- IN_APPDCARDNO	涓嬫寕鍗″崱鍙?   
-- IN_APPDCARDTYPE  涓嬫寕鍗＄被鍨?   
-- IN_APPDCTFTYPE   涓嬫寕鍗℃寔鍗′汉璇佷欢绫诲瀷
-- IN_APPDCTFNO     涓嬫寕鍗℃寔鍗′汉璇佷欢鍙风爜
-- IN_APPDCARDNAME  涓嬫寕鍗℃寔鍗′汉濮撳悕 
-- IN_APPDCARDSEX   涓嬫寕鍗℃寔鍗′汉鎬у埆

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNAME	瀹㈡埛濮撳悕       
-- OUT_CUSTSEX	瀹㈡埛鎬у埆
-- OUT_CUSTSTT	瀹㈡埛鐘舵€?-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.03.27
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME VARCHAR(14);
	DECLARE V_CUSTNO VARCHAR(10);
	DECLARE V_CUSTTYPE VARCHAR(1);
	DECLARE V_TEMP2 VARCHAR(10);
	
	DECLARE V_FIXSTT VARCHAR(1);
	DECLARE V_FIXCSTNO VARCHAR(10);
	DECLARE V_FIXCSTTYP VARCHAR(1);
	DECLARE V_FIXCTFNO VARCHAR(30);
	DECLARE V_FIXCTFTYP VARCHAR(2);
	DECLARE V_FIXMOBILE VARCHAR(20);
	

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--鍒ゆ柇涓诲崱鏄惁绛剧害
    SELECT PIF_CSTNO,PIF_STT,PIF_CSTTYP,PIF_CTFNO,PIF_CTFTYP,PIF_MOBILE  
		INTO V_FIXCSTNO,V_FIXSTT,V_FIXCSTTYP,V_FIXCTFNO,V_FIXCTFTYP,V_FIXMOBILE 
		FROM PB_CSTINF 
		WHERE PIF_ACCNO = IN_CARDNO;
	IF V_FIXCSTNO IS NULL OR V_FIXCSTNO=''	THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;
	
	--鍒ゆ柇瀹㈡埛鏄惁琚浠?	IF V_FIXSTT = '1' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0805';
		SET OUT_ANSINFO = '缃戦摱瀹㈡埛宸茶姝粯';
		RETURN;		
	END IF;
	
	--鍒ゆ柇鍏宠仈鍏崇郴鏄惁宸茬粡瀛樺湪
	IF EXISTS(
		SELECT 1 FROM PB_ACCINF WHERE PAI_CARDNO = IN_APPDCARDNO AND
		PAI_CSTNO = V_FIXCSTNO
	) THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0807';
		SET OUT_ANSINFO = '涓诲崱鍜屼笅鎸傚崱鍏宠仈鍏崇郴宸茬粡瀛樺湪';
		RETURN;	
	END IF;
	
	--濡傛灉璇ヤ笅鎸傚崱宸茬粡浣滀负涓诲崱绛剧害锛屽垽鏂櫥褰曟柟寮忔槸鍚︾浉鍚?	IF EXISTS(SELECT 1 FROM PB_CSTINF WHERE PIF_ACCNO = IN_APPDCARDNO AND PIF_CSTTYP<>V_FIXCSTTYP) THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0826';
		SET OUT_ANSINFO = '涓嬫寕鍗″凡涓轰富鍗′笖鐧诲綍鏂瑰紡涓嶅悓';
		RETURN;				
	END IF;
	
	--濡傛灉璇ヤ笅鎸傚崱宸茬粡鎸傚埌鍏朵粬涓诲崱涓婏紝鍒ゆ柇鐧诲綍鏂瑰紡鏄惁鐩稿悓
	SELECT PAI_CSTNO INTO V_TEMP2 FROM PB_ACCINF WHERE PAI_CARDNO = IN_APPDCARDNO AND PAI_MSTFLAG = '0' FETCH FIRST 1 ROWS ONLY;
	IF V_TEMP2 IS NOT NULL AND V_TEMP2 <> '' THEN
		IF EXISTS(SELECT 1 FROM PB_CSTINF WHERE PIF_CSTNO = V_TEMP2 AND PIF_CSTTYP<>V_FIXCSTTYP) THEN
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0825';
			SET OUT_ANSINFO = '鍗″凡涓轰笅鎸傚崱涓旂櫥褰曟柟寮忎笉鍚?;
			RETURN;				
		END IF;
	END IF;	
	
	--濡傛灉涓嬫寕鍗℃槸璐疯鍗★紝鍒ゆ柇涓嬫寕鍗℃寔鍗′汉璇佷欢绫诲瀷鏄惁涓庝富鍗℃寔鍗′汉璇佷欢绫诲瀷涓€鑷?	IF IN_APPDCARDTYPE = '2' THEN
		IF V_FIXCTFTYP <> IN_APPDCTFTYPE OR V_FIXCTFNO <> IN_APPDCTFNO 
		THEN
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0810';
			SET OUT_ANSINFO = '璇佷欢鏍￠獙涓嶉€氳繃';
			RETURN;			
		END IF;
	END IF;
	
	--濡傛灉涓诲崱瀵瑰簲鐨勬槸鎵嬫満娉ㄥ唽鐢ㄦ埛骞朵笖鎵嬫満鍙风爜鏄€?0000000000鈥?	IF V_FIXCSTTYP = '0' AND V_FIXMOBILE = '00000000000' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0834';
		SET OUT_ANSINFO = '鐢ㄦ埛绛剧害鎵嬫満鍙风爜鏃犳晥';
		ROLLBACK;
		RETURN;	
	END IF;
	
	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	--鍙栧緱缃戦摱瀹㈡埛鍙峰拰鐢ㄦ埛绫诲瀷
	SET V_CUSTNO = V_FIXCSTNO;
	SET V_CUSTTYPE = V_FIXCSTTYP;	
	
	--灏嗕俊鎭彃鍏ヤ釜浜哄鎴锋敞鍐屽崱鍒楄〃
	INSERT INTO PB_ACCINF
	(
		PAI_CSTNO,
		PAI_CARDNO,
		PAI_CARDTYP,
		PAI_CARDKIND,
		PAI_MSTFLAG,
		PAI_RELATETIM,
		PAI_HLDNAME,
		PAI_HLDSEX,
		PAI_HLDCTFTYP,
		PAI_HLDCTFNO,
		PAI_FLAG,
		PAI_COMMFLAG,
		PAI_CHGTELLER,
		PAI_CHGBRANCHNO,
		PAI_CHGNETNO,
		PAI_LASTCHGTIM
	)
	VALUES
	(
		V_CUSTNO,
		IN_APPDCARDNO,                     
		IN_APPDCARDTYPE, 
		'0',
		'0',   
		V_DATETIME, 
		IN_APPDCARDNAME,
		IN_APPDCARDSEX,
		IN_APPDCTFTYPE,
		IN_APPDCTFNO,
		'0',
		'0',
		IN_TELLERNO,
		IN_BANKNO,
		IN_NODENO,
		V_DATETIME
	);
	
	DELETE FROM PB_COMMACCINF WHERE PCAI_CSTNO = V_CUSTNO AND PCAI_CARDNO = IN_APPDCARDNO;
	
	--鑻ユ敞鍐屽崱棰濆害淇℃伅涓嶅瓨鍦ㄥ垯灏嗕俊鎭彃鍏ユ敞鍐屽崱棰濆害琛紝鑻ュ瓨鍦ㄥ垯淇濈暀鍘熷厛鏁版嵁
	IF NOT EXISTS (SELECT 1 FROM PB_CARDLMT WHERE PCL_CARDNO = IN_APPDCARDNO
	)THEN
		--濡傛灉涓诲崱鐢ㄦ埛鏄瘉涔︾敤鎴凤紝涓婇檺涓轰竴鐧句竾锛屼笅闄愪负0
		IF V_CUSTTYPE = '1' THEN
			INSERT INTO PB_CARDLMT
			(
				PCL_CARDNO,
				PCL_BTMAMT,
				PCL_TOPAMT,
				PCL_LASTTIM
			)
			VALUES
			(
				IN_APPDCARDNO,
				DECIMAL('0',15,2),
				DECIMAL('1000000',15,2),
				V_DATETIME
			);
		--濡傛灉涓诲崱鐢ㄦ埛鏄敞鍐岀敤鎴凤紝涓婇檺涓?锛屼笅闄愪负浜斿崈
		ELSE 
			INSERT INTO PB_CARDLMT
			(
				PCL_CARDNO,
				PCL_BTMAMT,
				PCL_TOPAMT,
				PCL_LASTTIM
			)
			VALUES
			(
				IN_APPDCARDNO,
				DECIMAL('0',15,2),
				DECIMAL('50000',15,2),
				V_DATETIME
			);
		END IF;
	END IF;
	
	--鏇存柊棰濆害
	IF V_CUSTTYPE = '1' THEN
			UPDATE PB_CARDLMT
				set PCL_TOPAMT=DECIMAL('1000000',15,2)
			WHERE
				PCL_CARDNO=IN_APPDCARDNO;
		--濡傛灉涓诲崱鐢ㄦ埛鏄敞鍐岀敤鎴凤紝涓婇檺涓?锛屼笅闄愪负浜斿崈
		ELSE 
			UPDATE PB_CARDLMT
				set PCL_TOPAMT=DECIMAL('50000',15,2)
			WHERE
				PCL_CARDNO=IN_APPDCARDNO;
		END IF;
		
	--濡傛灉鍗″凡缁忕绾︼紝鍒欐洿鏂伴搴﹁〃鐨勬渶鍚庝慨鏀瑰鎴?	SELECT PIF_CSTNO INTO V_CUSTNO FROM PB_CSTINF WHERE PIF_ACCNO = IN_APPDCARDNO;
	IF V_CUSTNO IS NOT NULL THEN
	UPDATE PB_CARDLMT SET 
		PCL_LASTCSTNO = V_CUSTNO
	WHERE PCL_CARDNO = IN_APPDCARDNO;		
	END IF;	
	
	--鑾峰緱瀹㈡埛淇℃伅
	SELECT PIF_NAMECN,PIF_SEX,PIF_STT INTO OUT_CUSTNAME,OUT_CUSTSEX,OUT_CUSTSTT FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_ADD_CUST_CORE ( 
	IN IN_TELLERNO		VARCHAR(10),
	IN IN_BANKNO		VARCHAR(6),
	IN IN_NODENO		VARCHAR(6),
	IN IN_CUSTNAME		VARCHAR(30),
	IN IN_CUSTSEX		VARCHAR(1),
	IN IN_CTFTYPE		VARCHAR(2),
	IN IN_CTFNO			VARCHAR(30),
	IN IN_PHONE			VARCHAR(20),
	IN IN_ADDRESS		VARCHAR(60),
	IN IN_ZIPCODE		VARCHAR(6),
	IN IN_EMAIL			VARCHAR(60),
	IN IN_BIRTHDAY		VARCHAR(8),
	IN IN_CARDNO		VARCHAR(30),
	IN IN_CARDTYPE		VARCHAR(1),
	IN IN_MOBILE		VARCHAR(20),
	IN IN_CUSTTYPE		VARCHAR(1),
	IN IN_AREANO		VARCHAR(8),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50),
	OUT OUT_CUSTNO				VARCHAR(10)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛寮€鎴?-- 杈撳叆鍙傛暟锛?-- IN IN_TELLERNO	 寮€鎴锋煖鍛樺彿       
-- IN IN_BANKNO		 鍒嗚鍙?-- IN IN_NODENO		 缃戠偣鍙?-- IN IN_CUSTNAME	 瀹㈡埛濮撳悕锛?-- IN IN_CUSTSEX	 瀹㈡埛鎬у埆锛?-- IN IN_CTFTYPE	 璇佷欢绫诲瀷锛?-- IN IN_CTFNO		 璇佷欢鍙风爜锛?-- IN IN_PHONE		 鑱旂郴鐢佃瘽锛?-- IN IN_ADDRESS	 鑱旂郴鍦板潃锛?-- IN IN_ZIPCODE	 閭斂缂栫爜锛?-- IN IN_EMAIL		 E-mail 锛?-- IN IN_BIRTHDAY	 鍑虹敓骞存湀
-- IN IN_CARDNO	   涓诲崱鍗″彿锛?-- IN IN_CARDTYPE	 涓诲崱绫诲瀷锛?-- IN IN_MOBILE	   鎵嬫満鍙风爜锛?-- IN IN_CUSTTYPE	 鐧诲綍鏂瑰紡锛?-- IN IN_AREANO		 鍦板尯鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNO锛氱綉閾跺鎴峰彿

-- 淇敼浜猴細ECC.zhouwei
-- 淇敼鏃ユ湡 锛?2005.09.05
-- 淇敼浜猴細ECC.lanxb
-- 淇敼鏃ユ湡 锛?2011.10.11
-- 淇敼鍐呭 锛?娉ㄥ唽鏂扮綉閾剁敤鎴峰悗閲嶇疆鏌ヨ瀵嗙爜閿欒璁板綍
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME VARCHAR(14);
	DECLARE V_CUSTNO VARCHAR(10);
	DECLARE V_CUSTNO_SEQ BIGINT;
	DECLARE V_TEMP2 VARCHAR(10);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF EXISTS (
		SELECT 1
		FROM PB_CSTINF 
		WHERE PIF_ACCNO = IN_CARDNO
	) THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0803';
		SET OUT_ANSINFO = '璇ュ崱宸茬粡绛剧害';
		RETURN;		
	END IF;
	
	--濡傛灉姝ゅ崱宸茬粡浣滀负涓嬫寕鍗★紝鍒ゆ柇鐧诲綍鏂瑰紡鏄惁鐩稿悓
	SELECT PAI_CSTNO INTO V_TEMP2 FROM PB_ACCINF WHERE PAI_CARDNO = IN_CARDNO AND PAI_MSTFLAG = '0' FETCH FIRST 1 ROWS ONLY;
	IF V_TEMP2 IS NOT NULL AND V_TEMP2 <> '' THEN
		IF EXISTS(SELECT 1 FROM PB_CSTINF WHERE PIF_CSTNO = V_TEMP2 AND PIF_CSTTYP<>IN_CUSTTYPE) THEN
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0825';
			SET OUT_ANSINFO = '璇ュ崱宸茶浣滀负涓嬫寕鍗★紝涓旂櫥褰曟柟寮忎笉鍚?;
			RETURN;			
		END IF;
	END IF;
	
	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	--鐢熸垚缃戦摱瀹㈡埛鍙?	SELECT NEXTVAL FOR PB_CUSTNO
	INTO V_CUSTNO_SEQ
	FROM SYSIBM.SYSDUMMY1;
	SET V_CUSTNO = LEFT(CHAR(DECIMAL(V_CUSTNO_SEQ,10)),10);	
	
	--灏嗙敤鎴蜂俊鎭彃鍏ヤ釜浜哄鎴峰熀鏈俊鎭〃
	INSERT INTO PB_CSTINF
	(
		PIF_CSTNO,
		PIF_ACCNO,
		PIF_AREACODE,
		PIF_CSTTYP,
		PIF_CERTTYP,
		PIF_NAMECN,
		PIF_SEX,
		PIF_BIRTHDAY,
		PIF_CTFTYP,
		PIF_CTFNO,
		PIF_MOBILE,
		PIF_ADDRESS,
		PIF_PHONE,
		PIF_ZIPCODE,
		PIF_EMAIL,
		PIF_STT,
		PIF_OPENTYP,
		PIF_OPENTELLER,
		PIF_OPENBRANCHNO,
		PIF_OPENNETNO,
		PIF_OPENDATE,
		PIF_CHGTELLER,
		PIF_CHGBRANCHNO,
		PIF_CHGNETNO,
		PIF_LASTCHGTIM
	)
	VALUES
	(
		V_CUSTNO,
		IN_CARDNO,
		IN_AREANO,
		IN_CUSTTYPE,
		'1',
		IN_CUSTNAME,
		IN_CUSTSEX,
		IN_BIRTHDAY,
		IN_CTFTYPE,
		IN_CTFNO,
		IN_MOBILE,
		IN_ADDRESS,
		IN_PHONE,
		IN_ZIPCODE,
		IN_EMAIL,
		'2',
		'0',
		IN_TELLERNO,
		IN_BANKNO,
		IN_NODENO,
		SUBSTR(V_DATETIME,1,8),
		IN_TELLERNO,
		IN_BANKNO,
		IN_NODENO,
		V_DATETIME
	);
	
	--灏嗕俊鎭彃鍏ヤ釜浜哄鎴锋敞鍐屽崱鍒楄〃
	INSERT INTO PB_ACCINF
	(
		PAI_CSTNO,
		PAI_CARDNO,
		PAI_CARDTYP,
		PAI_CARDKIND,
		PAI_MSTFLAG,
		PAI_HLDNAME,
		PAI_HLDSEX,
		PAI_HLDCTFTYP,
		PAI_HLDCTFNO,
		PAI_FLAG,
		PAI_COMMFLAG,
		PAI_CHGTELLER,
		PAI_CHGBRANCHNO,
		PAI_CHGNETNO,
		PAI_LASTCHGTIM   
	)
	VALUES
	(
		V_CUSTNO,
		IN_CARDNO,
		IN_CARDTYPE,
		'0',
		'1',
		IN_CUSTNAME,
		IN_CUSTSEX,
		IN_CTFTYPE,
		IN_CTFNO,
		'0',
		'1',
		IN_TELLERNO,
		IN_BANKNO,
		IN_NODENO,
		V_DATETIME		
	);
	IF NOT EXISTS (SELECT 1 FROM PB_CARDLMT WHERE PCL_CARDNO = IN_CARDNO
		)THEN
	--濡傛灉鏄瘉涔︾敤鎴凤紝涓嬮檺涓?锛屼笂闄愪负涓€鐧句竾
		IF IN_CUSTTYPE = '1' THEN
	
	--鑻ユ敞鍐屽崱棰濆害淇℃伅涓嶅瓨鍦ㄥ垯灏嗕俊鎭彃鍏ユ敞鍐屽崱棰濆害琛ㄥ惁鍒欐洿鏂版敞鍐屽崱棰濆害琛?	
	INSERT INTO PB_CARDLMT
		(
			PCL_CARDNO,
			PCL_BTMAMT,
			PCL_TOPAMT,
			PCL_LASTCSTNO,
			PCL_LASTTIM
			)
	VALUES
		(
			IN_CARDNO,
			DECIMAL('0.00',15,2),
			DECIMAL('1000000',15,2),
			V_CUSTNO,
			V_DATETIME
		);
		--濡傛灉鏄敞鍐岀敤鎴凤紝涓嬮檺涓?锛屼笂闄愪负浜斾竾
		ELSE
		--鑻ユ敞鍐屽崱棰濆害淇℃伅涓嶅瓨鍦ㄥ垯灏嗕俊鎭彃鍏ユ敞鍐屽崱棰濆害琛ㄥ惁鍒欐洿鏂版敞鍐屽崱棰濆害琛?			INSERT INTO PB_CARDLMT
			(
				PCL_CARDNO,
				PCL_BTMAMT,
				PCL_TOPAMT,
				PCL_LASTCSTNO,
				PCL_LASTTIM
			)
			VALUES
			(
				IN_CARDNO,
				DECIMAL('0',15,2),
				DECIMAL('50000.00',15,2),
				V_CUSTNO,
				V_DATETIME
			);
		END IF;
	ELSE
		IF IN_CUSTTYPE = '1' THEN
			UPDATE PB_CARDLMT
			SET PCL_BTMAMT = DECIMAL('0.00',15,2),
					PCL_TOPAMT = DECIMAL('1000000',15,2),
					PCL_LASTCSTNO = V_CUSTNO,
					PCL_LASTTIM = V_DATETIME
			WHERE PCL_CARDNO = IN_CARDNO;
		ELSE
			UPDATE PB_CARDLMT
			SET PCL_BTMAMT = DECIMAL('0',15,2),
					PCL_TOPAMT = DECIMAL('50000.00',15,2),
					PCL_LASTCSTNO = V_CUSTNO,
					PCL_LASTTIM = V_DATETIME
			WHERE PCL_CARDNO = IN_CARDNO;
		END IF;
	END IF;
	
	-- 閲嶇疆涓诲崱鏌ヨ瀵嗙爜閿欒娆℃暟锛岄伩鍏嶇敤鎴锋棤娉曡繘琛屾柊鐢ㄦ埛娉ㄥ唽
	DELETE FROM PB_LOGFAIL WHERE PLF_CARDNO= IN_CARDNO AND PLF_TYPE='0';
	
	COMMIT;
	
	SET OUT_CUSTNO = V_CUSTNO;
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_CERTAPPLY_CHECK_CORE (
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50)
)   
READS SQL DATA              
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛璇佷功鐢宠妫€鏌?-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	     涓诲崱鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ANSCODE锛氳繑鍥炵爜
-- OUT_ANSINFO锛氳繑鍥炰俊鎭?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.12
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_CUSTNO VARCHAR(10);
	
	DECLARE V_FIXCSTNO VARCHAR(10);
	DECLARE V_FIXCSTTYP VARCHAR(1);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	SELECT PIF_CSTNO,PIF_CSTTYP 
	INTO V_FIXCSTNO,V_FIXCSTTYP
	FROM PB_CSTINF 
	WHERE PIF_ACCNO = IN_CARDNO;
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF V_FIXCSTNO IS NULL OR V_FIXCSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;

	--鍒ゆ柇瀹㈡埛鏄惁鏄瘉涔︾敤鎴?	IF V_FIXCSTTYP<>'1' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0812';
		SET OUT_ANSINFO = '缃戦摱瀹㈡埛涓嶆槸璇佷功鐢ㄦ埛';
		RETURN;		
	END IF;
	
	--鑾峰彇缃戦摱瀹㈡埛鍙?	SET V_CUSTNO = V_FIXCSTNO;
	
	--鍒ゆ柇ra璇佷功淇℃伅鏄惁瀛樺湪
	IF EXISTS (
		SELECT 1  
		FROM IM_PERSONCSTOPRCRT 
		WHERE POC_CSTNO = V_CUSTNO
	) THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0815';
		SET OUT_ANSINFO = 'Ra璇佷功宸茬粡瀛樺湪';
		RETURN;		
	END IF;	
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_CERTQUERY_CHECK_CORE (
	IN IN_CARDNO		VARCHAR(30),
	IN IN_CTFTYPE		VARCHAR(2),
	IN IN_CTFNO			VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50)
)
READS SQL DATA                 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛璇佷功淇℃伅鏌ヨ妫€鏌?-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	     涓诲崱鍗″彿
-- IN IN_CTFTYPE	     瑕佹牎楠岀殑璇佷欢绫诲瀷
-- IN IN_CTFNO	     瑕佹牎楠岀殑璇佷欢鍙风爜
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ANSCODE锛氳繑鍥炵爜
-- OUT_ANSINFO锛氳繑鍥炰俊鎭?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.12
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_CUSTNO VARCHAR(10);
	DECLARE V_FIXCSTNO VARCHAR(10);
	DECLARE V_FIXCSTTYP VARCHAR(1);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	SELECT PIF_CSTNO,PIF_CSTTYP 
	INTO V_FIXCSTNO,V_FIXCSTTYP
	FROM PB_CSTINF 
	WHERE PIF_ACCNO = IN_CARDNO;
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF V_FIXCSTNO IS NULL OR V_FIXCSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;	
	END IF;

	--鍒ゆ柇瀹㈡埛鏄惁鏄瘉涔︾敤鎴?	IF V_FIXCSTTYP<>'1' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0812';
		SET OUT_ANSINFO = '缃戦摱瀹㈡埛涓嶆槸璇佷功鐢ㄦ埛';
		RETURN;		
	END IF;
	
	--鏍￠獙璇佷欢绫诲瀷鍜岃瘉浠跺彿鐮?	--IF (SELECT PIF_CTFTYP FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO) <> IN_CTFTYPE OR 
	--	(SELECT PIF_CTFNO FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO) <> IN_CTFNO
	--THEN
	--	SET PROC_RET_CODE = '95000';
	--	SET OUT_TOA_MSG_TYPE = 'E';
	--	SET OUT_TOA_MSG_AP_MMO = 'NE';
	--	SET OUT_TOA_MSG_CODE = '0810';
	--	SET OUT_ANSINFO = '鏍￠獙涓嶉€氳繃';
	--	RETURN;	
	--END IF;	
	
	--鑾峰彇缃戦摱瀹㈡埛鍙?	SET V_CUSTNO = V_FIXCSTNO;
	
	--鍒ゆ柇ra璇佷功淇℃伅鏄惁瀛樺湪
	IF NOT EXISTS (
		SELECT 1  
		FROM IM_PERSONCSTOPRCRT 
		WHERE POC_CSTNO = V_CUSTNO
	) THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0813';
		SET OUT_ANSINFO = 'Ra璇佷功淇℃伅涓嶅瓨鍦?;
		RETURN;			
	END IF;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_CERTREVOKE_CHECK_CORE (
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50)
)
READS SQL DATA                 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛璇佷功娉ㄩ攢妫€鏌?-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	     涓诲崱鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ANSCODE锛氳繑鍥炵爜
-- OUT_ANSINFO锛氳繑鍥炰俊鎭?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.12
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--鍒ゆ柇涓诲崱鏄惁鏇剧粡绛剧害杩?	IF NOT EXISTS (
		SELECT 1  
		FROM PB_CSTINF 
		WHERE PIF_ACCNO = IN_CARDNO
	) THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;	
	END IF;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_CERTUPDATE_CHECK_CORE (
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50)
) 
READS SQL DATA                 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛璇佷功鎭㈠妫€鏌?-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	     涓诲崱鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ANSCODE锛氳繑鍥炵爜
-- OUT_ANSINFO锛氳繑鍥炰俊鎭?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.12
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_FIXCSTNO VARCHAR(10);
	DECLARE V_FIXCSTTYP VARCHAR(1);
	DECLARE V_FIXSTT VARCHAR(1);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	SELECT PIF_CSTNO,PIF_CSTTYP,PIF_STT 
	INTO V_FIXCSTNO,V_FIXCSTTYP,V_FIXSTT
	FROM PB_CSTINF 
	WHERE PIF_ACCNO = IN_CARDNO;
	
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF V_FIXCSTNO IS NULL OR V_FIXCSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;

	--鍒ゆ柇瀹㈡埛鏄惁鏄瘉涔︾敤鎴?	IF V_FIXCSTTYP<>'1' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0812';
		SET OUT_ANSINFO = '缃戦摱瀹㈡埛涓嶆槸璇佷功鐢ㄦ埛';
		RETURN;			
	END IF;
	
	--鍒ゆ柇瀹㈡埛鏄惁琚浠?	IF V_FIXSTT='1' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0805';
		SET OUT_ANSINFO = '缃戦摱瀹㈡埛宸茶姝粯';
		RETURN;		
	END IF;
	
	
	--鍒ゆ柇ra璇佷功淇℃伅鏄惁瀛樺湪
	IF NOT EXISTS (
		SELECT 1  
		FROM IM_PERSONCSTOPRCRT 
		WHERE POC_CSTNO = V_FIXCSTNO 
	) THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0813';
		SET OUT_ANSINFO = 'Ra璇佷功淇℃伅涓嶅瓨鍦?;
		RETURN;		
	END IF;	
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_DEL_APPACC_CORE ( 
	IN IN_TELLERNO			VARCHAR(10),
	IN IN_BANKNO			VARCHAR(6),
	IN IN_NODENO			VARCHAR(6),
	IN IN_CARDNO			VARCHAR(30),
	IN IN_APPDCARDNO		VARCHAR(30),
	IN IN_APPLYERTYPE		VARCHAR(1),
	IN IN_CHECKEDCTFTYPE	VARCHAR(2),
	IN IN_CHECKEDCTFNO		VARCHAR(30),
	OUT PROC_RET_CODE		VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO			VARCHAR(50),
	OUT OUT_CUSTNAME		VARCHAR(30),
	OUT OUT_CUSTSEX        	VARCHAR(1),
	OUT OUT_CUSTSTT      	VARCHAR(1),
	OUT OUT_CTFTYPE        	VARCHAR(2),
	OUT OUT_CTFNO          	VARCHAR(30),
	OUT OUT_APPDCARDTYPE  	VARCHAR(1),
	OUT OUT_APPDCTFTYPE    	VARCHAR(2),
	OUT OUT_APPDCTFNO     	VARCHAR(30),
	OUT OUT_APPDCARDNAME   	VARCHAR(30),
	OUT OUT_APPDCARDSEX    	VARCHAR(1)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛鍏宠仈甯愭埛鍒犻櫎
-- 杈撳叆鍙傛暟锛?-- IN IN_TELLERNO	鏌滃憳鍙?
-- IN IN_BANKNO		鍒嗚鍙?-- IN IN_NODENO		缃戠偣鍙?-- IN IN_CARDNO		涓诲崱鍙?-- IN IN_APPDCARDNO	    涓嬫寕鍗″彿
-- IN IN_APPLYERTYPE	鐢宠浜虹被鍨?-- IN IN_CHECKEDCTFTYPE 瑕佹楠岀殑璇佷欢绫诲瀷
-- IN IN_CHECKEDCTFNO	瑕佹楠岀殑璇佷欢鍙风爜

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNAME	瀹㈡埛濮撳悕
-- OUT_CUSTSEX  瀹㈡埛鎬у埆
-- OUT_CUSTSTT  瀹㈡埛鐘舵€?-- OUT_CTFTYPE  瀹㈡埛璇佷欢绫诲瀷
-- OUT_CTFNO    瀹㈡埛璇佷欢鍙风爜
-- OUT_APPDCARDTYPE 涓嬫寕鍗＄被鍨?-- OUT_APPDCTFTYPE  涓嬫寕鍗℃寔鍗′汉璇佷欢绫诲瀷
-- OUT_APPDCTFNO    涓嬫寕鍗℃寔鍗′汉璇佷欢鍙风爜
-- OUT_APPDCARDNAME 涓嬫寕鍗℃寔鍗′汉濮撳悕
-- OUT_APPDCARDSEX  涓嬫寕鍗℃寔鍗′汉鎬у埆

-- 鏈€鍚庝慨鏀逛汉锛歭uys 
-- 淇敼鍘熷洜锛氬垹闄ゅ崱淇℃伅璁板叆鍗℃敞閿€琛?-- 鏈€鍚庝慨鏀规棩鏈?锛?2009.06.12
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME VARCHAR(14);
	DECLARE V_CUSTNO VARCHAR(10);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	SELECT PIF_CSTNO INTO V_CUSTNO FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO;
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF V_CUSTNO IS NULL OR V_CUSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;
	
	--鍒ゆ柇涓诲崱涓庝笅鎸傚崱鍏宠仈鍏崇郴鏄惁瀛樺湪
	
	IF NOT EXISTS (
		SELECT 1
		FROM PB_ACCINF 
		WHERE PAI_CSTNO = V_CUSTNO AND PAI_CARDNO = IN_APPDCARDNO AND PAI_MSTFLAG = '0'
	) THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0808';
		SET OUT_ANSINFO = '涓诲崱鍜屼笅鎸傚崱鍏宠仈鍏崇郴涓嶅瓨鍦?;
		RETURN;		
	END IF;	
	
	--鑻ョ敵璇蜂汉鏄富鍗℃寔鍗′汉
	--IF IN_APPLYERTYPE = '0' THEN
	--	IF (SELECT PIF_CTFTYP FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO) <> IN_CHECKEDCTFTYPE OR 
	--		(SELECT PIF_CTFNO FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO) <> IN_CHECKEDCTFNO
	--	THEN
	--		SET PROC_RET_CODE = '95000';
	--		SET OUT_TOA_MSG_TYPE = 'E';
	--		SET OUT_TOA_MSG_AP_MMO = 'NE';
	--		SET OUT_TOA_MSG_CODE = '0810';
	--		SET OUT_ANSINFO = '鏍￠獙涓嶉€氳繃';
	--		RETURN;	
	--	END IF;		
	--END IF;
	
	--鑻ョ敵璇蜂汉鏄笅鎸傚崱鎸佸崱浜?	--IF IN_APPLYERTYPE = '1' THEN
	--	IF (SELECT PAI_HLDCTFTYP FROM PB_ACCINF WHERE PAI_CSTNO = V_CUSTNO AND PAI_CARDNO = IN_APPDCARDNO AND PAI_MSTFLAG = '0') <> IN_CHECKEDCTFTYPE OR 
	--		(SELECT PAI_HLDCTFNO FROM PB_ACCINF WHERE PAI_CSTNO = V_CUSTNO AND PAI_CARDNO = IN_APPDCARDNO AND PAI_MSTFLAG = '0') <> IN_CHECKEDCTFNO
	--	THEN
	--		SET PROC_RET_CODE = '95000';
	--		SET OUT_TOA_MSG_TYPE = 'E';
	--		SET OUT_TOA_MSG_AP_MMO = 'NE';
	--		SET OUT_TOA_MSG_CODE = '0810';
	--		SET OUT_ANSINFO = '鏍￠獙涓嶉€氳繃';
	--		RETURN;	
	--	END IF;		
	--END IF;
	
	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	--杩斿洖淇℃伅
	SELECT 
		PIF_NAMECN,PIF_SEX,PIF_STT,PIF_CTFTYP,PIF_CTFNO INTO 
		OUT_CUSTNAME,OUT_CUSTSEX,OUT_CUSTSTT,OUT_CTFTYPE,OUT_CTFNO
	FROM PB_CSTINF
	WHERE PIF_ACCNO = IN_CARDNO;
	
	SELECT 
		PAI_CARDTYP,PAI_HLDNAME,PAI_HLDSEX,PAI_HLDCTFTYP,PAI_HLDCTFNO INTO
		OUT_APPDCARDTYPE,OUT_APPDCARDNAME,OUT_APPDCARDSEX,OUT_APPDCTFTYPE,OUT_APPDCTFNO
	FROM PB_ACCINF
	WHERE PAI_CSTNO = V_CUSTNO AND PAI_CARDNO = IN_APPDCARDNO AND PAI_MSTFLAG = '0';
	
	--娓呴櫎浠ュ墠涓嬫寕鍗″垹闄よ褰?    DELETE FROM PB_ACCINF_CLOSE WHERE PAIC_CSTNO = V_CUSTNO AND PAIC_CARDNO = IN_APPDCARDNO;
    --鏈鍒犻櫎涓嬫寕鍗′俊鎭彃鍒版敞閿€琛?    INSERT INTO PB_ACCINF_CLOSE( 
				PAIC_CSTNO, PAIC_CARDNO, PAIC_ALIAS, PAIC_CARDTYP,PAIC_CARDKIND, PAIC_MSTFLAG, PAIC_RELATETIM, PAIC_HLDNAME, 
   		 		PAIC_HLDSEX, PAIC_HLDCTFTYP, PAIC_HLDCTFNO, PAIC_FLAG, PAIC_COMMFLAG, PAIC_COFFTELLER, PAIC_OFFBRANCHNO, PAIC_OFFNETNO, PAIC_OFFTIM ) 
    	(SELECT "PAI_CSTNO", "PAI_CARDNO", "PAI_ALIAS", "PAI_CARDTYP", "PAI_CARDKIND", "PAI_MSTFLAG", "PAI_RELATETIM", 
    				"PAI_HLDNAME", "PAI_HLDSEX", "PAI_HLDCTFTYP", "PAI_HLDCTFNO", "PAI_FLAG", "PAI_COMMFLAG",IN_TELLERNO, IN_BANKNO, IN_NODENO, V_DATETIME
    			FROM PB_ACCINF WHERE PAI_CSTNO = V_CUSTNO AND PAI_CARDNO = IN_APPDCARDNO );
	
	--鍒犻櫎鍏宠仈鍏崇郴
	DELETE FROM PB_ACCINF 
	WHERE PAI_CSTNO = V_CUSTNO AND PAI_CARDNO = IN_APPDCARDNO AND PAI_MSTFLAG = '0';
	
	--濡傛灉涓嬫寕鍗′笉鍐嶆寕鍦ㄥ叾浠栦富鍗′笂骞朵笖鏈韩涔熶笉浣滀负涓诲崱鍒欏垹闄ゆ涓嬫寕鍗＄殑娉ㄥ唽鍗￠搴︿俊鎭?	IF  NOT EXISTS(SELECT 1 FROM PB_CSTINF WHERE PIF_ACCNO = IN_APPDCARDNO) AND
		NOT EXISTS (SELECT 1 FROM PB_ACCINF WHERE PAI_CARDNO = IN_APPDCARDNO)
	THEN
		DELETE FROM PB_CARDLMT WHERE PCL_CARDNO = IN_APPDCARDNO;
	END IF;

	--鍒犻櫎棣栭〉闈㈠畾鍒惰褰曡〃銆佸鎴烽粯璁ゅ崱鍙疯缃〃鐩稿叧璁板綍
	DELETE FROM PB_DFLCRD WHERE PDC_CSTNO = V_CUSTNO AND PDC_CARDNO = IN_APPDCARDNO;
		
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_FIRSTLOGONCHECK (
	IN IN_CARDNO                VARCHAR(30),
	OUT PROC_RET_CODE 			CHAR(5),
	OUT OUT_CSTNO				VARCHAR(10),
	OUT OUT_AREANO               VARCHAR(6)
)
READS SQL DATA 
------------------------------------------------------------------------
-- 璇佷功鐢ㄦ埛涓嬭浇璇佷功鐧诲綍鍚堟硶鎬ф牎楠屽瓨鍌ㄨ繃绋?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO锛氱绾︿富鍗″彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_AREANO锛氬湴鍖哄彿
-- 
-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈燂細2007.3.27
------------------------------------------------------------------------
BEGIN

	-- 瀹氫箟鍙橀噺
	DECLARE V_STT				CHAR(1);			--鐢ㄦ埛鐘舵€?	DECLARE V_CUSTTYPE			CHAR(1);			--鐢ㄦ埛绫诲瀷

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;

	
	-- 鑾峰彇瀹㈡埛淇℃伅

	SELECT
		PIF_AREACODE,
		PIF_CSTNO,
		PIF_CSTTYP,
		PIF_STT
	INTO
		OUT_AREANO,
		OUT_CSTNO,
		V_CUSTTYPE,
		V_STT
	FROM PB_CSTINF
	WHERE 
		PIF_ACCNO = IN_CARDNO;

	IF V_CUSTTYPE IS NULL OR V_CUSTTYPE = ''
	THEN
		SET PROC_RET_CODE = '30801';
		RETURN;
	END IF;	
	
	IF V_STT = '1' THEN
		-- 鐢ㄦ埛宸插喕缁?		SET PROC_RET_CODE = '30001';
		RETURN;
	END IF;
	
	IF V_CUSTTYPE <> '1' THEN
		-- 鐢ㄦ埛涓嶆槸璇佷功鐢ㄦ埛
		SET PROC_RET_CODE = '30803';
		RETURN;
	END IF;
	
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_FREEZE_CUST_CORE ( 
	IN IN_TELLERNO		VARCHAR(10),
	IN IN_BANKNO		VARCHAR(6),
	IN IN_NODENO		VARCHAR(6),
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CUSTNAME	VARCHAR(30)
)                
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛姝粯
-- 杈撳叆鍙傛暟锛?-- IN IN_TELLERNO	 寮€鎴锋煖鍛樺彿       
-- IN IN_BANKNO		 鍒嗚鍙?-- IN IN_NODENO		 缃戠偣鍙?-- IN IN_CARDNO	     涓诲崱鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?--OUT_CUSTNAME :鎸佸崱浜哄鍚?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.03.27
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME VARCHAR(14);
	DECLARE V_STT CHAR(1);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	SELECT PIF_STT INTO V_STT FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO;
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF V_STT IS NULL OR V_STT='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;

	--鍒ゆ柇瀹㈡埛鏄惁琚浠?	IF (V_STT IS NOT NULL) AND (V_STT='1') THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0805';
		SET OUT_ANSINFO = '缃戦摱瀹㈡埛宸茶姝粯';
		RETURN;		
	END IF;

	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	--鏇存柊涓汉瀹㈡埛鍩烘湰淇℃伅琛紝灏嗙姸鎬佺疆涓衡€滆姝粯鈥?	UPDATE PB_CSTINF 
	SET PIF_STT = '1', 
		PIF_CHGTELLER = IN_TELLERNO,
		PIF_CHGBRANCHNO = IN_BANKNO,
		PIF_CHGNETNO = IN_NODENO,
		PIF_LASTCHGTIM = V_DATETIME
	WHERE PIF_ACCNO = IN_CARDNO;

	--鑾峰緱涓诲崱浜哄鍚?	SELECT PIF_NAMECN INTO OUT_CUSTNAME FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO;
		
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_MOD_CUST_INFO_CORE ( 
	IN IN_TELLERNO		VARCHAR(10),
	IN IN_BANKNO		VARCHAR(6),
	IN IN_NODENO		VARCHAR(6),
	IN IN_CARDNO		VARCHAR(30),
	IN IN_CUSTTYPE		VARCHAR(1),
	IN IN_MOBILE		VARCHAR(20),
	IN IN_PHONE			VARCHAR(20),
	IN IN_ADDRESS		VARCHAR(60),
	IN IN_ZIPCODE		VARCHAR(6),
	IN IN_EMAIL			VARCHAR(60),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CUSTNAME	VARCHAR(30),
	OUT OUT_CUSTSEX		VARCHAR(1),
	OUT OUT_CUSTSTT		VARCHAR(1),
	OUT OUT_CTFTYPE		VARCHAR(2),
	OUT OUT_CTFNO		VARCHAR(30),
	OUT OUT_CUSTTYPE	VARCHAR(1),
	OUT OUT_CSTNO		VARCHAR(10),
	OUT OUT_AREANO		VARCHAR(6),
	OUT OUT_FUNCTYPE	VARCHAR(1),
	OUT OUT_CANCEL_CARDS VARCHAR(300)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛淇℃伅淇敼
-- 杈撳叆鍙傛暟锛?-- IN_TELLERNO		鏌滃憳鍙?   
-- IN_BANKNO		鍒嗚鍙?-- IN_NODENO		缃戠偣鍙?-- IN_CARDNO		涓诲崱鍙?-- IN_CUSTTYPE		鐧婚檰鏂瑰紡   
-- IN_MOBILE		鎵嬫満鍙?   
-- IN_PHONE			鑱旂郴鐢佃瘽   
-- IN_ADDRESS		鍦板潃
-- IN_ZIPCODE		閭斂缂栫爜 
-- IN_EMAIL			鐢靛瓙閭欢

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNAME	瀹㈡埛濮撳悕       
-- OUT_CUSTSEX	瀹㈡埛鎬у埆
-- OUT_CUSTSTT	瀹㈡埛鐘舵€?-- OUT_CTFTYPE	璇佷欢绫诲瀷
-- OUT_CTFNO	璇佷欢鍙风爜
-- OUT_CUSTTYPE 鐧诲綍鏂瑰紡
-- OUT_CSTNO 	瀹㈡埛鍙?-- OUT_AREANO	鍦板尯鍙?-- OUT_FUNCTYPE 鍔熻兘鐐圭被鍨? 0-鍙洿鏀逛釜浜轰俊鎭?1-璇佷功鐢ㄦ埛鍒版敞鍐岀敤鎴疯浆鎹?2-娉ㄥ唽鐢ㄦ埛鍒拌瘉涔︾敤鎴疯浆鎹?-- OUT_CANCEL_CARDS 瑙ｉ櫎鍏崇郴鍗″彿涓?鐢ㄤ簬缃戜笂鏀粯鎾?-- 鏈€鍚庝慨鏀逛汉锛欵CC.wujc
-- 鏈€鍚庝慨鏀规棩鏈?锛?2006.11.20
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME VARCHAR(14);
	DECLARE V_DATE VARCHAR(8);
	DECLARE V_CUSTTYPE VARCHAR(1);
	DECLARE V_TOPAMT  DECIMAL(15,2);	
	
	DECLARE V_FIXCSTNO VARCHAR(10);
	DECLARE V_FIXCSTTYP VARCHAR(1);
	DECLARE V_FIXSTT VARCHAR(1);
	DECLARE V_FIXCERTTYP VARCHAR(1);
	
	DECLARE AT_END	INTEGER;
	DECLARE V_CARD VARCHAR(30);
	
	DECLARE CUR_CARDSRESULT	CURSOR FOR 
		SELECT PAI_CARDNO 
			FROM PB_ACCINF 
				WHERE PAI_CSTNO = V_FIXCSTNO;
	
	-- 寮傚父澶勭悊
	DECLARE CONTINUE HANDLER FOR NOT FOUND 
	BEGIN
		SET AT_END = 1;
	END;	
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	SELECT PIF_CSTNO,PIF_CSTTYP,PIF_STT          
	INTO V_FIXCSTNO,V_FIXCSTTYP,V_FIXSTT         
	FROM PB_CSTINF                  
	WHERE PIF_ACCNO = IN_CARDNO;                 
	
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF V_FIXCSTNO IS NULL OR V_FIXCSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;
	
	--鍒ゆ柇瀹㈡埛鏄惁琚浠?	IF V_FIXSTT='1' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0805';
		SET OUT_ANSINFO = '缃戦摱瀹㈡埛宸茶姝粯';
		RETURN;		
	END IF;
	
	--濡傛灉涓烘敞鍐岀敤鎴凤紝鍒ゆ柇鎵嬫満鍙锋槸鍚﹂潪绌?	IF IN_CUSTTYPE = '0' THEN
		IF IN_MOBILE IS NULL OR IN_MOBILE = '' THEN
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0801';
			SET OUT_ANSINFO = '杈撳叆涓嶅畬鏁?;
			RETURN;	
		END IF;
	END IF;	
	
	--缃搴︿俊鎭?	IF IN_CUSTTYPE = '0' THEN
		SET V_TOPAMT=50000.00;
	ELSE
		SET V_TOPAMT=1000000.00;
	END IF;
	
	--set 璇佷功绫诲瀷瀛楁锛歝ellphone user-0; certificate user-1
	IF (IN_CUSTTYPE = '0') THEN
		SET V_FIXCERTTYP = '0';
		SET OUT_FUNCTYPE='1';
	ELSE
		SET V_FIXCERTTYP = '1';
		SET OUT_FUNCTYPE='2';		
	END IF;
	
	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	SET V_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');	
	
	IF V_FIXCSTTYP = IN_CUSTTYPE THEN
		SET OUT_FUNCTYPE='0';
		UPDATE PB_CSTINF SET
			PIF_MOBILE = IN_MOBILE,
			PIF_ADDRESS = IN_ADDRESS,
			PIF_PHONE = IN_PHONE,
			PIF_ZIPCODE = IN_ZIPCODE,
			PIF_EMAIL = IN_EMAIL,
			PIF_CHGTELLER = IN_TELLERNO,
			PIF_CHGBRANCHNO = IN_BANKNO,
			PIF_CHGNETNO = IN_NODENO,
			PIF_LASTCHGTIM = V_DATETIME,
			PIF_CSTTYP = IN_CUSTTYPE,
			PIF_CERTTYP = V_FIXCERTTYP
			WHERE PIF_ACCNO = IN_CARDNO;		
	ELSE	
	--鐢ㄦ埛杩涜绛剧害绫诲瀷杞崲鏃讹紝鍒ゆ柇璇ョ敤鎴风殑涓诲崱鏄惁琚叾浠栫敤鎴蜂笅鎸?鏈夊垯鎶ラ敊
		IF EXISTS ( 
			SELECT 1 FROM PB_ACCINF
				WHERE PAI_CARDNO = IN_CARDNO AND PAI_CSTNO <>  V_FIXCSTNO) THEN
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0839';
			SET OUT_ANSINFO = '璇ヤ富鍗″凡鍏宠仈鍏朵粬缃戦摱鐢ㄦ埛锛岃瑙ｉ櫎鍏朵粬鍏宠仈鍏崇郴鍐嶈繘琛岀被鍨嬪垏鎹?;
			RETURN;			
		END IF;
		
		--鏌ョ湅缃戦摱鐢ㄦ埛鐨勪笅鎸傚崱鏄惁涓哄叾瀹冪敤鎴风殑涓嬫寕鍗℃垨涓诲崱,鏈夊垯鍒犻櫎
		SET OUT_CANCEL_CARDS='';
		OPEN CUR_CARDSRESULT;
		SET AT_END = 0;
		FETCH CUR_CARDSRESULT INTO V_CARD;
		WHILE AT_END = 0 DO
			IF EXISTS(
				SELECT 1 FROM PB_ACCINF 
					WHERE PAI_CSTNO <> V_FIXCSTNO AND PAI_CARDNO = V_CARD) THEN
				UPDATE PB_ACCINF 
					SET PAI_CHGTELLER = IN_TELLERNO,
						PAI_CHGBRANCHNO = IN_BANKNO,
						PAI_CHGNETNO = IN_NODENO,
						PAI_LASTCHGTIM = V_DATETIME
					WHERE PAI_CSTNO = V_FIXCSTNO AND PAI_CARDNO = V_CARD;
				DELETE FROM PB_ACCINF_CLOSE 
						WHERE PAIC_CSTNO = V_FIXCSTNO AND PAIC_CARDNO = V_CARD;
			
				DELETE FROM PB_ACCINF 
					WHERE PAI_CSTNO = V_FIXCSTNO AND PAI_CARDNO = V_CARD;
					
				IF LENGTH(OUT_CANCEL_CARDS)=0 THEN
					SET OUT_CANCEL_CARDS=V_CARD;
				ELSE 
					SET OUT_CANCEL_CARDS=OUT_CANCEL_CARDS||'|'||V_CARD;
				END IF;
				
			--缃戦摱鐢ㄦ埛鐨勪富鍗″拰涓嬫寕鍗′笉鏄叾瀹冪敤鎴风殑涓嬫寕鍗℃垨涓诲崱,鏇存柊鍗￠搴︿俊鎭?			ELSE 
				UPDATE PB_CARDLMT 
					SET PCL_TOPAMT = V_TOPAMT,PCL_LASTCSTNO = V_FIXCSTNO,PCL_LASTTIM = V_DATETIME 
					WHERE PCL_CARDNO = V_CARD;
			END IF;
			SET AT_END = 0;
			FETCH CUR_CARDSRESULT INTO V_CARD;
		END WHILE;
		CLOSE CUR_CARDSRESULT;
			--鏇存柊涓汉瀹㈡埛鍩烘湰淇℃伅琛?		UPDATE PB_CSTINF SET
			PIF_MOBILE = IN_MOBILE,
			PIF_ADDRESS = IN_ADDRESS,
			PIF_PHONE = IN_PHONE,
			PIF_ZIPCODE = IN_ZIPCODE,
			PIF_EMAIL = IN_EMAIL,
			PIF_CHGTELLER = IN_TELLERNO,
			PIF_CHGBRANCHNO = IN_BANKNO,
			PIF_CHGNETNO = IN_NODENO,
			PIF_LASTCHGTIM = V_DATETIME,
			PIF_CSTTYP = IN_CUSTTYPE,
			PIF_CERTTYP = V_FIXCERTTYP,
			PIF_ALIAS = '', 
			PIF_LOVENAME = '',		
			PIF_STT='2' 
			WHERE PIF_ACCNO = IN_CARDNO;	
	END IF;		
	
	COMMIT;	
	
	--鍙栧緱瀹㈡埛淇℃伅
	SELECT 
		PIF_NAMECN,
		PIF_SEX,
		PIF_STT,
		PIF_CTFTYP,
		PIF_CTFNO,
		PIF_CSTTYP,
		PIF_CSTNO,
		PIF_AREACODE
	INTO
		OUT_CUSTNAME,
	    OUT_CUSTSEX	,
	    OUT_CUSTSTT	,
	    OUT_CTFTYPE,	
	    OUT_CTFNO,
	    OUT_CUSTTYPE,
	    OUT_CSTNO,
	    OUT_AREANO
	FROM PB_CSTINF
	WHERE PIF_ACCNO = IN_CARDNO;
									
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_QUERY_APPDCARD_INFO_CORE (
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_TOPAMT		DECIMAL(15,2),
	OUT OUT_BOTTOMAMT	DECIMAL(15,2),
	OUT OUT_OUTNUM		VARCHAR(10)
) 
READS SQL DATA     
DYNAMIC RESULT SETS 1           
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-涓嬫寕鍗″叧鑱斾俊鎭煡璇?-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	  涓嬫寕鍗″崱鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNO锛氱綉閾跺鎴峰彿
-- OUT_TOPAMT	閲戦涓婇檺	
-- OUT_BOTTOMAMT	閲戦涓嬮檺
-- CUR_RESULT 琚寕涓诲崱淇℃伅鍒楄〃

-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.10
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_CUSTNO VARCHAR(10);
	DECLARE V_OUTNUM INT;

	--瀹氫箟娓告爣锛屾煡璇㈣鎸備富鍗′俊鎭?	DECLARE CUR_RESULT CURSOR  WITH RETURN TO CALLER FOR
		SELECT
			A.PAI_CSTNO,
			B.PIF_ACCNO,
			B.PIF_NAMECN,
			B.PIF_CSTTYP,
			B.PIF_STT
		 FROM PB_ACCINF  A,PB_CSTINF  B
		 WHERE  A.PAI_CARDNO = IN_CARDNO
			AND A.PAI_MSTFLAG = '0' AND
			 A.PAI_CSTNO = B.PIF_CSTNO
		ORDER BY A.PAI_CSTNO;
			
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--鍒ゆ柇姝ゅ崱浣滀负涓嬫寕鍗℃槸鍚﹀瓨鍦?	IF NOT EXISTS (
		SELECT 1  
		FROM PB_ACCINF 
		WHERE PAI_CARDNO = IN_CARDNO AND PAI_MSTFLAG = '0'
	) THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0809';
		SET OUT_ANSINFO = '璇ュ崱涓嶄负涓嬫寕鍗?;
		RETURN;		
	END IF;
	
	--鏌ヨ鍩烘湰淇℃伅
	SELECT 
		PCL_TOPAMT,                                            
		PCL_BTMAMT                                        	     
	INTO
		OUT_TOPAMT,
		OUT_BOTTOMAMT   
	FROM PB_CARDLMT
	WHERE PCL_CARDNO = IN_CARDNO;
	
	--鑾峰緱杈撳嚭姣旀暟
	SELECT COUNT(1) INTO V_OUTNUM
	FROM PB_ACCINF
	WHERE PAI_CARDNO = IN_CARDNO AND PAI_MSTFLAG = '0';
	SET OUT_OUTNUM = CHAR(V_OUTNUM);
	
	--鎵撳紑娓告爣
	OPEN CUR_RESULT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_QUERY_CERTINFO_CORE ( 
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50),
	OUT OUT_CUSTNO		VARCHAR(10),
	OUT OUT_CUSTNAME	VARCHAR(30),
	OUT OUT_PRINO		VARCHAR(1),
	OUT OUT_AREANO		VARCHAR(3),
	OUT OUT_STT			VARCHAR(1)
)
READS SQL DATA                 
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛璇佷功淇℃伅鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	     涓诲崱鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ANSCODE锛氳繑鍥炵爜
-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNO锛氱綉閾跺鎴峰彿
-- OUT_CUSTNAME	瀹㈡埛濮撳悕
-- OUT_PRINO	璇佷功鎵撳嵃鐘舵€?-- OUT_AREANO	鍦板尯鍙?-- OUT_STT	鐘舵€?	

-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.12
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_STT VARCHAR(1);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--鏌ヨ淇℃伅
	SELECT                                                  
		PIF_AREACODE,
		PIF_CSTNO,
		PIF_NAMECN,
		PIF_STT
	INTO                       
		OUT_AREANO,
		OUT_CUSTNO,
		OUT_CUSTNAME,
		V_STT              	     
	FROM PB_CSTINF
	WHERE PIF_ACCNO = IN_CARDNO;
	
	IF V_STT = '2' THEN
		SET OUT_STT = '0';
	ELSE
		SET OUT_STT = '1';
	END IF;

	
	SELECT                          
		POC_PRINO
	INTO                       
		OUT_PRINO             	     
	FROM IM_PERSONCSTOPRCRT
	WHERE POC_CSTNO = OUT_CUSTNO;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_QUERY_CUST_INFO_CORE ( 
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CUSTNO		VARCHAR(10),
	OUT OUT_AREANO		VARCHAR(3),
	OUT OUT_ALIAS		VARCHAR(30),
	OUT OUT_CUSTNAME	VARCHAR(30),
	OUT OUT_CUSTSEX		VARCHAR(1),
	OUT OUT_CUSTTYPE	VARCHAR(1),
	OUT OUT_CTFTYPE		VARCHAR(2),
	OUT OUT_CTFNO		VARCHAR(30),
	OUT OUT_MOBILE		VARCHAR(20),
	OUT OUT_PHONE		VARCHAR(20),
	OUT OUT_EMAIL		VARCHAR(60),
	OUT OUT_ADDRESS		VARCHAR(60),
	OUT OUT_ZIPCODE		VARCHAR(6),
	OUT OUT_CUSTSTT		VARCHAR(1),
	OUT OUT_TOPAMT		DECIMAL(15,2),
	OUT OUT_BOTTOMAMT	DECIMAL(15,2),
	OUT OUT_OPENDATE	VARCHAR(8),
	OUT OUT_OPENNODENO	VARCHAR(6),
	OUT OUT_OPENBANKNO	VARCHAR(6),
	OUT OUT_OPENTELLERNO	VARCHAR(10),
	OUT OUT_LASTLOGIP	VARCHAR(20)
)      
READS SQL DATA           
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-鐢ㄦ埛淇℃伅鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	     涓诲崱鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNO锛氱綉閾跺鎴峰彿
-- OUT_AREANO	鍦板尯鍙?
-- OUT_ALIAS	鍒悕
-- OUT_CUSTNAME	濮撳悕
-- OUT_CUSTSEX	鎬у埆
-- OUT_CUSTTYPE	瀹㈡埛绫诲瀷
-- OUT_CTFTYPE	璇佷欢绫诲瀷
-- OUT_CTFNO	璇佷欢鍙风爜	
-- OUT_MOBILE	鎵嬫満	
-- OUT_PHONE	鑱旂郴鐢佃瘽
-- OUT_EMAIL	鐢靛瓙閭欢		
-- OUT_ADDRESS	鍦板潃
-- OUT_ZIPCODE	閭紪
-- OUT_CUSTSTT	鐘舵€?-- OUT_TOPAMT	閲戦涓婇檺	
-- OUT_BOTTOMAMT	閲戦涓嬮檺
-- OUT_OPENDATE		寮€鎴锋棩鏈?-- OUT_OPENNODENO	寮€鎴风綉鐐瑰彿
-- OUT_OPENBANKNO	寮€鎴峰垎琛屽彿
-- OUT_OPENTELLERNO	寮€鎴锋煖鍛?-- OUT OUT_LASTLOGIP	鏈€鍚庢垚鍔熺櫥褰昳p

-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.05
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
		

	--鏌ヨ淇℃伅
	SELECT 
		PIF_CSTNO,                         
		PIF_AREACODE,                 
		PIF_ALIAS,                   
		PIF_NAMECN,               
		PIF_SEX,                
		PIF_CSTTYP,         
		PIF_CTFTYP,               
		PIF_CTFNO,                   
		PIF_MOBILE,                      
		PIF_PHONE,                   
		PIF_EMAIL,                   
		PIF_ADDRESS,                      
		PIF_ZIPCODE,                     
		PIF_STT,                                           
		PIF_OPENDATE,              
		PIF_OPENNETNO,                
		PIF_OPENBRANCHNO,                 
		PIF_OPENTELLER,                
		PIF_LASTLGNIP	     
	INTO
		OUT_CUSTNO,                         
		OUT_AREANO,                 
		OUT_ALIAS,                   
		OUT_CUSTNAME,               
		OUT_CUSTSEX,                
		OUT_CUSTTYPE,         
		OUT_CTFTYPE,               
		OUT_CTFNO,                   
		OUT_MOBILE,                      
		OUT_PHONE,                   
		OUT_EMAIL,                   
		OUT_ADDRESS,                      
		OUT_ZIPCODE,                     
		OUT_CUSTSTT,                                           
		OUT_OPENDATE,              
		OUT_OPENNODENO,                
		OUT_OPENBANKNO,                 
		OUT_OPENTELLERNO,                
		OUT_LASTLOGIP	     
	FROM PB_CSTINF
	WHERE PIF_ACCNO = IN_CARDNO;
	
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF OUT_CUSTNO IS NULL OR OUT_CUSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;
	
	SELECT 
		PCL_BTMAMT,
		PCL_TOPAMT
	INTO
		OUT_BOTTOMAMT,
		OUT_TOPAMT
	FROM PB_CARDLMT
	WHERE PCL_CARDNO = IN_CARDNO;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_QUERY_CUSTINFO_FOR_CERTOP_CORE ( 
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50),
	OUT OUT_CTFTYPE		VARCHAR(2),
	OUT OUT_CTFNO		VARCHAR(30),
	OUT OUT_AREANO		VARCHAR(3),
	OUT OUT_CUSTNO		VARCHAR(10)
)  
READS SQL DATA               
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛璇佷功鎿嶄綔鐩稿叧淇℃伅鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	     涓诲崱鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_ANSCODE锛氳繑鍥炵爜
-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNO锛氱綉閾跺鎴峰彿
-- OUT_AREANO	鍦板尯鍙?
-- OUT_CTFTYPE	璇佷欢绫诲瀷
-- OUT_CTFNO	璇佷欢鍙风爜	

-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.12
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--鏌ヨ淇℃伅
	SELECT                          
		PIF_CTFTYP,               
		PIF_CTFNO,                         
		PIF_AREACODE,
		PIF_CSTNO
	INTO                       
		OUT_CTFTYPE,               
		OUT_CTFNO, 
		OUT_AREANO,
		OUT_CUSTNO                  	     
	FROM PB_CSTINF
	WHERE PIF_ACCNO = IN_CARDNO;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_QUERY_CUST_NAME_CONFERNO_CORE ( 
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CUSTNAME	VARCHAR(30),
	OUT OUT_CONFERNO	VARCHAR(16)
) 
READS SQL DATA                
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-鏌ヨ瀹㈡埛濮撳悕鍜岃瘉涔﹀崗璁彿 鐢ㄤ簬澶ч泦涓?-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	     涓诲崱鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?--OUT_CUSTNAME :鎸佸崱浜哄鍚?--OUT_CONFERNO鍗忚鍙?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.08
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_CUSTNO VARCHAR(10);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;

	--鑾峰彇缃戦摱瀹㈡埛鍙?涓诲崱浜哄鍚嶅拰璇佷功鍗忚鍙?	SELECT PIF_CSTNO,PIF_NAMECN INTO V_CUSTNO,OUT_CUSTNAME FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO;

	SELECT POC_CONFERNO INTO OUT_CONFERNO FROM IM_PERSONCSTOPRCRT WHERE POC_CSTNO = V_CUSTNO;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_QUERY_MAINCARD_INFO_CORE ( 
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CUSTNO		VARCHAR(10),
	OUT OUT_CUSTSTT		VARCHAR(1),
	OUT OUT_CUSTTYPE	VARCHAR(1),
	OUT OUT_OUTNUM		VARCHAR(10)
)  
READS SQL DATA    
DYNAMIC RESULT SETS 1           
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-涓诲崱鍏宠仈淇℃伅鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	  涓诲崱鍗″彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNO锛氱綉閾跺鎴峰彿
-- OUT_CUSTSTT	瀹㈡埛鐘舵€?--OUT_CUSTTYPE 鐧诲綍鏂瑰紡	
-- OUT_OUTNUM	杈撳嚭姣旀暟
-- CUR_RESULT 涓嬫寕鍗′俊鎭垪琛?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.10
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_CUSTNO VARCHAR(10);
	DECLARE V_OUTNUM INT;
		
	--瀹氫箟娓告爣锛屾煡璇笅鎸傚崱淇℃伅
	DECLARE CUR_RESULT CURSOR  WITH RETURN TO CALLER FOR
		SELECT
			A.PAI_CARDNO,
			A.PAI_HLDNAME,
			B.PCL_TOPAMT,
			B.PCL_BTMAMT
		 FROM PB_ACCINF A,PB_CARDLMT B
		 WHERE
			A.PAI_CSTNO = OUT_CUSTNO
			AND	A.PAI_MSTFLAG = '0'
			AND A.PAI_CARDNO = B.PCL_CARDNO	;
		
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
			
	--鍒濆鍖栧彉閲?	
	
	--鏌ヨ鍩烘湰淇℃伅
	SELECT 
		PIF_CSTNO,                                            
		PIF_STT ,
		PIF_CSTTYP                                     	     
	INTO
		OUT_CUSTNO,
		OUT_CUSTSTT,
		OUT_CUSTTYPE
	FROM PB_CSTINF
	WHERE PIF_ACCNO = IN_CARDNO;

	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF OUT_CUSTNO IS NULL OR OUT_CUSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;
		
		
	--鑾峰緱杈撳嚭姣旀暟
	SELECT COUNT(1) INTO V_OUTNUM
	FROM PB_ACCINF
	WHERE PAI_CSTNO = OUT_CUSTNO AND PAI_MSTFLAG = '0';
	SET OUT_OUTNUM = CHAR(V_OUTNUM);
	
	--鎵撳紑娓告爣
	OPEN CUR_RESULT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_RESET_CUST_PWD_CORE (
	IN IN_TELLERNO		VARCHAR(10),
	IN IN_BANKNO		VARCHAR(6),
	IN IN_NODENO		VARCHAR(6),
	IN IN_CARDNO		VARCHAR(30),
	IN IN_CTFTYPE		VARCHAR(2),
	IN IN_CTFNO			VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CUSTNAME	VARCHAR(30)
)                
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛閲嶇疆鐧诲綍瀵嗙爜
-- 杈撳叆鍙傛暟锛?-- IN IN_TELLERNO	 寮€鎴锋煖鍛樺彿       
-- IN IN_BANKNO		 鍒嗚鍙?-- IN IN_NODENO		 缃戠偣鍙?-- IN IN_CARDNO	     涓诲崱鍗″彿
-- IN IN_CTFTYPE	 璇佷欢绫诲瀷
-- IN IN_CTFNO	     璇佷欢鍙风爜
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?--OUT_CUSTNAME :鎸佸崱浜哄鍚?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.10
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME VARCHAR(14);
	
	DECLARE V_FIXCSTNO VARCHAR(10);
	DECLARE V_FIXCSTTYP VARCHAR(1);
	DECLARE V_FIXNAMECN VARCHAR(30);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	SELECT PIF_CSTNO,PIF_CSTTYP,PIF_NAMECN
	INTO V_FIXCSTNO,V_FIXCSTTYP,V_FIXNAMECN
	FROM PB_CSTINF 
	WHERE PIF_ACCNO = IN_CARDNO;
	
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF V_FIXCSTNO IS NULL OR V_FIXCSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;

	--鍒ゆ柇瀹㈡埛鏄惁鏄瘑鐮佹敞鍐岀敤鎴?	IF V_FIXCSTTYP<>'0' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0811';
		SET OUT_ANSINFO = '璇ョ綉閾跺鎴蜂笉鏄墜鏈烘敞鍐岀増鐢ㄦ埛';
		RETURN;		
	END IF;
	
	--鏍￠獙璇佷欢绫诲瀷鍜岃瘉浠跺彿鐮?	--IF (SELECT PIF_CTFTYP FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO) <> IN_CTFTYPE OR 
	--	(SELECT PIF_CTFNO FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO) <> IN_CTFNO
	--THEN
	--	SET PROC_RET_CODE = '95000';
	--	SET OUT_TOA_MSG_TYPE = 'E';
	--	SET OUT_TOA_MSG_AP_MMO = 'NE';
	--	SET OUT_TOA_MSG_CODE = '0810';
	--	SET OUT_ANSINFO = '鏍￠獙涓嶉€氳繃';
	--	RETURN;	
	--END IF;		

	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	--鏇存柊涓汉瀹㈡埛鍩烘湰淇℃伅琛紝灏嗙姸鎬佺疆涓衡€滀粠鏈櫥褰曗€?	UPDATE PB_CSTINF 
	SET PIF_STT = '2', 
		PIF_CHGTELLER = IN_TELLERNO,
		PIF_CHGBRANCHNO = IN_BANKNO,
		PIF_CHGNETNO = IN_NODENO,
		PIF_LASTCHGTIM = V_DATETIME
	WHERE PIF_ACCNO = IN_CARDNO;

	--鑾峰緱涓诲崱浜哄鍚?	SET OUT_CUSTNAME = V_FIXNAMECN;
	
	--閲嶇疆鐧婚檰瀵嗙爜鍚庯紝閲嶇疆鍗℃煡璇㈠瘑鐮侀敊璇鏁?	DELETE FROM PB_LOGFAIL WHERE PLF_CARDNO= IN_CARDNO AND PLF_TYPE='0';
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_REVOKE_CUST_CORE ( 
	IN IN_TELLERNO		VARCHAR(10),
	IN IN_BANKNO		VARCHAR(6),
	IN IN_NODENO		VARCHAR(6),
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CUSTNAME	VARCHAR(30)
)                
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛娉ㄩ攢
-- 杈撳叆鍙傛暟锛?-- IN IN_TELLERNO	 寮€鎴锋煖鍛樺彿       
-- IN IN_BANKNO		 鍒嗚鍙?-- IN IN_NODENO		 缃戠偣鍙?-- IN IN_CARDNO	     涓诲崱鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNAME :鎸佸崱浜哄鍚?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2006.03.27
-- 鏈€鍚庝慨鏀逛汉锛欵CC.xuwei
-- 鏈€鍚庝慨鏀规棩鏈燂細2008.12.19
-- 鏈€鍚庝慨鏀瑰唴瀹癸細鏂板鎵嬫満閾惰閿€鎴?------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME VARCHAR(14);
	DECLARE V_CUSTNO VARCHAR(10);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	--鑾峰緱缃戦摱瀹㈡埛鍙峰拰涓诲崱浜哄鍚?	SELECT PIF_CSTNO,PIF_NAMECN INTO V_CUSTNO ,OUT_CUSTNAME FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO;

	IF V_CUSTNO IS NULL OR V_CUSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;

	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	
	--鍒ゆ柇ra璇佷功淇℃伅鏄惁瀛樺湪
	IF EXISTS (
		SELECT 1 
		FROM IM_PERSONCSTOPRCRT 
		WHERE POC_CSTNO = V_CUSTNO
	) THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0821';
		SET OUT_ANSINFO = '娉ㄩ攢鐢ㄦ埛鍓嶅繀椤诲厛浣滃簾璇佷功';
		RETURN;		
	END IF;	

		
	--鍒犻櫎涓汉瀹㈡埛鍩烘湰淇℃伅琛ㄦ暟鎹紝鎻掑叆涓汉瀹㈡埛娉ㄩ攢鍩烘湰淇℃伅琛?	INSERT INTO PB_CSTINF_CLOSE
	(
		PIFC_CSTNO,
		PIFC_ACCNO,
		PIFC_AREACODE,
		PIFC_CSTTYP,
		PIFC_CERTTYP,
		PIFC_NAMECN,
		PIFC_NAMEEN,
		PIFC_ALIAS,
		PIFC_PASSWORD,
		PIFC_LOVENAME,
		PIFC_SEX,
		PIFC_BIRTHDAY,
		PIFC_CTFTYP,
		PIFC_CTFNO,
		PIFC_MOBILE,
		PIFC_ADDRESS,
		PIFC_PHONE,
		PIFC_FAX,
		PIFC_ZIPCODE,
		PIFC_EMAIL,
		PIFC_EMPLOYEE,
		PIFC_STT,
		PIFC_LASTLGNTIM,
		PIFC_LASTLGNIP,
		PIFC_OPENTYP,
		PIFC_OPENTELLER,
		PIFC_OPENBRANCHNO,
		PIFC_OPENNETNO,
		PIFC_OPENDATE
	)
	SELECT
		PIF_CSTNO,
		PIF_ACCNO,
		PIF_AREACODE,
		PIF_CSTTYP,
		PIF_CERTTYP,
		PIF_NAMECN,
		PIF_NAMEEN,
		PIF_ALIAS,
		PIF_PASSWORD,
		PIF_LOVENAME,
		PIF_SEX,
		PIF_BIRTHDAY,
		PIF_CTFTYP,
		PIF_CTFNO,
		PIF_MOBILE,
		PIF_ADDRESS,
		PIF_PHONE,
		PIF_FAX,
		PIF_ZIPCODE,
		PIF_EMAIL,
		PIF_EMPLOYEE,
		PIF_STT,
		PIF_LASTLGNTIM,
		PIF_LASTLGNIP,
		PIF_OPENTYP,
		PIF_OPENTELLER,
		PIF_OPENBRANCHNO,
		PIF_OPENNETNO,
		PIF_OPENDATE	
	FROM PB_CSTINF
	WHERE PIF_ACCNO = IN_CARDNO;
	
	UPDATE PB_CSTINF_CLOSE SET
		PIFC_OFFTELLER = IN_TELLERNO,
		PIFC_OFFBRANCHNO = IN_BANKNO,
		PIFC_OFFNETNO = IN_NODENO,
		PIFC_OFFCHGTIM = V_DATETIME
	WHERE PIFC_ACCNO = IN_CARDNO;
	
	--鍒犻櫎鍦ㄧ嚎鐧昏鐨勬煡璇㈣处鎴蜂俊鎭?	DELETE FROM PB_COMMACCINF WHERE  PCAI_CSTNO = V_CUSTNO;
	
	DELETE FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO;
	
	--鍒犻櫎姝ょ綉閾跺鎴峰湪娉ㄥ唽鍗″垪琛ㄧ殑鐩稿叧鍏崇郴
	DELETE FROM PB_ACCINF WHERE PAI_CSTNO = V_CUSTNO;
	
	--鑻ユ鍗℃病鏈変綔涓轰笅鎸傚崱锛屽垯鍒犻櫎娉ㄥ唽鍗￠搴﹁〃鐩稿叧淇℃伅
	IF NOT EXISTS (
		SELECT 1 FROM PB_ACCINF WHERE PAI_CARDNO = IN_CARDNO AND PAI_MSTFLAG = '0'
	)THEN
		DELETE FROM PB_CARDLMT WHERE PCL_CARDNO = IN_CARDNO;
	END IF;
	
	--鍒犻櫎棣栭〉闈㈠畾鍒惰褰曡〃銆佸鎴烽粯璁ゅ崱鍙疯缃〃鐩稿叧璁板綍
	
	DELETE FROM PB_DFLCRD WHERE PDC_CSTNO = V_CUSTNO;
	--鍒犻櫎瀹㈡埛鏀舵浜虹櫥璁拌杽淇℃伅
	DELETE FROM PB_CSTRELACC WHERE PRA_CSTNO = V_CUSTNO;
	--鍒犻櫎瀹㈡埛鑷畾涔変俊鎭〃淇℃伅
	DELETE FROM PB_USERDEFINED WHERE PUD_CSTNO = V_CUSTNO;
	--鍒犻櫎鐧婚檰瀵嗙爜鍜屾煡璇㈠瘑鐮侀敊璇鏁?	DELETE FROM PB_LOGFAIL WHERE (PLF_CARDNO = IN_CARDNO OR PLF_CARDNO=V_CUSTNO) AND PLF_TYPE='0';
	
	--鏂板鎵嬫満閾惰閿€鎴?	UPDATE MB_CSTINF SET MIF_STT = '9',MIF_CHGTELLER=IN_TELLERNO,MIF_CHGBRANCHNO=IN_BANKNO,MIF_CHGNETNO=IN_NODENO,MIF_LASTCHGTIM=V_DATETIME
		WHERE MIF_CSTNO=V_CUSTNO AND MIF_STT <> '9'  ;
 	
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_SET_CUST_STT_CORE (
	IN IN_TELLERNO		VARCHAR(10),
	IN IN_BANKNO		VARCHAR(6),
	IN IN_NODENO		VARCHAR(6),
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50)
)                
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛鍙栨秷姝粯
-- 杈撳叆鍙傛暟锛?-- IN IN_TELLERNO	 寮€鎴锋煖鍛樺彿       
-- IN IN_BANKNO		 鍒嗚鍙?-- IN IN_NODENO		 缃戠偣鍙?-- IN IN_CARDNO	     涓诲崱鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.zhouwei
-- 鏈€鍚庝慨鏀规棩鏈?锛?2005.09.08
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME VARCHAR(14);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;


	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	--鏇存柊涓汉瀹㈡埛鍩烘湰淇℃伅琛紝灏嗙姸鎬佺疆涓衡€滀粠鏈櫥褰曗€?	UPDATE PB_CSTINF 
	SET PIF_STT = '2', 
		PIF_CHGTELLER = IN_TELLERNO,
		PIF_CHGBRANCHNO = IN_BANKNO,
		PIF_CHGNETNO = IN_NODENO,
		PIF_LASTCHGTIM = V_DATETIME
	WHERE PIF_ACCNO = IN_CARDNO;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_UNFREEZE_CUST_CORE (
	IN IN_TELLERNO		VARCHAR(10),
	IN IN_BANKNO		VARCHAR(6),
	IN IN_NODENO		VARCHAR(6),
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CUSTTYPE	VARCHAR(1),
	OUT OUT_CUSTNAME	VARCHAR(30)
)                
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛鍙栨秷姝粯
-- 杈撳叆鍙傛暟锛?-- IN IN_TELLERNO	 寮€鎴锋煖鍛樺彿       
-- IN IN_BANKNO		 鍒嗚鍙?-- IN IN_NODENO		 缃戠偣鍙?-- IN IN_CARDNO	     涓诲崱鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTTYPE 鐢ㄦ埛绫诲瀷
--OUT_CUSTNAME :鎸佸崱浜哄鍚?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.3.26
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME VARCHAR(14);
	DECLARE V_ALIAS VARCHAR(30);
	DECLARE V_STT CHAR(1);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--浠庢暟鎹簱涓€娆″彇鍑烘暟鎹?	SELECT PIF_STT,PIF_CSTTYP,PIF_NAMECN,PIF_ALIAS 
		INTO V_STT,OUT_CUSTTYPE,OUT_CUSTNAME,V_ALIAS 
		FROM PB_CSTINF 
		WHERE PIF_ACCNO = IN_CARDNO;
	
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF V_STT IS NULL OR V_STT='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;

	--鍒ゆ柇瀹㈡埛鏄惁琚浠?	IF V_STT<>'1' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0806';
		SET OUT_ANSINFO = '缃戦摱瀹㈡埛鐘舵€佷笉涓鸿姝粯';
		RETURN;		
	END IF;

	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	--鏇存柊涓汉瀹㈡埛鍩烘湰淇℃伅琛紝灏嗙姸鎬佺疆涓衡€滄甯糕€濇垨鑰呪€滀粠鏈櫥褰曗€?	IF V_ALIAS IS NULL OR V_ALIAS = '' THEN
		UPDATE PB_CSTINF 
		SET PIF_STT = '2', 
			PIF_CHGTELLER = IN_TELLERNO,
			PIF_CHGBRANCHNO = IN_BANKNO,
			PIF_CHGNETNO = IN_NODENO,
			PIF_LASTCHGTIM = V_DATETIME
		WHERE PIF_ACCNO = IN_CARDNO;
	ELSE
		UPDATE PB_CSTINF 
		SET PIF_STT = '0', 
			PIF_CHGTELLER = IN_TELLERNO,
			PIF_CHGBRANCHNO = IN_BANKNO,
			PIF_CHGNETNO = IN_NODENO,
			PIF_LASTCHGTIM = V_DATETIME
		WHERE PIF_ACCNO = IN_CARDNO;
	END IF;
		
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_UNLOCK_CARD_CORE (
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50)
)                
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-鍗¤В閿佷氦鏄?-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	     鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.WUJC
-- 鏈€鍚庝慨鏀规棩鏈?锛?2007.3.26
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_TIME INTEGER;
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--鍙栧嚭瀵嗙爜杈撻敊娆℃暟
	SELECT PLF_TIMES INTO V_TIME FROM PB_LOGFAIL WHERE PLF_CARDNO = IN_CARDNO AND PLF_TYPE='0';
	
	IF V_TIME IS NULL OR V_TIME < 6 THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0835';
		SET OUT_ANSINFO = '鏃犲姞閿佽褰?;
		RETURN;		
	ELSE
		--鍒犻櫎涓汉瀹㈡埛瀵嗙爜澶辫触鐧昏琛ㄧ浉鍏宠褰曪紝涓哄崱瑙ｉ攣
		DELETE FROM PB_LOGFAIL WHERE PLF_CARDNO = IN_CARDNO AND PLF_TYPE='0';
	END IF;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE	PROCEDURE	PB_QUERY_CARD_INFO(
	IN	IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE 	VARCHAR(5),
	OUT	OUT_CTFTYPE		CHAR(4),
	OUT	OUT_CTFNO		VARCHAR(30),
	OUT	OUT_CUSTNAME	VARCHAR(30),
	OUT	OUT_CUSTSEX		CHAR(1),
	OUT	OUT_OPENFLAG	CHAR(1),
	OUT	OUT_CUSTTYPE	CHAR(1),
	OUT	OUT_ISPERMIT	CHAR(1),
	OUT	OUT_MOBILE		VARCHAR(20),
	OUT	OUT_DAYSUMAMT	VARCHAR(15),
	OUT	OUT_TOPAMT		VARCHAR(15),
	OUT	OUT_REMARK		VARCHAR(30)	
)
READS SQL DATA

BEGIN
	DECLARE	V_CARDTYPE	CHAR(1);
	DECLARE	V_A_CTFTYPE	VARCHAR(2);		--璇佷欢绫诲瀷
	DECLARE	V_A_CTFNO	VARCHAR(30);	--璇佷欢鍙风爜
	DECLARE	V_I_CTFTYPE	VARCHAR(2);		--璇佷欢绫诲瀷
	DECLARE	V_I_CTFNO	VARCHAR(30);	--璇佷欢鍙风爜

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;

	
	IF EXISTS(	SELECT 1 FROM PB_ACCINF --,PB_CSTINF 
				WHERE PAI_CARDNO=IN_CARDNO 
				--AND PAI_CSTNO=PIF_CSTNO 
				--AND PAI_HLDCTFTYP=PIF_CTFTYP 
				--AND PAI_HLDCTFNO=PIF_CTFNO
			) THEN
		SELECT 
			PAI_CARDTYP,
			PAI_HLDCTFTYP,
			PAI_HLDCTFNO,
			PAI_HLDNAME,
			PAI_HLDSEX,
			PAI_HLDCTFTYP,
			PAI_HLDCTFNO,
			'1',
			PIF_CSTTYP	,
			PIF_CTFTYP,
			PIF_CTFNO,
			'0',
			PIF_MOBILE,
			'0',
			''
		INTO	
			V_CARDTYPE,
			OUT_CTFTYPE,
			OUT_CTFNO,
			OUT_CUSTNAME,
			OUT_CUSTSEX,
			V_A_CTFTYPE,
			V_A_CTFNO,
			OUT_OPENFLAG,
			OUT_CUSTTYPE,
			V_I_CTFTYPE,
			V_I_CTFNO,
			OUT_ISPERMIT,
			OUT_MOBILE,
			OUT_DAYSUMAMT,
			OUT_REMARK
		FROM PB_ACCINF ,PB_CSTINF 
		WHERE PAI_CARDNO=IN_CARDNO 
		AND PAI_CSTNO=PIF_CSTNO 
		AND PAI_HLDCTFTYP=PIF_CTFTYP 
		AND PAI_HLDCTFNO=PIF_CTFNO 
		FETCH FIRST ROW ONLY;
		
		IF V_I_CTFTYPE IS NULL OR V_I_CTFTYPE ='' OR V_I_CTFTYPE <> V_A_CTFTYPE OR V_I_CTFNO <> V_A_CTFNO THEN 
			--闈炴寔鍗′汉鏈夋晥璇佷欢
			SET PROC_RET_CODE = '39005';
			RETURN;
		END IF;
		
		IF	OUT_CUSTTYPE ='0' THEN 
			SET OUT_TOPAMT='500000';
		ELSEIF OUT_CUSTTYPE ='1' AND (V_CARDTYPE='0' OR V_CARDTYPE='1') THEN 
			SET OUT_TOPAMT='5000000';	
		ELSEIF OUT_CUSTTYPE ='1' AND (V_CARDTYPE='2') THEN 
			SET OUT_TOPAMT='1000000';	
		END IF; 	
		
		SET OUT_DAYSUMAMT = OUT_TOPAMT;
		
		IF OUT_CUSTTYPE ='0' THEN 
			SET OUT_CUSTTYPE='1';
		ELSEIF OUT_CUSTTYPE ='1' THEN 
			SET OUT_CUSTTYPE='2';
		ELSE 
			SET OUT_CUSTTYPE ='0';
		END IF;
		
	ELSE
		SET PROC_RET_CODE='39001';
		SET OUT_OPENFLAG='1';
		SET OUT_ISPERMIT='1';
		RETURN;
	END IF;
	
	SET PROC_RET_CODE='00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_CHECK_APPDCARD_CORE
 (IN IN_CARDNO VARCHAR(30), 
  IN IN_APPDCARDNO   VARCHAR(30),
  IN IN_APPDCTFTYPE   VARCHAR(2),
  IN IN_APPDCTFNO      VARCHAR(30),
 OUT PROC_RET_CODE	VARCHAR(5),
 OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
 OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
 OUT OUT_TOA_MSG_CODE		VARCHAR(4),
 OUT OUT_ANSINFO		VARCHAR(50)
 ) 
 READS SQL DATA 
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛鍏宠仈甯愭埛妫€鏌ワ紝鑻ヤ笅鎸傚崱宸茶浠栦汉涓嬫寕锛屽垯杩斿洖閿欒锛屽惁鍒欙紝姝ｅ父杩斿洖
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO				涓诲崱鍙?  
-- IN_APPDCARDNO		涓嬫寕鍗″彿   
-- IN_APPDCTFTYPE	涓嬫寕鍗℃寔鍗′汉璇佷欢绫诲瀷   
-- IN_APPDCTFNO		涓嬫寕鍗℃寔鍗′汉璇佷欢鍙风爜   
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE 				瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯?30028涓鸿涓嬫寕鍗″凡琚粬浜轰笅鎸?-- OUT_TOA_MSG_TYPE			杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE			淇℃伅鐮?-- OUT_ANSINFO						杩斿洖淇℃伅
-- 鏈€鍚庝慨鏀逛汉锛歸ujianc
-- 鏈€鍚庝慨鏀规棩鏈?锛?2006.10.17
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺

	DECLARE V_COUNT SMALLINT;
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
     END;
     
 	
 	
 	IF EXISTS(SELECT 1 FROM PB_CSTINF 
 	  WHERE PIF_ACCNO = IN_CARDNO AND PIF_CTFTYP = IN_APPDCTFTYPE AND PIF_CTFNO = IN_APPDCTFNO) THEN
 		--涓嬫寕鍗′笌涓诲崱鏄悓涓€瀹㈡埛
		SET PROC_RET_CODE = '00000';
		SET OUT_TOA_MSG_TYPE = 'N';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0000';
		SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';   			
		RETURN;
	END IF;
 	
	
    --鍒ゆ柇涓嬫寕鍗℃槸鍚﹀凡琚粬浜轰笅鎸?    
	IF EXISTS(select 1 from PB_ACCINF A,PB_CSTINF C 
	   	where A.PAI_CARDNO = IN_APPDCARDNO and A.PAI_CSTNO = C.PIF_CSTNO
	   	 and (C.PIF_CTFTYP <> IN_APPDCTFTYPE or C.PIF_CTFNO <> IN_APPDCTFNO)) THEN
		--涓嬫寕鍗″凡琚粬浜轰笅鎸?		SET PROC_RET_CODE = '30028';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0836';
		SET OUT_ANSINFO = '璇ヤ笅鎸傚崱宸茶浠栦汉涓嬫寕';
		RETURN;
	ELSE
		--涓嬫寕鍗℃湭琚粬浜轰笅鎸?		SET PROC_RET_CODE = '00000';
		SET OUT_TOA_MSG_TYPE = 'N';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0000';
		SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';   			
	END IF;	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_UPDATE_COREINFO_TO_NETBANK (
	IN  IN_CARDNO		VARCHAR(30),
	IN  IN_IDTYPE       CHAR(2),
	IN  IN_IDNUM        VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50),
	OUT OUT_CSTNO			VARCHAR(10),
	OUT OUT_ISMUPDATE		VARCHAR(1)
)       
	DYNAMIC RESULT SETS 1          
------------------------------------------------------------------------
-- 鏇存柊缃戦摱瀹㈡埛鐨勮瘉浠剁被鍨嬨€佽瘉浠跺彿鐮?-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-涓嬫寕鍗″拰涓诲崱寤虹珛鍏宠仈鍏崇郴鍓嶅厛鎶婃牳蹇冭瀹㈡埛鐨勮瘉浠剁被鍨嬪拰璇佷欢鍙风爜鍚屾鍒扮綉閾舵暟鎹簱銆?-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	      鍗″彿
-- IN IN_IDTYPE      璇佷欢绫诲瀷
-- IN IN_IDNUM		 璇佷欢鍙风爜

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛?      瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯?--OUT_TOA_MSG_TYPE	     杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO    淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	     淇℃伅鐮?--OUT_ANSINFO锛?          杩斿洖淇℃伅
-- 浣滆€咃細maonf
-- 鍒涘缓鏃ユ湡 锛?2007.05.14

------------------------------------------------------------------------
BEGIN
	
	-- 鍙橀噺澹版槑
	DECLARE V_CSTNO VARCHAR(10);
	DECLARE V_CTFTYP VARCHAR(2);
	DECLARE V_CTFNO VARCHAR(30);
	DECLARE CUR_CARDSRESULT	CURSOR WITH RETURN FOR
		SELECT PAI_CARDNO,PAI_CARDTYP
		FROM PB_ACCINF 
		WHERE PAI_CSTNO = V_CSTNO AND PAI_HLDCTFTYP=IN_IDTYPE AND PAI_HLDCTFNO=IN_IDNUM;
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;	
	
	--鍒ゆ柇涓诲崱鏄惁绛剧害    
    SELECT PIF_CSTNO,PIF_CTFTYP,PIF_CTFNO  INTO V_CSTNO,V_CTFTYP,V_CTFNO FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO;
	
    SET	OUT_CSTNO=V_CSTNO;
	IF V_CSTNO IS NULL OR V_CSTNO = '' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;	
		
	ELSEIF (V_CTFTYP=IN_IDTYPE AND V_CTFNO= IN_IDNUM )THEN
		SET PROC_RET_CODE = '00000';
		SET OUT_TOA_MSG_TYPE = 'N';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0000';
		SET OUT_ANSINFO =  '浜ゆ槗鎴愬姛';
		SET OUT_ISMUPDATE='0';
		RETURN;	
	
	ELSE
		UPDATE PB_CSTINF 
		SET PIF_CTFTYP = IN_IDTYPE,
	  		PIF_CTFNO = IN_IDNUM
	  	WHERE PIF_ACCNO = IN_CARDNO;
	  	
	  	UPDATE PB_ACCINF
	  	SET PAI_HLDCTFTYP = IN_IDTYPE,
	  		PAI_HLDCTFNO = IN_IDNUM
	  	WHERE PAI_CSTNO = V_CSTNO AND PAI_HLDCTFTYP=V_CTFTYP AND PAI_HLDCTFNO=V_CTFNO;
	  	
	  	UPDATE PB_CSTINF_CLOSE
	  	SET PIFC_CTFTYP = IN_IDTYPE,
	  		PIFC_CTFNO = IN_IDNUM
	  	WHERE PIFC_ACCNO = IN_CARDNO;
	  	
	  	UPDATE PB_ACCINF_CLOSE
	  	SET PAIC_HLDCTFTYP = IN_IDTYPE,
	  		PAIC_HLDCTFNO = IN_IDNUM
	  	WHERE PAIC_CSTNO = V_CSTNO AND PAIC_HLDCTFTYP=V_CTFTYP AND PAIC_HLDCTFNO=V_CTFNO;
	  		  	
	END IF;
	COMMIT;
	OPEN CUR_CARDSRESULT;
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	SET OUT_ISMUPDATE='1';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_CHECK_CARD_ISSIGN_NETBANK (
	IN  IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50)
)          
------------------------------------------------------------------------
-- 鍒ゆ柇鍗℃槸鍚︾绾︾綉閾?-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-涓嬫寕鍗″拰涓诲崱寤虹珛鍏宠仈鍏崇郴鍓嶅厛楠岃瘉璇ュ崱鏄惁绛剧害缃戦摱鏁版嵁搴撱€?-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	      鍗″彿

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛?      瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯?--OUT_TOA_MSG_TYPE	     杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO    淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	     淇℃伅鐮?--OUT_ANSINFO锛?          杩斿洖淇℃伅
-- 浣滆€咃細maonf
-- 鍒涘缓鏃ユ湡 锛?2007.05.21

------------------------------------------------------------------------
BEGIN
	
	-- 鍙橀噺澹版槑
	DECLARE V_CSTNO VARCHAR(10);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;	
	
	--鍒ゆ柇涓诲崱鏄惁绛剧害    
	IF NOT EXISTS ( SELECT 1
					FROM PB_CSTINF
					WHERE PIF_ACCNO = IN_CARDNO)
 		THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;	
	END IF;
		
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_UPDATE_XIAINFO_TO_NETBANK (
	IN  IN_APPDCARDNO	VARCHAR(30),
	
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50)
)       
	DYNAMIC RESULT SETS 2        
------------------------------------------------------------------------
-- 鏇存柊缃戦摱瀹㈡埛鐨勮瘉浠剁被鍨嬨€佽瘉浠跺彿鐮?-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-鏌ュ嚭璇ュ崱鏄惁涓嬫寕缃戦摱锛岃嫢宸茬粡涓嬫寕锛屽垯鏌ュ嚭璇ヤ笅鎸傚崱鎵€瀵瑰簲涓诲崱鐨勫崱鍙?
-- 杈撳叆鍙傛暟锛?-- IN IN_APPDCARDNO	 涓嬫寕鍗″崱鍙?

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛?      瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯?--OUT_TOA_MSG_TYPE	     杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO    淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	     淇℃伅鐮?--OUT_ANSINFO锛?          杩斿洖淇℃伅
--OUT_HLDCTFTYP锛?        璇ヤ笅鎸傚崱鍦ㄧ綉閾跺瓨鐨勮瘉浠剁被鍨?--OUT_HLDCTFNO锛?       	璇ヤ笅鎸傚崱鍦ㄧ綉閾剁殑璇佷欢鍙风爜
-- 浣滆€咃細maonf
-- 鍒涘缓鏃ユ湡 锛?2007.05.28

------------------------------------------------------------------------
BEGIN
	
	-- 鍙橀噺澹版槑
	
	DECLARE CUR_CARDSRESULT	CURSOR WITH RETURN FOR
		SELECT PIF_CSTNO , PIF_ACCNO , PIF_CTFTYP , PIF_CTFNO
			FROM PB_CSTINF
				WHERE  EXISTS(SELECT 1 FROM PB_ACCINF WHERE PAI_CSTNO=PIF_CSTNO AND PAI_CARDNO = IN_APPDCARDNO);
				
	DECLARE CUR_XIACARD	CURSOR WITH RETURN FOR
		SELECT PAI_HLDCTFTYP , PAI_HLDCTFNO 
			FROM PB_ACCINF
				WHERE PAI_CARDNO = IN_APPDCARDNO  ;			
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;	
	
	OPEN CUR_CARDSRESULT;	
	OPEN CUR_XIACARD;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_UPDATE_MCARDINFO_TO_NETBANK (
	IN 	IN_CSTNO		VARCHAR(200),
	IN  IN_CARDNO		VARCHAR(200),
	IN  IN_IDTYPE       CHAR(2),
	IN  IN_IDNUM        VARCHAR(30),
	IN  IN_VCTFTYP       CHAR(2),
	IN  IN_VCTFNO        VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50),
	OUT OUT_CSTNO			VARCHAR(10),
	OUT OUT_ISUPDATE            VARCHAR(1)
)       
	DYNAMIC RESULT SETS 1          
------------------------------------------------------------------------
-- 鏇存柊缃戦摱瀹㈡埛鐨勮瘉浠剁被鍨嬨€佽瘉浠跺彿鐮?-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-鏌ュ嚭璇ヤ笅鎸傚崱涓睘浜庢湰浜虹殑涓诲崱锛屽強鍏跺鎴峰彿锛屽皢鍏舵墍灞炵殑璇佷欢绫诲瀷鍜屽彿鐮佷笌鏍稿績鍚屾銆?-- 杈撳叆鍙傛暟锛?-- IN IN_CSTNO	      鎵€鏈変富鍗″搴旂殑瀹㈡埛鍙?-- IN IN_CARDNO	      涓嬫寕鍗″搴旂殑鎵€鏈夊睘浜庢湰浜虹殑涓诲崱
-- IN IN_IDTYPE      璇佷欢绫诲瀷
-- IN IN_IDNUM		 璇佷欢鍙风爜

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛?      瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯?--OUT_TOA_MSG_TYPE	     杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO    淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	     淇℃伅鐮?--OUT_ANSINFO锛?          杩斿洖淇℃伅
-- 浣滆€咃細maonf
-- 鍒涘缓鏃ユ湡 锛?2007.05.14

------------------------------------------------------------------------
BEGIN
	DECLARE V_CTFTYP VARCHAR(2);
	DECLARE V_CTFNO VARCHAR(30);
	
	DECLARE V_SQL VARCHAR(600);
    DECLARE V_SQL1 VARCHAR(600);
    DECLARE V_SQL2 VARCHAR(600);
    DECLARE V_SQL3 VARCHAR(600);
    DECLARE V_CSQL VARCHAR(600);
    
	DECLARE V_CARD VARCHAR(200);
	
	DECLARE V_CSTNO VARCHAR(200);
	DECLARE V_TMP VARCHAR(500);
	
	DECLARE	CUR_XCARD	CURSOR WITH	RETURN FOR SQLSTATMENT;
	
   -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
	    SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
	    ROLLBACK;
	END;	

	IF IN_CSTNO IS NULL OR IN_CARDNO IS NULL OR IN_IDTYPE IS NULL OR IN_IDNUM IS NULL OR IN_VCTFTYP IS NULL OR IN_VCTFNO IS NULL THEN
		SET PROC_RET_CODE = '96000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0837';
	    SET OUT_ANSINFO = '鎻愪氦鐨勬暟鎹腑瀛樺湪闈炴硶鏁版嵁';
		RETURN;
	END IF;
	
	SET V_TMP = UPPER(IN_CSTNO) || '|' || UPPER(IN_CARDNO) || '|' || UPPER(IN_IDTYPE) || '|' || UPPER(IN_IDNUM)|| '|' || UPPER(IN_VCTFTYP) || '|' || UPPER(IN_VCTFNO);

	IF POSSTR(V_TMP,'OR') > 0 OR POSSTR(V_TMP,'--') > 0 OR POSSTR(V_TMP,'AND') > 0 THEN
		SET PROC_RET_CODE = '96000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0837';
	    SET OUT_ANSINFO = '鎻愪氦鐨勬暟鎹腑瀛樺湪闈炴硶鏁版嵁';
		RETURN;
	END IF;


	IF IN_VCTFTYP= IN_IDTYPE AND IN_IDNUM=IN_VCTFNO THEN
		SET PROC_RET_CODE = '00000';
		SET OUT_TOA_MSG_TYPE = 'N';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0000';
		SET OUT_ANSINFO =  '浜ゆ槗鎴愬姛';
		SET OUT_ISUPDATE='0';
		RETURN;	
	else	
		
		 SET V_CARD = REPLACE(IN_CARDNO,'|',''',''');
		 
		 SET V_CSTNO = REPLACE(IN_CSTNO,'|',''',''');
		 
		 SET V_CSQL='SELECT PAI_CARDNO ,PAI_CARDTYP FROM PB_ACCINF  WHERE PAI_HLDCTFNO = ''' ||  IN_IDNUM || ''' AND PAI_HLDCTFTYP = ''' ||  IN_IDTYPE || ''' AND PAI_CSTNO IN ( ''' ||V_CSTNO||''''||')';
		
		SET V_SQL = 'UPDATE PB_CSTINF SET PIF_CTFTYP =''' ||  IN_IDTYPE || ''' , PIF_CTFNO = ''' ||  IN_IDNUM || ''' WHERE PIF_ACCNO IN ( ''' ||V_CARD||''''||')';
		
		EXECUTE IMMEDIATE V_SQL;
		
	  	SET V_SQL1 = 'UPDATE PB_ACCINF SET PAI_HLDCTFTYP = ''' ||  IN_IDTYPE || ''' , PAI_HLDCTFNO = ''' ||  IN_IDNUM || '''  WHERE PAI_HLDCTFNO = ''' ||  IN_VCTFNO || ''' AND PAI_HLDCTFTYP = ''' ||  IN_VCTFTYP || ''' AND PAI_CSTNO IN ( ''' ||V_CSTNO||''''||')';
		
		EXECUTE IMMEDIATE V_SQL1;
	  	
	  	SET V_SQL2 = 'UPDATE PB_CSTINF_CLOSE SET PIFC_CTFTYP = ''' ||  IN_IDTYPE || ''', PIFC_CTFNO = ''' ||  IN_IDNUM || '''  WHERE PIFC_ACCNO IN ( ''' ||V_CARD||''''||')';
		
		EXECUTE IMMEDIATE V_SQL2;
	  	
	  	SET V_SQL3 = 'UPDATE PB_ACCINF_CLOSE SET PAIC_HLDCTFTYP = ''' ||  IN_IDTYPE || ''', PAIC_HLDCTFNO = ''' ||  IN_IDNUM || '''   WHERE PAIC_HLDCTFNO = ''' ||  IN_VCTFNO || ''' AND PAIC_HLDCTFTYP = ''' ||  IN_VCTFTYP || ''' AND PAIC_CSTNO IN ( ''' ||V_CSTNO||''''||')';
		
		EXECUTE IMMEDIATE V_SQL3;
	 
	END IF ;
	COMMIT;
	
	PREPARE SQLSTATMENT FROM V_CSQL;
	--杩斿洖缁撴灉闆?	OPEN CUR_XCARD;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	SET OUT_ISUPDATE='1';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_UPDATE_AREANO_CORE
( IN IN_CSTNO    	VARCHAR(10),
  IN IN_AREANO   	VARCHAR(3),
  OUT PROC_RET_CODE	VARCHAR(5)
 )
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-鏇存柊瀹㈡埛鐨勫湴鍖哄彿鍒扮绾﹀鎴蜂俊鎭〃
-- 杈撳叆鍙傛暟锛?-- IN_CSTNO			瀹㈡埛鍙峰彿   
-- IN_AREANO		鍦板尯鍙?-- 
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE 	瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯?30070绛剧害淇℃伅涓嶅瓨鍦?30071杈撳叆鍙傛暟浣嶇┖鎴朜ULL
-- 鍒涘缓浜猴細wanglm
-- 鍒涘缓鏃ユ湡 锛?2007.06.18
------------------------------------------------------------------------
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
    END;
    
    IF IN_AREANO = '' OR IN_AREANO IS NULL OR IN_CSTNO = '' OR IN_CSTNO IS NULL  THEN
		SET PROC_RET_CODE = '30071';
		RETURN;
	END IF;
	
 	--鍒ゆ柇璇ュ鎴峰彿鏄惁瀛樺湪
	IF NOT EXISTS (
		SELECT 1  
		FROM PB_CSTINF 
		WHERE PIF_CSTNO = IN_CSTNO
	) THEN
		SET PROC_RET_CODE = '30070';
		RETURN;
	END IF;	
	
 	UPDATE PB_CSTINF SET PIF_AREACODE = IN_AREANO WHERE PIF_CSTNO = IN_CSTNO;
 	
	COMMIT;	
	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_QUERY_APPDCARD_CONTACT_INFO
 (IN IN_CARDNO VARCHAR(30), 
  OUT PROC_RET_CODE VARCHAR(5), 
  OUT OUT_TOA_MSG_TYPE VARCHAR(1), 
  OUT OUT_TOA_MSG_AP_MMO VARCHAR(2), 
  OUT OUT_TOA_MSG_CODE VARCHAR(4), 
  OUT OUT_ANSINFO VARCHAR(50),
  OUT OUT_CARDNO VARCHAR(30), 
  OUT OUT_OUTNUM VARCHAR(10)
 ) 
  DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-涓嬫寕鍗″叧鑱斾俊鎭煡璇?-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	  鍗″彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?31003娌℃湁瀵瑰簲璁板綍
--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CARDNO锛氬崱鍙?-- OUT_OUTNUM  绗旀暟

-- CUR_RESULT 淇℃伅鍒楄〃

-- author锛欵CC.kongda
-- Date 锛?2008.06.19
-- update by kongda 澧炲姞涓敊璇爜31003娌℃湁瀵瑰簲璁板綍
-- Date:   2008.07.01
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_OUTNUM INT;

	--澹版槑鐢ㄤ簬瀛樻斁涓嬫寕璇ュ崱鍙峰搴斿鎴峰彿鐨勫鎴峰彿琛?	DECLARE GLOBAL TEMPORARY TABLE SESSION.CST_TEMP
    (TMP_CSTNO    CHAR(10))
    WITH REPLACE 
    NOT LOGGED;
  
  
  P2:BEGIN 
	--瀹氫箟娓告爣锛屾煡璇㈠崱淇℃伅
	DECLARE CUR_RESULT CURSOR  WITH RETURN TO CALLER FOR
		SELECT
			PIF_CSTNO,
			PIF_ACCNO,
			PIF_CSTTYP
		 FROM PB_CSTINF 
		 WHERE EXISTS(SELECT 1 FROM SESSION.CST_TEMP WHERE TMP_CSTNO=PIF_CSTNO)
		ORDER BY PIF_CSTNO;
			
			
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	--鍒ゆ柇鍗℃槸鍚︾绾﹁褰?   
	IF NOT EXISTS ( SELECT 1
					FROM PB_ACCINF
					WHERE PAI_CARDNO = IN_CARDNO)
 		THEN
		SET PROC_RET_CODE = '31003';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0840';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害璁板綍';
		RETURN;	
	END IF;
	
	
	
	
	--鑾峰緱杈撳嚭姣旀暟
	INSERT INTO SESSION.CST_TEMP 
		SELECT PAI_CSTNO FROM PB_ACCINF
			WHERE PAI_CARDNO = IN_CARDNO;
	GET DIAGNOSTICS V_OUTNUM = ROW_COUNT;
	SET OUT_OUTNUM = CHAR(V_OUTNUM);
	SET OUT_CARDNO = IN_CARDNO;
	
	--鎵撳紑娓告爣
	OPEN CUR_RESULT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	END P2;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_RESET_MBANK_PWD_CORE (
	IN IN_TELLERNO		VARCHAR(10),
	IN IN_BANKNO		VARCHAR(6),
	IN IN_NODENO		VARCHAR(6),
	IN IN_CARDNO		VARCHAR(30),
	IN IN_CTFTYPE		VARCHAR(2),
	IN IN_CTFNO			VARCHAR(30),
	IN IN_MOBILE    	VARCHAR(11),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CUSTNAME	VARCHAR(30)
)                
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-鎵嬫満閾惰绛剧害鐢ㄦ埛閲嶇疆鐧诲綍瀵嗙爜
-- 杈撳叆鍙傛暟锛?-- IN IN_TELLERNO	 寮€鎴锋煖鍛樺彿       
-- IN IN_BANKNO		 鍒嗚鍙?-- IN IN_NODENO		 缃戠偣鍙?-- IN IN_CARDNO	   涓诲崱鍗″彿
-- IN IN_CTFTYPE	 璇佷欢绫诲瀷
-- IN IN_CTFNO	   璇佷欢鍙风爜
-- IN IN_MOBILE    鎵嬫満鍙风爜
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNAME :鎸佸崱浜哄鍚?------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME  VARCHAR(14);
	DECLARE V_FIXNAMECN VARCHAR(30);
	DECLARE V_TEMP      VARCHAR(1);
	DECLARE V_ROWCOUNT INT;
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	SELECT PIF_NAMECN
	INTO V_FIXNAMECN
	FROM PB_CSTINF 
	WHERE PIF_ACCNO = IN_CARDNO;
	
	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	--鑾峰緱涓诲崱浜哄鍚?	SET OUT_CUSTNAME = V_FIXNAMECN;
	
	--鏇存柊鎵嬫満閾惰涓汉瀹㈡埛鍩烘湰淇℃伅琛紝灏嗙姸鎬佺疆涓衡€滄湭缂存椿鈥?	UPDATE MB_CSTINF 
		SET MIF_STT = '0', 
			MIF_CHGTELLER = IN_TELLERNO,
			MIF_CHGBRANCHNO = IN_BANKNO,
			MIF_CHGNETNO = IN_NODENO,
			MIF_LASTCHGTIM = V_DATETIME
	WHERE MIF_MOBILENO = IN_MOBILE AND MIF_STT = '1';
	
	GET DIAGNOSTICS V_ROWCOUNT = ROW_COUNT;
	SET V_TEMP = '0';
	
	IF V_ROWCOUNT=1 THEN 
		SET V_TEMP='1';
		COMMIT;
	ELSE 
		ROLLBACK;
	END IF;
	
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '鎵嬫満閾惰鐧诲綍瀵嗙爜閲嶇疆鎴愬姛';
	IF (V_TEMP = '0') THEN
		SET OUT_ANSINFO = '鎵嬫満閾惰鐧诲綍瀵嗙爜閲嶇疆澶辫触';
	END IF;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_SELECT_ACCOUNT_INFO (
	IN  IN_CUSTOMERNO		VARCHAR(10),

	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50),
	

	OUT OUT_CUSNO				  VARCHAR(10),
	OUT OUT_MOBILE				VARCHAR(15)
	
	
)       
	READS SQL DATA          
	DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- 鏍规嵁瀹㈡埛鍙锋垨涓汉缃戦摱鐢ㄦ埛鍚嶅拰涓汉缃戦摱鐢ㄦ埛瀵嗙爜鍙栦釜浜鸿处鎴蜂俊鎭?
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗- 涓汉璐︽埛淇℃伅鑾峰緱
-- 杈撳叆鍙傛暟锛?-- IN IN_CUSTOMERNO	      瀹㈡埛鍙?

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛?      瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯?--OUT_TOA_MSG_TYPE	     杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO     淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	     淇℃伅鐮?--OUT_ANSINFO锛?         杩斿洖淇℃伅

--OUT OUT_CUSNO		  缃戦摱瀹㈡埛鍙?--OUT OUT_MOBILE	  鐢ㄦ埛鎵嬫満鍙?    
-- 浣滆€咃細kongda
-- 鍒涘缓鏃ユ湡 锛?2009.02.18 update by kongda20090629

------------------------------------------------------------------------
BEGIN
	
	-- 鍙橀噺澹版槑
	
  DECLARE V_STT				CHAR(1);			
  DECLARE V_CSTNO			CHAR(10);			
  DECLARE V_MOBILE	  CHAR(20);			
  
	DECLARE CUR_RESULT CURSOR  WITH RETURN TO CALLER FOR
		SELECT PAI_CARDNO,PAI_CARDTYP,PAI_HLDNAME,PAI_HLDCTFTYP,PAI_HLDCTFNO,PAI_CHGNETNO,PAI_CHGBRANCHNO,PAI_CHGTELLER  
			FROM  PB_ACCINF 
				WHERE  PAI_CSTNO=IN_CUSTOMERNO
					AND (PAI_CARDTYP='0' OR PAI_CARDTYP='1');

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
	END;	
	
	
	SELECT PIF_CSTNO, PIF_MOBILE,PIF_STT INTO V_CSTNO,V_MOBILE,V_STT   FROM PB_CSTINF WHERE IN_CUSTOMERNO = PIF_CSTNO;

		
		IF V_STT = '1' THEN
		-- 鐢ㄦ埛宸插喕缁?		SET PROC_RET_CODE = '30001';
		RETURN;
	END IF;
	
	IF V_STT = '2' THEN
		-- 鐢ㄦ埛浠庢湭鐧诲綍
		SET PROC_RET_CODE = '30002';
		RETURN;
	END IF;
								
				
		OPEN CUR_RESULT;
  	
  	SET OUT_CUSNO = V_CSTNO;
  	SET OUT_MOBILE = V_MOBILE;
  			
		SET PROC_RET_CODE = '00000';
		SET OUT_TOA_MSG_TYPE = 'N';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0000';
		SET OUT_ANSINFO =  '浜ゆ槗鎴愬姛';

END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECKCUSTOMER (
	IN IN_ACCNO							VARCHAR(30),
	IN IN_MOBILE            VARCHAR(20),
	OUT PROC_RET_CODE 			CHAR(5)
) 
READS SQL DATA 
------------------------------------------------------------------------
-- 妫€娴嬫墜鏈哄彿鍜屽崱鍙锋槸鍚︿负鍚屼竴瀹㈡埛瀛樺偍杩囩▼

-- 杈撳叆鍙傛暟锛?-- IN_MOBILE:鎵嬫満鍙?-- IN_ACCNO:鍗″彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鍒涘缓浜猴細ECC.pengxb
-- 鍒涘缓鏃ユ湡锛?009.05.30
------------------------------------------------------------------------
BEGIN

	-- 瀹氫箟鍙橀噺

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK ;
	END;
	
	-- 鑾峰彇瀹㈡埛淇℃伅-------------------------------------------
	IF NOT EXISTS (
		SELECT 1 FROM PB_CSTINF WHERE PIF_CSTNO IN (SELECT PAI_CSTNO FROM PB_ACCINF WHERE PAI_CARDNO=IN_ACCNO) AND PIF_MOBILE = IN_MOBILE AND (PIF_STT='0' OR PIF_STT='2')
	) THEN
		SET PROC_RET_CODE = '30040';
		RETURN;
	END IF;
	
	SET PROC_RET_CODE = '00000';
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_DOWNCODE ( 
	IN IN_MOBILE		CHAR(20),
	OUT PROC_RET_CODE   CHAR(5),
	OUT OUT_DOWNCODE   VARCHAR(16)
)
READS SQL DATA
------------------------------------------------------------------------

-- SQL 瀛樺偍杩囩▼
-- 鎵嬫満閾惰涓嬭浇鐮佹煡璇?
-- 杈撳叆鍙傛暟锛?-- IN_MOBILE锛氭墜鏈哄彿鐮?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_DOWNCODE锛氭墜鏈洪摱琛屼笅杞界爜

-- 鍒涘缓浜猴細ECC.pengxb	
-- 鍒涘缓鏃ユ湡锛?009.06.05

------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';	
	END;
	
	-- 鏌ュ嚭涓嬭浇鐮佸拰鎵嬫満鍙?		
	SELECT MDC_DOWNCODE	INTO OUT_DOWNCODE
			FROM MB_CSTINF,MB_SOFTDOWNCODE
				WHERE MIF_MOBILENO = IN_MOBILE AND MIF_STT = '1' AND MIF_USERCODE = MDC_USERCODE FETCH FIRST 1 ROWS ONLY;
	
	SET PROC_RET_CODE = '00000';
		
	-- 鍒ゆ柇鐢ㄦ埛鏄惁宸茬粡娉ㄥ唽杩囦簡
	IF OUT_DOWNCODE IS NULL OR OUT_DOWNCODE='' THEN 
		SET PROC_RET_CODE = '30041';
	END IF;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_TYPE ( 
	IN IN_CUSTOMERNO		CHAR(10),
	IN IN_NAME		      CHAR(20),
	IN IN_PASSWORD		  CHAR(60),
	OUT PROC_RET_CODE   CHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50),
	OUT OUT_CUSTOMERNO  CHAR(10)
	
)
READS SQL DATA
------------------------------------------------------------------------

-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鐢ㄦ埛绫诲瀷

-- 杈撳叆鍙傛暟锛?-- IN_CUSTOMERNO锛氬鎴峰彿
-- IN_NAME锛?     涓汉缃戦摱鐢ㄦ埛鍚?-- IN_PASSWORD锛? 涓汉缃戦摱鐢ㄦ埛瀵嗙爜

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘敞鍐岀敤鎴?0001涓鸿瘉涔︾敤鎴?

-- 鍒涘缓浜猴細ECC.kongda	
-- 鍒涘缓鏃ユ湡锛?009.06.15

------------------------------------------------------------------------
BEGIN
-- 瀹氫箟鍙橀噺
	DECLARE V_TYP		        	VARCHAR(1);		
		

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';	
	END;
	
	-- 鏌ュ嚭瀹㈡埛绫诲瀷	
	
IF (IN_CUSTOMERNO IS NOT NULL AND IN_CUSTOMERNO  <> '') THEN 
	SELECT PIF_CSTNO,PIF_CSTTYP INTO  OUT_CUSTOMERNO,V_TYP
		FROM PB_CSTINF
				WHERE PIF_CSTNO = IN_CUSTOMERNO ;
ELSE			
  SELECT PIF_CSTNO,PIF_CSTTYP INTO  OUT_CUSTOMERNO,V_TYP
		FROM PB_CSTINF
				WHERE
				PIF_ALIAS = IN_NAME;
END IF;			
	IF OUT_CUSTOMERNO IS NULL OR OUT_CUSTOMERNO='' THEN

		SET PROC_RET_CODE = '31003';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0840';
		SET OUT_ANSINFO = '娌℃湁绛剧害璁板綍';	
		RETURN;
	END IF;		
	SET PROC_RET_CODE = '00000';
		
	-- 鍒ゆ柇鐢ㄦ埛绫诲瀷
	IF V_TYP='0' THEN 
		SET PROC_RET_CODE = '00000';
	END IF;
	IF V_TYP='1' THEN 
		SET PROC_RET_CODE = '00001';
	END IF;
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECK_CUST_EXIST ( 
	IN IN_CARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_OPENFLAG  		VARCHAR(1),
	OUT OUT_MOBILE  		VARCHAR(20),
	OUT OUT_CSTTYP      CHAR(1),
	OUT OUT_CUSTNO  		VARCHAR(10),
	OUT OUT_MOBILEFLAG  		CHAR(1)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛寮€鎴?-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	   涓诲崱鍗″彿锛?

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_OPENFLAG:寮€閫氭爣蹇楋細0:鏈紑閫?1锛氬凡寮€閫?-- OUT_MOBILE:鎵嬫満鍙风爜
-- OUT_CSTTYP:娉ㄥ唽绫诲瀷
-- OUT_CUSTNO:缃戦摱瀹㈡埛鍙?-- OUT_MOBILEFLAG:鏄惁鐣欏瓨鎵嬫満鍙风爜鏍囧織 0 鐣欏瓨 1 鏈暀瀛?-- 淇敼浜猴細ECC.pengxb
-- 淇敼鏃ユ湡 锛?2009.06.19
------------------------------------------------------------------------
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	SET OUT_OPENFLAG= '0';
  SET OUT_MOBILEFLAG= '0';
	IF	EXISTS(SELECT 1 FROM PB_CSTINF WHERE PIF_ACCNO=IN_CARDNO)
	THEN
	--鏂板崱宸茬粡寮€閫氱綉閾剁敤鎴?		SET OUT_OPENFLAG='1';
		SELECT PIF_MOBILE,PIF_CSTTYP,PIF_CSTNO INTO OUT_MOBILE,OUT_CSTTYP,OUT_CUSTNO FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO FETCH FIRST 1 ROWS ONLY; 
		IF OUT_MOBILE = '' OR OUT_MOBILE IS NULL
		THEN
		SET OUT_MOBILEFLAG = '1';
		END IF;
	END IF;
	
	SET PROC_RET_CODE = '00000';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CUST_MANAGE_QUERY_APPDCARD_SELF_INFO
 (IN IN_CARDNO VARCHAR(30), 
  OUT PROC_RET_CODE VARCHAR(5), 
  OUT OUT_TOA_MSG_TYPE VARCHAR(1), 
  OUT OUT_TOA_MSG_AP_MMO VARCHAR(2), 
  OUT OUT_TOA_MSG_CODE VARCHAR(4), 
  OUT OUT_ANSINFO VARCHAR(50),
  OUT OUT_CARDNO VARCHAR(30), 
  OUT OUT_OUTNUM VARCHAR(10)
 ) 
  DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-鏌ヨ涓庝笅鎸傚崱灞炰簬鍚屼竴涓汉鐨勫叧鑱斾俊鎭煡璇?-- 杈撳叆鍙傛暟锛?-- IN IN_CARDNO	  鍗″彿
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?31003娌℃湁瀵瑰簲璁板綍
--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CARDNO锛氬崱鍙?-- OUT_OUTNUM  绗旀暟

-- CUR_RESULT 淇℃伅鍒楄〃

-- author锛歁AONF
-- Date 锛?2009-06-30

------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_OUTNUM INT;

	--澹版槑鐢ㄤ簬瀛樻斁涓嬫寕璇ュ崱鍙峰搴斿鎴峰彿鐨勫鎴峰彿琛?	DECLARE GLOBAL TEMPORARY TABLE SESSION.CST_TEMP
    (
    	TMP_CSTNO    CHAR(10),
    	TMP_HLDCTFTYP	CHAR(2),
    	TMP_HLDCTFNO 	VARCHAR(30)
    )
    WITH REPLACE 
    NOT LOGGED;
  
  
  P2:BEGIN 
	--瀹氫箟娓告爣锛屾煡璇㈠崱淇℃伅
	DECLARE CUR_RESULT CURSOR  WITH RETURN TO CALLER FOR
		SELECT
			PIF_CSTNO,
			PIF_ACCNO,
			PIF_CSTTYP
		 FROM PB_CSTINF 
		 WHERE EXISTS(SELECT 1 FROM SESSION.CST_TEMP WHERE TMP_CSTNO=PIF_CSTNO AND TMP_HLDCTFTYP=PIF_CTFTYP AND TMP_HLDCTFNO=PIF_CTFNO)
		ORDER BY PIF_CSTNO;
			
			
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	--鍒ゆ柇鍗℃槸鍚︾绾﹁褰?   
	IF NOT EXISTS ( SELECT 1
					FROM PB_ACCINF
					WHERE PAI_CARDNO = IN_CARDNO 
					AND EXISTS (SELECT 1 FROM PB_CSTINF WHERE PIF_CSTNO = PAI_CSTNO and PIF_CTFTYP=PAI_HLDCTFTYP and PIF_CTFNO = PAI_HLDCTFNO))
 		THEN
		SET PROC_RET_CODE = '31003';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0840';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害璁板綍';
		RETURN;	
	END IF;
	
	
	
	
	--鑾峰緱杈撳嚭姣旀暟
	INSERT INTO SESSION.CST_TEMP 
		SELECT PAI_CSTNO,PAI_HLDCTFTYP,PAI_HLDCTFNO FROM PB_ACCINF
			WHERE PAI_CARDNO = IN_CARDNO;
	GET DIAGNOSTICS V_OUTNUM = ROW_COUNT;
	SET OUT_OUTNUM = CHAR(V_OUTNUM);
	SET OUT_CARDNO = IN_CARDNO;
	
	--鎵撳紑娓告爣
	OPEN CUR_RESULT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	END P2;
END 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_UPDATE_CUST_MOBILE ( 
	IN IN_CUSTNO		VARCHAR(10),
	IN IN_MOBILE		VARCHAR(20),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛寮€鎴?-- 杈撳叆鍙傛暟锛?-- IN IN_CUSTNO	 	缃戦摱瀹㈡埛鍙?      
-- IN IN_MOBILE	   鎵嬫満鍙风爜锛?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?
-- 淇敼浜猴細ECC.pengxb
-- 淇敼鏃ユ湡 锛?2009.08.24
------------------------------------------------------------------------
BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--鏇存柊瀹㈡埛鎵嬫満淇℃伅
	UPDATE PB_CSTINF SET PIF_MOBILE = IN_MOBILE WHERE PIF_CSTNO = IN_CUSTNO;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CHECK_MOBILE_CUST ( 
	IN IN_CUSTNO    VARCHAR(10),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-閫氳繃瀹㈡埛鍙锋鏌ヨ瀹㈡埛鏄惁宸插紑閫氭墜鏈洪摱琛岋紝濡傚凡寮€閫氬垯鎶ラ敊銆?-- 杈撳叆鍙傛暟锛?-- IN IN_CUSTNO	 缃戦摱瀹㈡埛鍙?      

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?
-- 鍒涘缓浜猴細ECC.pengxb
-- 鍒涘缓鏃ユ湡 锛?2009.10.10
------------------------------------------------------------------------
BEGIN
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;

	IF EXISTS(			
			SELECT 1 FROM MB_CSTINF	WHERE MIF_CSTNO = IN_CUSTNO
				AND MIF_STT <> '9'				
		)THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0948';
		SET OUT_ANSINFO = '璇ュ鎴峰凡鏈夋墜鏈虹绾︽墜鏈洪摱琛?;
		RETURN;
	END IF;		

	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MP_MANAGE_ADD_BOOKING ( 
	IN IN_CARDNO			VARCHAR(30),
	IN IN_MOBILENO		VARCHAR(20),
	IN IN_PASSWORD		VARCHAR(20),
	IN IN_BOUND				VARCHAR(18),
	IN IN_REQTIME			VARCHAR(14),
	IN IN_CHANNEL  		CHAR(1),    
	IN IN_BANKNO   		VARCHAR(6),  
	IN IN_TELLERNO    VARCHAR(10),   
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE			VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE			VARCHAR(4),
	OUT OUT_ANSINFO						VARCHAR(50),
	OUT OUT_FLWNO							VARCHAR(10),
	OUT OUT_TOTALBOUND				VARCHAR(18),
	OUT OUT_ABLEBOUND		VARCHAR(18),
	OUT OUT_TRANDATE		VARCHAR(8),
	OUT OUT_TRANTIME		VARCHAR(6),
	OUT OUT_REQTIME		VARCHAR(14)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娓犻亾浜ゆ槗-atm鍙栫幇棰勭害
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO		鍙栫幇鍗″彿
-- IN_MOBILENO	鎵嬫満鍙?   
-- IN_PASSWORD  鍙栫幇楠岃瘉鐮? 
-- IN_BOUND  闄愰  
-- IN_REQTIME   璇锋眰鏃堕棿
-- IN_CHANNEL   浜ゆ槗娓犻亾
-- IN_BANKNO		鍒嗚鍙?-- IN_TELLERNO		鏌滃憳鍙?   

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO 杩斿洖淇℃伅
-- OUT_FLWNO 棰勭害鍙?-- OUT_TOTALBOUND 鎬婚搴?-- OUT_ABLEBOUND 鍙敤棰濆害
-- OUT_TRANDATE 浜ゆ槗鏃ユ湡
-- OUT_TRANTIME 浜ゆ槗鏃堕棿
-- OUT_REQTIME 浜ゆ槗璇锋眰鏃堕棿
-- 鏈€鍚庝慨鏀逛汉锛欵CC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2009.12.28

-- 鏈€鍚庝慨鏀逛汉锛欵CC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2010.04.09
-- 淇敼鍘熷洜锛氶绾︽椂鏂板浜ゆ槗绫诲瀷鐮?-- 鏈€鍚庝慨鏀逛汉锛歀IMING
-- 淇敼鍘熷洜锛?,杩藉姞浜嗘洿鏂板け鏁堝師鍥犲拰澶辨晥鏃堕棿銆?锛屽綋娓犻亾涓嶄负鎵嬫満涔熸寜鎵嬫満鍒?-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.04.08
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_CURR_DATE VARCHAR(8);
	DECLARE V_CURR_TIME_TMP VARCHAR(14);
	DECLARE V_CURR_TIME VARCHAR(6);
	DECLARE V_SEQNO_REQ BIGINT;
	DECLARE V_SEQNO VARCHAR(10);
	
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	
	SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	SET V_CURR_TIME_TMP = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	SET V_CURR_TIME = SUBSTR(V_CURR_TIME_TMP,9);
	
	--褰撲负鎵嬫満閾惰娓犻亾鏃讹紝鎶婃墜鏈哄彿褰撴棩宸查绾︿笖棰勭害鐘舵€佷负姝ｅ父锛屽垯鏇存柊涓哄け鏁?	--IF(IN_CHANNEL = '6') THEN 
	UPDATE MP_ATMBOOKING SET MAB_STT = '2', MAB_INVALREASON ='4', MAB_INVALTIME = V_CURR_TIME_TMP  
		WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_STT = '0';
	--ELSE
	--	UPDATE MP_ATMBOOKING SET MAB_STT = '2'
	--	WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_CARDNO = IN_CARDNO AND MAB_STT = '0';
	--END IF;
	
	--鐢熸垚棰勭害鍙?	SET  V_SEQNO_REQ = NEXTVAL FOR MB_ATM_SEQNO;
	
	SET V_SEQNO = CHAR(DECIMAL(V_SEQNO_REQ,10));	
	
	--鎻掑叆棰勭害璁板綍
	INSERT INTO MP_ATMBOOKING
	(
		MAB_SEQNO,
		MAB_CARDNO,
		MAB_MOBILENO,
		MAB_VERIFYCODE,
		MAB_BOUND,
		MAB_ABLEBOUND,
		MAB_TRANDATE,
		MAB_TRANTIME,
		MAB_REQTIME,
		MAB_CHANNELFLAG,
		MAB_STT,
		MAB_FAILTIMES,
		MAB_CASHTIMES,
		MAB_BANKNO,
		MAB_TELLERNO,
		MAB_TRANNO,
		MAB_INCARDNO
	)
	VALUES
	(
		V_SEQNO,
		IN_CARDNO,                     
		IN_MOBILENO, 
		IN_PASSWORD,  
		DECIMAL(IN_BOUND,15,2), 
		DECIMAL(IN_BOUND,15,2),
		V_CURR_DATE,
		V_CURR_TIME,
		IN_REQTIME,
		IN_CHANNEL,
		'0',
		0,
		0,
		IN_BANKNO,
		IN_TELLERNO,
		'00',
		''
	);
	
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	SET OUT_FLWNO = V_SEQNO;
	SET OUT_TOTALBOUND = IN_BOUND;
	SET OUT_ABLEBOUND = IN_BOUND;
	SET OUT_TRANDATE = V_CURR_DATE;
	SET OUT_TRANTIME = V_CURR_TIME;
	SET OUT_REQTIME = IN_REQTIME;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MP_MANAGE_BOOKING ( 
	IN IN_FLWNO			    VARCHAR(10),
	IN IN_MOBILENO		    VARCHAR(20),
	IN IN_PASSWORD		    VARCHAR(20),
	IN IN_CHANNEL           CHAR(1),
	IN IN_FUNCNO            CHAR(1),
	IN IN_PASSWFLAG         CHAR(1),   
	OUT PROC_RET_CODE	    VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE	VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO	VARCHAR(2),
	OUT OUT_TOA_MSG_CODE	VARCHAR(4),
	OUT OUT_ANSINFO			VARCHAR(50),
	OUT OUT_FLWNO			VARCHAR(10),
	OUT OUT_CARDNO			VARCHAR(30),
	OUT OUT_TOTALBOUND		DECIMAL(15,2),
	OUT OUT_ABLEBOUND		DECIMAL(15,2),
	OUT OUT_TRANDATE		VARCHAR(8),
	OUT OUT_TRANTIME		VARCHAR(6),
	OUT OUT_REQTIME		    VARCHAR(14),
	OUT OUT_BOOKINGCHANNEL  VARCHAR(2),
	OUT OUT_CHANNEL			VARCHAR(2)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娓犻亾浜ゆ槗-鏌ヨatm鍙栫幇棰勭害鍜屾挙閿€棰勭害
-- 杈撳叆鍙傛暟锛?-- IN_FLWNO		鍙栫幇鍗″彿
-- IN_MOBILENO	鎵嬫満鍙?   
-- IN_PASSWORD  鍙栫幇楠岃瘉鐮? 
-- IN_CHANNEL   浜ゆ槗娓犻亾   
-- IN_FUNCNO  鍔熻兘鐮?-- IN_PASSWFLAG  瀵嗙爜鏍￠獙鏍囧織
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO 杩斿洖淇℃伅
-- OUT_FLWNO 棰勭害鍙?-- OUT_CARDNO 鍙栫幇鍗″彿
-- OUT_TOTALBOUND 鎬婚搴?-- OUT_ABLEBOUND 鍙敤棰濆害
-- OUT_TRANDATE 浜ゆ槗鏃ユ湡
-- OUT_TRANTIME 浜ゆ槗鏃堕棿
-- OUT_REQTIME 浜ゆ槗璇锋眰鏃堕棿
-- OUT_BOOKINGCHANNEL 棰勭害鏉ユ簮
-- OUT_CHANNEL 娓犻亾鏍囧織
-- 鏈€鍚庝慨鏀逛汉锛歀IMING
-- 淇敼鍘熷洜锛氶娓痑tm鍙栨锛?1)杩藉姞浜嗗け鏁堝師鍥犲拰澶辨晥鏃堕棿锛?2)澧炲姞杩斿洖瀛楁锛氶绾︽潵婧?-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.03.04
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_CURR_DATE VARCHAR(8);
	DECLARE V_PASSWORD VARCHAR(20);
	DECLARE V_FAILTIMES INTEGER;
	DECLARE V_STT CHAR(1);
	DECLARE V_INVALREASON CHAR(1);
	DECLARE V_DATETIME VARCHAR(14);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	--妫€鏌ヨ鎵嬫満鍙峰綋鏃ユ槸鍚﹀凡棰勭害
	IF NOT EXISTS (SELECT 1 FROM MP_ATMBOOKING WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO='00' AND MAB_STT = '0') THEN
		
		--妫€鏌ヨ鎵嬫満鍙峰綋鏃ユ槸鍚﹀凡棰勭害,涓旂姸鎬佷负閿佸畾鐘舵€?		IF EXISTS (SELECT 1 FROM MP_ATMBOOKING WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO='00' AND MAB_STT = '1') THEN
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0954';
			SET OUT_ANSINFO = '楠岃瘉鐮佽緭鍏ラ敊璇鏁拌秴杩囬檺鍒讹紝宸查攣瀹?;
			RETURN;
		END IF;
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0952';
		SET OUT_ANSINFO = '瀹㈡埛褰撴棩娌℃湁棰勭害鎴栭绾︾姸鎬佷笉姝ｅ父';
		RETURN;
	ELSE		
		SELECT MAB_VERIFYCODE,MAB_FAILTIMES,MAB_SEQNO,MAB_CARDNO,MAB_BOUND,MAB_ABLEBOUND,MAB_TRANDATE,MAB_TRANTIME,MAB_REQTIME,MAB_CHANNELFLAG
		INTO V_PASSWORD,V_FAILTIMES,OUT_FLWNO,OUT_CARDNO,OUT_TOTALBOUND,OUT_ABLEBOUND,OUT_TRANDATE,OUT_TRANTIME,OUT_REQTIME,OUT_CHANNEL	
		FROM MP_ATMBOOKING 
		WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO='00' AND MAB_STT = '0';
		
		IF OUT_CHANNEL IN ('1','2','3','4','5','6') THEN
 			--澶ч檰棰勭害
			SET OUT_BOOKINGCHANNEL = '00'; 
		ELSE
			--棣欐腐棰勭害
			SET OUT_BOOKINGCHANNEL = '01';
		END IF;
		--妫€鏌ユ牎楠屽彇鐜伴獙璇佺爜鏍囧織
		IF(IN_PASSWFLAG = '0') THEN 
			--濡傛灉鍙栫幇楠岃瘉鐮佷笉绗?			IF(V_PASSWORD <> IN_PASSWORD) THEN
				SET V_FAILTIMES = V_FAILTIMES + 1;
				SET V_STT = '0';
				
				IF(V_FAILTIMES = 1) THEN 
					SET PROC_RET_CODE = '95000';
					SET OUT_TOA_MSG_TYPE = 'E';
					SET OUT_TOA_MSG_AP_MMO = 'NE';
					SET OUT_TOA_MSG_CODE = '0955';
					SET OUT_ANSINFO = '楠岃瘉鐮佽緭鍏ラ敊璇紝濡傝繛缁?娆¤緭鍏ラ敊璇垯閿佸畾楠岃瘉鐮侊紝鎮ㄨ繕鏈?娆℃満浼?;
				
				ELSE IF (V_FAILTIMES = 2) THEN 
					SET PROC_RET_CODE = '95000';
					SET OUT_TOA_MSG_TYPE = 'E';
					SET OUT_TOA_MSG_AP_MMO = 'NE';
					SET OUT_TOA_MSG_CODE = '0956';
					SET OUT_ANSINFO = '楠岃瘉鐮佽緭鍏ラ敊璇紝濡傝繛缁?娆¤緭鍏ラ敊璇垯閿佸畾楠岃瘉鐮侊紝鎮ㄨ繕鏈?娆℃満浼?;
				
				ELSE IF(V_FAILTIMES > 2) THEN 
					SET PROC_RET_CODE = '95000';
					SET OUT_TOA_MSG_TYPE = 'E';
					SET OUT_TOA_MSG_AP_MMO = 'NE';
					SET OUT_TOA_MSG_CODE = '0957';
					SET OUT_ANSINFO = '楠岃瘉鐮佽緭鍏ラ敊璇紝鎮ㄥ凡杩炵画杈撳叆閿欒3娆★紝璇ョ瑪棰勭害琚攣瀹?;
					-- 褰撹秴杩?娆℃椂锛屼慨鏀圭姸鎬佷负閿佸畾鐘舵€併€?					SET V_STT = '1';
					SET V_INVALREASON = '2'; --宸插け鏁?鈥?ATM鎻愭鏃堕獙璇佺爜杩炵画閿欒3娆°€?					SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
				END IF;
				END IF;
				END IF;

					UPDATE MP_ATMBOOKING SET MAB_FAILTIMES = V_FAILTIMES, MAB_STT = V_STT, MAB_INVALREASON =V_INVALREASON, MAB_INVALTIME = V_DATETIME  WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO='00' AND MAB_STT = '0';
				COMMIT;
				RETURN;
			ELSE
					--濡傛灉瀵嗙爜鐩哥鍒欓噸缃瘑鐮佽緭鍏ラ敊璇鏁颁负0銆?					UPDATE MP_ATMBOOKING SET MAB_FAILTIMES = 0 WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO='00' AND MAB_STT = '0';
					COMMIT;
			END IF;
		END IF;
			IF(IN_FUNCNO = '1') THEN
					SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
					--濡傛灉涓烘挙閿€锛屽垯淇敼鐘舵€佷负澶辨晥
					UPDATE MP_ATMBOOKING SET MAB_STT = '2', MAB_INVALREASON ='1', MAB_INVALTIME = V_DATETIME  WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO='00' AND MAB_STT = '0';
					COMMIT;
			END IF;
	END IF;		
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MP_ATM_UPDATE_BOUND(
    IN  IN_SEQNO                VARCHAR(10),
    IN  IN_TRANTYPE             CHAR(1),
    IN  IN_TRANSUM              DECIMAL(15,2),
    IN  IN_CHANNEL              CHAR(1),
    IN  IN_CARDNO               VARCHAR(30),
    IN  IN_MOBILENO             VARCHAR(20),
    IN  IN_REQTIME              VARCHAR(14),
    OUT PROC_RET_CODE	        VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		        VARCHAR(30),
	OUT OUT_SEQNO               VARCHAR(10),
	OUT OUT_CARDNO              VARCHAR(30),
	OUT OUT_BOUND               DECIMAL(15,2),
	OUT OUT_ABLEBOUND           DECIMAL(15,2),
	OUT OUT_CURTYPE             VARCHAR(3),
	OUT OUT_ACCOUNTNO           VARCHAR(19),
	OUT OUT_CUSTOMERID          VARCHAR(15)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娓犻亾浜ゆ槗-棰濆害鍙樻洿
-- 杈撳叆鍙傛暟锛?-- IN_SEQNO			棰勭害鍙?-- IN_TRANTYPE	浜ゆ槗绫诲瀷    
-- IN_TRANSUM  	浜ゆ槗閲戦  
-- IN_CHANNEL   浜ゆ槗娓犻亾
-- IN_CARDNO   	浜ゆ槗鍗″彿 
-- IN_MOBILENO  浜ゆ槗鎵嬫満鍙?
-- IN_REQTIME   璇锋眰鏃堕棿    

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO 杩斿洖淇℃伅
-- OUT_SEQNO 棰勭害鍙?-- OUT_CARDNO 鍙栫幇鍗″彿
-- OUT_BOUND 鎬婚搴?-- OUT_ABLEBOUND 鍙敤棰濆害
-- 鏈€鍚庝慨鏀逛汉锛欵CC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2009.12.29
------------------------------------------------------------------------
BEGIN
    DECLARE V_DATETIME VARCHAR(14);
    DECLARE V_CASHTIMES INTEGER;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0802';
			SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
			ROLLBACK;
		END;
	
	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	SET OUT_SEQNO = '';
		SELECT MAB_SEQNO,MAB_CARDNO,MAB_BOUND,MAB_ABLEBOUND,MAB_CASHTIMES,MAB_CURTYPE,MAB_ACCOUNTNO,MAB_CUSTOMERID INTO OUT_SEQNO,OUT_CARDNO,OUT_BOUND,OUT_ABLEBOUND,V_CASHTIMES,OUT_CURTYPE,OUT_ACCOUNTNO,OUT_CUSTOMERID
		   FROM MP_ATMBOOKING WHERE MAB_TRANDATE = V_DATETIME AND MAB_SEQNO = IN_SEQNO AND MAB_STT ='0';
		IF OUT_SEQNO IS NULL OR  OUT_SEQNO ='' THEN
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0953';
			SET OUT_ANSINFO = '鏃犻绾﹁褰曪紝鏇存柊棰濆害澶辫触';
			RETURN;
		ELSE
			IF(IN_TRANTYPE = '0') THEN 
				SET OUT_ABLEBOUND = OUT_ABLEBOUND - IN_TRANSUM;
				SET V_CASHTIMES = V_CASHTIMES + 1;
			ELSEIF(IN_TRANTYPE = '1') THEN
				SET OUT_ABLEBOUND = OUT_ABLEBOUND + IN_TRANSUM;
			END IF;
			IF(OUT_ABLEBOUND < 0) THEN
				SET PROC_RET_CODE = '95000';
				SET OUT_TOA_MSG_TYPE = 'E';
				SET OUT_TOA_MSG_AP_MMO = 'NE';
				SET OUT_TOA_MSG_CODE = '0958';
				SET OUT_ANSINFO = '鍙栫幇棰濆害涓嶅';
				RETURN;
			END IF;
			UPDATE MP_ATMBOOKING SET MAB_ABLEBOUND = OUT_ABLEBOUND, MAB_CASHTIMES = V_CASHTIMES WHERE MAB_TRANDATE = V_DATETIME AND MAB_MOBILENO = IN_MOBILENO AND MAB_STT ='0';
			COMMIT;
		END IF;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MP_TRANFLW
(
    IN IN_FLWNO VARCHAR(20),
    IN IN_CARDNO VARCHAR(30),
    IN IN_MOBILENO VARCHAR(20),
    IN IN_SEQNO VARCHAR(10),
    IN IN_REQTIME VARCHAR(14),
    IN IN_TRANSUM DECIMAL(15,2),
    IN IN_TRANTYP CHAR(2),
    IN IN_CHANNEL CHAR(1),
    IN IN_BANKNO CHAR(6),
    IN IN_TELLERNO VARCHAR(10),
    IN IN_TRANNO VARCHAR(2),
    IN IN_INCARDNO VARCHAR(30),
	IN IN_CURTYPE  VARCHAR(3),
    IN IN_ACCOUNTNO  VARCHAR(19),
    IN IN_CUSTOMERID  VARCHAR(15),
		OUT PROC_RET_CODE VARCHAR(5),
		OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
		OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
		OUT OUT_TOA_MSG_CODE		VARCHAR(4),
		OUT OUT_ANSINFO		        VARCHAR(30)
)

--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 璁板綍浜ゆ槗娴佹按
-- 杈撳叆鍙傛暟锛?-- IN_FLWNO锛氭祦姘村彿
-- IN_CARDNO锛氫氦鏄撳崱鍙?-- IN_MOBILENO锛氭墜鏈哄彿
-- IN_SEQNO锛氶绾﹀彿
-- IN_TRANSUM锛氫氦鏄撻噾棰?-- IN_TRANTYP锛氫氦鏄撶被鍨?-- IN_CHANNEL锛氭笭閬撴爣蹇?-- IN_BANKNO锛氭満鏋勫彿
-- IN_TELLERNO锛氭煖鍛樺彿
-- IN_TRANNO锛氫氦鏄撶被鍨嬬爜 
-- IN_INCARDNO锛氳浆鍏ュ崱鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO 杩斿洖淇℃伅

-- 鏈€鍚庝慨鏀逛汉锛氬江灏忔尝
-- 鏈€鍚庝慨鏀规棩鏈燂細2009.12.29

-- 鏈€鍚庝慨鏀逛汉锛氬江灏忔尝
-- 鏈€鍚庝慨鏀规棩鏈燂細2010.04.09
-- 淇敼鍘熷洜锛氬鍔犱氦鏄撶被鍨嬬爜鍜岃浆鍏ュ崱鍙?-- 鏈€鍚庝慨鏀逛汉锛歭iming
-- 鏈€鍚庝慨鏀规棩鏈燂細2011.03.07
-- 淇敼鍘熷洜锛氭祦姘磋〃澧炲姞甯佺,棰勭害璐︽埛鍙?瀹㈡埛鍙凤紝鎵€浠ヨ鏇存柊
------------------------------------------------------------------------

BEGIN
    -- 鍙橀噺澹版槑
    DECLARE V_DATETIME VARCHAR(14);

    -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK ;
	END;
	
	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	IF(IN_MOBILENO IS NULL OR IN_MOBILENO = '') THEN
		SET IN_MOBILENO = '99999999999';
	END IF;
  
  -- 鏇存柊娴佹按淇℃伅
    INSERT INTO MP_ATMTRNFLW
        (MAT_FLWNO, MAT_CARDNO, MAT_MOBILENO, MAT_SEQNO, MAT_TRANTIME, MAT_REQTIME, MAT_TRANSUM, 
        MAT_TRANTYP, MAT_CHANNEL, MAT_BANKNO, MAT_TELLERNO, MAT_TRANNO, MAT_INCARDNO,MAT_CURTYPE,MAT_ACCOUNTNO,MAT_CUSTOMERID) 
    VALUES
        (IN_FLWNO, IN_CARDNO, IN_MOBILENO, IN_SEQNO, V_DATETIME, IN_REQTIME, IN_TRANSUM, 
        IN_TRANTYP, IN_CHANNEL, IN_BANKNO, IN_TELLERNO, IN_TRANNO, IN_INCARDNO,IN_CURTYPE,IN_ACCOUNTNO,IN_CUSTOMERID);    
  COMMIT;
    
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';   
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MP_MANAGE_ADD_BOOKING2 ( 
	IN IN_TRANNO			VARCHAR(2),
	IN IN_CARDNO			VARCHAR(30),
	IN IN_INCARDNO			VARCHAR(30),
	IN IN_MOBILENO		VARCHAR(20),
	IN IN_PASSWORD		VARCHAR(20),
	IN IN_BOUND				VARCHAR(18),
	IN IN_REQTIME			VARCHAR(14),
	IN IN_CHANNEL  		CHAR(1),    
	IN IN_BANKNO   		VARCHAR(6),  
	IN IN_TELLERNO    VARCHAR(10),   
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE			VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE			VARCHAR(4),
	OUT OUT_ANSINFO						VARCHAR(50),
	OUT OUT_COUNT							VARCHAR(4)
)
DYNAMIC RESULT SETS 1    
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娓犻亾浜ゆ槗-棰勭害
-- 杈撳叆鍙傛暟锛?-- IN_TRANNO		浜ゆ槗绫诲瀷鐮?-- IN_CARDNO		鍗″彿
-- IN_INCARDNO		杞叆鍗″彿
-- IN_MOBILENO	鎵嬫満鍙?   
-- IN_PASSWORD  楠岃瘉鐮? 
-- IN_BOUND  闄愰  
-- IN_REQTIME   璇锋眰鏃堕棿
-- IN_CHANNEL   浜ゆ槗娓犻亾
-- IN_BANKNO		鍒嗚鍙?-- IN_TELLERNO		鏌滃憳鍙?   

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO 杩斿洖淇℃伅
-- OUT_COUNT 鎬荤瑪鏁?-- 鏈€鍚庝慨鏀逛汉锛欵CC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2010.04.08
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_CURR_DATE VARCHAR(8);
	DECLARE V_CURR_TIME_TMP VARCHAR(14);
	DECLARE V_CURR_TIME VARCHAR(6);
	DECLARE V_SEQNO_REQ BIGINT;
	DECLARE V_SEQNO VARCHAR(10);
	
	DECLARE CUR_RESULT1	CURSOR WITH RETURN FOR 
		SELECT MAB_SEQNO,MAB_TRANNO,MAB_CARDNO,MAB_INCARDNO,MAB_MOBILENO,MAB_BOUND,MAB_ABLEBOUND,MAB_TRANDATE,MAB_TRANTIME,MAB_REQTIME 
			FROM MP_ATMBOOKING 
				WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
				
	DECLARE CUR_RESULT2	CURSOR WITH RETURN FOR 
		SELECT MAB_SEQNO,MAB_TRANNO,MAB_CARDNO,MAB_INCARDNO,MAB_MOBILENO,MAB_BOUND,MAB_ABLEBOUND,MAB_TRANDATE,MAB_TRANTIME,MAB_REQTIME 
			FROM MP_ATMBOOKING 
				WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_INCARDNO = IN_INCARDNO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';

	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	SET OUT_COUNT = '0';
	SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	SET V_CURR_TIME_TMP = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	SET V_CURR_TIME = SUBSTR(V_CURR_TIME_TMP,9);
	
	--褰撲氦鏄撶被鍨嬬爜涓?1 IC鍗″湀瀛樻椂浠ヨ浆鍏ュ崱鍙蜂负鍑? 濡傛灉褰撴棩宸叉湁棰勭害鍒欐彁绀洪噸澶嶉绾?	IF(IN_TRANNO = '01') THEN		
		IF EXISTS (SELECT 1 FROM MP_ATMBOOKING WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_INCARDNO = IN_INCARDNO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0') THEN
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0959';
			SET OUT_ANSINFO = '褰撴棩宸查绾?;
			RETURN;
		END IF;
	ELSE
		UPDATE MP_ATMBOOKING SET MAB_STT = '2'
		WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO= IN_TRANNO AND MAB_STT = '0';
	END IF;

	
	--鐢熸垚棰勭害鍙?	SET  V_SEQNO_REQ = NEXTVAL FOR MB_ATM_SEQNO;
	
	SET V_SEQNO = CHAR(DECIMAL(V_SEQNO_REQ,10));	
	
	--鎻掑叆棰勭害璁板綍
	INSERT INTO MP_ATMBOOKING
	(
		MAB_SEQNO,
		MAB_CARDNO,
		MAB_MOBILENO,
		MAB_VERIFYCODE,
		MAB_BOUND,
		MAB_ABLEBOUND,
		MAB_TRANDATE,
		MAB_TRANTIME,
		MAB_REQTIME,
		MAB_CHANNELFLAG,
		MAB_STT,
		MAB_FAILTIMES,
		MAB_CASHTIMES,
		MAB_BANKNO,
		MAB_TELLERNO,
		MAB_TRANNO,
		MAB_INCARDNO	
	)
	VALUES
	(
		V_SEQNO,
		IN_CARDNO,                     
		IN_MOBILENO, 
		IN_PASSWORD,  
		DECIMAL(IN_BOUND,15,2), 
		DECIMAL(IN_BOUND,15,2),
		V_CURR_DATE,
		V_CURR_TIME,
		IN_REQTIME,
		IN_CHANNEL,
		'0',
		0,
		0,
		IN_BANKNO,
		IN_TELLERNO,
		IN_TRANNO,
		IN_INCARDNO
	);
	
	
	COMMIT;
	
	IF(IN_TRANNO = '01') THEN
		OPEN CUR_RESULT2;
	ELSE
		OPEN CUR_RESULT1;
	END IF;
				
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	SET OUT_COUNT = '1';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MP_MANAGE_BOOKING2 ( 
	IN IN_TRANNO			VARCHAR(2),
	IN IN_FLWNO			VARCHAR(10),
	IN IN_INCARDNO			VARCHAR(30),
	IN IN_MOBILENO		VARCHAR(20),
	IN IN_PASSWORD		VARCHAR(20),
	IN IN_CHANNEL CHAR(1),
	IN IN_FUNCNO CHAR(1),
	IN IN_PASSWFLAG CHAR(1),   
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE			VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE			VARCHAR(4),
	OUT OUT_ANSINFO						VARCHAR(50),
	OUT OUT_COUNT							INTEGER
) 
DYNAMIC RESULT SETS 1  
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娓犻亾浜ゆ槗-鏌ヨ棰勭害鍜屾挙閿€棰勭害鍙婂厬鐜伴绾?-- 杈撳叆鍙傛暟锛?-- IN_TRANNO 浜ゆ槗绫诲瀷鐮?-- IN_FLWNO		娴佹按鍙?-- IN_INCARDNO 杞叆鍗″彿
-- IN_MOBILENO	鎵嬫満鍙?   
-- IN_PASSWORD  楠岃瘉鐮? 
-- IN_CHANNEL   浜ゆ槗娓犻亾   
-- IN_FUNCNO  鍔熻兘鐮?-- IN_PASSWFLAG  瀵嗙爜鏍￠獙鏍囧織
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO 杩斿洖淇℃伅
-- OUT_COUNT 鎬荤瑪鏁?
-- 鏈€鍚庝慨鏀逛汉锛欵CC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2010.04.08

-- 鏈€鍚庝慨鏀逛汉锛欵CC.pengxb
-- 鏈€鍚庝慨鏀规棩鏈?锛?2010.05.13
-- 淇敼鍘熷洜锛氬鍔犳煡璇㈠綋澶╁叏閮ㄧ殑鍔熻兘
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_CURR_DATE VARCHAR(8);
	DECLARE V_PASSWORD VARCHAR(20);
	DECLARE V_FAILTIMES INTEGER;
	DECLARE V_STT CHAR(1);
	DECLARE V_FLOWNO CHAR(10);
	
	DECLARE CUR_RESULT	CURSOR WITH RETURN FOR 
		SELECT MAB_SEQNO,MAB_TRANNO,MAB_CARDNO,MAB_INCARDNO,MAB_MOBILENO,MAB_BOUND,MAB_ABLEBOUND,MAB_TRANDATE,MAB_TRANTIME,MAB_REQTIME 
			FROM MP_ATMBOOKING 
				WHERE MAB_SEQNO = V_FLOWNO;
	
	DECLARE CUR_RESULT1	CURSOR WITH RETURN FOR 
		SELECT MAB_SEQNO,MAB_TRANNO,MAB_CARDNO,MAB_INCARDNO,MAB_MOBILENO,MAB_BOUND,MAB_ABLEBOUND,MAB_TRANDATE,MAB_TRANTIME,MAB_REQTIME 
			FROM MP_ATMBOOKING 
				WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
				
	DECLARE CUR_RESULT2	CURSOR WITH RETURN FOR 
		SELECT MAB_SEQNO,MAB_TRANNO,MAB_CARDNO,MAB_INCARDNO,MAB_MOBILENO,MAB_BOUND,MAB_ABLEBOUND,MAB_TRANDATE,MAB_TRANTIME,MAB_REQTIME 
			FROM MP_ATMBOOKING 
				WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO;
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	SET OUT_COUNT = 0;
	SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	
	--褰撲氦鏄撶被鍨嬬爜涓?1 IC鍗″湀瀛樻椂浠ヨ浆鍏ュ崱鍙蜂负鍑?	IF(IN_TRANNO = '01') THEN
		
		IF(IN_FUNCNO = '5') THEN
				
		--妫€鏌ヨ璇ユ墜鏈哄彿褰撴棩鏄惁宸查绾?		IF NOT EXISTS (SELECT 1 FROM MP_ATMBOOKING WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO) THEN
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0952';
			SET OUT_ANSINFO = '瀹㈡埛褰撴棩娌℃湁棰勭害';
			RETURN;
		END IF;		

		ELSE IF(IN_FUNCNO = '2') THEN		
		
		--妫€鏌ヨ璇ユ墜鏈哄彿褰撴棩鏄惁宸查绾?		IF NOT EXISTS (SELECT 1 FROM MP_ATMBOOKING WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0') THEN
			
			--妫€鏌ヨ璇ユ墜鏈哄彿褰撴棩鏄惁宸查绾?涓旂姸鎬佷负閿佸畾鐘舵€?			IF EXISTS (SELECT 1 FROM MP_ATMBOOKING WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '1') THEN
				SET PROC_RET_CODE = '95000';
				SET OUT_TOA_MSG_TYPE = 'E';
				SET OUT_TOA_MSG_AP_MMO = 'NE';
				SET OUT_TOA_MSG_CODE = '0954';
				SET OUT_ANSINFO = '楠岃瘉鐮佽緭鍏ラ敊璇鏁拌秴杩囬檺鍒讹紝宸查攣瀹?;
				RETURN;
			END IF;
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0952';
			SET OUT_ANSINFO = '瀹㈡埛褰撴棩娌℃湁棰勭害鎴栭绾︾姸鎬佷笉姝ｅ父';
			RETURN;
		END IF;
		
		ELSE
		
		--妫€鏌ヨ杞叆鍗″彿褰撴棩鏄惁宸查绾?		IF NOT EXISTS (SELECT 1 FROM MP_ATMBOOKING WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_INCARDNO = IN_INCARDNO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0') THEN
			
			--妫€鏌ヨ杞叆鍗″彿褰撴棩鏄惁宸查绾?涓旂姸鎬佷负閿佸畾鐘舵€?			IF EXISTS (SELECT 1 FROM MP_ATMBOOKING WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_INCARDNO = IN_INCARDNO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '1') THEN
				SET PROC_RET_CODE = '95000';
				SET OUT_TOA_MSG_TYPE = 'E';
				SET OUT_TOA_MSG_AP_MMO = 'NE';
				SET OUT_TOA_MSG_CODE = '0954';
				SET OUT_ANSINFO = '楠岃瘉鐮佽緭鍏ラ敊璇鏁拌秴杩囬檺鍒讹紝宸查攣瀹?;
				RETURN;
			END IF;
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0952';
			SET OUT_ANSINFO = '瀹㈡埛褰撴棩娌℃湁棰勭害鎴栭绾︾姸鎬佷笉姝ｅ父';
			RETURN;
		END IF;
		
		SELECT MAB_SEQNO INTO V_FLOWNO 
			FROM MP_ATMBOOKING 
				WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_INCARDNO = IN_INCARDNO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
		

		END IF;
		END IF;
		
	ELSE
		
		--妫€鏌ヨ鎵嬫満鍙峰綋鏃ユ槸鍚﹀凡棰勭害
		IF NOT EXISTS (SELECT 1 FROM MP_ATMBOOKING WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0') THEN
			
			--妫€鏌ヨ鎵嬫満鍙峰綋鏃ユ槸鍚﹀凡棰勭害,涓旂姸鎬佷负閿佸畾鐘舵€?			IF EXISTS (SELECT 1 FROM MP_ATMBOOKING WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '1') THEN
				SET PROC_RET_CODE = '95000';
				SET OUT_TOA_MSG_TYPE = 'E';
				SET OUT_TOA_MSG_AP_MMO = 'NE';
				SET OUT_TOA_MSG_CODE = '0954';
				SET OUT_ANSINFO = '楠岃瘉鐮佽緭鍏ラ敊璇鏁拌秴杩囬檺鍒讹紝宸查攣瀹?;
				RETURN;
			END IF;
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0952';
			SET OUT_ANSINFO = '瀹㈡埛褰撴棩娌℃湁棰勭害鎴栭绾︾姸鎬佷笉姝ｅ父';
			RETURN;
		END IF;
		
		SELECT MAB_SEQNO INTO V_FLOWNO
			FROM MP_ATMBOOKING 
				WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
				
	END IF;
	
	IF(IN_TRANNO = '01') THEN
		--妫€鏌ユ牎楠岄獙璇佺爜鏍囧織
		IF(IN_PASSWFLAG = '0') THEN 
			SELECT MAB_VERIFYCODE,MAB_FAILTIMES 
			INTO V_PASSWORD,V_FAILTIMES 	
			FROM MP_ATMBOOKING 
			WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_INCARDNO = IN_INCARDNO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
			--濡傛灉楠岃瘉鐮佷笉绗?			IF(V_PASSWORD <> IN_PASSWORD) THEN
				SET V_FAILTIMES = V_FAILTIMES + 1;
				SET V_STT = '0';
				
				IF(V_FAILTIMES = 1) THEN 
					SET PROC_RET_CODE = '95000';
					SET OUT_TOA_MSG_TYPE = 'E';
					SET OUT_TOA_MSG_AP_MMO = 'NE';
					SET OUT_TOA_MSG_CODE = '0955';
					SET OUT_ANSINFO = '楠岃瘉鐮佽緭鍏ラ敊璇紝濡傝繛缁?娆¤緭鍏ラ敊璇垯閿佸畾楠岃瘉鐮侊紝鎮ㄨ繕鏈?娆℃満浼?;
				
				ELSE IF (V_FAILTIMES = 2) THEN 
					SET PROC_RET_CODE = '95000';
					SET OUT_TOA_MSG_TYPE = 'E';
					SET OUT_TOA_MSG_AP_MMO = 'NE';
					SET OUT_TOA_MSG_CODE = '0956';
					SET OUT_ANSINFO = '楠岃瘉鐮佽緭鍏ラ敊璇紝濡傝繛缁?娆¤緭鍏ラ敊璇垯閿佸畾楠岃瘉鐮侊紝鎮ㄨ繕鏈?娆℃満浼?;
				
				ELSE IF(V_FAILTIMES > 2) THEN 
					SET PROC_RET_CODE = '95000';
					SET OUT_TOA_MSG_TYPE = 'E';
					SET OUT_TOA_MSG_AP_MMO = 'NE';
					SET OUT_TOA_MSG_CODE = '0957';
					SET OUT_ANSINFO = '楠岃瘉鐮佽緭鍏ラ敊璇紝鎮ㄥ凡杩炵画杈撳叆閿欒3娆★紝璇ョ瑪棰勭害琚攣瀹?;
					-- 褰撹秴杩?娆℃椂锛屼慨鏀圭姸鎬佷负閿佸畾鐘舵€併€?					SET V_STT = '1';
				END IF;
				END IF;
				END IF;
				UPDATE MP_ATMBOOKING SET MAB_FAILTIMES = V_FAILTIMES, MAB_STT = V_STT WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_INCARDNO = IN_INCARDNO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
				COMMIT;
				RETURN;
			ELSE
					--濡傛灉瀵嗙爜鐩哥鍒欓噸缃瘑鐮佽緭鍏ラ敊璇鏁颁负0銆?					UPDATE MP_ATMBOOKING SET MAB_FAILTIMES = 0 WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_INCARDNO = IN_INCARDNO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
			END IF;
		END IF;
		IF(IN_FUNCNO = '1') THEN
				SET OUT_COUNT = 1;
				--濡傛灉涓烘挙閿€锛屽垯淇敼鐘舵€佷负澶辨晥
				UPDATE MP_ATMBOOKING SET MAB_STT = '2' WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_INCARDNO = IN_INCARDNO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
		ELSE IF(IN_FUNCNO = '2') THEN
				SELECT COUNT(*) INTO OUT_COUNT FROM MP_ATMBOOKING 
				WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
		ELSE IF(IN_FUNCNO = '4') THEN
				SET OUT_COUNT = 1;
				--濡傛灉涓哄厬鎹紝鍒欎慨鏀圭姸鎬佷负宸插厬鎹?				UPDATE MP_ATMBOOKING SET MAB_STT = '3' WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_INCARDNO = IN_INCARDNO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
		ELSE IF(IN_FUNCNO = '5') THEN
				SELECT COUNT(*) INTO OUT_COUNT FROM MP_ATMBOOKING 
				WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO;
		END IF;
		END IF;
		END IF;
		END IF;
	ELSE
		
		--妫€鏌ユ牎楠岄獙璇佺爜鏍囧織
		IF(IN_PASSWFLAG = '0') THEN 
			SELECT MAB_VERIFYCODE,MAB_FAILTIMES 
			INTO V_PASSWORD,V_FAILTIMES 	
			FROM MP_ATMBOOKING 
			WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
			--濡傛灉楠岃瘉鐮佷笉绗?			IF(V_PASSWORD <> IN_PASSWORD) THEN
				SET V_FAILTIMES = V_FAILTIMES + 1;
				SET V_STT = '0';
				
				IF(V_FAILTIMES = 1) THEN 
					SET PROC_RET_CODE = '95000';
					SET OUT_TOA_MSG_TYPE = 'E';
					SET OUT_TOA_MSG_AP_MMO = 'NE';
					SET OUT_TOA_MSG_CODE = '0955';
					SET OUT_ANSINFO = '楠岃瘉鐮佽緭鍏ラ敊璇紝濡傝繛缁?娆¤緭鍏ラ敊璇垯閿佸畾楠岃瘉鐮侊紝鎮ㄨ繕鏈?娆℃満浼?;
				
				ELSE IF (V_FAILTIMES = 2) THEN 
					SET PROC_RET_CODE = '95000';
					SET OUT_TOA_MSG_TYPE = 'E';
					SET OUT_TOA_MSG_AP_MMO = 'NE';
					SET OUT_TOA_MSG_CODE = '0956';
					SET OUT_ANSINFO = '楠岃瘉鐮佽緭鍏ラ敊璇紝濡傝繛缁?娆¤緭鍏ラ敊璇垯閿佸畾楠岃瘉鐮侊紝鎮ㄨ繕鏈?娆℃満浼?;
				
				ELSE IF(V_FAILTIMES > 2) THEN 
					SET PROC_RET_CODE = '95000';
					SET OUT_TOA_MSG_TYPE = 'E';
					SET OUT_TOA_MSG_AP_MMO = 'NE';
					SET OUT_TOA_MSG_CODE = '0957';
					SET OUT_ANSINFO = '楠岃瘉鐮佽緭鍏ラ敊璇紝鎮ㄥ凡杩炵画杈撳叆閿欒3娆★紝璇ョ瑪棰勭害琚攣瀹?;
					-- 褰撹秴杩?娆℃椂锛屼慨鏀圭姸鎬佷负閿佸畾鐘舵€併€?					SET V_STT = '1';
				END IF;
				END IF;
				END IF;
				UPDATE MP_ATMBOOKING SET MAB_FAILTIMES = V_FAILTIMES, MAB_STT = V_STT WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
				COMMIT;
				RETURN;
			ELSE
					--濡傛灉瀵嗙爜鐩哥鍒欓噸缃瘑鐮佽緭鍏ラ敊璇鏁颁负0銆?					UPDATE MP_ATMBOOKING SET MAB_FAILTIMES = 0 WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
			
			END IF;
		END IF;
		IF(IN_FUNCNO = '1') THEN
				SET OUT_COUNT = 1;
				--濡傛灉涓烘挙閿€锛屽垯淇敼鐘舵€佷负澶辨晥
				UPDATE MP_ATMBOOKING SET MAB_STT = '2' WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
		ELSE IF(IN_FUNCNO = '2') THEN
				SELECT COUNT(*) INTO OUT_COUNT FROM MP_ATMBOOKING 
				WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
		ELSE IF(IN_FUNCNO = '4') THEN
				SET OUT_COUNT = 1;
				--濡傛灉涓哄厬鎹紝鍒欎慨鏀圭姸鎬佷负宸插厬鎹?				UPDATE MP_ATMBOOKING SET MAB_STT = '3' WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO AND MAB_STT = '0';
		ELSE IF(IN_FUNCNO = '5') THEN
				SELECT COUNT(*) INTO OUT_COUNT FROM MP_ATMBOOKING 
				WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_TRANNO = IN_TRANNO;
		END IF;
		END IF;
		END IF;
		END IF;
	END IF;
	
	COMMIT;
	
	IF(IN_FUNCNO = '2') THEN
		OPEN CUR_RESULT1;
	ELSE IF(IN_FUNCNO = '5') THEN
		OPEN CUR_RESULT2;		
	ELSE
		OPEN CUR_RESULT;
	END IF;
	END IF;
	
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	RETURN;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_ADD_COCUST (
	IN IN_CUSTNAME		VARCHAR(30),
	IN IN_CUSTSEX		VARCHAR(1),
	IN IN_CTFTYPE		VARCHAR(2),
	IN IN_CTFNO			VARCHAR(30),
	IN IN_MOBILE		VARCHAR(20),
	IN IN_PHONE			VARCHAR(20),
	IN IN_ADDRESS		VARCHAR(60),
	IN IN_ZIPCODE		VARCHAR(6),
	IN IN_EMAIL			VARCHAR(60),
	IN IN_BIRTHDAY		VARCHAR(8),
	IN IN_COBANKTYPE		VARCHAR(5),
	IN IN_COCARDNO		VARCHAR(30),
	IN IN_BOCOMCARDNO		VARCHAR(30),
	IN IN_COREID		VARCHAR(13),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50),
	OUT OUT_CUSTNO				VARCHAR(10)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 閾堕摱骞冲彴浜ゆ槗-绛剧害鐢ㄦ埛寮€鎴?-- 杈撳叆鍙傛暟锛?-- IN IN_CUSTNAME	 瀹㈡埛濮撳悕锛?-- IN IN_CUSTSEX	 瀹㈡埛鎬у埆锛?-- IN IN_CTFTYPE	 璇佷欢绫诲瀷锛?-- IN IN_CTFNO		 璇佷欢鍙风爜锛?-- IN IN_MOBILE	   绛剧害鎵嬫満鍙风爜锛?-- IN IN_PHONE		 鑱旂郴鐢佃瘽锛?-- IN IN_ADDRESS	 鑱旂郴鍦板潃锛?-- IN IN_ZIPCODE	 閭斂缂栫爜锛?-- IN IN_EMAIL		 E-mail 锛?-- IN IN_BIRTHDAY	 鍑虹敓骞存湀
-- IN IN_COBANKTYPE	 	鍚堜綔琛岀被鍒細
-- IN IN_COCARDNO	   	鍚堜綔琛屽崱鍙凤細
-- IN IN_BOCOMCARDNO	浜よ鐢靛瓙鍗″彿锛?-- IN IN_COREID				鏍稿績瀹㈡埛鍙凤細

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNO锛氱綉閾跺悎浣滃鎴峰彿

-- 淇敼浜猴細ECC.luys
-- 淇敼鏃ユ湡 锛?2010.04.12
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME VARCHAR(8);
	DECLARE V_CUSTNO VARCHAR(10);
	DECLARE V_CUSTNO_SEQ BIGINT;
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--鍒ゆ柇璇ュ崱鏄惁绛剧害
	IF EXISTS (
		SELECT 1
		FROM PB_COCSTINF 
		WHERE (PCCI_ACCNO = IN_COCARDNO AND PCCI_CORPID = IN_COBANKTYPE) OR PCCI_CARDNO = IN_BOCOMCARDNO
	) THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0803';
		SET OUT_ANSINFO = '璇ュ崱宸茬粡绛剧害';
		RETURN;		
	END IF;
	
	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	
	--鐢熸垚缃戦摱瀹㈡埛鍙?	SELECT NEXTVAL FOR PB_CUSTNO
	INTO V_CUSTNO_SEQ
	FROM SYSIBM.SYSDUMMY1;
	SET V_CUSTNO = LEFT(CHAR(DECIMAL(V_CUSTNO_SEQ,10)),10);	
	
	--灏嗙敤鎴蜂俊鎭彃鍏ュ悎浣滃鎴蜂俊鎭〃
	INSERT INTO PB_COCSTINF
	(
		PCCI_CSTNO,
		PCCI_ACCNO,
		PCCI_CARDNO,
		PCCI_CORPID,
		PCCI_COREID,
		PCCI_NAMECN,
		PCCI_SEX,
		PCCI_BIRTHDAY,
		PCCI_CTFTYP,
		PCCI_CTFNO,
		PCCI_MOBILE,
		PCCI_ADDRESS,
		PCCI_PHONE,
		PCCI_ZIPCODE,
		PCCI_EMAIL,
		PCCI_STT,
		PCCI_OPENDATE
	)
	VALUES
	(
		V_CUSTNO,
		IN_COCARDNO,
		IN_BOCOMCARDNO,
		IN_COBANKTYPE,
		IN_COREID,
		IN_CUSTNAME,
		IN_CUSTSEX,
		IN_BIRTHDAY,
		IN_CTFTYPE,
		IN_CTFNO,
		IN_MOBILE,
		IN_ADDRESS,
		IN_PHONE,
		IN_ZIPCODE,
		IN_EMAIL,
		'2',
		V_DATETIME
	);

	COMMIT;
	
	SET OUT_CUSTNO = V_CUSTNO;
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_DEL_COCUST (
	IN IN_COSIGNTYPE		VARCHAR(1),
	IN IN_COBANKTYPE		VARCHAR(5),
	IN IN_COCARDNO		VARCHAR(30),
	IN IN_BOCOMCARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CUSTNAME	VARCHAR(30)
)                
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 閾堕摱骞冲彴浜ゆ槗-绛剧害鐢ㄦ埛娉ㄩ攢
-- 杈撳叆鍙傛暟锛?-- IN IN_COSIGNTYPE   鏍囪瘑锛?銆佺绾?1銆侀攢鎴?-- IN IN_COBANKTYPE	 	鍚堜綔琛岀被鍒細
-- IN IN_COCARDNO	   	鍚堜綔琛屽崱鍙凤細
-- IN IN_BOCOMCARDNO	浜よ鐢靛瓙鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_CUSTNAME :鎸佸崱浜哄鍚?
-- 淇敼浜猴細ECC.luys
-- 淇敼鏃ユ湡 锛?2010.04.13
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	
	DECLARE V_CUSTNO VARCHAR(10);     
	DECLARE V_COCARDNO    VARCHAR(30);
	DECLARE V_BOCOMCARDNO VARCHAR(30);
	DECLARE V_COBANKTYPE  VARCHAR(5);
	DECLARE V_COREID      VARCHAR(13);
	DECLARE V_CUSTNAME    VARCHAR(30);
	DECLARE V_CUSTSEX     VARCHAR(1);
	DECLARE V_BIRTHDAY    VARCHAR(8);
	DECLARE V_CTFTYPE     VARCHAR(2);
	DECLARE V_CTFNO       VARCHAR(30);
	DECLARE V_MOBILE      VARCHAR(20);
	DECLARE V_ADDRESS     VARCHAR(60);
	DECLARE V_PHONE       VARCHAR(20);
	DECLARE V_ZIPCODE     VARCHAR(6);
	DECLARE V_EMAIL       VARCHAR(60);
	DECLARE V_STT       	VARCHAR(2);
	DECLARE V_DATETIME   VARCHAR(14);
	DECLARE V_DATETIME_CLOSE   VARCHAR(14);   
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	--鍒ゆ柇鍗℃槸鍚︾绾?	--鑾峰緱缃戦摱瀹㈡埛鍙峰拰涓诲崱浜哄鍚?	SELECT PCCI_CSTNO,PCCI_NAMECN 
	INTO V_CUSTNO ,OUT_CUSTNAME 
	FROM PB_COCSTINF 
	WHERE PCCI_ACCNO = IN_COCARDNO;

	IF V_CUSTNO IS NULL OR V_CUSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;

	--鍙栧緱瀹㈡埛淇℃伅
	SELECT 
		PCCI_CSTNO,
		PCCI_ACCNO,
		PCCI_CARDNO,
		PCCI_CORPID,
		PCCI_COREID,
		PCCI_NAMECN,
		PCCI_SEX,
		PCCI_BIRTHDAY,
		PCCI_CTFTYP,
		PCCI_CTFNO,
		PCCI_MOBILE,
		PCCI_ADDRESS,
		PCCI_PHONE,
		PCCI_ZIPCODE,
		PCCI_EMAIL,
		PCCI_STT,
		PCCI_OPENDATE
	INTO
		V_CUSTNO,
		V_COCARDNO,
		V_BOCOMCARDNO,
		V_COBANKTYPE,
		V_COREID,
		V_CUSTNAME,
		V_CUSTSEX,
		V_BIRTHDAY,
		V_CTFTYPE,
		V_CTFNO,
		V_MOBILE,
		V_ADDRESS,
		V_PHONE,
		V_ZIPCODE,
		V_EMAIL,
		V_STT,
		V_DATETIME
	FROM PB_COCSTINF
	WHERE PCCI_ACCNO = IN_COCARDNO;
		
	--鍙栫郴缁熸椂闂?	SET V_DATETIME_CLOSE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
	
	-- 濡傛灉鏍囪瘑涓?0銆佸垯鍒犻櫎瀹㈡埛淇℃伅琛ㄤ腑鐨勬暟鎹?銆佸垯鎻掑叆閿€鎴蜂俊鎭〃涓紝鐒跺悗鍒犻櫎瀹㈡埛淇℃伅琛ㄤ腑鐨勮褰?	IF IN_COSIGNTYPE='1' THEN
	--灏嗛攢鎴蜂俊鎭彃鍏ュ悎浣滃鎴烽攢鎴蜂俊鎭〃
	INSERT INTO PB_COCSTINF_CLOSE
	(
		PCCI_CSTNO,
		PCCI_ACCNO,
		PCCI_CARDNO,
		PCCI_CORPID,
		PCCI_COREID,
		PCCI_NAMECN,
		PCCI_SEX,
		PCCI_BIRTHDAY,
		PCCI_CTFTYP,
		PCCI_CTFNO,
		PCCI_MOBILE,
		PCCI_ADDRESS,
		PCCI_PHONE,
		PCCI_ZIPCODE,
		PCCI_EMAIL,
		PCCI_STT,
		PCCI_OPENDATE,
		PCCI_CLOSEDATE
	)
	VALUES
	(
		V_CUSTNO,
		V_COCARDNO,
		V_BOCOMCARDNO,
		V_COBANKTYPE,
		V_COREID,
		V_CUSTNAME,
		V_CUSTSEX,
		V_BIRTHDAY,
		V_CTFTYPE,
		V_CTFNO,
		V_MOBILE,
		V_ADDRESS,
		V_PHONE,
		V_ZIPCODE,
		V_EMAIL,
		V_STT,
		V_DATETIME,
		V_DATETIME_CLOSE
	);
	END IF;
	
	DELETE FROM PB_COCSTINF 
	WHERE PCCI_ACCNO = IN_COCARDNO;
	
	COMMIT;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_COCUST_INFO_QUERY ( 
	IN IN_COBANKTYPE		VARCHAR(4),
	IN IN_COCARDNO		VARCHAR(30),
	IN IN_BOCOMCARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_COCUSTNO		VARCHAR(10),
	OUT OUT_CUSTNAME	VARCHAR(30),
	OUT OUT_CUSTSEX		VARCHAR(1),
	OUT OUT_CTFTYPE		VARCHAR(2),
	OUT OUT_CTFNO		VARCHAR(30),
	OUT OUT_MOBILE		VARCHAR(20),
	OUT OUT_PHONE		VARCHAR(20),
	OUT OUT_ADDRESS		VARCHAR(60),
	OUT OUT_ZIPCODE		VARCHAR(6),
	OUT OUT_EMAIL		VARCHAR(60),
	OUT OUT_CUSTSTT		VARCHAR(1),
	OUT OUT_OPENDATE	VARCHAR(8)
)      
READS SQL DATA           
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 閾堕摱骞冲彴浜ゆ槗-鐢ㄦ埛淇℃伅鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN IN_COBANKTYPE	 	鍚堜綔琛岀被鍒細
-- IN IN_COCARDNO	   	鍚堜綔琛屽崱鍙凤細
-- IN IN_BOCOMCARDNO	浜よ鐢靛瓙鍗″彿锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_COCUSTNO锛氱綉閾跺悎浣滃鎴峰彿
-- OUT_CUSTNAME	濮撳悕
-- OUT_CUSTSEX	鎬у埆
-- OUT_CTFTYPE	璇佷欢绫诲瀷
-- OUT_CTFNO	璇佷欢鍙风爜	
-- OUT_MOBILE	鎵嬫満	
-- OUT_PHONE	鑱旂郴鐢佃瘽
-- OUT_ADDRESS	鍦板潃
-- OUT_ZIPCODE	閭紪
-- OUT_EMAIL	鐢靛瓙閭欢
-- OUT_CUSTSTT	鐘舵€?-- OUT_OPENDATE		寮€鎴锋棩鏈?
-- 淇敼浜猴細ECC.luys
-- 淇敼鏃ユ湡 锛?2010.04.14
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
		

	--鏌ヨ淇℃伅
	SELECT 
		PCCI_CSTNO,
		PCCI_NAMECN,
		PCCI_SEX,
		PCCI_CTFTYP,
		PCCI_CTFNO,
		PCCI_MOBILE,
		PCCI_PHONE,
		PCCI_ADDRESS,
		PCCI_ZIPCODE,
		PCCI_EMAIL,
		PCCI_STT,
		PCCI_OPENDATE
	INTO
		OUT_COCUSTNO,
		OUT_CUSTNAME,
		OUT_CUSTSEX,
		OUT_CTFTYPE,
		OUT_CTFNO,
		OUT_MOBILE,
		OUT_PHONE,
		OUT_ADDRESS,
		OUT_ZIPCODE,
		OUT_EMAIL,
		OUT_CUSTSTT,
		OUT_OPENDATE
	FROM PB_COCSTINF
	WHERE PCCI_ACCNO = IN_COCARDNO;
	
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF OUT_COCUSTNO IS NULL OR OUT_COCUSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_COCUST_INFO_MOD (
	IN IN_MODTYPE		VARCHAR(1),
	IN IN_COBANKTYPE		VARCHAR(4),
	IN IN_COCARDNO		VARCHAR(30),
	IN IN_NEWCOCARDNO		VARCHAR(30),
	IN IN_BOCOMCARDNO		VARCHAR(30),
	IN IN_MOBILE		VARCHAR(20),
	IN IN_CTFTYPE		VARCHAR(2),
	IN IN_CTFNO			VARCHAR(30),
	IN IN_PHONE			VARCHAR(20),
	IN IN_ADDRESS		VARCHAR(60),
	IN IN_ZIPCODE		VARCHAR(6),
	IN IN_EMAIL			VARCHAR(60),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_COCARDNO	VARCHAR(30),
	OUT OUT_CUSTNAME	VARCHAR(30),
	OUT OUT_CUSTSEX		VARCHAR(1),
	OUT OUT_CUSTSTT		VARCHAR(1),
	OUT OUT_CTFTYPE		VARCHAR(2),
	OUT OUT_CTFNO		VARCHAR(30),
	OUT OUT_MOBILE		VARCHAR(20),
	OUT OUT_PHONE		VARCHAR(20),
	OUT OUT_ADDRESS		VARCHAR(60),
	OUT OUT_ZIPCODE		VARCHAR(6),
	OUT OUT_EMAIL		VARCHAR(60)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-绛剧害鐢ㄦ埛淇℃伅淇敼
-- 杈撳叆鍙傛暟锛?-- IN_MODTYPE				淇敼绫诲瀷锛? 浠呬慨鏀瑰熀鏈釜浜轰俊鎭?1 淇敼鍚堜綔琛屽崱鍙峰拰鍩烘湰涓汉淇℃伅
-- IN_COBANKTYPE	 	鍚堜綔琛岀被鍒細
-- IN_COCARDNO	   	鍚堜綔琛屽崱鍙凤細
-- IN_NEWCOCARDNO	  鏂板悎浣滆鍗″彿锛?-- IN_BOCOMCARDNO	浜よ鐢靛瓙鍗″彿锛?-- IN_MOBILE		鎵嬫満鍙?-- IN_CTFTYPE	 璇佷欢绫诲瀷锛?-- IN_CTFNO		 璇佷欢鍙风爜锛?-- IN_PHONE			鑱旂郴鐢佃瘽   
-- IN_ADDRESS		鍦板潃
-- IN_ZIPCODE		閭斂缂栫爜 
-- IN_EMAIL			鐢靛瓙閭欢

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO 杩斿洖淇℃伅
-- OUT_COCARDNO	鍚堜綔琛屽崱鍙?-- OUT_CUSTNAME	瀹㈡埛濮撳悕       
-- OUT_CUSTSEX	瀹㈡埛鎬у埆
-- OUT_CUSTSTT	瀹㈡埛鐘舵€?-- OUT_CTFTYPE	璇佷欢绫诲瀷
-- OUT_CTFNO	璇佷欢鍙风爜
-- OUT_MOBILE	鎵嬫満	
-- OUT_PHONE	鑱旂郴鐢佃瘽
-- OUT_ADDRESS	鍦板潃
-- OUT_ZIPCODE	閭紪
-- OUT_EMAIL	鐢靛瓙閭欢
-- 淇敼浜猴細ECC.luys
-- 淇敼鏃ユ湡 锛?2010.04.14
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_FIXCSTNO VARCHAR(10);
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	SELECT PCCI_CSTNO
	INTO V_FIXCSTNO
	FROM PB_COCSTINF                  
	WHERE PCCI_ACCNO = IN_COCARDNO;
	
	--鍒ゆ柇鍗℃槸鍚︾绾?	IF V_FIXCSTNO IS NULL OR V_FIXCSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;

	IF IN_MODTYPE = '1' THEN
		UPDATE PB_COCSTINF SET PCCI_ACCNO = IN_NEWCOCARDNO WHERE PCCI_CSTNO = V_FIXCSTNO;
	END IF;
	
	UPDATE PB_COCSTINF SET
		PCCI_MOBILE = IN_MOBILE,
		PCCI_CTFTYP = IN_CTFTYPE,
		PCCI_CTFNO = IN_CTFNO,
		PCCI_PHONE = IN_PHONE,
		PCCI_ADDRESS = IN_ADDRESS,
		PCCI_ZIPCODE = IN_ZIPCODE,
		PCCI_EMAIL = IN_EMAIL
	WHERE PCCI_CSTNO = V_FIXCSTNO;
		
	COMMIT;	
	
	--鍙栧緱瀹㈡埛淇℃伅
	SELECT 
		PCCI_ACCNO,
		PCCI_NAMECN,
		PCCI_SEX,
		PCCI_STT,
		PCCI_MOBILE,
		PCCI_CTFTYP,
		PCCI_CTFNO,
		PCCI_PHONE,
		PCCI_ADDRESS,
		PCCI_ZIPCODE,
		PCCI_EMAIL
	INTO
		OUT_COCARDNO,
		OUT_CUSTNAME,
	  OUT_CUSTSEX,
	  OUT_CUSTSTT,
	  OUT_MOBILE,
	  OUT_CTFTYPE,	
	  OUT_CTFNO,
	  OUT_PHONE,
	  OUT_ADDRESS,
	  OUT_ZIPCODE,
	  OUT_EMAIL
	FROM PB_COCSTINF
	WHERE PCCI_CSTNO = V_FIXCSTNO;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MP_MANAGE_ADD_HKATM_BOOKING (
  IN IN_CUSTOMERID          VARCHAR(15),
  IN IN_PASSWORD            VARCHAR(20),
  IN IN_CURTYPE             VARCHAR(3),
  IN IN_MOBILENO            VARCHAR(20),  
  IN IN_CARDNO              VARCHAR(30),
  IN IN_PROOFCARDNO         VARCHAR(20),
  IN IN_ACCOUNTNO           VARCHAR(19),
  IN IN_CHANNEL             CHAR(1),
  IN IN_BOUND               VARCHAR(18),
  IN IN_REQTIME             VARCHAR(14),
  IN IN_BANKNO              VARCHAR(6),
  IN IN_TELLERNO            VARCHAR(10),
  OUT PROC_RET_CODE         VARCHAR(5),
  OUT OUT_TOA_MSG_TYPE      VARCHAR(1),
  OUT OUT_TOA_MSG_AP_MMO    VARCHAR(2),
  OUT OUT_TOA_MSG_CODE      VARCHAR(4),
  OUT OUT_ANSINFO           VARCHAR(50),
  OUT OUT_FLWNO             VARCHAR(10),
  OUT OUT_TOTALBOUND        VARCHAR(18),
  OUT OUT_ABLEBOUND         VARCHAR(18),
  OUT OUT_STT               CHAR(1),
  OUT OUT_TRANDATE          VARCHAR(8),
  OUT OUT_TRANTIME          VARCHAR(6),
  OUT OUT_REQTIME           VARCHAR(14)
)
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娓犻亾浜ゆ槗-棣欐腐鍒嗚atm鍙栫幇棰勭害
-- 杈撳叆鍙傛暟锛?-- IN_CUSTOMERID    瀹㈡埛鍙?-- IN_PASSWORD      鍙栫幇楠岃瘉鐮?-- IN_CURTYPE       甯佺
-- IN_MOBILENO      鎵嬫満鍙?-- IN_CARDNO        鍙栫幇鍗″彿
-- IN_ACCOUNTNO     鍙栫幇璐︽埛鍙?-- IN_CHANNEL       浜ゆ槗娓犻亾
-- IN_BOUND         閲戦
-- IN_REQTIME       璇锋眰鏃堕棿
-- IN_BANKNO        鍒嗚鍙?-- IN_TELLERNO      鏌滃憳鍙?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE  杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO  淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE  淇℃伅鐮?-- OUT_ANSINFO 杩斿洖淇℃伅
-- OUT_FLWNO 棰勭害鍙?-- OUT_TOTALBOUND 鎬婚搴?-- OUT_ABLEBOUND 鍙敤棰濆害
-- OUT_TRANDATE 浜ゆ槗鏃ユ湡
-- OUT_TRANTIME 浜ゆ槗鏃堕棿
-- OUT_REQTIME 浜ゆ槗璇锋眰鏃堕棿
-- 淇敼浜猴細liming
-- 淇敼鏃ユ湡 锛?2011.03.01
------------------------------------------------------------------------
BEGIN
  --澹版槑鍙橀噺
  DECLARE V_CURR_DATE VARCHAR(8);
  DECLARE V_CURR_TIME_TMP VARCHAR(14);
  DECLARE V_CURR_TIME VARCHAR(6);
  DECLARE V_SEQNO_REQ BIGINT;
  DECLARE V_SEQNO VARCHAR(10);

  -- 寮傚父澶勭悊
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    SET PROC_RET_CODE = '95000';
    SET OUT_TOA_MSG_TYPE = 'E';
    SET OUT_TOA_MSG_AP_MMO = 'NE';
    SET OUT_TOA_MSG_CODE = '0802';
    SET OUT_ANSINFO = 'Error occurred during database access';
    ROLLBACK;
  END;


  SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
  SET V_CURR_TIME_TMP = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
  SET V_CURR_TIME = SUBSTR(V_CURR_TIME_TMP,9);
  
  --妫€鏌ヨ璇ユ墜鏈哄彿褰撴棩鏄惁宸查绾?濡傛灉褰撴棩宸茬粡棰勭害锛屼晶鏇存柊涓哄け鏁?		IF EXISTS (SELECT 1 FROM MP_ATMBOOKING WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_CUSTOMERID = IN_CUSTOMERID AND MAB_STT = '0') THEN

			UPDATE MP_ATMBOOKING SET MAB_STT = '2',MAB_INVALREASON = '4',MAB_INVALTIME = V_CURR_TIME_TMP
    		WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_MOBILENO = IN_MOBILENO AND MAB_STT = '0';
		END IF;	

  --鐢熸垚棰勭害鍙?  SET  V_SEQNO_REQ = NEXTVAL FOR MB_ATM_SEQNO;

  SET V_SEQNO = CHAR(DECIMAL(V_SEQNO_REQ,10));

  --鎻掑叆棰勭害璁板綍
  INSERT INTO MP_ATMBOOKING
  (
    MAB_SEQNO,
    MAB_CARDNO,
    MAB_MOBILENO,
    MAB_VERIFYCODE,
    MAB_BOUND,
    MAB_ABLEBOUND,
    MAB_TRANDATE,
    MAB_TRANTIME,
    MAB_REQTIME,
    MAB_CHANNELFLAG,
    MAB_STT,
    MAB_FAILTIMES,
    MAB_CASHTIMES,
    MAB_BANKNO,
    MAB_TELLERNO,
    MAB_TRANNO,
    MAB_INCARDNO,
    MAB_CURTYPE,
    MAB_ACCOUNTNO,
    MAB_CUSTOMERID,
    MAB_INVALREASON,
    MAB_INVALTIME,
    MAB_PROOFCARDNO
  )
  VALUES
  (
    V_SEQNO,
    IN_CARDNO,
    IN_MOBILENO,
    IN_PASSWORD,
    DECIMAL(IN_BOUND,15,2),
    DECIMAL(IN_BOUND,15,2),
    V_CURR_DATE,
    V_CURR_TIME,
    IN_REQTIME,
    IN_CHANNEL,
    '0',
    0,
    0,
    IN_BANKNO,
    IN_TELLERNO,
    '00',
    '',
    IN_CURTYPE,
    IN_ACCOUNTNO,
    IN_CUSTOMERID,
    '',
    '',
    IN_PROOFCARDNO
  );

  COMMIT;

  SET PROC_RET_CODE = '00000';
  SET OUT_TOA_MSG_TYPE = 'N';
  SET OUT_TOA_MSG_AP_MMO = 'NE';
  SET OUT_TOA_MSG_CODE = '0000';
  SET OUT_ANSINFO = 'Transaction Success';
  SET OUT_FLWNO = V_SEQNO;
  SET OUT_TOTALBOUND = IN_BOUND;
  SET OUT_ABLEBOUND = IN_BOUND;
  SET OUT_STT = '0';
  SET OUT_TRANDATE = V_CURR_DATE;
  SET OUT_TRANTIME = V_CURR_TIME;
  SET OUT_REQTIME = IN_REQTIME;
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MP_DEL_HKATM_BOOKING ( 
  IN IN_FLWNO               VARCHAR(10),
  OUT PROC_RET_CODE         VARCHAR(5),
  OUT OUT_TOA_MSG_TYPE      VARCHAR(1),
  OUT OUT_TOA_MSG_AP_MMO    VARCHAR(2),
  OUT OUT_TOA_MSG_CODE      VARCHAR(4),
  OUT OUT_ANSINFO           VARCHAR(50),
  OUT OUT_FLWNO             VARCHAR(10),
  OUT OUT_CUSTOMERID        VARCHAR(15),
  OUT OUT_CARDNO            VARCHAR(30),
  OUT OUT_PROOFCARDNO       VARCHAR(20),
  OUT OUT_ACCOUNTNO         VARCHAR(19),
  OUT OUT_CHANNEL           CHAR(1),
  OUT OUT_MOBILENO          VARCHAR(20),
  OUT OUT_TOTALBOUND        DECIMAL(15,2),
  OUT OUT_FETCHBOUND        DECIMAL(15,2),
  OUT OUT_CURTYPE           VARCHAR(3),
  OUT OUT_STT               VARCHAR(1),
  OUT OUT_TRANDATE          VARCHAR(8),
  OUT OUT_TRANTIME          VARCHAR(6),
  OUT OUT_REQTIME           VARCHAR(14),
  OUT OUT_INVALREASON       VARCHAR(2),
  OUT OUT_INVALTIME         VARCHAR(14)      
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 娓犻亾浜ゆ槗-鎾ら攢atm鍙栫幇棰勭害
-- 杈撳叆鍙傛暟锛?-- IN_FLWNO             鍙栫幇棰勭害鍙? 
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛?      瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯?--OUT_TOA_MSG_TYPE      杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO    淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE      淇℃伅鐮?--OUT_ANSINFO           杩斿洖淇℃伅
--OUT_FLWNO             棰勭害鍙? 
--OUT_CUSTOMERID        瀹㈡埛鍙? 
--OUT_CARDNO            鍙栫幇鍗″彿
--OUT_PROOFCARDNO       鍑瘉鍙?--OUT_ACCOUNTNO         鍙栫幇璐︽埛
--OUT_CHANNEL           娓犻亾鏍囪瘑
--OUT_MOBILENO          棰勭害鎵嬫満
--OUT_TOTALBOUND        棰勭害閲戦
--OUT_FETCHBOUND        鍙栨閲戦
--OUT_CURTYPE           甯佺    
--OUT_STT               棰勭害鐘舵€?--OUT_TRANDATE          浜ゆ槗鏃ユ湡
--OUT_TRANTIME          浜ゆ槗鏃堕棿
--OUT_REQTIME           璇锋眰鏃堕棿
--OUT_INVALREASON       澶辨晥鍘熷洜
--OUT_INVALTIME         澶辨晥鏃堕棿
--鏈€鍚庝慨鏀逛汉锛歭iming
--鏈€鍚庝慨鏀规棩鏈?锛?2011.03.02
------------------------------------------------------------------------
BEGIN
  --澹版槑鍙橀噺
  DECLARE V_CURR_DATE VARCHAR(8);
  DECLARE V_CURR_TIME_TMP VARCHAR(14);
  DECLARE V_PASSWORD VARCHAR(20);
  DECLARE V_FAILTIMES INTEGER;
  DECLARE V_STT CHAR(1);
  DECLARE V_ABLEBOUND DECIMAL(15,2);
  
  -- 寮傚父澶勭悊
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    SET PROC_RET_CODE = '95000';
    SET OUT_TOA_MSG_TYPE = 'E';
    SET OUT_TOA_MSG_AP_MMO = 'NE';
    SET OUT_TOA_MSG_CODE = '0802';
    SET OUT_ANSINFO = 'Error occurred during database access';
    ROLLBACK;
  END;
  
  SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
  SET V_CURR_TIME_TMP = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
    --妫€鏌ヨ鎵嬫満鍙峰綋鏃ユ槸鍚﹀凡棰勭害
  IF NOT EXISTS (SELECT 1 FROM MP_ATMBOOKING WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_SEQNO = IN_FLWNO AND MAB_STT = '0') THEN
		SET PROC_RET_CODE = '95000';
    SET OUT_TOA_MSG_TYPE = 'E';
    SET OUT_TOA_MSG_AP_MMO = 'NE';
    SET OUT_TOA_MSG_CODE = '0963';
    SET OUT_ANSINFO = 'Having no booking record today or an abnormal booking status';
    RETURN;
  ELSE
  	SELECT MAB_SEQNO,MAB_CARDNO,MAB_MOBILENO,MAB_BOUND,MAB_ABLEBOUND,MAB_TRANDATE,MAB_TRANTIME,MAB_REQTIME,MAB_CHANNELFLAG,MAB_STT,MAB_CURTYPE,MAB_ACCOUNTNO,MAB_CUSTOMERID,MAB_INVALREASON,MAB_INVALTIME,MAB_PROOFCARDNO
	INTO OUT_FLWNO,OUT_CARDNO,OUT_MOBILENO,OUT_TOTALBOUND,V_ABLEBOUND,OUT_TRANDATE,OUT_TRANTIME,OUT_REQTIME,OUT_CHANNEL,OUT_STT,OUT_CURTYPE,OUT_ACCOUNTNO,OUT_CUSTOMERID,OUT_INVALREASON,OUT_INVALTIME,OUT_PROOFCARDNO 
	FROM MP_ATMBOOKING 
	WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_SEQNO = IN_FLWNO AND MAB_STT = '0';
    --棰勭害鎾ら攢锛屽垯淇敼鐘舵€佷负澶辨晥
    UPDATE MP_ATMBOOKING SET MAB_STT = '2',MAB_INVALREASON = '1',MAB_INVALTIME = V_CURR_TIME_TMP WHERE MAB_TRANDATE = V_CURR_DATE AND MAB_SEQNO = IN_FLWNO AND MAB_STT = '0';
    COMMIT;
    SET OUT_STT = '2';
    SET OUT_INVALREASON = '1';
    SET OUT_INVALTIME = V_CURR_TIME_TMP;
	--鍙栧緱鍙栨浣欓
	SET OUT_FETCHBOUND = OUT_TOTALBOUND - V_ABLEBOUND;
  END IF;
  SET PROC_RET_CODE = '00000';
  SET OUT_TOA_MSG_TYPE = 'N';
  SET OUT_TOA_MSG_AP_MMO = 'NE';
  SET OUT_TOA_MSG_CODE = '0000';
  SET OUT_ANSINFO = 'Transaction Successful';

END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE MP_QRY_HKATM_BOOKING(
IN IN_CUSTOMERID          VARCHAR(15),
IN IN_MOBILENO            VARCHAR(20),
IN IN_STARTDATE           VARCHAR(8),
IN IN_ENDDATE             VARCHAR(8),
IN IN_PAGENO              INTEGER,
IN IN_PAGECOUNT           INTEGER,
IN IN_USERTYPE            CHAR(1),
OUT PROC_RET_CODE         VARCHAR(5),
OUT OUT_TOA_MSG_TYPE      VARCHAR(1),
OUT OUT_TOA_MSG_AP_MMO    VARCHAR(2),
OUT OUT_TOA_MSG_CODE      VARCHAR(4),
OUT OUT_ANSINFO           VARCHAR(50),
OUT OUT_TOTALCOUNT        INTEGER,
OUT OUT_ENDFLAG        VARCHAR(1)
 ) 
	DYNAMIC RESULT SETS 1
  ------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ棣欐腐鍒嗚ATM棰勭害鏄庣粏
-- 杈撳叆鍙傛暟锛?-- IN_CUSTOMERID: 瀹㈡埛鍙?-- IN_MOBILENO:   棰勭害鎵嬫満鍙?-- IN_STARTDATE:  鏌ヨ寮€濮嬫棩鏈?-- IN_ENDDATE:    鏌ヨ缁撴潫鏃ユ湡
-- IN_PAGENO:     椤靛彿
-- IN_PAGECOUNT:  椤垫暟

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
-- OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
-- OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?-- OUT_ATTEND_LST: 缁撴灉闆?-- 鏈€鍚庝慨鏀逛汉 锛?liming
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.03.03
-- 淇敼鍘熷洜锛?1000506澧炲姞棣欐腐瀹㈡湇鏌ヨ
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_CURR_DATE VARCHAR(8);
	DECLARE V_CURR_TIME_TMP VARCHAR(14);
	
	DECLARE	OUT_BOOKING_LST CURSOR WITH RETURN FOR 
		SELECT 
	    MAB_SEQNO,
	    MAB_CUSTOMERID,
	    MAB_CARDNO,	    
	    MAB_ACCOUNTNO,	    
	    MAB_CHANNELFLAG,
	    MAB_MOBILENO,	    
	    MAB_BOUND,
	    MAB_ABLEBOUND,
	    MAB_CURTYPE,
	    MAB_STT,	    
	    MAB_TRANDATE,
	    MAB_TRANTIME,
	    MAB_REQTIME,
	    MAB_INVALREASON,
	    MAB_INVALTIME,
	    MAB_PROOFCARDNO
		FROM(
			SELECT
			MAB_SEQNO,
		    MAB_CUSTOMERID,
		    MAB_CARDNO,	    
		    MAB_ACCOUNTNO,	    
		    MAB_CHANNELFLAG,
		    MAB_MOBILENO,	    
		    MAB_BOUND,
		    MAB_ABLEBOUND,
		    MAB_CURTYPE,
		    MAB_STT,	    
		    MAB_TRANDATE,
		    MAB_TRANTIME,
		    MAB_REQTIME,
		    MAB_INVALREASON,
		    MAB_INVALTIME,
		    MAB_PROOFCARDNO,
			ROW_NUMBER()OVER(ORDER BY MAB_SEQNO DESC) ROW_ID
		  FROM MP_ATMBOOKING
		 	WHERE  
			(IN_CUSTOMERID = '' OR MAB_CUSTOMERID = IN_CUSTOMERID)
		 	 AND (IN_MOBILENO = '' OR MAB_MOBILENO = IN_MOBILENO)
		 	 AND (IN_USERTYPE = '1' OR (IN_USERTYPE = '0' AND MAB_CHANNELFLAG IN ('a','b','c')))
		 	 AND MAB_TRANDATE BETWEEN IN_STARTDATE AND IN_ENDDATE
			) AS TMPTABLE
		WHERE  ROW_ID > (IN_PAGENO - 1) * IN_PAGECOUNT  AND ROW_ID<= IN_PAGENO * IN_PAGECOUNT;
	
	
		-- 寮傚父澶勭悊
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET PROC_RET_CODE = '95000';
			SET OUT_TOA_MSG_TYPE = 'E';
			SET OUT_TOA_MSG_AP_MMO = 'NE';
			SET OUT_TOA_MSG_CODE = '0802';
			SET OUT_ANSINFO = 'Error occurred during database access';
			ROLLBACK;
		END;
		
		SET V_CURR_DATE = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmdd');
		SET V_CURR_TIME_TMP = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
		IF IN_CUSTOMERID IS NULL  THEN
			SET IN_CUSTOMERID = '';
		END IF;
		
		IF IN_MOBILENO IS NULL THEN
			SET IN_MOBILENO = '';
		END IF;

		--鎶婂綋澶╀互鍓嶇殑澶勪簬鐢熸晥涓殑璁板綍鏇存敼涓鸿繃鏈熷け鏁?		IF EXISTS (SELECT 1 FROM MP_ATMBOOKING WHERE MAB_TRANDATE < V_CURR_DATE AND (IN_CUSTOMERID = '' OR MAB_CUSTOMERID = IN_CUSTOMERID) AND (IN_MOBILENO = '' OR MAB_MOBILENO = IN_MOBILENO) AND MAB_STT = '0') THEN
			UPDATE MP_ATMBOOKING SET MAB_STT = '2',MAB_INVALREASON = '3',MAB_INVALTIME = V_CURR_TIME_TMP WHERE MAB_TRANDATE < V_CURR_DATE AND (IN_CUSTOMERID = '' OR MAB_CUSTOMERID = IN_CUSTOMERID) AND (IN_MOBILENO = '' OR MAB_MOBILENO = IN_MOBILENO) AND MAB_STT = '0';
			COMMIT;
		END IF;

		--鎬荤瑪鏁板彇寰?		SET OUT_TOTALCOUNT = 0;
		SELECT COUNT(*) TOTALCOUNT INTO OUT_TOTALCOUNT
	    FROM MP_ATMBOOKING
	 	WHERE  
			(IN_CUSTOMERID = '' OR MAB_CUSTOMERID = IN_CUSTOMERID)
		 	 AND (IN_MOBILENO = '' OR MAB_MOBILENO = IN_MOBILENO)
		 	 AND (IN_USERTYPE = '1' OR (IN_USERTYPE = '0' AND MAB_CHANNELFLAG IN ('a','b','c')))
		 	 AND MAB_TRANDATE BETWEEN IN_STARTDATE AND IN_ENDDATE;
		--鏄惁缁撴潫鏍囧織鍒ゆ柇
		IF OUT_TOTALCOUNT <= IN_PAGENO * IN_PAGECOUNT THEN
			SET OUT_ENDFLAG = '1';
		ELSE
			SET OUT_ENDFLAG = '0';
		END IF; 
	
	--杩斿洖缁撴灉鍊?	OPEN OUT_BOOKING_LST;
	
	SET PROC_RET_CODE = '00000';
    SET OUT_TOA_MSG_TYPE = 'N';
    SET OUT_TOA_MSG_AP_MMO = 'NE';
    SET OUT_TOA_MSG_CODE = '0000';
    SET OUT_ANSINFO = 'Transaction Success';    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_DEL_PRO_BANKINFO (
	IN IN_LEN INTEGER,
	OUT PROC_RET_CODE VARCHAR(5)
) 
MODIFIES SQL DATA
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 瀵瑰緱鍒╁疂鍙攢鍞垎琛屽鐓ц〃鍒嗘壒鍒犻櫎
-- 杈撳叆鍙傛暟锛?-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?
-- 鏈€鍚庝慨鏀逛汉锛歭iming
-- 鏈€鍚庝慨鏀规棩鏈燂細2011.03.28

------------------------------------------------------------------------
BEGIN
	DECLARE V_COUNT INTEGER;
	DECLARE V_COUNT2 INTEGER;
	
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		ROLLBACK;
	END;
	SELECT COUNT(1) INTO V_COUNT FROM PB_PRO_BANKINFO;
	
	WHILE V_COUNT > 0 DO 
		
			--娓呴櫎浠ュ墠鐞嗚储浜у搧璁板綍
			DELETE FROM ( SELECT * FROM PB_PRO_BANKINFO WHERE LENGTH(PPB_PRODUCTNO) = IN_LEN FETCH FIRST 10000 ROWS ONLY);
			COMMIT;
			SET V_COUNT = V_COUNT - 10000;
	END WHILE;
	
		SELECT COUNT(1) INTO V_COUNT2 FROM PB_PRODPAR;
	
	WHILE V_COUNT2 > 0 DO 
		
		--娓呴櫎浠ュ墠鐞嗚储浜у搧璁板綍
		DELETE FROM ( SELECT * FROM PB_PRODPAR WHERE LENGTH(PDP_PRODUCTNO) = IN_LEN FETCH FIRST 1000 ROWS ONLY);
		COMMIT;
		SET V_COUNT2 = V_COUNT2 - 1000;
	END WHILE;
	SET PROC_RET_CODE = '00000';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_EACCOUNT_UPDATE_MOBILE ( 
	IN IN_TELLERNO		VARCHAR(10),
	IN IN_BANKNO		VARCHAR(6),
	IN IN_NODENO		VARCHAR(6),
	IN IN_CARDNO		VARCHAR(30),
	IN IN_MOBILE		VARCHAR(20),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	OUT OUT_CSTNO		VARCHAR(10),
	OUT OUT_CUSTNAME	VARCHAR(30)
)   
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-e璐︽埛淇敼娉ㄥ唽鎵嬫満鍙?-- 杈撳叆鍙傛暟锛?-- IN_TELLERNO		鏌滃憳鍙?   
-- IN_BANKNO		鍒嗚鍙?-- IN_NODENO		缃戠偣鍙?-- IN_CARDNO		涓诲崱鍙?
-- IN_MOBILE		鎵嬫満鍙? 

-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛?	瀛樺偍杩囩▼杩斿洖鐮侊紝00000涓烘甯?--OUT_TOA_MSG_TYPE		杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE		淇℃伅鐮?-- OUT_ANSINFO			杩斿洖淇℃伅
-- OUT_CSTNO 			缃戦摱瀹㈡埛鍙?-- OUT_CUSTNAME			瀹㈡埛濮撳悕 
-- 鍒涘缓鑰咃細wanghan
-- 鍒涘缓鏃ユ湡 锛?2011.03.21
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	DECLARE V_DATETIME VARCHAR(14);	
	DECLARE V_FIXSTT VARCHAR(1);
	DECLARE V_FIXCSTNO VARCHAR(10);
	DECLARE V_CUSTNAME VARCHAR(30);
	
	-- 寮傚父澶勭悊	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	SELECT PIF_CSTNO,PIF_STT,PIF_NAMECN          
	INTO V_FIXCSTNO,V_FIXSTT,V_CUSTNAME         
	FROM PB_CSTINF                  
	WHERE PIF_ACCNO = IN_CARDNO;                 
	
	--鍒ゆ柇涓诲崱鏄惁绛剧害
	IF V_FIXCSTNO IS NULL OR V_FIXCSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害';
		RETURN;		
	END IF;
	
	--鍒ゆ柇瀹㈡埛鏄惁琚浠?	IF V_FIXSTT='1' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0805';
		SET OUT_ANSINFO = '缃戦摱瀹㈡埛宸茶姝粯';
		RETURN;		
	END IF;
			
	--鍙栫郴缁熸椂闂?	SET V_DATETIME = FUNC_DATETIME_FMT(CURRENT TIMESTAMP,'yyyymmddhhmiss');
	
	UPDATE PB_CSTINF SET
		PIF_MOBILE = IN_MOBILE,
		PIF_CHGTELLER = IN_TELLERNO,
		PIF_CHGBRANCHNO = IN_BANKNO,
		PIF_CHGNETNO = IN_NODENO,
		PIF_LASTCHGTIM = V_DATETIME
		WHERE PIF_ACCNO = IN_CARDNO;
	COMMIT;	
	
	SET OUT_CSTNO=V_FIXCSTNO;
	SET OUT_CUSTNAME=V_CUSTNAME;
									
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_ACCOUTINFO
(
	IN IN_CARDNO              VARCHAR(30),
	IN IN_HLDCTFTYP           CHAR(2),
	IN IN_HLDCTFNO            VARCHAR(30),
	OUT PROC_RET_CODE         VARCHAR(5),
  	OUT OUT_TOA_MSG_TYPE      VARCHAR(1),
  	OUT OUT_TOA_MSG_AP_MMO    VARCHAR(2),
  	OUT OUT_TOA_MSG_CODE      VARCHAR(4),
  	OUT OUT_ANSINFO           VARCHAR(50),
  	OUT OUT_CSTTYP            CHAR(1),
  	OUT OUT_ALIAS             VARCHAR(30),
  	OUT OUT_CARDCOUNT         SMALLINT
 ) 
 
    DYNAMIC RESULT SETS 1
 
--------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌ヨ鎿嶄綔鍛樻湰浜虹粦瀹氫釜浜虹綉閾剁绾﹀崱鍙蜂互鍙婁笅鎸傚崱鐨勪俊鎭?
-- 杈撳叆鍙傛暟锛?-- IN_CARDNO  涓汉鍗″彿锛堣杩涜缁戝畾鐨勫崱鍙凤級
-- IN_IN_HLDCTFTYP 璇佷欢绫诲瀷
-- IN_IN_HLDCTFNO 璇佷欢鍙风爜

-- 杈撳嚭鍙傛暟锛?-- OUT_CARDCOUNT: 涓诲崱鍜屼笅鎸傚崱鎬绘暟
-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- CUR_CARD_INFO锛氫笅鎸傚崱缁撴灉闆?-- 鏈€鍚庝慨鏀逛汉 锛?liming
-- 鏈€鍚庝慨鏀规棩鏈?锛?2011.06.15
------------------------------------------------------------------------
BEGIN
    
    -- 澹版槑鍙橀噺
	DECLARE V_SQL VARCHAR(1000);
	DECLARE V_HLDCTFTYP CHAR(2);
	DECLARE V_HLDCTFTYP2 CHAR(4);
	DECLARE CUR_CARD_INFO CURSOR WITH RETURN FOR SQLSTATMENT;

  -- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK ;
	END;
	--璇佷欢绫诲瀷杞崲,0锛氳韩浠借瘉1锛氭姢鐓?锛氬叾瀹?锛氬啗浜鸿韩浠借瘉4锛氭璀﹁韩浠借瘉5锛氭腐婢冲彴灞呮皯閫氳璇?	IF IN_HLDCTFTYP = '0' THEN
		SET V_HLDCTFTYP = '15';
		SET V_HLDCTFTYP2 = 'SSNO';
	ELSEIF IN_HLDCTFTYP = '1' THEN
		SET V_HLDCTFTYP = '20';
		SET V_HLDCTFTYP2 = 'PSPT';
	ELSEIF IN_HLDCTFTYP = '2' THEN
		SET V_HLDCTFTYP = '00';
		SET V_HLDCTFTYP2 = '0000';
	ELSEIF IN_HLDCTFTYP = '3' THEN
		SET V_HLDCTFTYP = '17';
		SET V_HLDCTFTYP2 = 'SSN3';
	ELSEIF IN_HLDCTFTYP = '4' THEN
		SET V_HLDCTFTYP = '18';
		SET V_HLDCTFTYP2 = 'SSN4';
	ELSEIF IN_HLDCTFTYP = '5' THEN
		SET V_HLDCTFTYP = '19';
		SET V_HLDCTFTYP2 = 'KMTC';
	ELSE
		SET V_HLDCTFTYP = IN_HLDCTFTYP;
	END IF;

	--濡傛灉鏄叾瀹冪被鍨嬶紝杩斿洖闆舵潯璁板綍
	IF IN_HLDCTFTYP = '2' THEN
	
		SET OUT_CSTTYP = '';
		--璁剧疆鍗℃潯鏁颁负0
		SET OUT_CARDCOUNT = 0;
		SET PROC_RET_CODE = '00000';
		SET OUT_TOA_MSG_TYPE = 'N';
	    SET OUT_TOA_MSG_AP_MMO = 'NE';
	    SET OUT_TOA_MSG_CODE = '0000';
	    SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
		RETURN;
	END IF;
	
	--鍙栧鎴风被鍨嬪拰缃戦摱鐧诲綍鍚?	SELECT PIF_CSTTYP,PIF_ALIAS INTO OUT_CSTTYP,OUT_ALIAS FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO  AND PIF_CTFNO = IN_HLDCTFNO AND PIF_CTFTYP = V_HLDCTFTYP AND PIF_STT='0' FETCH FIRST 1 ROWS ONLY;
	
	--濡傛灉浼佷笟鎿嶄綔鍛樼粦瀹氭槸涓诲崱锛屽垯闇€瑕佹妸鏈汉鐨勪富鍗″拰涓嬫寕鍗′俊鎭煡璇㈠洖鏉?	IF  OUT_CSTTYP IS NOT NULL AND OUT_CSTTYP <> ''  THEN	
		
		--鍙栨墍鏈夊崱鎬绘暟
		SELECT COUNT(1) INTO OUT_CARDCOUNT FROM PB_ACCINF PAF WHERE EXISTS (SELECT 1 FROM PB_ACCINF WHERE PAF.PAI_CSTNO = PAI_CSTNO AND PAI_CARDNO = IN_CARDNO AND PAI_HLDCTFTYP = V_HLDCTFTYP AND PAI_HLDCTFNO = IN_HLDCTFNO  AND PAI_MSTFLAG = '1');
		
		SET V_SQL = 'SELECT PAI_CARDNO,PAI_HLDNAME,'
					|| 'CASE WHEN PAI_HLDCTFTYP = '''||'15'||''' OR PAI_HLDCTFTYP = '''||'16'||''' THEN '''||'0'||''' '
					|| 'WHEN PAI_HLDCTFTYP = '''||'17'||''' THEN '''||'3'||''' '
					|| 'WHEN PAI_HLDCTFTYP = '''||'18'||''' THEN '''||'4'||''' '
					|| 'WHEN PAI_HLDCTFTYP = '''||'19'||''' THEN '''||'5'||''' '
					|| 'WHEN PAI_HLDCTFTYP = '''||'20'||''' THEN '''||'1'||''' '
					|| 'ELSE  '''||'2'||''' END PAI_HLDCTFTYP, '
					|| 'PAI_HLDCTFNO,PAI_CARDTYP,PAI_CARDKIND,PAI_MSTFLAG,PAI_CHGTELLER,PAI_CHGNETNO,PAI_CHGBRANCHNO, '
					|| 'CASE WHEN PWI_PRDNO = '''||'08040500'||''' THEN '''||'2'||''' '
					|| 'WHEN PWI_PRDNO = '''||'08040600'||''' THEN '''||'1'||''' '
					|| ' ELSE '''||'0'||''' END PWI_PRDNO '
					|| 'FROM PB_ACCINF PAF '
					|| 'LEFT OUTER JOIN PB_WODEINF ON PWI_CARDNO = PAF.PAI_CARDNO '
					|| 'WHERE EXISTS (SELECT 1 FROM PB_ACCINF WHERE PAF.PAI_CSTNO = PAI_CSTNO AND PAI_CARDNO = ''' || IN_CARDNO || ''' ' 
					|| 'AND PAI_HLDCTFTYP = ''' || V_HLDCTFTYP || ''' AND PAI_HLDCTFNO = ''' || IN_HLDCTFNO || '''  AND PAI_MSTFLAG = '''||'1'||''') ORDER BY PAI_MSTFLAG DESC';
	--濡傛灉鏄櫘閫氭敞鍐岀敤鎴凤紝杈撳叆璇ュ崱淇℃伅鍗冲彲
	ELSEIF  EXISTS (SELECT 1 FROM PB_COMMCSTINF WHERE PCIF_ACCNO = IN_CARDNO AND (PCIF_CTFTYP = V_HLDCTFTYP OR PCIF_CTFTYP = V_HLDCTFTYP2) AND PCIF_CTFNO = IN_HLDCTFNO ) THEN
		
		--璁剧疆鍗℃潯鏁颁负1
		SET OUT_CARDCOUNT = 1;

		--璁剧疆瀹㈡埛绫诲瀷(鏅€氭敞鍐岀敤鎴?
		SET OUT_CSTTYP = '2';
		
		SET V_SQL = 'SELECT PCIF_ACCNO,PCIF_NAME,'
					|| 'CASE WHEN PCIF_CTFTYP = '''||'15'||''' OR PCIF_CTFTYP = '''||'16'||''' OR PCIF_CTFTYP = '''||'SSNO'||''' THEN '''||'0'||''' '
					|| 'WHEN PCIF_CTFTYP = '''||'17'||''' OR PCIF_CTFTYP = '''||'SSN3'||''' THEN '''||'3'||''' '
					|| 'WHEN PCIF_CTFTYP = '''||'18'||''' OR PCIF_CTFTYP = '''||'SSN4'||''' THEN '''||'4'||''' '
					|| 'WHEN PCIF_CTFTYP = '''||'19'||''' OR PCIF_CTFTYP = '''||'KMTC'||''' THEN '''||'5'||''' '
					|| 'WHEN PCIF_CTFTYP = '''||'20'||''' OR PCIF_CTFTYP = '''||'PSPT'||''' THEN '''||'1'||''' '
					|| 'ELSE  '''||'2'||''' END PCIF_CTFTYP, '
					|| 'PCIF_CTFNO,'''||'0'||''','''||'0'||''','''||'1'||''','''||''||''','''||''||''','''||''||''', '
					|| 'CASE WHEN PWI_PRDNO = '''||'08040500'||''' THEN '''||'2'||''' '
					|| 'WHEN PWI_PRDNO = '''||'08040600'||''' THEN '''||'1'||''' '
				    || 'ELSE '''||'0'||''' END PWI_PRDNO '
					|| 'FROM PB_COMMCSTINF LEFT OUTER JOIN PB_WODEINF ON PWI_CARDNO = PCIF_ACCNO '
					|| 'WHERE PCIF_ACCNO =''' || IN_CARDNO || ''' ';
			
	----娌℃湁婊¤冻鏉′欢鐨勮褰曟椂,杩斿洖绌烘父鏍?	ELSE
			SET OUT_CSTTYP = '';
			--璁剧疆鍗℃潯鏁?			SET OUT_CARDCOUNT = 0;
			
			SET V_SQL='SELECT PAI_CARDNO,PAI_HLDNAME,PAI_HLDCTFTYP,PAI_HLDCTFNO,PAI_CARDTYP,PAI_CARDKIND,PAI_MSTFLAG,PAI_CHGTELLER,PAI_CHGBRANCHNO,PAI_CHGNETNO,'''||''||''' FROM PB_ACCINF WHERE 1=2';	
	END IF;
	
	PREPARE SQLSTATMENT FROM V_SQL;
	--杩斿洖缁撴灉闆?	OPEN CUR_CARD_INFO;
	
    SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
    SET OUT_TOA_MSG_AP_MMO = 'NE';
    SET OUT_TOA_MSG_CODE = '0000';
    SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
    
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_GET_NETBANK_CUSINFO (
	IN IN_CARDNO  VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO				VARCHAR(50),
	OUT OUT_CSTNO               VARCHAR(10),
	OUT OUT_CARDNO              VARCHAR(30),
	OUT OUT_CUSTTYPE            CHAR(1),
	OUT OUT_MOBILE              VARCHAR(20),
	OUT OUT_CUSTNAME            VARCHAR(30),
	OUT OUT_CTFTYPE             CHAR(2),
	OUT OUT_CTFNO               VARCHAR(30)
)
BEGIN
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
		ROLLBACK;
	END;
	
	IF NOT EXISTS (
		SELECT 1 FROM PB_CSTINF	WHERE PIF_ACCNO = IN_CARDNO AND PIF_STT ='0'
	) THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0804';
		SET OUT_ANSINFO = '璇ュ崱娌℃湁绛剧害缃戦摱鎴栫綉閾剁姸鎬佷笉姝ｅ父';
		RETURN;
	END IF;
	
	SELECT PIF_CSTNO,PIF_CSTTYP,PIF_MOBILE,PIF_NAMECN,PIF_CTFTYP,PIF_CTFNO INTO OUT_CSTNO,OUT_CUSTTYPE,OUT_MOBILE,OUT_CUSTNAME,OUT_CTFTYPE,OUT_CTFNO FROM PB_CSTINF WHERE PIF_ACCNO = IN_CARDNO AND PIF_STT ='0';
	
	SET OUT_CARDNO = IN_CARDNO;
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_CSTINF_QUERY_MUTITYPE ( 
	IN IN_CUSTOMERTYPE		VARCHAR(1),
	IN IN_PBANKCSTNO		VARCHAR(10),
	IN IN_LOGINNAME		VARCHAR(30),
	IN IN_LOGINPASSWORD		VARCHAR(60),
	IN IN_CERTDN		VARCHAR(100),
	IN IN_ACCOUNTNO		VARCHAR(30),
	
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_TOA_MSG_TYPE		VARCHAR(1),
	OUT OUT_TOA_MSG_AP_MMO		VARCHAR(2),
	OUT OUT_TOA_MSG_CODE		VARCHAR(4),
	OUT OUT_ANSINFO		VARCHAR(50),
	
	OUT OUT_CSTTYP VARCHAR(1),
	OUT OUT_CSTNO VARCHAR(10),
	OUT OUT_ACCNO VARCHAR(30),
	OUT OUT_ACCTYPE VARCHAR(1),
	OUT OUT_AREACODE VARCHAR(6),
	OUT OUT_CERTTYP VARCHAR(1),
	OUT OUT_NAMECN VARCHAR(30),
	OUT OUT_NAMEEN VARCHAR(30),
	OUT OUT_LOVENAME VARCHAR(30),
	OUT OUT_GENDER VARCHAR(1),
	OUT OUT_BIRTHDAY VARCHAR(8),
	OUT OUT_CTFTYP VARCHAR(2),
	OUT OUT_CTFNO VARCHAR(30),
	OUT OUT_MOBILE VARCHAR(20),
	OUT OUT_EMAIL VARCHAR(60),
	OUT OUT_EMPLOYEE VARCHAR(1),
	OUT OUT_STT VARCHAR(1),
	OUT OUT_OPENTYP VARCHAR(1),
	OUT OUT_LASTLGNTIM VARCHAR(14),
	OUT OUT_LASTLGNIP VARCHAR(20),
	OUT OUT_ALIAS VARCHAR(30)
)      
READS SQL DATA           
------------------------------------------------------------------------
-- SQL 瀛樺偍杩囩▼
-- 鏌滃彴浜ゆ槗-鐢ㄦ埛淇℃伅鏌ヨ
-- 杈撳叆鍙傛暟锛?-- IN_CUSTOMERTYPE		鐢ㄦ埛绫诲瀷,
-- IN_PBANKCSTNO		缃戦摱瀹㈡埛鍙?
-- IN_LOGINNAME		鐧婚檰鍚嶇О,
-- IN_LOGINPASSWORD		鐧婚檰瀵嗙爜,
-- IN_CERTDN		璇佷功DN,
-- IN_ACCOUNTNO		鐢ㄦ埛鍗″彿,
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?--OUT_TOA_MSG_TYPE	杈撳嚭淇℃伅绫诲瀷
--OUT_TOA_MSG_AP_MMO	淇℃伅鐮佹墍灞炲簲鐢ㄧ
--OUT_TOA_MSG_CODE	淇℃伅鐮?-- OUT_ANSINFO锛氳繑鍥炰俊鎭?--OUT_CSTTYP VARCHAR(1),瀹㈡埛绫诲瀷
--OUT_CSTNO VARCHAR(10),瀹㈡埛鍙?--OUT_ACCNO VARCHAR(30),涓诲崱鍙?--OUT_ACCTYPE VARCHAR(1),涓诲崱鍗＄被鍨?--OUT_AREACODE VARCHAR(6),鍦板尯鍙?--OUT_CERTTYP VARCHAR(1),璇佷功绫诲瀷
--OUT_NAMECN VARCHAR(30),瀹㈡埛濮撳悕锛堜腑锛?--OUT_NAMEEN VARCHAR(30),瀹㈡埛濮撳悕锛堣嫳锛?--OUT_LOVENAME VARCHAR(30),鍛㈢О
--OUT_GENDER VARCHAR(1),鎬у埆
--OUT_BIRTHDAY VARCHAR(8),鍑虹敓骞存湀
--OUT_CTFTYP VARCHAR(2),璇佷欢绫诲瀷
--OUT_CTFNO VARCHAR(30),璇佷欢鍙风爜
--OUT_MOBILE VARCHAR(20),鎵嬫満鍙风爜
--OUT_EMAIL VARCHAR(60),E-Mail
--OUT_EMPLOYEE VARCHAR(1),鏈鍛樺伐鏍囩ず
--OUT_STT VARCHAR(1),鐘舵€?--OUT_OPENTYP VARCHAR(1),娉ㄥ唽鏂瑰紡
--OUT_LASTLGNTIM VARCHAR(14),涓婃鐧婚檰鏃堕棿
--OUT_LASTLGNIP VARCHAR(20)涓婃鐧诲綍IP
--OUT OUT_ALIAS VARCHAR(30)鐧诲綍鍚?-- 鏈€鍚庝慨鏀逛汉锛歲uyr
-- 鏈€鍚庝慨鏀规棩鏈?锛?2012.10.8
------------------------------------------------------------------------
BEGIN
	--澹版槑鍙橀噺
	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0802';
		SET OUT_ANSINFO = '鏁版嵁搴撴搷浣滃紓甯?;
	END;
	IF IN_PBANKCSTNO IS NOT NULL AND IN_PBANKCSTNO <>'' THEN
	
		SELECT 
				 PIF_CSTTYP,
			     PIF_CSTNO,
			     PIF_ACCNO ,
			     PIF_AREACODE ,
			     PIF_CERTTYP ,
			     PIF_NAMECN ,
			     PIF_NAMEEN ,
			     PIF_LOVENAME ,
			     PIF_SEX,
			     PIF_BIRTHDAY ,
			     PIF_CTFTYP ,
			     PIF_CTFNO ,
			     PIF_MOBILE ,
			     PIF_EMAIL ,
			     PIF_EMPLOYEE ,
			     PIF_STT ,
			     PIF_OPENTYP ,
			     PIF_LASTLGNTIM ,
			     PIF_LASTLGNIP ,
			     PIF_ALIAS
			INTO
			     OUT_CSTTYP,
			     OUT_CSTNO,
			     OUT_ACCNO ,
			     OUT_AREACODE ,
			     OUT_CERTTYP ,
			     OUT_NAMECN ,
			     OUT_NAMEEN ,
			     OUT_LOVENAME ,
			     OUT_GENDER ,
			     OUT_BIRTHDAY ,
			     OUT_CTFTYP ,
			     OUT_CTFNO ,
			     OUT_MOBILE ,
			     OUT_EMAIL ,
			     OUT_EMPLOYEE ,
			     OUT_STT ,
			     OUT_OPENTYP ,
			     OUT_LASTLGNTIM ,
			     OUT_LASTLGNIP ,
			     OUT_ALIAS 
			FROM PB_CSTINF
			WHERE 
				PIF_CSTNO = IN_PBANKCSTNO
			;
	ELSE 
		  SELECT 
				 PIF_CSTTYP,
			     PIF_CSTNO,
			     PIF_ACCNO ,
			     PIF_AREACODE ,
			     PIF_CERTTYP ,
			     PIF_NAMECN ,
			     PIF_NAMEEN ,
			     PIF_LOVENAME ,
			     PIF_SEX,
			     PIF_BIRTHDAY ,
			     PIF_CTFTYP ,
			     PIF_CTFNO ,
			     PIF_MOBILE ,
			     PIF_EMAIL ,
			     PIF_EMPLOYEE ,
			     PIF_STT ,
			     PIF_OPENTYP ,
			     PIF_LASTLGNTIM ,
			     PIF_LASTLGNIP ,
			     PIF_ALIAS
			INTO
			     OUT_CSTTYP,
			     OUT_CSTNO,
			     OUT_ACCNO ,
			     OUT_AREACODE ,
			     OUT_CERTTYP ,
			     OUT_NAMECN ,
			     OUT_NAMEEN ,
			     OUT_LOVENAME ,
			     OUT_GENDER ,
			     OUT_BIRTHDAY ,
			     OUT_CTFTYP ,
			     OUT_CTFNO ,
			     OUT_MOBILE ,
			     OUT_EMAIL ,
			     OUT_EMPLOYEE ,
			     OUT_STT ,
			     OUT_OPENTYP ,
			     OUT_LASTLGNTIM ,
			     OUT_LASTLGNIP ,
			     OUT_ALIAS 
			FROM PB_CSTINF
			WHERE 
				PIF_ALIAS = IN_LOGINNAME AND PIF_PASSWORD = IN_LOGINPASSWORD
			;
	
	END IF;
	
	--鍒ゆ柇鐢ㄦ埛鏄惁瀛樺湪
	IF OUT_CSTNO IS NULL OR OUT_CSTNO='' THEN
		SET PROC_RET_CODE = '95000';
		SET OUT_TOA_MSG_TYPE = 'E';
		SET OUT_TOA_MSG_AP_MMO = 'NE';
		SET OUT_TOA_MSG_CODE = '0969';
		SET OUT_ANSINFO = '鐢ㄦ埛涓嶅瓨鍦?;
		RETURN;	
	ELSE 
	--鏌ヨ涓诲崱鐨勫崱绫诲瀷
		SELECT PAI_CARDTYP INTO OUT_ACCTYPE FROM PB_ACCINF WHERE PAI_CSTNO = OUT_CSTNO AND PAI_CARDNO = OUT_ACCNO;
	END IF;
	
	SET PROC_RET_CODE = '00000';
	SET OUT_TOA_MSG_TYPE = 'N';
	SET OUT_TOA_MSG_AP_MMO = 'NE';
	SET OUT_TOA_MSG_CODE = '0000';
	SET OUT_ANSINFO = '浜ゆ槗鎴愬姛';
	
END
 

DB20000I  SQL 命令成功完成。

SET CURRENT SCHEMA = "PBANK   "
DB20000I  SQL 命令成功完成。

SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","PBANK"
DB20000I  SQL 命令成功完成。

CREATE PROCEDURE PB_QRY_COCUST (
	
	IN IN_COBANKTYPE		VARCHAR(5),
	IN IN_COCARDNO		VARCHAR(30),
	IN IN_BOCOMCARDNO		VARCHAR(30),
	OUT PROC_RET_CODE	VARCHAR(5),
	OUT OUT_CTFTYPE		VARCHAR(2),
	OUT OUT_CTFNO		VARCHAR(30),
	OUT OUT_NAMECN	VARCHAR(30)
)   
-- SQL 瀛樺偍杩囩▼
-- 涓汉缃戦摱鏌ヨ閾堕摱鍚堜綔鐢ㄦ埛璇佷欢

-- 杈撳叆鍙傛暟锛?-- IN_COBANKTYPE :鍚堜綔琛岀被鍒?-- IN_COCARDNO: 鍚堜綔琛屽崱鍙?--	IN_BOCOMCARDNO 锛氫氦琛屽崱鍙?
-- 杈撳嚭鍙傛暟锛?-- PROC_RET_CODE锛氬瓨鍌ㄨ繃绋嬭繑鍥炵爜锛?0000涓烘甯?-- OUT_CTFTYPE锛氳瘉浠剁被鍨?-- OUT_CTFNO :璇佷欢鍙风爜
-- OUT_NAMECN:瀹㈡埛涓枃鍚?BEGIN

	-- 寮傚父澶勭悊
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET PROC_RET_CODE = '95000';
	END;
	
	SELECT 
		PCCI_CTFTYP,
		PCCI_CTFNO,
		PCCI_NAMECN
	INTO
		OUT_CTFTYPE,
		OUT_CTFNO,
		OUT_NAMECN
		
	FROM PB_COCSTINF
	WHERE PCCI_ACCNO = IN_COCARDNO AND PCCI_CORPID = IN_COBANKTYPE AND PCCI_CARDNO = IN_BOCOMCARDNO;
	
	SET PROC_RET_CODE = '00000';
END
DB20000I  SQL 命令成功完成。

GRANT LOAD ON DATABASE  TO USER "PBANK   " 
DB21034E  该命令被当作 SQL 语句来处理，因为它是无效的“命令行处理器”命令。在
SQL 处理期间，它返回：
SQL0554N  授权标识不能为自己授予特权或权限。  SQLSTATE=42502

GRANT USE OF TABLESPACE "PBANKUSR1" TO USER "PBANK   " 
DB21034E  该命令被当作 SQL 语句来处理，因为它是无效的“命令行处理器”命令。在
SQL 处理期间，它返回：
SQL0554N  授权标识不能为自己授予特权或权限。  SQLSTATE=42502

GRANT USE OF TABLESPACE "PBANKUSR2" TO USER "PBANK   " 
DB21034E  该命令被当作 SQL 语句来处理，因为它是无效的“命令行处理器”命令。在
SQL 处理期间，它返回：
SQL0554N  授权标识不能为自己授予特权或权限。  SQLSTATE=42502

GRANT USE OF TABLESPACE "PBANKIND1" TO USER "PBANK   " 
DB21034E  该命令被当作 SQL 语句来处理，因为它是无效的“命令行处理器”命令。在
SQL 处理期间，它返回：
SQL0554N  授权标识不能为自己授予特权或权限。  SQLSTATE=42502

GRANT USE OF TABLESPACE "SYSTOOLSTMPSPACE" TO  PUBLIC   
DB21034E  该命令被当作 SQL 语句来处理，因为它是无效的“命令行处理器”命令。在
SQL 处理期间，它返回：
SQL0204N  "SYSTOOLSTMPSPACE" 是一个未定义的名称。  SQLSTATE=42704

COMMIT WORK
DB20000I  SQL 命令成功完成。

CONNECT RESET
DB20000I  SQL 命令成功完成。

TERMINATE
DB20000I  TERMINATE 命令成功完成。

